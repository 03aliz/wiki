!function(e){function n(a){if(t[a])return t[a].exports;var s=t[a]={exports:{},id:a,loaded:!1};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}(function(e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n))switch(typeof e[n]){case"function":break;case"object":e[n]=function(n){var t=n.slice(1),a=e[n[0]];return function(e,n,s){a.apply(this,[e,n,s].concat(t))}}(e[n]);break;default:e[n]=e[e[n]]}return e}([function(e,n,t){e.exports=t(1)},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}function s(e){t(258);return e()}var o=t(2),r=a(o),l=t(154),i=a(l),c=t(155),p=a(c),h=t(197),d=a(h),u=t(246),m=a(u),f=t(249),g=a(f),w=t(285),y=a(w);s(function(){return y["default"].loadContext(function(e){var n=void 0,a=t(258),s=a.pages,o=a.config,l=o.linkPrefix;l||(l="");var c=(0,g["default"])(s,e);s=(0,m["default"])(s,function(e){return null!==e.path}),n?n.replaceRoutes([y["default"]]):n=p["default"].run([c],p["default"].HistoryLocation,function(e,n){var t=void 0;return t=(0,d["default"])(s,function(e){var t=l+e.path;return t===n.path||t===n.pathname}),y["default"].onRouteChange&&y["default"].onRouteChange(n,t,s,o),i["default"].render(r["default"].createElement(e,{config:o,pages:s,page:t,state:n}),"undefined"!=typeof window?document.getElementById("react-mount"):void 0)})})})},function(e,n,t){"use strict";e.exports=t(3)},function(e,n,t){"use strict";var a=t(4),s=t(144),o=t(148),r=t(39),l=t(153),i={};r(i,o),r(i,{findDOMNode:l("findDOMNode","ReactDOM","react-dom",a,a.findDOMNode),render:l("render","ReactDOM","react-dom",a,a.render),unmountComponentAtNode:l("unmountComponentAtNode","ReactDOM","react-dom",a,a.unmountComponentAtNode),renderToString:l("renderToString","ReactDOMServer","react-dom/server",s,s.renderToString),renderToStaticMarkup:l("renderToStaticMarkup","ReactDOMServer","react-dom/server",s,s.renderToStaticMarkup)}),i.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=a,i.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=s,e.exports=i},function(e,n,t){"use strict";var a=t(5),s=t(6),o=t(71),r=t(45),l=t(28),i=t(18),c=t(50),p=t(54),h=t(142),d=t(91),u=t(143);t(25);o.inject();var m=i.measure("React","render",l.render),f={findDOMNode:d,render:m,unmountComponentAtNode:l.unmountComponentAtNode,version:h,unstable_batchedUpdates:p.batchedUpdates,unstable_renderSubtreeIntoContainer:u};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({CurrentOwner:a,InstanceHandles:r,Mount:l,Reconciler:c,TextComponent:s});e.exports=f},function(e,n){"use strict";var t={current:null};e.exports=t},function(e,n,t){"use strict";var a=t(7),s=t(22),o=t(26),r=t(28),l=t(39),i=t(21),c=t(20),p=(t(70),function(e){});l(p.prototype,{construct:function(e){this._currentElement=e,this._stringText=""+e,this._rootNodeID=null,this._mountIndex=0},mountComponent:function(e,n,t){if(this._rootNodeID=e,n.useCreateElement){var a=t[r.ownerDocumentContextKey],o=a.createElement("span");return s.setAttributeForID(o,e),r.getID(o),c(o,this._stringText),o}var l=i(this._stringText);return n.renderToStaticMarkup?l:"<span "+s.createMarkupForID(e)+">"+l+"</span>"},receiveComponent:function(e,n){if(e!==this._currentElement){this._currentElement=e;var t=""+e;if(t!==this._stringText){this._stringText=t;var s=r.getNode(this._rootNodeID);a.updateTextContent(s,t)}}},unmountComponent:function(){o.unmountIDFromEnvironment(this._rootNodeID)}}),e.exports=p},function(e,n,t){"use strict";function a(e,n,t){var a=t>=e.childNodes.length?null:e.childNodes.item(t);e.insertBefore(n,a)}var s=t(8),o=t(16),r=t(18),l=t(19),i=t(20),c=t(13),p={dangerouslyReplaceNodeWithMarkup:s.dangerouslyReplaceNodeWithMarkup,updateTextContent:i,processUpdates:function(e,n){for(var t,r=null,p=null,h=0;h<e.length;h++)if(t=e[h],t.type===o.MOVE_EXISTING||t.type===o.REMOVE_NODE){var d=t.fromIndex,u=t.parentNode.childNodes[d],m=t.parentID;u?void 0:c(!1),r=r||{},r[m]=r[m]||[],r[m][d]=u,p=p||[],p.push(u)}var f;if(f=n.length&&"string"==typeof n[0]?s.dangerouslyRenderMarkup(n):n,p)for(var g=0;g<p.length;g++)p[g].parentNode.removeChild(p[g]);for(var w=0;w<e.length;w++)switch(t=e[w],t.type){case o.INSERT_MARKUP:a(t.parentNode,f[t.markupIndex],t.toIndex);break;case o.MOVE_EXISTING:a(t.parentNode,r[t.parentID][t.fromIndex],t.toIndex);break;case o.SET_MARKUP:l(t.parentNode,t.content);break;case o.TEXT_CONTENT:i(t.parentNode,t.content);break;case o.REMOVE_NODE:}}};r.measureMethods(p,"DOMChildrenOperations",{updateTextContent:"updateTextContent"}),e.exports=p},function(e,n,t){"use strict";function a(e){return e.substring(1,e.indexOf(" "))}var s=t(9),o=t(10),r=t(15),l=t(14),i=t(13),c=/^(<[^ \/>]+)/,p="data-danger-index",h={dangerouslyRenderMarkup:function(e){s.canUseDOM?void 0:i(!1);for(var n,t={},h=0;h<e.length;h++)e[h]?void 0:i(!1),n=a(e[h]),n=l(n)?n:"*",t[n]=t[n]||[],t[n][h]=e[h];var d=[],u=0;for(n in t)if(t.hasOwnProperty(n)){var m,f=t[n];for(m in f)if(f.hasOwnProperty(m)){var g=f[m];f[m]=g.replace(c,"$1 "+p+'="'+m+'" ')}for(var w=o(f.join(""),r),y=0;y<w.length;++y){var b=w[y];b.hasAttribute&&b.hasAttribute(p)&&(m=+b.getAttribute(p),b.removeAttribute(p),d.hasOwnProperty(m)?i(!1):void 0,d[m]=b,u+=1)}}return u!==d.length?i(!1):void 0,d.length!==e.length?i(!1):void 0,d},dangerouslyReplaceNodeWithMarkup:function(e,n){s.canUseDOM?void 0:i(!1),n?void 0:i(!1),"html"===e.tagName.toLowerCase()?i(!1):void 0;var t;t="string"==typeof n?o(n,r)[0]:n,e.parentNode.replaceChild(t,e)}};e.exports=h},function(e,n){"use strict";var t=!("undefined"==typeof window||!window.document||!window.document.createElement),a={canUseDOM:t,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:t&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:t&&!!window.screen,isInWorker:!t};e.exports=a},function(e,n,t){"use strict";function a(e){var n=e.match(p);return n&&n[1].toLowerCase()}function s(e,n){var t=c;c?void 0:i(!1);var s=a(e),o=s&&l(s);if(o){t.innerHTML=o[1]+e+o[2];for(var p=o[0];p--;)t=t.lastChild}else t.innerHTML=e;var h=t.getElementsByTagName("script");h.length&&(n?void 0:i(!1),r(h).forEach(n));for(var d=r(t.childNodes);t.lastChild;)t.removeChild(t.lastChild);return d}var o=t(9),r=t(11),l=t(14),i=t(13),c=o.canUseDOM?document.createElement("div"):null,p=/^\s*<(\w+)/;e.exports=s},function(e,n,t){"use strict";function a(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function s(e){return a(e)?Array.isArray(e)?e.slice():o(e):[e]}var o=t(12);e.exports=s},function(e,n,t){"use strict";function a(e){var n=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?s(!1):void 0,"number"!=typeof n?s(!1):void 0,0===n||n-1 in e?void 0:s(!1),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(t){}for(var a=Array(n),o=0;n>o;o++)a[o]=e[o];return a}var s=t(13);e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a,s,o,r,l){if(!e){var i;if(void 0===n)i=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,a,s,o,r,l],p=0;i=new Error(n.replace(/%s/g,function(){return c[p++]})),i.name="Invariant Violation"}throw i.framesToPop=1,i}}e.exports=a},function(e,n,t){"use strict";function a(e){return r?void 0:o(!1),d.hasOwnProperty(e)||(e="*"),l.hasOwnProperty(e)||("*"===e?r.innerHTML="<link />":r.innerHTML="<"+e+"></"+e+">",l[e]=!r.firstChild),l[e]?d[e]:null}var s=t(9),o=t(13),r=s.canUseDOM?document.createElement("div"):null,l={},i=[1,'<select multiple="true">',"</select>"],c=[1,"<table>","</table>"],p=[3,"<table><tbody><tr>","</tr></tbody></table>"],h=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],d={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:i,option:i,caption:c,colgroup:c,tbody:c,tfoot:c,thead:c,td:p,th:p},u=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];u.forEach(function(e){d[e]=h,l[e]=!0}),e.exports=a},function(e,n){"use strict";function t(e){return function(){return e}}function a(){}a.thatReturns=t,a.thatReturnsFalse=t(!1),a.thatReturnsTrue=t(!0),a.thatReturnsNull=t(null),a.thatReturnsThis=function(){return this},a.thatReturnsArgument=function(e){return e},e.exports=a},function(e,n,t){"use strict";var a=t(17),s=a({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});e.exports=s},function(e,n,t){"use strict";var a=t(13),s=function(e){var n,t={};e instanceof Object&&!Array.isArray(e)?void 0:a(!1);for(n in e)e.hasOwnProperty(n)&&(t[n]=n);return t};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){return t}var s={enableMeasure:!1,storedMeasure:a,measureMethods:function(e,n,t){},measure:function(e,n,t){return t},injection:{injectMeasure:function(e){s.storedMeasure=e}}};e.exports=s},function(e,n,t){"use strict";var a=t(9),s=/^[ \r\n\t\f]/,o=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,r=function(e,n){e.innerHTML=n};if("undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction&&(r=function(e,n){MSApp.execUnsafeLocalFunction(function(){e.innerHTML=n})}),a.canUseDOM){var l=document.createElement("div");l.innerHTML=" ",""===l.innerHTML&&(r=function(e,n){if(e.parentNode&&e.parentNode.replaceChild(e,e),s.test(n)||"<"===n[0]&&o.test(n)){e.innerHTML=String.fromCharCode(65279)+n;var t=e.firstChild;1===t.data.length?e.removeChild(t):t.deleteData(0,1)}else e.innerHTML=n})}e.exports=r},function(e,n,t){"use strict";var a=t(9),s=t(21),o=t(19),r=function(e,n){e.textContent=n};a.canUseDOM&&("textContent"in document.documentElement||(r=function(e,n){o(e,s(n))})),e.exports=r},function(e,n){"use strict";function t(e){return s[e]}function a(e){return(""+e).replace(o,t)}var s={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},o=/[&><"']/g;e.exports=a},function(e,n,t){"use strict";function a(e){return p.hasOwnProperty(e)?!0:c.hasOwnProperty(e)?!1:i.test(e)?(p[e]=!0,!0):(c[e]=!0,!1)}function s(e,n){return null==n||e.hasBooleanValue&&!n||e.hasNumericValue&&isNaN(n)||e.hasPositiveNumericValue&&1>n||e.hasOverloadedBooleanValue&&n===!1}var o=t(23),r=t(18),l=t(24),i=(t(25),/^[a-zA-Z_][\w\.\-]*$/),c={},p={},h={createMarkupForID:function(e){return o.ID_ATTRIBUTE_NAME+"="+l(e)},setAttributeForID:function(e,n){e.setAttribute(o.ID_ATTRIBUTE_NAME,n)},createMarkupForProperty:function(e,n){var t=o.properties.hasOwnProperty(e)?o.properties[e]:null;if(t){if(s(t,n))return"";var a=t.attributeName;return t.hasBooleanValue||t.hasOverloadedBooleanValue&&n===!0?a+'=""':a+"="+l(n)}return o.isCustomAttribute(e)?null==n?"":e+"="+l(n):null},createMarkupForCustomAttribute:function(e,n){return a(e)&&null!=n?e+"="+l(n):""},setValueForProperty:function(e,n,t){var a=o.properties.hasOwnProperty(n)?o.properties[n]:null;if(a){var r=a.mutationMethod;if(r)r(e,t);else if(s(a,t))this.deleteValueForProperty(e,n);else if(a.mustUseAttribute){var l=a.attributeName,i=a.attributeNamespace;i?e.setAttributeNS(i,l,""+t):a.hasBooleanValue||a.hasOverloadedBooleanValue&&t===!0?e.setAttribute(l,""):e.setAttribute(l,""+t)}else{var c=a.propertyName;a.hasSideEffects&&""+e[c]==""+t||(e[c]=t)}}else o.isCustomAttribute(n)&&h.setValueForAttribute(e,n,t)},setValueForAttribute:function(e,n,t){a(n)&&(null==t?e.removeAttribute(n):e.setAttribute(n,""+t))},deleteValueForProperty:function(e,n){var t=o.properties.hasOwnProperty(n)?o.properties[n]:null;if(t){var a=t.mutationMethod;if(a)a(e,void 0);else if(t.mustUseAttribute)e.removeAttribute(t.attributeName);else{var s=t.propertyName,r=o.getDefaultValueForProperty(e.nodeName,s);t.hasSideEffects&&""+e[s]===r||(e[s]=r)}}else o.isCustomAttribute(n)&&e.removeAttribute(n)}};r.measureMethods(h,"DOMPropertyOperations",{setValueForProperty:"setValueForProperty",setValueForAttribute:"setValueForAttribute",deleteValueForProperty:"deleteValueForProperty"}),e.exports=h},function(e,n,t){"use strict";function a(e,n){return(e&n)===n}var s=t(13),o={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var n=o,t=e.Properties||{},r=e.DOMAttributeNamespaces||{},i=e.DOMAttributeNames||{},c=e.DOMPropertyNames||{},p=e.DOMMutationMethods||{};e.isCustomAttribute&&l._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var h in t){l.properties.hasOwnProperty(h)?s(!1):void 0;var d=h.toLowerCase(),u=t[h],m={attributeName:d,attributeNamespace:null,propertyName:h,mutationMethod:null,mustUseAttribute:a(u,n.MUST_USE_ATTRIBUTE),mustUseProperty:a(u,n.MUST_USE_PROPERTY),hasSideEffects:a(u,n.HAS_SIDE_EFFECTS),hasBooleanValue:a(u,n.HAS_BOOLEAN_VALUE),hasNumericValue:a(u,n.HAS_NUMERIC_VALUE),hasPositiveNumericValue:a(u,n.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:a(u,n.HAS_OVERLOADED_BOOLEAN_VALUE)};if(m.mustUseAttribute&&m.mustUseProperty?s(!1):void 0,!m.mustUseProperty&&m.hasSideEffects?s(!1):void 0,m.hasBooleanValue+m.hasNumericValue+m.hasOverloadedBooleanValue<=1?void 0:s(!1),i.hasOwnProperty(h)){var f=i[h];m.attributeName=f}r.hasOwnProperty(h)&&(m.attributeNamespace=r[h]),c.hasOwnProperty(h)&&(m.propertyName=c[h]),p.hasOwnProperty(h)&&(m.mutationMethod=p[h]),l.properties[h]=m}}},r={},l={ID_ATTRIBUTE_NAME:"data-reactid",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var n=0;n<l._isCustomAttributeFunctions.length;n++){var t=l._isCustomAttributeFunctions[n];if(t(e))return!0}return!1},getDefaultValueForProperty:function(e,n){var t,a=r[e];return a||(r[e]=a={}),n in a||(t=document.createElement(e),a[n]=t[n]),a[n]},injection:o};e.exports=l},function(e,n,t){"use strict";function a(e){return'"'+s(e)+'"'}var s=t(21);e.exports=a},function(e,n,t){"use strict";var a=t(15),s=a;e.exports=s},function(e,n,t){"use strict";var a=t(27),s=t(28),o={processChildrenUpdates:a.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkupByID:a.dangerouslyReplaceNodeWithMarkupByID,unmountIDFromEnvironment:function(e){s.purgeID(e)}};e.exports=o},function(e,n,t){"use strict";var a=t(7),s=t(22),o=t(28),r=t(18),l=t(13),i={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},c={updatePropertyByID:function(e,n,t){var a=o.getNode(e);i.hasOwnProperty(n)?l(!1):void 0,null!=t?s.setValueForProperty(a,n,t):s.deleteValueForProperty(a,n)},dangerouslyReplaceNodeWithMarkupByID:function(e,n){var t=o.getNode(e);a.dangerouslyReplaceNodeWithMarkup(t,n)},dangerouslyProcessChildrenUpdates:function(e,n){for(var t=0;t<e.length;t++)e[t].parentNode=o.getNode(e[t].parentID);a.processUpdates(e,n)}};r.measureMethods(c,"ReactDOMIDOperations",{dangerouslyReplaceNodeWithMarkupByID:"dangerouslyReplaceNodeWithMarkupByID",dangerouslyProcessChildrenUpdates:"dangerouslyProcessChildrenUpdates"}),e.exports=c},function(e,n,t){"use strict";function a(e,n){for(var t=Math.min(e.length,n.length),a=0;t>a;a++)if(e.charAt(a)!==n.charAt(a))return a;return e.length===n.length?-1:t}function s(e){return e?e.nodeType===W?e.documentElement:e.firstChild:null}function o(e){var n=s(e);return n&&$.getID(n)}function r(e){var n=l(e);if(n)if(_.hasOwnProperty(n)){var t=_[n];t!==e&&(h(t,n)?q(!1):void 0,_[n]=e)}else _[n]=e;return n}function l(e){return e&&e.getAttribute&&e.getAttribute(L)||""}function i(e,n){var t=l(e);t!==n&&delete _[t],e.setAttribute(L,n),_[n]=e}function c(e){return _.hasOwnProperty(e)&&h(_[e],e)||(_[e]=$.findReactNodeByID(e)),_[e]}function p(e){var n=A.get(e)._rootNodeID;return x.isNullComponentID(n)?null:(_.hasOwnProperty(n)&&h(_[n],n)||(_[n]=$.findReactNodeByID(n)),_[n])}function h(e,n){if(e){l(e)!==n?q(!1):void 0;var t=$.findReactContainerForID(n);if(t&&F(t,e))return!0}return!1}function d(e){delete _[e]}function u(e){var n=_[e];return n&&h(n,e)?void(Y=n):!1}function m(e){Y=null,S.traverseAncestors(e,u);var n=Y;return Y=null,n}function f(e,n,t,a,s,o){C.useCreateElement&&(o=R({},o),t.nodeType===W?o[G]=t:o[G]=t.ownerDocument);var r=P.mountComponent(e,n,a,o);e._renderedComponent._topLevelWrapper=e,$._mountImageIntoNode(r,t,s,a)}function g(e,n,t,a,s){var o=O.ReactReconcileTransaction.getPooled(a);o.perform(f,null,e,n,t,o,a,s),O.ReactReconcileTransaction.release(o)}function w(e,n){for(P.unmountComponent(e),n.nodeType===W&&(n=n.documentElement);n.lastChild;)n.removeChild(n.lastChild)}function y(e){var n=o(e);return n?n!==S.getReactRootIDFromNodeID(n):!1}function b(e){for(;e&&e.parentNode!==e;e=e.parentNode)if(1===e.nodeType){var n=l(e);if(n){var t,a=S.getReactRootIDFromNodeID(n),s=e;do if(t=l(s),s=s.parentNode,null==s)return null;while(t!==a);if(s===V[a])return e}}return null}var k=t(23),j=t(29),C=(t(5),t(41)),v=t(42),x=t(44),S=t(45),A=t(47),T=t(48),E=t(18),P=t(50),I=t(53),O=t(54),R=t(39),N=t(58),F=t(59),M=t(62),q=t(13),D=t(19),B=t(67),L=(t(70),t(25),k.ID_ATTRIBUTE_NAME),_={},U=1,W=9,H=11,G="__ReactMount_ownerDocument$"+Math.random().toString(36).slice(2),J={},V={},z=[],Y=null,Q=function(){};Q.prototype.isReactComponent={},Q.prototype.render=function(){return this.props};var $={TopLevelWrapper:Q,_instancesByReactRootID:J,scrollMonitor:function(e,n){n()},_updateRootComponent:function(e,n,t,a){return $.scrollMonitor(t,function(){I.enqueueElementInternal(e,n),a&&I.enqueueCallbackInternal(e,a)}),e},_registerComponent:function(e,n){!n||n.nodeType!==U&&n.nodeType!==W&&n.nodeType!==H?q(!1):void 0,j.ensureScrollValueMonitoring();var t=$.registerContainer(n);return J[t]=e,t},_renderNewRootComponent:function(e,n,t,a){var s=M(e,null),o=$._registerComponent(s,n);return O.batchedUpdates(g,s,o,n,t,a),s},renderSubtreeIntoContainer:function(e,n,t,a){return null==e||null==e._reactInternalInstance?q(!1):void 0,$._renderSubtreeIntoContainer(e,n,t,a)},_renderSubtreeIntoContainer:function(e,n,t,a){v.isValidElement(n)?void 0:q(!1);var r=new v(Q,null,null,null,null,null,n),i=J[o(t)];if(i){var c=i._currentElement,p=c.props;if(B(p,n)){var h=i._renderedComponent.getPublicInstance(),d=a&&function(){a.call(h)};return $._updateRootComponent(i,r,t,d),h}$.unmountComponentAtNode(t)}var u=s(t),m=u&&!!l(u),f=y(t),g=m&&!i&&!f,w=$._renderNewRootComponent(r,t,g,null!=e?e._reactInternalInstance._processChildContext(e._reactInternalInstance._context):N)._renderedComponent.getPublicInstance();return a&&a.call(w),w},render:function(e,n,t){return $._renderSubtreeIntoContainer(null,e,n,t)},registerContainer:function(e){var n=o(e);return n&&(n=S.getReactRootIDFromNodeID(n)),n||(n=S.createReactRootID()),V[n]=e,n},unmountComponentAtNode:function(e){!e||e.nodeType!==U&&e.nodeType!==W&&e.nodeType!==H?q(!1):void 0;var n=o(e),t=J[n];if(!t){var a=(y(e),l(e));a&&a===S.getReactRootIDFromNodeID(a);return!1}return O.batchedUpdates(w,t,e),delete J[n],delete V[n],!0},findReactContainerForID:function(e){var n=S.getReactRootIDFromNodeID(e),t=V[n];return t},findReactNodeByID:function(e){var n=$.findReactContainerForID(e);return $.findComponentRoot(n,e)},getFirstReactDOM:function(e){return b(e)},findComponentRoot:function(e,n){var t=z,a=0,s=m(n)||e;for(t[0]=s.firstChild,t.length=1;a<t.length;){for(var o,r=t[a++];r;){var l=$.getID(r);l?n===l?o=r:S.isAncestorIDOf(l,n)&&(t.length=a=0,t.push(r.firstChild)):t.push(r.firstChild),r=r.nextSibling}if(o)return t.length=0,o}t.length=0,q(!1)},_mountImageIntoNode:function(e,n,t,o){if(!n||n.nodeType!==U&&n.nodeType!==W&&n.nodeType!==H?q(!1):void 0,t){var r=s(n);if(T.canReuseMarkup(e,r))return;var l=r.getAttribute(T.CHECKSUM_ATTR_NAME);r.removeAttribute(T.CHECKSUM_ATTR_NAME);var i=r.outerHTML;r.setAttribute(T.CHECKSUM_ATTR_NAME,l);var c=e,p=a(c,i);" (client) "+c.substring(p-20,p+20)+"\n (server) "+i.substring(p-20,p+20);n.nodeType===W?q(!1):void 0}if(n.nodeType===W?q(!1):void 0,o.useCreateElement){for(;n.lastChild;)n.removeChild(n.lastChild);n.appendChild(e)}else D(n,e)},ownerDocumentContextKey:G,getReactRootID:o,getID:r,setID:i,getNode:c,getNodeFromInstance:p,isValid:h,purgeID:d};E.measureMethods($,"ReactMount",{_renderNewRootComponent:"_renderNewRootComponent",_mountImageIntoNode:"_mountImageIntoNode"}),e.exports=$},function(e,n,t){"use strict";function a(e){return Object.prototype.hasOwnProperty.call(e,g)||(e[g]=m++,d[e[g]]={}),d[e[g]]}var s=t(30),o=t(31),r=t(32),l=t(37),i=t(18),c=t(38),p=t(39),h=t(40),d={},u=!1,m=0,f={topAbort:"abort",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},g="_reactListenersID"+String(Math.random()).slice(2),w=p({},l,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(w.handleTopLevel),w.ReactEventListener=e}},setEnabled:function(e){w.ReactEventListener&&w.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!w.ReactEventListener||!w.ReactEventListener.isEnabled())},listenTo:function(e,n){for(var t=n,o=a(t),l=r.registrationNameDependencies[e],i=s.topLevelTypes,c=0;c<l.length;c++){var p=l[c];o.hasOwnProperty(p)&&o[p]||(p===i.topWheel?h("wheel")?w.ReactEventListener.trapBubbledEvent(i.topWheel,"wheel",t):h("mousewheel")?w.ReactEventListener.trapBubbledEvent(i.topWheel,"mousewheel",t):w.ReactEventListener.trapBubbledEvent(i.topWheel,"DOMMouseScroll",t):p===i.topScroll?h("scroll",!0)?w.ReactEventListener.trapCapturedEvent(i.topScroll,"scroll",t):w.ReactEventListener.trapBubbledEvent(i.topScroll,"scroll",w.ReactEventListener.WINDOW_HANDLE):p===i.topFocus||p===i.topBlur?(h("focus",!0)?(w.ReactEventListener.trapCapturedEvent(i.topFocus,"focus",t),w.ReactEventListener.trapCapturedEvent(i.topBlur,"blur",t)):h("focusin")&&(w.ReactEventListener.trapBubbledEvent(i.topFocus,"focusin",t),w.ReactEventListener.trapBubbledEvent(i.topBlur,"focusout",t)),o[i.topBlur]=!0,o[i.topFocus]=!0):f.hasOwnProperty(p)&&w.ReactEventListener.trapBubbledEvent(p,f[p],t),o[p]=!0)}},trapBubbledEvent:function(e,n,t){return w.ReactEventListener.trapBubbledEvent(e,n,t)},trapCapturedEvent:function(e,n,t){return w.ReactEventListener.trapCapturedEvent(e,n,t)},ensureScrollValueMonitoring:function(){if(!u){var e=c.refreshScrollValues;w.ReactEventListener.monitorScrollValue(e),u=!0}},eventNameDispatchConfigs:o.eventNameDispatchConfigs,registrationNameModules:o.registrationNameModules,putListener:o.putListener,getListener:o.getListener,deleteListener:o.deleteListener,deleteAllListeners:o.deleteAllListeners});i.measureMethods(w,"ReactBrowserEventEmitter",{putListener:"putListener",deleteListener:"deleteListener"}),e.exports=w},function(e,n,t){"use strict";var a=t(17),s=a({bubbled:null,captured:null}),o=a({topAbort:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topVolumeChange:null,topWaiting:null,topWheel:null}),r={topLevelTypes:o,PropagationPhases:s};e.exports=r},function(e,n,t){"use strict";var a=t(32),s=t(33),o=t(34),r=t(35),l=t(36),i=t(13),c=(t(25),{}),p=null,h=function(e,n){e&&(s.executeDispatchesInOrder(e,n),e.isPersistent()||e.constructor.release(e))},d=function(e){return h(e,!0)},u=function(e){return h(e,!1)},m=null,f={injection:{injectMount:s.injection.injectMount,injectInstanceHandle:function(e){m=e},getInstanceHandle:function(){return m},injectEventPluginOrder:a.injectEventPluginOrder,injectEventPluginsByName:a.injectEventPluginsByName},eventNameDispatchConfigs:a.eventNameDispatchConfigs,registrationNameModules:a.registrationNameModules,putListener:function(e,n,t){"function"!=typeof t?i(!1):void 0;var s=c[n]||(c[n]={});s[e]=t;var o=a.registrationNameModules[n];o&&o.didPutListener&&o.didPutListener(e,n,t)},getListener:function(e,n){var t=c[n];return t&&t[e]},deleteListener:function(e,n){var t=a.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n);var s=c[n];s&&delete s[e]},deleteAllListeners:function(e){for(var n in c)if(c[n][e]){var t=a.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n),delete c[n][e]}},extractEvents:function(e,n,t,s,o){for(var l,i=a.plugins,c=0;c<i.length;c++){var p=i[c];if(p){var h=p.extractEvents(e,n,t,s,o);h&&(l=r(l,h))}}return l},enqueueEvents:function(e){e&&(p=r(p,e))},processEventQueue:function(e){var n=p;p=null,e?l(n,d):l(n,u),p?i(!1):void 0,o.rethrowCaughtError()},__purge:function(){c={}},__getListenerBank:function(){return c}};e.exports=f},function(e,n,t){"use strict";function a(){if(l)for(var e in i){var n=i[e],t=l.indexOf(e);if(t>-1?void 0:r(!1),!c.plugins[t]){n.extractEvents?void 0:r(!1),c.plugins[t]=n;var a=n.eventTypes;for(var o in a)s(a[o],n,o)?void 0:r(!1)}}}function s(e,n,t){c.eventNameDispatchConfigs.hasOwnProperty(t)?r(!1):void 0,c.eventNameDispatchConfigs[t]=e;var a=e.phasedRegistrationNames;if(a){for(var s in a)if(a.hasOwnProperty(s)){var l=a[s];o(l,n,t)}return!0}return e.registrationName?(o(e.registrationName,n,t),!0):!1}function o(e,n,t){c.registrationNameModules[e]?r(!1):void 0,c.registrationNameModules[e]=n,c.registrationNameDependencies[e]=n.eventTypes[t].dependencies}var r=t(13),l=null,i={},c={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){l?r(!1):void 0,l=Array.prototype.slice.call(e),a()},injectEventPluginsByName:function(e){var n=!1;for(var t in e)if(e.hasOwnProperty(t)){var s=e[t];i.hasOwnProperty(t)&&i[t]===s||(i[t]?r(!1):void 0,i[t]=s,n=!0)}n&&a()},getPluginModuleForEvent:function(e){var n=e.dispatchConfig;if(n.registrationName)return c.registrationNameModules[n.registrationName]||null;for(var t in n.phasedRegistrationNames)if(n.phasedRegistrationNames.hasOwnProperty(t)){var a=c.registrationNameModules[n.phasedRegistrationNames[t]];if(a)return a}return null},_resetEventPlugins:function(){l=null;for(var e in i)i.hasOwnProperty(e)&&delete i[e];c.plugins.length=0;var n=c.eventNameDispatchConfigs;for(var t in n)n.hasOwnProperty(t)&&delete n[t];var a=c.registrationNameModules;for(var s in a)a.hasOwnProperty(s)&&delete a[s]}};e.exports=c},function(e,n,t){"use strict";function a(e){return e===g.topMouseUp||e===g.topTouchEnd||e===g.topTouchCancel}function s(e){return e===g.topMouseMove||e===g.topTouchMove}function o(e){return e===g.topMouseDown||e===g.topTouchStart}function r(e,n,t,a){var s=e.type||"unknown-event";e.currentTarget=f.Mount.getNode(a),n?u.invokeGuardedCallbackWithCatch(s,t,e,a):u.invokeGuardedCallback(s,t,e,a),e.currentTarget=null}function l(e,n){var t=e._dispatchListeners,a=e._dispatchIDs;if(Array.isArray(t))for(var s=0;s<t.length&&!e.isPropagationStopped();s++)r(e,n,t[s],a[s]);else t&&r(e,n,t,a);e._dispatchListeners=null,e._dispatchIDs=null}function i(e){var n=e._dispatchListeners,t=e._dispatchIDs;if(Array.isArray(n)){for(var a=0;a<n.length&&!e.isPropagationStopped();a++)if(n[a](e,t[a]))return t[a]}else if(n&&n(e,t))return t;return null}function c(e){var n=i(e);return e._dispatchIDs=null,e._dispatchListeners=null,n}function p(e){var n=e._dispatchListeners,t=e._dispatchIDs;Array.isArray(n)?m(!1):void 0;var a=n?n(e,t):null;return e._dispatchListeners=null,e._dispatchIDs=null,a}function h(e){return!!e._dispatchListeners}var d=t(30),u=t(34),m=t(13),f=(t(25),{Mount:null,injectMount:function(e){f.Mount=e}}),g=d.topLevelTypes,w={isEndish:a,isMoveish:s,isStartish:o,executeDirectDispatch:p,executeDispatchesInOrder:l,executeDispatchesInOrderStopAtTrue:c,hasDispatches:h,getNode:function(e){return f.Mount.getNode(e)},getID:function(e){return f.Mount.getID(e)},injection:f};e.exports=w},function(e,n,t){"use strict";function a(e,n,t,a){try{return n(t,a)}catch(o){return void(null===s&&(s=o))}}var s=null,o={invokeGuardedCallback:a,invokeGuardedCallbackWithCatch:a,rethrowCaughtError:function(){if(s){var e=s;throw s=null,e}}};e.exports=o},function(e,n,t){"use strict";function a(e,n){if(null==n?s(!1):void 0,null==e)return n;var t=Array.isArray(e),a=Array.isArray(n);return t&&a?(e.push.apply(e,n),e):t?(e.push(n),e):a?[e].concat(n):[e,n]}var s=t(13);e.exports=a},function(e,n){"use strict";var t=function(e,n,t){Array.isArray(e)?e.forEach(n,t):e&&n.call(t,e)};e.exports=t},function(e,n,t){"use strict";function a(e){s.enqueueEvents(e),s.processEventQueue(!1)}var s=t(31),o={handleTopLevel:function(e,n,t,o,r){var l=s.extractEvents(e,n,t,o,r);a(l)}};e.exports=o},function(e,n){"use strict";var t={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){t.currentScrollLeft=e.x,t.currentScrollTop=e.y}};e.exports=t},function(e,n){"use strict";function t(e,n){if(null==e)throw new TypeError("Object.assign target cannot be null or undefined");for(var t=Object(e),a=Object.prototype.hasOwnProperty,s=1;s<arguments.length;s++){var o=arguments[s];if(null!=o){var r=Object(o);for(var l in r)a.call(r,l)&&(t[l]=r[l])}}return t}e.exports=t},function(e,n,t){"use strict";/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
function a(e,n){if(!o.canUseDOM||n&&!("addEventListener"in document))return!1;var t="on"+e,a=t in document;if(!a){var r=document.createElement("div");r.setAttribute(t,"return;"),a="function"==typeof r[t]}return!a&&s&&"wheel"===e&&(a=document.implementation.hasFeature("Events.wheel","3.0")),a}var s,o=t(9);o.canUseDOM&&(s=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),e.exports=a},function(e,n){"use strict";var t={useCreateElement:!1};e.exports=t},function(e,n,t){"use strict";var a=t(5),s=t(39),o=(t(43),"function"==typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103),r={key:!0,ref:!0,__self:!0,__source:!0},l=function(e,n,t,a,s,r,l){var i={$$typeof:o,type:e,key:n,ref:t,props:l,_owner:r};return i};l.createElement=function(e,n,t){var s,o={},i=null,c=null,p=null,h=null;if(null!=n){c=void 0===n.ref?null:n.ref,i=void 0===n.key?null:""+n.key,p=void 0===n.__self?null:n.__self,h=void 0===n.__source?null:n.__source;for(s in n)n.hasOwnProperty(s)&&!r.hasOwnProperty(s)&&(o[s]=n[s])}var d=arguments.length-2;if(1===d)o.children=t;else if(d>1){for(var u=Array(d),m=0;d>m;m++)u[m]=arguments[m+2];o.children=u}if(e&&e.defaultProps){var f=e.defaultProps;for(s in f)"undefined"==typeof o[s]&&(o[s]=f[s])}return l(e,i,c,p,h,a.current,o)},l.createFactory=function(e){var n=l.createElement.bind(null,e);return n.type=e,n},l.cloneAndReplaceKey=function(e,n){var t=l(e.type,n,e.ref,e._self,e._source,e._owner,e.props);return t},l.cloneAndReplaceProps=function(e,n){var t=l(e.type,e.key,e.ref,e._self,e._source,e._owner,n);return t},l.cloneElement=function(e,n,t){var o,i=s({},e.props),c=e.key,p=e.ref,h=e._self,d=e._source,u=e._owner;if(null!=n){void 0!==n.ref&&(p=n.ref,u=a.current),void 0!==n.key&&(c=""+n.key);for(o in n)n.hasOwnProperty(o)&&!r.hasOwnProperty(o)&&(i[o]=n[o])}var m=arguments.length-2;if(1===m)i.children=t;else if(m>1){for(var f=Array(m),g=0;m>g;g++)f[g]=arguments[g+2];i.children=f}return l(e.type,c,p,h,d,u,i)},l.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},e.exports=l},function(e,n,t){"use strict";var a=!1;e.exports=a},function(e,n){"use strict";function t(e){return!!o[e]}function a(e){o[e]=!0}function s(e){delete o[e]}var o={},r={isNullComponentID:t,registerNullComponentID:a,deregisterNullComponentID:s};e.exports=r},function(e,n,t){"use strict";function a(e){return u+e.toString(36)}function s(e,n){return e.charAt(n)===u||n===e.length}function o(e){return""===e||e.charAt(0)===u&&e.charAt(e.length-1)!==u}function r(e,n){return 0===n.indexOf(e)&&s(n,e.length)}function l(e){return e?e.substr(0,e.lastIndexOf(u)):""}function i(e,n){if(o(e)&&o(n)?void 0:d(!1),r(e,n)?void 0:d(!1),e===n)return e;var t,a=e.length+m;for(t=a;t<n.length&&!s(n,t);t++);return n.substr(0,t)}function c(e,n){var t=Math.min(e.length,n.length);if(0===t)return"";for(var a=0,r=0;t>=r;r++)if(s(e,r)&&s(n,r))a=r;else if(e.charAt(r)!==n.charAt(r))break;var l=e.substr(0,a);return o(l)?void 0:d(!1),l}function p(e,n,t,a,s,o){e=e||"",n=n||"",e===n?d(!1):void 0;var c=r(n,e);c||r(e,n)?void 0:d(!1);for(var p=0,h=c?l:i,u=e;;u=h(u,n)){var m;if(s&&u===e||o&&u===n||(m=t(u,c,a)),m===!1||u===n)break;p++<f?void 0:d(!1)}}var h=t(46),d=t(13),u=".",m=u.length,f=1e4,g={createReactRootID:function(){return a(h.createReactRootIndex())},createReactID:function(e,n){return e+n},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===u&&e.length>1){var n=e.indexOf(u,1);return n>-1?e.substr(0,n):e}return null},traverseEnterLeave:function(e,n,t,a,s){var o=c(e,n);o!==e&&p(e,o,t,a,!1,!0),o!==n&&p(o,n,t,s,!0,!1)},traverseTwoPhase:function(e,n,t){e&&(p("",e,n,t,!0,!1),p(e,"",n,t,!1,!0))},traverseTwoPhaseSkipTarget:function(e,n,t){e&&(p("",e,n,t,!0,!0),p(e,"",n,t,!0,!0))},traverseAncestors:function(e,n,t){p("",e,n,t,!0,!1)},getFirstCommonAncestorID:c,_getNextDescendantID:i,isAncestorIDOf:r,SEPARATOR:u};e.exports=g},function(e,n){"use strict";var t={injectCreateReactRootIndex:function(e){a.createReactRootIndex=e}},a={createReactRootIndex:null,injection:t};e.exports=a},function(e,n){"use strict";var t={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,n){e._reactInternalInstance=n}};e.exports=t},function(e,n,t){"use strict";var a=t(49),s=/\/?>/,o={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var n=a(e);return e.replace(s," "+o.CHECKSUM_ATTR_NAME+'="'+n+'"$&')},canReuseMarkup:function(e,n){var t=n.getAttribute(o.CHECKSUM_ATTR_NAME);t=t&&parseInt(t,10);var s=a(e);return s===t}};e.exports=o},function(e,n){"use strict";function t(e){for(var n=1,t=0,s=0,o=e.length,r=-4&o;r>s;){for(;s<Math.min(s+4096,r);s+=4)t+=(n+=e.charCodeAt(s))+(n+=e.charCodeAt(s+1))+(n+=e.charCodeAt(s+2))+(n+=e.charCodeAt(s+3));n%=a,t%=a}for(;o>s;s++)t+=n+=e.charCodeAt(s);return n%=a,t%=a,n|t<<16}var a=65521;e.exports=t},function(e,n,t){"use strict";function a(){s.attachRefs(this,this._currentElement)}var s=t(51),o={mountComponent:function(e,n,t,s){var o=e.mountComponent(n,t,s);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(a,e),o},unmountComponent:function(e){s.detachRefs(e,e._currentElement),e.unmountComponent()},receiveComponent:function(e,n,t,o){var r=e._currentElement;if(n!==r||o!==e._context){var l=s.shouldUpdateRefs(r,n);l&&s.detachRefs(e,r),e.receiveComponent(n,t,o),l&&e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(a,e)}},performUpdateIfNecessary:function(e,n){e.performUpdateIfNecessary(n)}};e.exports=o},function(e,n,t){"use strict";function a(e,n,t){"function"==typeof e?e(n.getPublicInstance()):o.addComponentAsRefTo(n,e,t)}function s(e,n,t){"function"==typeof e?e(null):o.removeComponentAsRefFrom(n,e,t)}var o=t(52),r={};r.attachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&a(t,e,n._owner)}},r.shouldUpdateRefs=function(e,n){var t=null===e||e===!1,a=null===n||n===!1;return t||a||n._owner!==e._owner||n.ref!==e.ref},r.detachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&s(t,e,n._owner)}},e.exports=r},function(e,n,t){"use strict";var a=t(13),s={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,n,t){s.isValidOwner(t)?void 0:a(!1),t.attachRef(n,e)},removeComponentAsRefFrom:function(e,n,t){s.isValidOwner(t)?void 0:a(!1),t.getPublicInstance().refs[n]===e.getPublicInstance()&&t.detachRef(n)}};e.exports=s},function(e,n,t){"use strict";function a(e){l.enqueueUpdate(e)}function s(e,n){var t=r.get(e);return t?t:null}var o=(t(5),t(42)),r=t(47),l=t(54),i=t(39),c=t(13),p=(t(25),{isMounted:function(e){var n=r.get(e);return n?!!n._renderedComponent:!1},enqueueCallback:function(e,n){"function"!=typeof n?c(!1):void 0;var t=s(e);return t?(t._pendingCallbacks?t._pendingCallbacks.push(n):t._pendingCallbacks=[n],void a(t)):null},enqueueCallbackInternal:function(e,n){"function"!=typeof n?c(!1):void 0,e._pendingCallbacks?e._pendingCallbacks.push(n):e._pendingCallbacks=[n],a(e)},enqueueForceUpdate:function(e){var n=s(e,"forceUpdate");n&&(n._pendingForceUpdate=!0,a(n))},enqueueReplaceState:function(e,n){var t=s(e,"replaceState");t&&(t._pendingStateQueue=[n],t._pendingReplaceState=!0,a(t))},enqueueSetState:function(e,n){var t=s(e,"setState");if(t){var o=t._pendingStateQueue||(t._pendingStateQueue=[]);o.push(n),a(t)}},enqueueSetProps:function(e,n){var t=s(e,"setProps");t&&p.enqueueSetPropsInternal(t,n)},enqueueSetPropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:c(!1);var s=t._pendingElement||t._currentElement,r=s.props,l=i({},r.props,n);t._pendingElement=o.cloneAndReplaceProps(s,o.cloneAndReplaceProps(r,l)),a(t)},enqueueReplaceProps:function(e,n){var t=s(e,"replaceProps");t&&p.enqueueReplacePropsInternal(t,n)},enqueueReplacePropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:c(!1);var s=t._pendingElement||t._currentElement,r=s.props;t._pendingElement=o.cloneAndReplaceProps(s,o.cloneAndReplaceProps(r,n)),a(t)},enqueueElementInternal:function(e,n){e._pendingElement=n,a(e)}});e.exports=p},function(e,n,t){"use strict";function a(){A.ReactReconcileTransaction&&k?void 0:g(!1)}function s(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=p.getPooled(),this.reconcileTransaction=A.ReactReconcileTransaction.getPooled(!1)}function o(e,n,t,s,o,r){a(),k.batchedUpdates(e,n,t,s,o,r)}function r(e,n){return e._mountOrder-n._mountOrder}function l(e){var n=e.dirtyComponentsLength;n!==w.length?g(!1):void 0,w.sort(r);for(var t=0;n>t;t++){var a=w[t],s=a._pendingCallbacks;if(a._pendingCallbacks=null,u.performUpdateIfNecessary(a,e.reconcileTransaction),s)for(var o=0;o<s.length;o++)e.callbackQueue.enqueue(s[o],a.getPublicInstance())}}function i(e){return a(),k.isBatchingUpdates?void w.push(e):void k.batchedUpdates(i,e)}function c(e,n){k.isBatchingUpdates?void 0:g(!1),y.enqueue(e,n),b=!0}var p=t(55),h=t(56),d=t(18),u=t(50),m=t(57),f=t(39),g=t(13),w=[],y=p.getPooled(),b=!1,k=null,j={initialize:function(){this.dirtyComponentsLength=w.length},close:function(){this.dirtyComponentsLength!==w.length?(w.splice(0,this.dirtyComponentsLength),x()):w.length=0}},C={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},v=[j,C];f(s.prototype,m.Mixin,{getTransactionWrappers:function(){return v},destructor:function(){this.dirtyComponentsLength=null,p.release(this.callbackQueue),this.callbackQueue=null,A.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,n,t){return m.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,n,t)}}),h.addPoolingTo(s);var x=function(){for(;w.length||b;){if(w.length){var e=s.getPooled();e.perform(l,null,e),s.release(e)}if(b){b=!1;var n=y;y=p.getPooled(),n.notifyAll(),p.release(n)}}};x=d.measure("ReactUpdates","flushBatchedUpdates",x);var S={injectReconcileTransaction:function(e){e?void 0:g(!1),A.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:g(!1),"function"!=typeof e.batchedUpdates?g(!1):void 0,"boolean"!=typeof e.isBatchingUpdates?g(!1):void 0,k=e}},A={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:i,flushBatchedUpdates:x,injection:S,asap:c};e.exports=A},function(e,n,t){"use strict";function a(){this._callbacks=null,this._contexts=null}var s=t(56),o=t(39),r=t(13);o(a.prototype,{enqueue:function(e,n){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(n)},notifyAll:function(){var e=this._callbacks,n=this._contexts;if(e){e.length!==n.length?r(!1):void 0,this._callbacks=null,this._contexts=null;for(var t=0;t<e.length;t++)e[t].call(n[t]);e.length=0,n.length=0}},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";var a=t(13),s=function(e){var n=this;if(n.instancePool.length){var t=n.instancePool.pop();return n.call(t,e),t}return new n(e)},o=function(e,n){var t=this;if(t.instancePool.length){var a=t.instancePool.pop();return t.call(a,e,n),a}return new t(e,n)},r=function(e,n,t){var a=this;if(a.instancePool.length){var s=a.instancePool.pop();return a.call(s,e,n,t),s}return new a(e,n,t)},l=function(e,n,t,a){var s=this;if(s.instancePool.length){var o=s.instancePool.pop();return s.call(o,e,n,t,a),o}return new s(e,n,t,a)},i=function(e,n,t,a,s){var o=this;if(o.instancePool.length){var r=o.instancePool.pop();return o.call(r,e,n,t,a,s),r}return new o(e,n,t,a,s)},c=function(e){var n=this;e instanceof n?void 0:a(!1),e.destructor(),n.instancePool.length<n.poolSize&&n.instancePool.push(e)},p=10,h=s,d=function(e,n){var t=e;return t.instancePool=[],t.getPooled=n||h,t.poolSize||(t.poolSize=p),t.release=c,t},u={addPoolingTo:d,oneArgumentPooler:s,twoArgumentPooler:o,threeArgumentPooler:r,fourArgumentPooler:l,fiveArgumentPooler:i};e.exports=u},function(e,n,t){"use strict";var a=t(13),s={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,n,t,s,o,r,l,i){this.isInTransaction()?a(!1):void 0;var c,p;try{this._isInTransaction=!0,c=!0,this.initializeAll(0),p=e.call(n,t,s,o,r,l,i),c=!1}finally{try{if(c)try{this.closeAll(0)}catch(h){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return p},initializeAll:function(e){for(var n=this.transactionWrappers,t=e;t<n.length;t++){var a=n[t];try{this.wrapperInitData[t]=o.OBSERVED_ERROR,this.wrapperInitData[t]=a.initialize?a.initialize.call(this):null}finally{if(this.wrapperInitData[t]===o.OBSERVED_ERROR)try{this.initializeAll(t+1)}catch(s){}}}},closeAll:function(e){this.isInTransaction()?void 0:a(!1);for(var n=this.transactionWrappers,t=e;t<n.length;t++){var s,r=n[t],l=this.wrapperInitData[t];try{s=!0,l!==o.OBSERVED_ERROR&&r.close&&r.close.call(this,l),s=!1}finally{if(s)try{this.closeAll(t+1)}catch(i){}}}this.wrapperInitData.length=0}},o={Mixin:s,OBSERVED_ERROR:{}};e.exports=o},function(e,n,t){"use strict";var a={};e.exports=a},function(e,n,t){"use strict";function a(e,n){var t=!0;e:for(;t;){var a=e,o=n;if(t=!1,a&&o){if(a===o)return!0;if(s(a))return!1;if(s(o)){e=a,n=o.parentNode,t=!0;continue e}return a.contains?a.contains(o):a.compareDocumentPosition?!!(16&a.compareDocumentPosition(o)):!1}return!1}}var s=t(60);e.exports=a},function(e,n,t){"use strict";function a(e){return s(e)&&3==e.nodeType}var s=t(61);e.exports=a},function(e,n){"use strict";function t(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=t},function(e,n,t){"use strict";function a(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function s(e){var n;if(null===e||e===!1)n=new r(s);else if("object"==typeof e){var t=e;!t||"function"!=typeof t.type&&"string"!=typeof t.type?c(!1):void 0,n="string"==typeof t.type?l.createInternalComponent(t):a(t.type)?new t.type(t):new p}else"string"==typeof e||"number"==typeof e?n=l.createInstanceForText(e):c(!1);return n.construct(e),n._mountIndex=0,n._mountImage=null,n}var o=t(63),r=t(68),l=t(69),i=t(39),c=t(13),p=(t(25),function(){});i(p.prototype,o.Mixin,{_instantiateReactComponent:s}),e.exports=s},function(e,n,t){"use strict";function a(e){var n=e._currentElement._owner||null;if(n){var t=n.getName();if(t)return" Check the render method of `"+t+"`."}return""}function s(e){}var o=t(64),r=t(5),l=t(42),i=t(47),c=t(18),p=t(65),h=(t(66),t(50)),d=t(53),u=t(39),m=t(58),f=t(13),g=t(67);t(25);s.prototype.render=function(){var e=i.get(this)._currentElement.type;return e(this.props,this.context,this.updater)};var w=1,y={construct:function(e){this._currentElement=e,this._rootNodeID=null,this._instance=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null},mountComponent:function(e,n,t){this._context=t,this._mountOrder=w++,this._rootNodeID=e;var a,o,r=this._processProps(this._currentElement.props),c=this._processContext(t),p=this._currentElement.type,u="prototype"in p;u&&(a=new p(r,c,d)),(!u||null===a||a===!1||l.isValidElement(a))&&(o=a,a=new s(p)),a.props=r,a.context=c,a.refs=m,a.updater=d,this._instance=a,i.set(a,this);var g=a.state;void 0===g&&(a.state=g=null),"object"!=typeof g||Array.isArray(g)?f(!1):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,a.componentWillMount&&(a.componentWillMount(),this._pendingStateQueue&&(a.state=this._processPendingState(a.props,a.context))),void 0===o&&(o=this._renderValidatedComponent()),this._renderedComponent=this._instantiateReactComponent(o);var y=h.mountComponent(this._renderedComponent,e,n,this._processChildContext(t));return a.componentDidMount&&n.getReactMountReady().enqueue(a.componentDidMount,a),y},unmountComponent:function(){var e=this._instance;e.componentWillUnmount&&e.componentWillUnmount(),h.unmountComponent(this._renderedComponent),this._renderedComponent=null,this._instance=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,i.remove(e)},_maskContext:function(e){var n=null,t=this._currentElement.type,a=t.contextTypes;if(!a)return m;n={};for(var s in a)n[s]=e[s];return n},_processContext:function(e){var n=this._maskContext(e);return n},_processChildContext:function(e){var n=this._currentElement.type,t=this._instance,a=t.getChildContext&&t.getChildContext();if(a){"object"!=typeof n.childContextTypes?f(!1):void 0;for(var s in a)s in n.childContextTypes?void 0:f(!1);return u({},e,a)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,n,t){var s=this.getName();for(var o in e)if(e.hasOwnProperty(o)){var r;try{"function"!=typeof e[o]?f(!1):void 0,r=e[o](n,o,s,t)}catch(l){r=l}if(r instanceof Error){a(this);t===p.prop}}},receiveComponent:function(e,n,t){var a=this._currentElement,s=this._context;this._pendingElement=null,this.updateComponent(n,a,e,s,t)},performUpdateIfNecessary:function(e){null!=this._pendingElement&&h.receiveComponent(this,this._pendingElement||this._currentElement,e,this._context),(null!==this._pendingStateQueue||this._pendingForceUpdate)&&this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context)},updateComponent:function(e,n,t,a,s){var o,r=this._instance,l=this._context===s?r.context:this._processContext(s);n===t?o=t.props:(o=this._processProps(t.props),r.componentWillReceiveProps&&r.componentWillReceiveProps(o,l));var i=this._processPendingState(o,l),c=this._pendingForceUpdate||!r.shouldComponentUpdate||r.shouldComponentUpdate(o,i,l);c?(this._pendingForceUpdate=!1,this._performComponentUpdate(t,o,i,l,e,s)):(this._currentElement=t,this._context=s,r.props=o,r.state=i,r.context=l)},_processPendingState:function(e,n){var t=this._instance,a=this._pendingStateQueue,s=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!a)return t.state;if(s&&1===a.length)return a[0];for(var o=u({},s?a[0]:t.state),r=s?1:0;r<a.length;r++){var l=a[r];u(o,"function"==typeof l?l.call(t,o,e,n):l)}return o},_performComponentUpdate:function(e,n,t,a,s,o){var r,l,i,c=this._instance,p=Boolean(c.componentDidUpdate);p&&(r=c.props,l=c.state,i=c.context),c.componentWillUpdate&&c.componentWillUpdate(n,t,a),this._currentElement=e,this._context=o,c.props=n,c.state=t,c.context=a,this._updateRenderedComponent(s,o),p&&s.getReactMountReady().enqueue(c.componentDidUpdate.bind(c,r,l,i),c)},_updateRenderedComponent:function(e,n){var t=this._renderedComponent,a=t._currentElement,s=this._renderValidatedComponent();if(g(a,s))h.receiveComponent(t,s,e,this._processChildContext(n));else{var o=this._rootNodeID,r=t._rootNodeID;h.unmountComponent(t),this._renderedComponent=this._instantiateReactComponent(s);var l=h.mountComponent(this._renderedComponent,o,e,this._processChildContext(n));this._replaceNodeWithMarkupByID(r,l)}},_replaceNodeWithMarkupByID:function(e,n){o.replaceNodeWithMarkupByID(e,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance,n=e.render();return n},_renderValidatedComponent:function(){var e;r.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{r.current=null}return null===e||e===!1||l.isValidElement(e)?void 0:f(!1),e},attachRef:function(e,n){var t=this.getPublicInstance();null==t?f(!1):void 0;var a=n.getPublicInstance(),s=t.refs===m?t.refs={}:t.refs;s[e]=a},detachRef:function(e){var n=this.getPublicInstance().refs;delete n[e]},getName:function(){var e=this._currentElement.type,n=this._instance&&this._instance.constructor;return e.displayName||n&&n.displayName||e.name||n&&n.name||null},getPublicInstance:function(){var e=this._instance;return e instanceof s?null:e},_instantiateReactComponent:null};c.measureMethods(y,"ReactCompositeComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent",_renderValidatedComponent:"_renderValidatedComponent"});var b={Mixin:y};e.exports=b},function(e,n,t){"use strict";var a=t(13),s=!1,o={unmountIDFromEnvironment:null,replaceNodeWithMarkupByID:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){s?a(!1):void 0,o.unmountIDFromEnvironment=e.unmountIDFromEnvironment,o.replaceNodeWithMarkupByID=e.replaceNodeWithMarkupByID,o.processChildrenUpdates=e.processChildrenUpdates,s=!0}}};e.exports=o},function(e,n,t){"use strict";var a=t(17),s=a({prop:null,context:null,childContext:null});e.exports=s},function(e,n,t){"use strict";var a={};e.exports=a},function(e,n){"use strict";function t(e,n){var t=null===e||e===!1,a=null===n||n===!1;if(t||a)return t===a;var s=typeof e,o=typeof n;return"string"===s||"number"===s?"string"===o||"number"===o:"object"===o&&e.type===n.type&&e.key===n.key}e.exports=t},function(e,n,t){"use strict";var a,s=t(42),o=t(44),r=t(50),l=t(39),i={injectEmptyComponent:function(e){a=s.createElement(e)}},c=function(e){this._currentElement=null,this._rootNodeID=null,this._renderedComponent=e(a)};l(c.prototype,{construct:function(e){},mountComponent:function(e,n,t){return o.registerNullComponentID(e),this._rootNodeID=e,r.mountComponent(this._renderedComponent,e,n,t)},receiveComponent:function(){},unmountComponent:function(e,n,t){r.unmountComponent(this._renderedComponent),o.deregisterNullComponentID(this._rootNodeID),this._rootNodeID=null,this._renderedComponent=null}}),c.injection=i,e.exports=c},function(e,n,t){"use strict";function a(e){if("function"==typeof e.type)return e.type;var n=e.type,t=h[n];return null==t&&(h[n]=t=c(n)),t}function s(e){return p?void 0:i(!1),new p(e.type,e.props)}function o(e){return new d(e)}function r(e){return e instanceof d}var l=t(39),i=t(13),c=null,p=null,h={},d=null,u={injectGenericComponentClass:function(e){p=e},injectTextComponentClass:function(e){d=e},injectComponentClasses:function(e){l(h,e)}},m={getComponentClassForElement:a,createInternalComponent:s,createInstanceForText:o,isTextComponent:r,injection:u};e.exports=m},function(e,n,t){"use strict";var a=(t(39),t(15)),s=(t(25),a);e.exports=s},function(e,n,t){"use strict";function a(){if(!S){S=!0,w.EventEmitter.injectReactEventListener(g),w.EventPluginHub.injectEventPluginOrder(l),w.EventPluginHub.injectInstanceHandle(y),w.EventPluginHub.injectMount(b),w.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:v,EnterLeaveEventPlugin:i,ChangeEventPlugin:o,SelectEventPlugin:j,BeforeInputEventPlugin:s}),w.NativeComponent.injectGenericComponentClass(m),w.NativeComponent.injectTextComponentClass(f),w.Class.injectMixin(h),w.DOMProperty.injectDOMPropertyConfig(p),w.DOMProperty.injectDOMPropertyConfig(x),w.EmptyComponent.injectEmptyComponent("noscript"),w.Updates.injectReconcileTransaction(k),w.Updates.injectBatchingStrategy(u),w.RootIndex.injectCreateReactRootIndex(c.canUseDOM?r.createReactRootIndex:C.createReactRootIndex),w.Component.injectEnvironment(d)}}var s=t(72),o=t(80),r=t(83),l=t(84),i=t(85),c=t(9),p=t(89),h=t(90),d=t(26),u=t(92),m=t(93),f=t(6),g=t(118),w=t(121),y=t(45),b=t(28),k=t(125),j=t(130),C=t(131),v=t(132),x=t(141),S=!1;e.exports={inject:a}},function(e,n,t){"use strict";function a(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function s(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function o(e){switch(e){case E.topCompositionStart:return P.compositionStart;case E.topCompositionEnd:return P.compositionEnd;case E.topCompositionUpdate:return P.compositionUpdate}}function r(e,n){return e===E.topKeyDown&&n.keyCode===j}function l(e,n){switch(e){case E.topKeyUp:return-1!==k.indexOf(n.keyCode);case E.topKeyDown:return n.keyCode!==j;case E.topKeyPress:case E.topMouseDown:case E.topBlur:return!0;default:return!1}}function i(e){var n=e.detail;return"object"==typeof n&&"data"in n?n.data:null}function c(e,n,t,a,s){var c,p;if(C?c=o(e):O?l(e,a)&&(c=P.compositionEnd):r(e,a)&&(c=P.compositionStart),!c)return null;S&&(O||c!==P.compositionStart?c===P.compositionEnd&&O&&(p=O.getData()):O=g.getPooled(n));var h=w.getPooled(c,t,a,s);if(p)h.data=p;else{var d=i(a);null!==d&&(h.data=d)}return m.accumulateTwoPhaseDispatches(h),h}function p(e,n){switch(e){case E.topCompositionEnd:return i(n);case E.topKeyPress:var t=n.which;return t!==A?null:(I=!0,T);case E.topTextInput:var a=n.data;return a===T&&I?null:a;default:return null}}function h(e,n){if(O){if(e===E.topCompositionEnd||l(e,n)){var t=O.getData();return g.release(O),O=null,t}return null}switch(e){case E.topPaste:return null;case E.topKeyPress:return n.which&&!s(n)?String.fromCharCode(n.which):null;case E.topCompositionEnd:return S?null:n.data;default:return null}}function d(e,n,t,a,s){var o;if(o=x?p(e,a):h(e,a),!o)return null;var r=y.getPooled(P.beforeInput,t,a,s);return r.data=o,m.accumulateTwoPhaseDispatches(r),r}var u=t(30),m=t(73),f=t(9),g=t(74),w=t(76),y=t(78),b=t(79),k=[9,13,27,32],j=229,C=f.canUseDOM&&"CompositionEvent"in window,v=null;f.canUseDOM&&"documentMode"in document&&(v=document.documentMode);var x=f.canUseDOM&&"TextEvent"in window&&!v&&!a(),S=f.canUseDOM&&(!C||v&&v>8&&11>=v),A=32,T=String.fromCharCode(A),E=u.topLevelTypes,P={beforeInput:{phasedRegistrationNames:{bubbled:b({onBeforeInput:null}),captured:b({onBeforeInputCapture:null})},dependencies:[E.topCompositionEnd,E.topKeyPress,E.topTextInput,E.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:b({onCompositionEnd:null}),captured:b({onCompositionEndCapture:null})},dependencies:[E.topBlur,E.topCompositionEnd,E.topKeyDown,E.topKeyPress,E.topKeyUp,E.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:b({onCompositionStart:null}),captured:b({onCompositionStartCapture:null})},dependencies:[E.topBlur,E.topCompositionStart,E.topKeyDown,E.topKeyPress,E.topKeyUp,E.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:b({onCompositionUpdate:null}),captured:b({onCompositionUpdateCapture:null})},dependencies:[E.topBlur,E.topCompositionUpdate,E.topKeyDown,E.topKeyPress,E.topKeyUp,E.topMouseDown]}},I=!1,O=null,R={eventTypes:P,extractEvents:function(e,n,t,a,s){return[c(e,n,t,a,s),d(e,n,t,a,s)]}};e.exports=R},function(e,n,t){"use strict";function a(e,n,t){var a=n.dispatchConfig.phasedRegistrationNames[t];return y(e,a)}function s(e,n,t){var s=n?w.bubbled:w.captured,o=a(e,t,s);o&&(t._dispatchListeners=f(t._dispatchListeners,o),t._dispatchIDs=f(t._dispatchIDs,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&m.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,s,e)}function r(e){e&&e.dispatchConfig.phasedRegistrationNames&&m.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(e.dispatchMarker,s,e)}function l(e,n,t){if(t&&t.dispatchConfig.registrationName){var a=t.dispatchConfig.registrationName,s=y(e,a);s&&(t._dispatchListeners=f(t._dispatchListeners,s),t._dispatchIDs=f(t._dispatchIDs,e))}}function i(e){e&&e.dispatchConfig.registrationName&&l(e.dispatchMarker,null,e)}function c(e){g(e,o)}function p(e){g(e,r)}function h(e,n,t,a){m.injection.getInstanceHandle().traverseEnterLeave(t,a,l,e,n)}function d(e){g(e,i)}var u=t(30),m=t(31),f=(t(25),t(35)),g=t(36),w=u.PropagationPhases,y=m.getListener,b={accumulateTwoPhaseDispatches:c,accumulateTwoPhaseDispatchesSkipTarget:p,accumulateDirectDispatches:d,accumulateEnterLeaveDispatches:h};e.exports=b},function(e,n,t){"use strict";function a(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var s=t(56),o=t(39),r=t(75);o(a.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[r()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,n,t=this._startText,a=t.length,s=this.getText(),o=s.length;for(e=0;a>e&&t[e]===s[e];e++);var r=a-e;for(n=1;r>=n&&t[a-n]===s[o-n];n++);var l=n>1?1-n:void 0;return this._fallbackText=s.slice(e,l),this._fallbackText}}),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";function a(){return!o&&s.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var s=t(9),o=null;e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={data:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){this.dispatchConfig=e,this.dispatchMarker=n,this.nativeEvent=t;var s=this.constructor.Interface;for(var o in s)if(s.hasOwnProperty(o)){var l=s[o];l?this[o]=l(t):"target"===o?this.target=a:this[o]=t[o]}var i=null!=t.defaultPrevented?t.defaultPrevented:t.returnValue===!1;i?this.isDefaultPrevented=r.thatReturnsTrue:this.isDefaultPrevented=r.thatReturnsFalse,this.isPropagationStopped=r.thatReturnsFalse}var s=t(56),o=t(39),r=t(15),l=(t(25),{type:null,target:null,currentTarget:r.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null});o(a.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=r.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=r.thatReturnsTrue)},persist:function(){this.isPersistent=r.thatReturnsTrue},isPersistent:r.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var n in e)this[n]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),a.Interface=l,a.augmentClass=function(e,n){var t=this,a=Object.create(t.prototype);o(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=o({},t.Interface,n),e.augmentClass=t.augmentClass,s.addPoolingTo(e,s.fourArgumentPooler)},s.addPoolingTo(a,s.fourArgumentPooler),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={data:null};s.augmentClass(a,o),e.exports=a},function(e,n){"use strict";var t=function(e){var n;for(n in e)if(e.hasOwnProperty(n))return n;return null};e.exports=t},function(e,n,t){"use strict";function a(e){var n=e.nodeName&&e.nodeName.toLowerCase();return"select"===n||"input"===n&&"file"===e.type}function s(e){var n=v.getPooled(P.change,O,e,x(e));k.accumulateTwoPhaseDispatches(n),C.batchedUpdates(o,n)}function o(e){b.enqueueEvents(e),b.processEventQueue(!1)}function r(e,n){I=e,O=n,I.attachEvent("onchange",s)}function l(){I&&(I.detachEvent("onchange",s),I=null,O=null)}function i(e,n,t){return e===E.topChange?t:void 0}function c(e,n,t){e===E.topFocus?(l(),r(n,t)):e===E.topBlur&&l()}function p(e,n){I=e,O=n,R=e.value,N=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(I,"value",q),I.attachEvent("onpropertychange",d)}function h(){I&&(delete I.value,I.detachEvent("onpropertychange",d),I=null,O=null,R=null,N=null)}function d(e){if("value"===e.propertyName){var n=e.srcElement.value;n!==R&&(R=n,s(e))}}function u(e,n,t){return e===E.topInput?t:void 0}function m(e,n,t){e===E.topFocus?(h(),p(n,t)):e===E.topBlur&&h()}function f(e,n,t){return e!==E.topSelectionChange&&e!==E.topKeyUp&&e!==E.topKeyDown||!I||I.value===R?void 0:(R=I.value,O)}function g(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function w(e,n,t){return e===E.topClick?t:void 0}var y=t(30),b=t(31),k=t(73),j=t(9),C=t(54),v=t(77),x=t(81),S=t(40),A=t(82),T=t(79),E=y.topLevelTypes,P={change:{phasedRegistrationNames:{
bubbled:T({onChange:null}),captured:T({onChangeCapture:null})},dependencies:[E.topBlur,E.topChange,E.topClick,E.topFocus,E.topInput,E.topKeyDown,E.topKeyUp,E.topSelectionChange]}},I=null,O=null,R=null,N=null,F=!1;j.canUseDOM&&(F=S("change")&&(!("documentMode"in document)||document.documentMode>8));var M=!1;j.canUseDOM&&(M=S("input")&&(!("documentMode"in document)||document.documentMode>9));var q={get:function(){return N.get.call(this)},set:function(e){R=""+e,N.set.call(this,e)}},D={eventTypes:P,extractEvents:function(e,n,t,s,o){var r,l;if(a(n)?F?r=i:l=c:A(n)?M?r=u:(r=f,l=m):g(n)&&(r=w),r){var p=r(e,n,t);if(p){var h=v.getPooled(P.change,p,s,o);return h.type="change",k.accumulateTwoPhaseDispatches(h),h}}l&&l(e,n,t)}};e.exports=D},function(e,n){"use strict";function t(e){var n=e.target||e.srcElement||window;return 3===n.nodeType?n.parentNode:n}e.exports=t},function(e,n){"use strict";function t(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&a[e.type]||"textarea"===n)}var a={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};e.exports=t},function(e,n){"use strict";var t=0,a={createReactRootIndex:function(){return t++}};e.exports=a},function(e,n,t){"use strict";var a=t(79),s=[a({ResponderEventPlugin:null}),a({SimpleEventPlugin:null}),a({TapEventPlugin:null}),a({EnterLeaveEventPlugin:null}),a({ChangeEventPlugin:null}),a({SelectEventPlugin:null}),a({BeforeInputEventPlugin:null})];e.exports=s},function(e,n,t){"use strict";var a=t(30),s=t(73),o=t(86),r=t(28),l=t(79),i=a.topLevelTypes,c=r.getFirstReactDOM,p={mouseEnter:{registrationName:l({onMouseEnter:null}),dependencies:[i.topMouseOut,i.topMouseOver]},mouseLeave:{registrationName:l({onMouseLeave:null}),dependencies:[i.topMouseOut,i.topMouseOver]}},h=[null,null],d={eventTypes:p,extractEvents:function(e,n,t,a,l){if(e===i.topMouseOver&&(a.relatedTarget||a.fromElement))return null;if(e!==i.topMouseOut&&e!==i.topMouseOver)return null;var d;if(n.window===n)d=n;else{var u=n.ownerDocument;d=u?u.defaultView||u.parentWindow:window}var m,f,g="",w="";if(e===i.topMouseOut?(m=n,g=t,f=c(a.relatedTarget||a.toElement),f?w=r.getID(f):f=d,f=f||d):(m=d,f=n,w=t),m===f)return null;var y=o.getPooled(p.mouseLeave,g,a,l);y.type="mouseleave",y.target=m,y.relatedTarget=f;var b=o.getPooled(p.mouseEnter,w,a,l);return b.type="mouseenter",b.target=f,b.relatedTarget=m,s.accumulateEnterLeaveDispatches(y,b,g,w),h[0]=y,h[1]=b,h}};e.exports=d},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(38),r=t(88),l={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:r,button:function(e){var n=e.button;return"which"in e?n:2===n?2:4===n?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};s.augmentClass(a,l),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o=t(81),r={view:function(e){if(e.view)return e.view;var n=o(e);if(null!=n&&n.window===n)return n;var t=n.ownerDocument;return t?t.defaultView||t.parentWindow:window},detail:function(e){return e.detail||0}};s.augmentClass(a,r),e.exports=a},function(e,n){"use strict";function t(e){var n=this,t=n.nativeEvent;if(t.getModifierState)return t.getModifierState(e);var a=s[e];return a?!!t[a]:!1}function a(e){return t}var s={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};e.exports=a},function(e,n,t){"use strict";var a,s=t(23),o=t(9),r=s.injection.MUST_USE_ATTRIBUTE,l=s.injection.MUST_USE_PROPERTY,i=s.injection.HAS_BOOLEAN_VALUE,c=s.injection.HAS_SIDE_EFFECTS,p=s.injection.HAS_NUMERIC_VALUE,h=s.injection.HAS_POSITIVE_NUMERIC_VALUE,d=s.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(o.canUseDOM){var u=document.implementation;a=u&&u.hasFeature&&u.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}var m={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,acceptCharset:null,accessKey:null,action:null,allowFullScreen:r|i,allowTransparency:r,alt:null,async:i,autoComplete:null,autoPlay:i,capture:r|i,cellPadding:null,cellSpacing:null,charSet:r,challenge:r,checked:l|i,classID:r,className:a?r:l,cols:r|h,colSpan:null,content:null,contentEditable:null,contextMenu:r,controls:l|i,coords:null,crossOrigin:null,data:null,dateTime:r,"default":i,defer:i,dir:null,disabled:r|i,download:d,draggable:null,encType:null,form:r,formAction:r,formEncType:r,formMethod:r,formNoValidate:i,formTarget:r,frameBorder:r,headers:null,height:r,hidden:r|i,high:null,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:l,inputMode:r,integrity:null,is:r,keyParams:r,keyType:r,kind:null,label:null,lang:null,list:r,loop:l|i,low:null,manifest:r,marginHeight:null,marginWidth:null,max:null,maxLength:r,media:r,mediaGroup:null,method:null,min:null,minLength:r,multiple:l|i,muted:l|i,name:null,nonce:r,noValidate:i,open:i,optimum:null,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:l|i,rel:null,required:i,reversed:i,role:r,rows:r|h,rowSpan:null,sandbox:null,scope:null,scoped:i,scrolling:null,seamless:r|i,selected:l|i,shape:null,size:r|h,sizes:r,span:h,spellCheck:null,src:null,srcDoc:l,srcLang:null,srcSet:r,start:p,step:null,style:null,summary:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:l|c,width:r,wmode:r,wrap:null,about:r,datatype:r,inlist:r,prefix:r,property:r,resource:r,"typeof":r,vocab:r,autoCapitalize:r,autoCorrect:r,autoSave:null,color:null,itemProp:r,itemScope:r|i,itemType:r,itemID:r,itemRef:r,results:null,security:r,unselectable:r},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{autoComplete:"autocomplete",autoFocus:"autofocus",autoPlay:"autoplay",autoSave:"autosave",encType:"encoding",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc",srcSet:"srcset"}};e.exports=m},function(e,n,t){"use strict";var a=(t(47),t(91)),s=(t(25),"_getDOMNodeDidWarn"),o={getDOMNode:function(){return this.constructor[s]=!0,a(this)}};e.exports=o},function(e,n,t){"use strict";function a(e){return null==e?null:1===e.nodeType?e:s.has(e)?o.getNodeFromInstance(e):(null!=e.render&&"function"==typeof e.render?r(!1):void 0,void r(!1))}var s=(t(5),t(47)),o=t(28),r=t(13);t(25);e.exports=a},function(e,n,t){"use strict";function a(){this.reinitializeTransaction()}var s=t(54),o=t(57),r=t(39),l=t(15),i={initialize:l,close:function(){d.isBatchingUpdates=!1}},c={initialize:l,close:s.flushBatchedUpdates.bind(s)},p=[c,i];r(a.prototype,o.Mixin,{getTransactionWrappers:function(){return p}});var h=new a,d={isBatchingUpdates:!1,batchedUpdates:function(e,n,t,a,s,o){var r=d.isBatchingUpdates;d.isBatchingUpdates=!0,r?e(n,t,a,s,o):h.perform(e,null,n,t,a,s,o)}};e.exports=d},function(e,n,t){"use strict";function a(){return this}function s(){var e=this._reactInternalComponent;return!!e}function o(){}function r(e,n){var t=this._reactInternalComponent;t&&(R.enqueueSetPropsInternal(t,e),n&&R.enqueueCallbackInternal(t,n))}function l(e,n){var t=this._reactInternalComponent;t&&(R.enqueueReplacePropsInternal(t,e),n&&R.enqueueCallbackInternal(t,n))}function i(e,n){n&&(null!=n.dangerouslySetInnerHTML&&(null!=n.children?q(!1):void 0,"object"==typeof n.dangerouslySetInnerHTML&&V in n.dangerouslySetInnerHTML?void 0:q(!1)),null!=n.style&&"object"!=typeof n.style?q(!1):void 0)}function c(e,n,t,a){var s=P.findReactContainerForID(e);if(s){var o=s.nodeType===z?s.ownerDocument:s;U(n,o)}a.getReactMountReady().enqueue(p,{id:e,registrationName:n,listener:t})}function p(){var e=this;C.putListener(e.id,e.registrationName,e.listener)}function h(){var e=this;e._rootNodeID?void 0:q(!1);var n=P.getNode(e._rootNodeID);switch(n?void 0:q(!1),e._tag){case"iframe":e._wrapperState.listeners=[C.trapBubbledEvent(j.topLevelTypes.topLoad,"load",n)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var t in Y)Y.hasOwnProperty(t)&&e._wrapperState.listeners.push(C.trapBubbledEvent(j.topLevelTypes[t],Y[t],n));break;case"img":e._wrapperState.listeners=[C.trapBubbledEvent(j.topLevelTypes.topError,"error",n),C.trapBubbledEvent(j.topLevelTypes.topLoad,"load",n)];break;case"form":e._wrapperState.listeners=[C.trapBubbledEvent(j.topLevelTypes.topReset,"reset",n),C.trapBubbledEvent(j.topLevelTypes.topSubmit,"submit",n)]}}function d(){S.mountReadyWrapper(this)}function u(){T.postUpdateWrapper(this)}function m(e){Z.call(X,e)||(K.test(e)?void 0:q(!1),X[e]=!0)}function f(e,n){return e.indexOf("-")>=0||null!=n.is}function g(e){m(e),this._tag=e.toLowerCase(),this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._rootNodeID=null,this._wrapperState=null,this._topLevelWrapper=null,this._nodeWithLegacyProperties=null}var w=t(94),y=t(96),b=t(23),k=t(22),j=t(30),C=t(29),v=t(26),x=t(104),S=t(105),A=t(109),T=t(112),E=t(113),P=t(28),I=t(114),O=t(18),R=t(53),N=t(39),F=t(43),M=t(21),q=t(13),D=(t(40),t(79)),B=t(19),L=t(20),_=(t(117),t(70),t(25),C.deleteListener),U=C.listenTo,W=C.registrationNameModules,H={string:!0,number:!0},G=D({children:null}),J=D({style:null}),V=D({__html:null}),z=1,Y={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},Q={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},$={listing:!0,pre:!0,textarea:!0},K=(N({menuitem:!0},Q),/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/),X={},Z={}.hasOwnProperty;g.displayName="ReactDOMComponent",g.Mixin={construct:function(e){this._currentElement=e},mountComponent:function(e,n,t){this._rootNodeID=e;var a=this._currentElement.props;switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":this._wrapperState={listeners:null},n.getReactMountReady().enqueue(h,this);break;case"button":a=x.getNativeProps(this,a,t);break;case"input":S.mountWrapper(this,a,t),a=S.getNativeProps(this,a,t);break;case"option":A.mountWrapper(this,a,t),a=A.getNativeProps(this,a,t);break;case"select":T.mountWrapper(this,a,t),a=T.getNativeProps(this,a,t),t=T.processChildContext(this,a,t);break;case"textarea":E.mountWrapper(this,a,t),a=E.getNativeProps(this,a,t)}i(this,a);var s;if(n.useCreateElement){var o=t[P.ownerDocumentContextKey],r=o.createElement(this._currentElement.type);k.setAttributeForID(r,this._rootNodeID),P.getID(r),this._updateDOMProperties({},a,n,r),this._createInitialChildren(n,a,t,r),s=r}else{var l=this._createOpenTagMarkupAndPutListeners(n,a),c=this._createContentMarkup(n,a,t);s=!c&&Q[this._tag]?l+"/>":l+">"+c+"</"+this._currentElement.type+">"}switch(this._tag){case"input":n.getReactMountReady().enqueue(d,this);case"button":case"select":case"textarea":a.autoFocus&&n.getReactMountReady().enqueue(w.focusDOMComponent,this)}return s},_createOpenTagMarkupAndPutListeners:function(e,n){var t="<"+this._currentElement.type;for(var a in n)if(n.hasOwnProperty(a)){var s=n[a];if(null!=s)if(W.hasOwnProperty(a))s&&c(this._rootNodeID,a,s,e);else{a===J&&(s&&(s=this._previousStyleCopy=N({},n.style)),s=y.createMarkupForStyles(s));var o=null;null!=this._tag&&f(this._tag,n)?a!==G&&(o=k.createMarkupForCustomAttribute(a,s)):o=k.createMarkupForProperty(a,s),o&&(t+=" "+o)}}if(e.renderToStaticMarkup)return t;var r=k.createMarkupForID(this._rootNodeID);return t+" "+r},_createContentMarkup:function(e,n,t){var a="",s=n.dangerouslySetInnerHTML;if(null!=s)null!=s.__html&&(a=s.__html);else{var o=H[typeof n.children]?n.children:null,r=null!=o?null:n.children;if(null!=o)a=M(o);else if(null!=r){var l=this.mountChildren(r,e,t);a=l.join("")}}return $[this._tag]&&"\n"===a.charAt(0)?"\n"+a:a},_createInitialChildren:function(e,n,t,a){var s=n.dangerouslySetInnerHTML;if(null!=s)null!=s.__html&&B(a,s.__html);else{var o=H[typeof n.children]?n.children:null,r=null!=o?null:n.children;if(null!=o)L(a,o);else if(null!=r)for(var l=this.mountChildren(r,e,t),i=0;i<l.length;i++)a.appendChild(l[i])}},receiveComponent:function(e,n,t){var a=this._currentElement;this._currentElement=e,this.updateComponent(n,a,e,t)},updateComponent:function(e,n,t,a){var s=n.props,o=this._currentElement.props;switch(this._tag){case"button":s=x.getNativeProps(this,s),o=x.getNativeProps(this,o);break;case"input":S.updateWrapper(this),s=S.getNativeProps(this,s),o=S.getNativeProps(this,o);break;case"option":s=A.getNativeProps(this,s),o=A.getNativeProps(this,o);break;case"select":s=T.getNativeProps(this,s),o=T.getNativeProps(this,o);break;case"textarea":E.updateWrapper(this),s=E.getNativeProps(this,s),o=E.getNativeProps(this,o)}i(this,o),this._updateDOMProperties(s,o,e,null),this._updateDOMChildren(s,o,e,a),!F&&this._nodeWithLegacyProperties&&(this._nodeWithLegacyProperties.props=o),"select"===this._tag&&e.getReactMountReady().enqueue(u,this)},_updateDOMProperties:function(e,n,t,a){var s,o,r;for(s in e)if(!n.hasOwnProperty(s)&&e.hasOwnProperty(s))if(s===J){var l=this._previousStyleCopy;for(o in l)l.hasOwnProperty(o)&&(r=r||{},r[o]="");this._previousStyleCopy=null}else W.hasOwnProperty(s)?e[s]&&_(this._rootNodeID,s):(b.properties[s]||b.isCustomAttribute(s))&&(a||(a=P.getNode(this._rootNodeID)),k.deleteValueForProperty(a,s));for(s in n){var i=n[s],p=s===J?this._previousStyleCopy:e[s];if(n.hasOwnProperty(s)&&i!==p)if(s===J)if(i?i=this._previousStyleCopy=N({},i):this._previousStyleCopy=null,p){for(o in p)!p.hasOwnProperty(o)||i&&i.hasOwnProperty(o)||(r=r||{},r[o]="");for(o in i)i.hasOwnProperty(o)&&p[o]!==i[o]&&(r=r||{},r[o]=i[o])}else r=i;else W.hasOwnProperty(s)?i?c(this._rootNodeID,s,i,t):p&&_(this._rootNodeID,s):f(this._tag,n)?(a||(a=P.getNode(this._rootNodeID)),s===G&&(i=null),k.setValueForAttribute(a,s,i)):(b.properties[s]||b.isCustomAttribute(s))&&(a||(a=P.getNode(this._rootNodeID)),null!=i?k.setValueForProperty(a,s,i):k.deleteValueForProperty(a,s))}r&&(a||(a=P.getNode(this._rootNodeID)),y.setValueForStyles(a,r))},_updateDOMChildren:function(e,n,t,a){var s=H[typeof e.children]?e.children:null,o=H[typeof n.children]?n.children:null,r=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,l=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,i=null!=s?null:e.children,c=null!=o?null:n.children,p=null!=s||null!=r,h=null!=o||null!=l;null!=i&&null==c?this.updateChildren(null,t,a):p&&!h&&this.updateTextContent(""),null!=o?s!==o&&this.updateTextContent(""+o):null!=l?r!==l&&this.updateMarkup(""+l):null!=c&&this.updateChildren(c,t,a)},unmountComponent:function(){switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":var e=this._wrapperState.listeners;if(e)for(var n=0;n<e.length;n++)e[n].remove();break;case"input":S.unmountWrapper(this);break;case"html":case"head":case"body":q(!1)}if(this.unmountChildren(),C.deleteAllListeners(this._rootNodeID),v.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._wrapperState=null,this._nodeWithLegacyProperties){var t=this._nodeWithLegacyProperties;t._reactInternalComponent=null,this._nodeWithLegacyProperties=null}},getPublicInstance:function(){if(!this._nodeWithLegacyProperties){var e=P.getNode(this._rootNodeID);e._reactInternalComponent=this,e.getDOMNode=a,e.isMounted=s,e.setState=o,e.replaceState=o,e.forceUpdate=o,e.setProps=r,e.replaceProps=l,e.props=this._currentElement.props,this._nodeWithLegacyProperties=e}return this._nodeWithLegacyProperties}},O.measureMethods(g,"ReactDOMComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent"}),N(g.prototype,g.Mixin,I.Mixin),e.exports=g},function(e,n,t){"use strict";var a=t(28),s=t(91),o=t(95),r={componentDidMount:function(){this.props.autoFocus&&o(s(this))}},l={Mixin:r,focusDOMComponent:function(){o(a.getNode(this._rootNodeID))}};e.exports=l},function(e,n){"use strict";function t(e){try{e.focus()}catch(n){}}e.exports=t},function(e,n,t){"use strict";var a=t(97),s=t(9),o=t(18),r=(t(98),t(100)),l=t(101),i=t(103),c=(t(25),i(function(e){return l(e)})),p=!1,h="cssFloat";if(s.canUseDOM){var d=document.createElement("div").style;try{d.font=""}catch(u){p=!0}void 0===document.documentElement.style.cssFloat&&(h="styleFloat")}var m={createMarkupForStyles:function(e){var n="";for(var t in e)if(e.hasOwnProperty(t)){var a=e[t];null!=a&&(n+=c(t)+":",n+=r(t,a)+";")}return n||null},setValueForStyles:function(e,n){var t=e.style;for(var s in n)if(n.hasOwnProperty(s)){var o=r(s,n[s]);if("float"===s&&(s=h),o)t[s]=o;else{var l=p&&a.shorthandPropertyExpansions[s];if(l)for(var i in l)t[i]="";else t[s]=""}}}};o.measureMethods(m,"CSSPropertyOperations",{setValueForStyles:"setValueForStyles"}),e.exports=m},function(e,n){"use strict";function t(e,n){return e+n.charAt(0).toUpperCase()+n.substring(1)}var a={animationIterationCount:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,stopOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},s=["Webkit","ms","Moz","O"];Object.keys(a).forEach(function(e){s.forEach(function(n){a[t(n,e)]=a[e]})});var o={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},r={isUnitlessNumber:a,shorthandPropertyExpansions:o};e.exports=r},function(e,n,t){"use strict";function a(e){return s(e.replace(o,"ms-"))}var s=t(99),o=/^-ms-/;e.exports=a},function(e,n){"use strict";function t(e){return e.replace(a,function(e,n){return n.toUpperCase()})}var a=/-(.)/g;e.exports=t},function(e,n,t){"use strict";function a(e,n){var t=null==n||"boolean"==typeof n||""===n;if(t)return"";var a=isNaN(n);return a||0===n||o.hasOwnProperty(e)&&o[e]?""+n:("string"==typeof n&&(n=n.trim()),n+"px")}var s=t(97),o=s.isUnitlessNumber;e.exports=a},function(e,n,t){"use strict";function a(e){return s(e).replace(o,"-ms-")}var s=t(102),o=/^ms-/;e.exports=a},function(e,n){"use strict";function t(e){return e.replace(a,"-$1").toLowerCase()}var a=/([A-Z])/g;e.exports=t},function(e,n){"use strict";function t(e){var n={};return function(t){return n.hasOwnProperty(t)||(n[t]=e.call(this,t)),n[t]}}e.exports=t},function(e,n){"use strict";var t={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},a={getNativeProps:function(e,n,a){if(!n.disabled)return n;var s={};for(var o in n)n.hasOwnProperty(o)&&!t[o]&&(s[o]=n[o]);return s}};e.exports=a},function(e,n,t){"use strict";function a(){this._rootNodeID&&d.updateWrapper(this)}function s(e){var n=this._currentElement.props,t=r.executeOnChange(n,e);i.asap(a,this);var s=n.name;if("radio"===n.type&&null!=s){for(var o=l.getNode(this._rootNodeID),c=o;c.parentNode;)c=c.parentNode;for(var d=c.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),u=0;u<d.length;u++){var m=d[u];if(m!==o&&m.form===o.form){var f=l.getID(m);f?void 0:p(!1);var g=h[f];g?void 0:p(!1),i.asap(a,g)}}}return t}var o=t(27),r=t(106),l=t(28),i=t(54),c=t(39),p=t(13),h={},d={getNativeProps:function(e,n,t){var a=r.getValue(n),s=r.getChecked(n),o=c({},n,{defaultChecked:void 0,defaultValue:void 0,value:null!=a?a:e._wrapperState.initialValue,checked:null!=s?s:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return o},mountWrapper:function(e,n){var t=n.defaultValue;e._wrapperState={initialChecked:n.defaultChecked||!1,initialValue:null!=t?t:null,onChange:s.bind(e)}},mountReadyWrapper:function(e){h[e._rootNodeID]=e},unmountWrapper:function(e){delete h[e._rootNodeID]},updateWrapper:function(e){var n=e._currentElement.props,t=n.checked;null!=t&&o.updatePropertyByID(e._rootNodeID,"checked",t||!1);var a=r.getValue(n);null!=a&&o.updatePropertyByID(e._rootNodeID,"value",""+a)}};e.exports=d},function(e,n,t){"use strict";function a(e){null!=e.checkedLink&&null!=e.valueLink?c(!1):void 0}function s(e){a(e),null!=e.value||null!=e.onChange?c(!1):void 0}function o(e){a(e),null!=e.checked||null!=e.onChange?c(!1):void 0}function r(e){if(e){var n=e.getName();if(n)return" Check the render method of `"+n+"`."}return""}var l=t(107),i=t(65),c=t(13),p=(t(25),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),h={value:function(e,n,t){return!e[n]||p[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,n,t){return!e[n]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:l.func},d={},u={checkPropTypes:function(e,n,t){for(var a in h){if(h.hasOwnProperty(a))var s=h[a](n,a,e,i.prop);if(s instanceof Error&&!(s.message in d)){d[s.message]=!0;r(t)}}},getValue:function(e){return e.valueLink?(s(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(o(e),e.checkedLink.value):e.checked},executeOnChange:function(e,n){return e.valueLink?(s(e),e.valueLink.requestChange(n.target.value)):e.checkedLink?(o(e),e.checkedLink.requestChange(n.target.checked)):e.onChange?e.onChange.call(void 0,n):void 0}};e.exports=u},function(e,n,t){"use strict";function a(e){function n(n,t,a,s,o,r){if(s=s||C,r=r||a,null==t[a]){var l=b[o];return n?new Error("Required "+l+" `"+r+"` was not specified in "+("`"+s+"`.")):null}return e(t,a,s,o,r)}var t=n.bind(null,!1);return t.isRequired=n.bind(null,!0),t}function s(e){function n(n,t,a,s,o){var r=n[t],l=f(r);if(l!==e){var i=b[s],c=g(r);return new Error("Invalid "+i+" `"+o+"` of type "+("`"+c+"` supplied to `"+a+"`, expected ")+("`"+e+"`."))}return null}return a(n)}function o(){return a(k.thatReturns(null))}function r(e){function n(n,t,a,s,o){var r=n[t];if(!Array.isArray(r)){var l=b[s],i=f(r);return new Error("Invalid "+l+" `"+o+"` of type "+("`"+i+"` supplied to `"+a+"`, expected an array."))}for(var c=0;c<r.length;c++){var p=e(r,c,a,s,o+"["+c+"]");if(p instanceof Error)return p}return null}return a(n)}function l(){function e(e,n,t,a,s){if(!y.isValidElement(e[n])){var o=b[a];return new Error("Invalid "+o+" `"+s+"` supplied to "+("`"+t+"`, expected a single ReactElement."))}return null}return a(e)}function i(e){function n(n,t,a,s,o){if(!(n[t]instanceof e)){var r=b[s],l=e.name||C,i=w(n[t]);return new Error("Invalid "+r+" `"+o+"` of type "+("`"+i+"` supplied to `"+a+"`, expected ")+("instance of `"+l+"`."))}return null}return a(n)}function c(e){function n(n,t,a,s,o){for(var r=n[t],l=0;l<e.length;l++)if(r===e[l])return null;var i=b[s],c=JSON.stringify(e);return new Error("Invalid "+i+" `"+o+"` of value `"+r+"` "+("supplied to `"+a+"`, expected one of "+c+"."))}return a(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOf, expected an instance of array.")})}function p(e){function n(n,t,a,s,o){var r=n[t],l=f(r);if("object"!==l){var i=b[s];return new Error("Invalid "+i+" `"+o+"` of type "+("`"+l+"` supplied to `"+a+"`, expected an object."))}for(var c in r)if(r.hasOwnProperty(c)){var p=e(r,c,a,s,o+"."+c);if(p instanceof Error)return p}return null}return a(n)}function h(e){function n(n,t,a,s,o){for(var r=0;r<e.length;r++){var l=e[r];if(null==l(n,t,a,s,o))return null}var i=b[s];return new Error("Invalid "+i+" `"+o+"` supplied to "+("`"+a+"`."))}return a(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")})}function d(){function e(e,n,t,a,s){if(!m(e[n])){var o=b[a];return new Error("Invalid "+o+" `"+s+"` supplied to "+("`"+t+"`, expected a ReactNode."))}return null}return a(e)}function u(e){function n(n,t,a,s,o){var r=n[t],l=f(r);if("object"!==l){var i=b[s];return new Error("Invalid "+i+" `"+o+"` of type `"+l+"` "+("supplied to `"+a+"`, expected `object`."))}for(var c in e){var p=e[c];if(p){var h=p(r,c,a,s,o+"."+c);if(h)return h}}return null}return a(n)}function m(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(m);if(null===e||y.isValidElement(e))return!0;var n=j(e);if(!n)return!1;var t,a=n.call(e);if(n!==e.entries){for(;!(t=a.next()).done;)if(!m(t.value))return!1}else for(;!(t=a.next()).done;){var s=t.value;if(s&&!m(s[1]))return!1}return!0;default:return!1}}function f(e){var n=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":n}function g(e){var n=f(e);if("object"===n){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return n}function w(e){return e.constructor&&e.constructor.name?e.constructor.name:"<<anonymous>>"}var y=t(42),b=t(66),k=t(15),j=t(108),C="<<anonymous>>",v={array:s("array"),bool:s("boolean"),func:s("function"),number:s("number"),object:s("object"),string:s("string"),any:o(),arrayOf:r,element:l(),instanceOf:i,node:d(),objectOf:p,oneOf:c,oneOfType:h,shape:u};e.exports=v},function(e,n){"use strict";function t(e){var n=e&&(a&&e[a]||e[s]);return"function"==typeof n?n:void 0}var a="function"==typeof Symbol&&Symbol.iterator,s="@@iterator";e.exports=t},function(e,n,t){"use strict";var a=t(110),s=t(112),o=t(39),r=(t(25),s.valueContextKey),l={mountWrapper:function(e,n,t){var a=t[r],s=null;if(null!=a)if(s=!1,Array.isArray(a)){for(var o=0;o<a.length;o++)if(""+a[o]==""+n.value){s=!0;break}}else s=""+a==""+n.value;e._wrapperState={selected:s}},getNativeProps:function(e,n,t){var s=o({selected:void 0,children:void 0},n);null!=e._wrapperState.selected&&(s.selected=e._wrapperState.selected);var r="";return a.forEach(n.children,function(e){null!=e&&("string"==typeof e||"number"==typeof e)&&(r+=e)}),r&&(s.children=r),s}};e.exports=l},function(e,n,t){"use strict";function a(e){return(""+e).replace(k,"//")}function s(e,n){this.func=e,this.context=n,this.count=0}function o(e,n,t){var a=e.func,s=e.context;a.call(s,n,e.count++)}function r(e,n,t){if(null==e)return e;var a=s.getPooled(n,t);w(e,o,a),s.release(a)}function l(e,n,t,a){this.result=e,this.keyPrefix=n,this.func=t,this.context=a,this.count=0}function i(e,n,t){var s=e.result,o=e.keyPrefix,r=e.func,l=e.context,i=r.call(l,n,e.count++);Array.isArray(i)?c(i,s,t,g.thatReturnsArgument):null!=i&&(f.isValidElement(i)&&(i=f.cloneAndReplaceKey(i,o+(i!==n?a(i.key||"")+"/":"")+t)),s.push(i))}function c(e,n,t,s,o){var r="";null!=t&&(r=a(t)+"/");var c=l.getPooled(n,r,s,o);w(e,i,c),l.release(c)}function p(e,n,t){if(null==e)return e;var a=[];return c(e,a,null,n,t),a}function h(e,n,t){return null}function d(e,n){return w(e,h,null)}function u(e){var n=[];return c(e,n,null,g.thatReturnsArgument),n}var m=t(56),f=t(42),g=t(15),w=t(111),y=m.twoArgumentPooler,b=m.fourArgumentPooler,k=/\/(?!\/)/g;s.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},m.addPoolingTo(s,y),l.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},m.addPoolingTo(l,b);var j={forEach:r,map:p,mapIntoWithKeyPrefixInternal:c,count:d,toArray:u};e.exports=j},function(e,n,t){"use strict";function a(e){return f[e]}function s(e,n){return e&&null!=e.key?r(e.key):n.toString(36)}function o(e){return(""+e).replace(g,a)}function r(e){return"$"+o(e)}function l(e,n,t,a){var o=typeof e;if(("undefined"===o||"boolean"===o)&&(e=null),null===e||"string"===o||"number"===o||c.isValidElement(e))return t(a,e,""===n?u+s(e,0):n),1;var i,p,f=0,g=""===n?u:n+m;if(Array.isArray(e))for(var w=0;w<e.length;w++)i=e[w],p=g+s(i,w),f+=l(i,p,t,a);else{var y=h(e);if(y){var b,k=y.call(e);if(y!==e.entries)for(var j=0;!(b=k.next()).done;)i=b.value,p=g+s(i,j++),f+=l(i,p,t,a);else for(;!(b=k.next()).done;){var C=b.value;C&&(i=C[1],p=g+r(C[0])+m+s(i,0),f+=l(i,p,t,a))}}else if("object"===o){String(e);d(!1)}}return f}function i(e,n,t){return null==e?0:l(e,"",n,t)}var c=(t(5),t(42)),p=t(45),h=t(108),d=t(13),u=(t(25),p.SEPARATOR),m=":",f={"=":"=0",".":"=1",":":"=2"},g=/[=.:]/g;e.exports=i},function(e,n,t){"use strict";function a(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,n=r.getValue(e);null!=n&&s(this,Boolean(e.multiple),n)}}function s(e,n,t){var a,s,o=l.getNode(e._rootNodeID).options;if(n){for(a={},s=0;s<t.length;s++)a[""+t[s]]=!0;for(s=0;s<o.length;s++){var r=a.hasOwnProperty(o[s].value);o[s].selected!==r&&(o[s].selected=r)}}else{for(a=""+t,s=0;s<o.length;s++)if(o[s].value===a)return void(o[s].selected=!0);o.length&&(o[0].selected=!0)}}function o(e){var n=this._currentElement.props,t=r.executeOnChange(n,e);return this._wrapperState.pendingUpdate=!0,i.asap(a,this),t}var r=t(106),l=t(28),i=t(54),c=t(39),p=(t(25),"__ReactDOMSelect_value$"+Math.random().toString(36).slice(2)),h={valueContextKey:p,getNativeProps:function(e,n,t){return c({},n,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,n){var t=r.getValue(n);e._wrapperState={pendingUpdate:!1,initialValue:null!=t?t:n.defaultValue,onChange:o.bind(e),wasMultiple:Boolean(n.multiple)}},processChildContext:function(e,n,t){var a=c({},t);return a[p]=e._wrapperState.initialValue,a},postUpdateWrapper:function(e){var n=e._currentElement.props;e._wrapperState.initialValue=void 0;var t=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(n.multiple);var a=r.getValue(n);null!=a?(e._wrapperState.pendingUpdate=!1,s(e,Boolean(n.multiple),a)):t!==Boolean(n.multiple)&&(null!=n.defaultValue?s(e,Boolean(n.multiple),n.defaultValue):s(e,Boolean(n.multiple),n.multiple?[]:""))}};e.exports=h},function(e,n,t){"use strict";function a(){this._rootNodeID&&p.updateWrapper(this)}function s(e){var n=this._currentElement.props,t=o.executeOnChange(n,e);return l.asap(a,this),t}var o=t(106),r=t(27),l=t(54),i=t(39),c=t(13),p=(t(25),{getNativeProps:function(e,n,t){null!=n.dangerouslySetInnerHTML?c(!1):void 0;var a=i({},n,{defaultValue:void 0,value:void 0,children:e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return a},mountWrapper:function(e,n){var t=n.defaultValue,a=n.children;null!=a&&(null!=t?c(!1):void 0,Array.isArray(a)&&(a.length<=1?void 0:c(!1),a=a[0]),t=""+a),null==t&&(t="");var r=o.getValue(n);e._wrapperState={initialValue:""+(null!=r?r:t),onChange:s.bind(e)}},updateWrapper:function(e){var n=e._currentElement.props,t=o.getValue(n);null!=t&&r.updatePropertyByID(e._rootNodeID,"value",""+t)}});e.exports=p},function(e,n,t){"use strict";function a(e,n,t){g.push({parentID:e,parentNode:null,type:h.INSERT_MARKUP,markupIndex:w.push(n)-1,content:null,fromIndex:null,toIndex:t})}function s(e,n,t){g.push({parentID:e,parentNode:null,
type:h.MOVE_EXISTING,markupIndex:null,content:null,fromIndex:n,toIndex:t})}function o(e,n){g.push({parentID:e,parentNode:null,type:h.REMOVE_NODE,markupIndex:null,content:null,fromIndex:n,toIndex:null})}function r(e,n){g.push({parentID:e,parentNode:null,type:h.SET_MARKUP,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function l(e,n){g.push({parentID:e,parentNode:null,type:h.TEXT_CONTENT,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function i(){g.length&&(p.processChildrenUpdates(g,w),c())}function c(){g.length=0,w.length=0}var p=t(64),h=t(16),d=(t(5),t(50)),u=t(115),m=t(116),f=0,g=[],w=[],y={Mixin:{_reconcilerInstantiateChildren:function(e,n,t){return u.instantiateChildren(e,n,t)},_reconcilerUpdateChildren:function(e,n,t,a){var s;return s=m(n),u.updateChildren(e,s,t,a)},mountChildren:function(e,n,t){var a=this._reconcilerInstantiateChildren(e,n,t);this._renderedChildren=a;var s=[],o=0;for(var r in a)if(a.hasOwnProperty(r)){var l=a[r],i=this._rootNodeID+r,c=d.mountComponent(l,i,n,t);l._mountIndex=o++,s.push(c)}return s},updateTextContent:function(e){f++;var n=!0;try{var t=this._renderedChildren;u.unmountChildren(t);for(var a in t)t.hasOwnProperty(a)&&this._unmountChild(t[a]);this.setTextContent(e),n=!1}finally{f--,f||(n?c():i())}},updateMarkup:function(e){f++;var n=!0;try{var t=this._renderedChildren;u.unmountChildren(t);for(var a in t)t.hasOwnProperty(a)&&this._unmountChildByName(t[a],a);this.setMarkup(e),n=!1}finally{f--,f||(n?c():i())}},updateChildren:function(e,n,t){f++;var a=!0;try{this._updateChildren(e,n,t),a=!1}finally{f--,f||(a?c():i())}},_updateChildren:function(e,n,t){var a=this._renderedChildren,s=this._reconcilerUpdateChildren(a,e,n,t);if(this._renderedChildren=s,s||a){var o,r=0,l=0;for(o in s)if(s.hasOwnProperty(o)){var i=a&&a[o],c=s[o];i===c?(this.moveChild(i,l,r),r=Math.max(i._mountIndex,r),i._mountIndex=l):(i&&(r=Math.max(i._mountIndex,r),this._unmountChild(i)),this._mountChildByNameAtIndex(c,o,l,n,t)),l++}for(o in a)!a.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||this._unmountChild(a[o])}},unmountChildren:function(){var e=this._renderedChildren;u.unmountChildren(e),this._renderedChildren=null},moveChild:function(e,n,t){e._mountIndex<t&&s(this._rootNodeID,e._mountIndex,n)},createChild:function(e,n){a(this._rootNodeID,n,e._mountIndex)},removeChild:function(e){o(this._rootNodeID,e._mountIndex)},setTextContent:function(e){l(this._rootNodeID,e)},setMarkup:function(e){r(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,n,t,a,s){var o=this._rootNodeID+n,r=d.mountComponent(e,o,a,s);e._mountIndex=t,this.createChild(e,r)},_unmountChild:function(e){this.removeChild(e),e._mountIndex=null}}};e.exports=y},function(e,n,t){"use strict";function a(e,n,t){var a=void 0===e[t];null!=n&&a&&(e[t]=o(n,null))}var s=t(50),o=t(62),r=t(67),l=t(111),i=(t(25),{instantiateChildren:function(e,n,t){if(null==e)return null;var s={};return l(e,a,s),s},updateChildren:function(e,n,t,a){if(!n&&!e)return null;var l;for(l in n)if(n.hasOwnProperty(l)){var i=e&&e[l],c=i&&i._currentElement,p=n[l];if(null!=i&&r(c,p))s.receiveComponent(i,p,t,a),n[l]=i;else{i&&s.unmountComponent(i,l);var h=o(p,null);n[l]=h}}for(l in e)!e.hasOwnProperty(l)||n&&n.hasOwnProperty(l)||s.unmountComponent(e[l]);return n},unmountChildren:function(e){for(var n in e)if(e.hasOwnProperty(n)){var t=e[n];s.unmountComponent(t)}}});e.exports=i},function(e,n,t){"use strict";function a(e,n,t){var a=e,s=void 0===a[t];s&&null!=n&&(a[t]=n)}function s(e){if(null==e)return e;var n={};return o(e,a,n),n}var o=t(111);t(25);e.exports=s},function(e,n){"use strict";function t(e,n){if(e===n)return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),s=Object.keys(n);if(t.length!==s.length)return!1;for(var o=a.bind(n),r=0;r<t.length;r++)if(!o(t[r])||e[t[r]]!==n[t[r]])return!1;return!0}var a=Object.prototype.hasOwnProperty;e.exports=t},function(e,n,t){"use strict";function a(e){var n=d.getID(e),t=h.getReactRootIDFromNodeID(n),a=d.findReactContainerForID(t),s=d.getFirstReactDOM(a);return s}function s(e,n){this.topLevelType=e,this.nativeEvent=n,this.ancestors=[]}function o(e){r(e)}function r(e){for(var n=d.getFirstReactDOM(f(e.nativeEvent))||window,t=n;t;)e.ancestors.push(t),t=a(t);for(var s=0;s<e.ancestors.length;s++){n=e.ancestors[s];var o=d.getID(n)||"";w._handleTopLevel(e.topLevelType,n,o,e.nativeEvent,f(e.nativeEvent))}}function l(e){var n=g(window);e(n)}var i=t(119),c=t(9),p=t(56),h=t(45),d=t(28),u=t(54),m=t(39),f=t(81),g=t(120);m(s.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),p.addPoolingTo(s,p.twoArgumentPooler);var w={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:c.canUseDOM?window:null,setHandleTopLevel:function(e){w._handleTopLevel=e},setEnabled:function(e){w._enabled=!!e},isEnabled:function(){return w._enabled},trapBubbledEvent:function(e,n,t){var a=t;return a?i.listen(a,n,w.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,n,t){var a=t;return a?i.capture(a,n,w.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var n=l.bind(null,e);i.listen(window,"scroll",n)},dispatchEvent:function(e,n){if(w._enabled){var t=s.getPooled(e,n);try{u.batchedUpdates(o,t)}finally{s.release(t)}}}};e.exports=w},function(e,n,t){"use strict";var a=t(15),s={listen:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!1),{remove:function(){e.removeEventListener(n,t,!1)}}):e.attachEvent?(e.attachEvent("on"+n,t),{remove:function(){e.detachEvent("on"+n,t)}}):void 0},capture:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!0),{remove:function(){e.removeEventListener(n,t,!0)}}):{remove:a}},registerDefault:function(){}};e.exports=s},function(e,n){"use strict";function t(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}e.exports=t},function(e,n,t){"use strict";var a=t(23),s=t(31),o=t(64),r=t(122),l=t(68),i=t(29),c=t(69),p=t(18),h=t(46),d=t(54),u={Component:o.injection,Class:r.injection,DOMProperty:a.injection,EmptyComponent:l.injection,EventPluginHub:s.injection,EventEmitter:i.injection,NativeComponent:c.injection,Perf:p.injection,RootIndex:h.injection,Updates:d.injection};e.exports=u},function(e,n,t){"use strict";function a(e,n){var t=C.hasOwnProperty(n)?C[n]:null;x.hasOwnProperty(n)&&(t!==k.OVERRIDE_BASE?g(!1):void 0),e.hasOwnProperty(n)&&(t!==k.DEFINE_MANY&&t!==k.DEFINE_MANY_MERGED?g(!1):void 0)}function s(e,n){if(n){"function"==typeof n?g(!1):void 0,d.isValidElement(n)?g(!1):void 0;var t=e.prototype;n.hasOwnProperty(b)&&v.mixins(e,n.mixins);for(var s in n)if(n.hasOwnProperty(s)&&s!==b){var o=n[s];if(a(t,s),v.hasOwnProperty(s))v[s](e,o);else{var r=C.hasOwnProperty(s),c=t.hasOwnProperty(s),p="function"==typeof o,h=p&&!r&&!c&&n.autobind!==!1;if(h)t.__reactAutoBindMap||(t.__reactAutoBindMap={}),t.__reactAutoBindMap[s]=o,t[s]=o;else if(c){var u=C[s];!r||u!==k.DEFINE_MANY_MERGED&&u!==k.DEFINE_MANY?g(!1):void 0,u===k.DEFINE_MANY_MERGED?t[s]=l(t[s],o):u===k.DEFINE_MANY&&(t[s]=i(t[s],o))}else t[s]=o}}}}function o(e,n){if(n)for(var t in n){var a=n[t];if(n.hasOwnProperty(t)){var s=t in v;s?g(!1):void 0;var o=t in e;o?g(!1):void 0,e[t]=a}}}function r(e,n){e&&n&&"object"==typeof e&&"object"==typeof n?void 0:g(!1);for(var t in n)n.hasOwnProperty(t)&&(void 0!==e[t]?g(!1):void 0,e[t]=n[t]);return e}function l(e,n){return function(){var t=e.apply(this,arguments),a=n.apply(this,arguments);if(null==t)return a;if(null==a)return t;var s={};return r(s,t),r(s,a),s}}function i(e,n){return function(){e.apply(this,arguments),n.apply(this,arguments)}}function c(e,n){var t=n.bind(e);return t}function p(e){for(var n in e.__reactAutoBindMap)if(e.__reactAutoBindMap.hasOwnProperty(n)){var t=e.__reactAutoBindMap[n];e[n]=c(e,t)}}var h=t(123),d=t(42),u=(t(65),t(66),t(124)),m=t(39),f=t(58),g=t(13),w=t(17),y=t(79),b=(t(25),y({mixins:null})),k=w({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),j=[],C={mixins:k.DEFINE_MANY,statics:k.DEFINE_MANY,propTypes:k.DEFINE_MANY,contextTypes:k.DEFINE_MANY,childContextTypes:k.DEFINE_MANY,getDefaultProps:k.DEFINE_MANY_MERGED,getInitialState:k.DEFINE_MANY_MERGED,getChildContext:k.DEFINE_MANY_MERGED,render:k.DEFINE_ONCE,componentWillMount:k.DEFINE_MANY,componentDidMount:k.DEFINE_MANY,componentWillReceiveProps:k.DEFINE_MANY,shouldComponentUpdate:k.DEFINE_ONCE,componentWillUpdate:k.DEFINE_MANY,componentDidUpdate:k.DEFINE_MANY,componentWillUnmount:k.DEFINE_MANY,updateComponent:k.OVERRIDE_BASE},v={displayName:function(e,n){e.displayName=n},mixins:function(e,n){if(n)for(var t=0;t<n.length;t++)s(e,n[t])},childContextTypes:function(e,n){e.childContextTypes=m({},e.childContextTypes,n)},contextTypes:function(e,n){e.contextTypes=m({},e.contextTypes,n)},getDefaultProps:function(e,n){e.getDefaultProps?e.getDefaultProps=l(e.getDefaultProps,n):e.getDefaultProps=n},propTypes:function(e,n){e.propTypes=m({},e.propTypes,n)},statics:function(e,n){o(e,n)},autobind:function(){}},x={replaceState:function(e,n){this.updater.enqueueReplaceState(this,e),n&&this.updater.enqueueCallback(this,n)},isMounted:function(){return this.updater.isMounted(this)},setProps:function(e,n){this.updater.enqueueSetProps(this,e),n&&this.updater.enqueueCallback(this,n)},replaceProps:function(e,n){this.updater.enqueueReplaceProps(this,e),n&&this.updater.enqueueCallback(this,n)}},S=function(){};m(S.prototype,h.prototype,x);var A={createClass:function(e){var n=function(e,n,t){this.__reactAutoBindMap&&p(this),this.props=e,this.context=n,this.refs=f,this.updater=t||u,this.state=null;var a=this.getInitialState?this.getInitialState():null;"object"!=typeof a||Array.isArray(a)?g(!1):void 0,this.state=a};n.prototype=new S,n.prototype.constructor=n,j.forEach(s.bind(null,n)),s(n,e),n.getDefaultProps&&(n.defaultProps=n.getDefaultProps()),n.prototype.render?void 0:g(!1);for(var t in C)n.prototype[t]||(n.prototype[t]=null);return n},injection:{injectMixin:function(e){j.push(e)}}};e.exports=A},function(e,n,t){"use strict";function a(e,n,t){this.props=e,this.context=n,this.refs=o,this.updater=t||s}var s=t(124),o=(t(43),t(58)),r=t(13);t(25);a.prototype.isReactComponent={},a.prototype.setState=function(e,n){"object"!=typeof e&&"function"!=typeof e&&null!=e?r(!1):void 0,this.updater.enqueueSetState(this,e),n&&this.updater.enqueueCallback(this,n)},a.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e)};e.exports=a},function(e,n,t){"use strict";function a(e,n){}var s=(t(25),{isMounted:function(e){return!1},enqueueCallback:function(e,n){},enqueueForceUpdate:function(e){a(e,"forceUpdate")},enqueueReplaceState:function(e,n){a(e,"replaceState")},enqueueSetState:function(e,n){a(e,"setState")},enqueueSetProps:function(e,n){a(e,"setProps")},enqueueReplaceProps:function(e,n){a(e,"replaceProps")}});e.exports=s},function(e,n,t){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=s.getPooled(null),this.useCreateElement=!e&&l.useCreateElement}var s=t(55),o=t(56),r=t(29),l=t(41),i=t(126),c=t(57),p=t(39),h={initialize:i.getSelectionInformation,close:i.restoreSelection},d={initialize:function(){var e=r.isEnabled();return r.setEnabled(!1),e},close:function(e){r.setEnabled(e)}},u={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},m=[h,d,u],f={getTransactionWrappers:function(){return m},getReactMountReady:function(){return this.reactMountReady},destructor:function(){s.release(this.reactMountReady),this.reactMountReady=null}};p(a.prototype,c.Mixin,f),o.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";function a(e){return o(document.documentElement,e)}var s=t(127),o=t(59),r=t(95),l=t(129),i={hasSelectionCapabilities:function(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&"text"===e.type||"textarea"===n||"true"===e.contentEditable)},getSelectionInformation:function(){var e=l();return{focusedElem:e,selectionRange:i.hasSelectionCapabilities(e)?i.getSelection(e):null}},restoreSelection:function(e){var n=l(),t=e.focusedElem,s=e.selectionRange;n!==t&&a(t)&&(i.hasSelectionCapabilities(t)&&i.setSelection(t,s),r(t))},getSelection:function(e){var n;if("selectionStart"in e)n={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var t=document.selection.createRange();t.parentElement()===e&&(n={start:-t.moveStart("character",-e.value.length),end:-t.moveEnd("character",-e.value.length)})}else n=s.getOffsets(e);return n||{start:0,end:0}},setSelection:function(e,n){var t=n.start,a=n.end;if("undefined"==typeof a&&(a=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(a,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var o=e.createTextRange();o.collapse(!0),o.moveStart("character",t),o.moveEnd("character",a-t),o.select()}else s.setOffsets(e,n)}};e.exports=i},function(e,n,t){"use strict";function a(e,n,t,a){return e===t&&n===a}function s(e){var n=document.selection,t=n.createRange(),a=t.text.length,s=t.duplicate();s.moveToElementText(e),s.setEndPoint("EndToStart",t);var o=s.text.length,r=o+a;return{start:o,end:r}}function o(e){var n=window.getSelection&&window.getSelection();if(!n||0===n.rangeCount)return null;var t=n.anchorNode,s=n.anchorOffset,o=n.focusNode,r=n.focusOffset,l=n.getRangeAt(0);try{l.startContainer.nodeType,l.endContainer.nodeType}catch(i){return null}var c=a(n.anchorNode,n.anchorOffset,n.focusNode,n.focusOffset),p=c?0:l.toString().length,h=l.cloneRange();h.selectNodeContents(e),h.setEnd(l.startContainer,l.startOffset);var d=a(h.startContainer,h.startOffset,h.endContainer,h.endOffset),u=d?0:h.toString().length,m=u+p,f=document.createRange();f.setStart(t,s),f.setEnd(o,r);var g=f.collapsed;return{start:g?m:u,end:g?u:m}}function r(e,n){var t,a,s=document.selection.createRange().duplicate();"undefined"==typeof n.end?(t=n.start,a=t):n.start>n.end?(t=n.end,a=n.start):(t=n.start,a=n.end),s.moveToElementText(e),s.moveStart("character",t),s.setEndPoint("EndToStart",s),s.moveEnd("character",a-t),s.select()}function l(e,n){if(window.getSelection){var t=window.getSelection(),a=e[p()].length,s=Math.min(n.start,a),o="undefined"==typeof n.end?s:Math.min(n.end,a);if(!t.extend&&s>o){var r=o;o=s,s=r}var l=c(e,s),i=c(e,o);if(l&&i){var h=document.createRange();h.setStart(l.node,l.offset),t.removeAllRanges(),s>o?(t.addRange(h),t.extend(i.node,i.offset)):(h.setEnd(i.node,i.offset),t.addRange(h))}}}var i=t(9),c=t(128),p=t(75),h=i.canUseDOM&&"selection"in document&&!("getSelection"in window),d={getOffsets:h?s:o,setOffsets:h?r:l};e.exports=d},function(e,n){"use strict";function t(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function a(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function s(e,n){for(var s=t(e),o=0,r=0;s;){if(3===s.nodeType){if(r=o+s.textContent.length,n>=o&&r>=n)return{node:s,offset:n-o};o=r}s=t(a(s))}}e.exports=s},function(e,n){"use strict";function t(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}e.exports=t},function(e,n,t){"use strict";function a(e){if("selectionStart"in e&&i.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var n=window.getSelection();return{anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}}if(document.selection){var t=document.selection.createRange();return{parentElement:t.parentElement(),text:t.text,top:t.boundingTop,left:t.boundingLeft}}}function s(e,n){if(k||null==w||w!==p())return null;var t=a(w);if(!b||!u(b,t)){b=t;var s=c.getPooled(g.select,y,e,n);return s.type="select",s.target=w,r.accumulateTwoPhaseDispatches(s),s}return null}var o=t(30),r=t(73),l=t(9),i=t(126),c=t(77),p=t(129),h=t(82),d=t(79),u=t(117),m=o.topLevelTypes,f=l.canUseDOM&&"documentMode"in document&&document.documentMode<=11,g={select:{phasedRegistrationNames:{bubbled:d({onSelect:null}),captured:d({onSelectCapture:null})},dependencies:[m.topBlur,m.topContextMenu,m.topFocus,m.topKeyDown,m.topMouseDown,m.topMouseUp,m.topSelectionChange]}},w=null,y=null,b=null,k=!1,j=!1,C=d({onSelect:null}),v={eventTypes:g,extractEvents:function(e,n,t,a,o){if(!j)return null;switch(e){case m.topFocus:(h(n)||"true"===n.contentEditable)&&(w=n,y=t,b=null);break;case m.topBlur:w=null,y=null,b=null;break;case m.topMouseDown:k=!0;break;case m.topContextMenu:case m.topMouseUp:return k=!1,s(a,o);case m.topSelectionChange:if(f)break;case m.topKeyDown:case m.topKeyUp:return s(a,o)}return null},didPutListener:function(e,n,t){n===C&&(j=!0)}};e.exports=v},function(e,n){"use strict";var t=Math.pow(2,53),a={createReactRootIndex:function(){return Math.ceil(Math.random()*t)}};e.exports=a},function(e,n,t){"use strict";var a=t(30),s=t(119),o=t(73),r=t(28),l=t(133),i=t(77),c=t(134),p=t(135),h=t(86),d=t(138),u=t(139),m=t(87),f=t(140),g=t(15),w=t(136),y=t(13),b=t(79),k=a.topLevelTypes,j={abort:{phasedRegistrationNames:{bubbled:b({onAbort:!0}),captured:b({onAbortCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:b({onBlur:!0}),captured:b({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:b({onCanPlay:!0}),captured:b({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:b({onCanPlayThrough:!0}),captured:b({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:b({onClick:!0}),captured:b({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:b({onContextMenu:!0}),captured:b({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:b({onCopy:!0}),captured:b({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:b({onCut:!0}),captured:b({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:b({onDoubleClick:!0}),captured:b({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:b({onDrag:!0}),captured:b({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:b({onDragEnd:!0}),captured:b({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:b({onDragEnter:!0}),captured:b({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:b({onDragExit:!0}),captured:b({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:b({onDragLeave:!0}),captured:b({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:b({onDragOver:!0}),captured:b({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:b({onDragStart:!0}),captured:b({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:b({onDrop:!0}),captured:b({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:b({onDurationChange:!0}),captured:b({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:b({onEmptied:!0}),captured:b({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:b({onEncrypted:!0}),captured:b({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:b({onEnded:!0}),captured:b({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:b({onError:!0}),captured:b({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:b({onFocus:!0}),captured:b({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:b({onInput:!0}),captured:b({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:b({onKeyDown:!0}),captured:b({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:b({onKeyPress:!0}),captured:b({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:b({onKeyUp:!0}),captured:b({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:b({onLoad:!0}),captured:b({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:b({onLoadedData:!0}),captured:b({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:b({onLoadedMetadata:!0}),captured:b({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:b({onLoadStart:!0}),captured:b({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:b({onMouseDown:!0}),captured:b({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:b({onMouseMove:!0}),captured:b({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:b({onMouseOut:!0}),captured:b({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:b({onMouseOver:!0}),captured:b({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:b({onMouseUp:!0}),captured:b({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:b({onPaste:!0}),captured:b({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:b({onPause:!0}),captured:b({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:b({onPlay:!0}),captured:b({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:b({onPlaying:!0}),captured:b({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:b({onProgress:!0}),captured:b({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:b({onRateChange:!0}),captured:b({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:b({onReset:!0}),captured:b({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:b({onScroll:!0}),captured:b({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:b({onSeeked:!0}),captured:b({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:b({onSeeking:!0}),captured:b({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:b({onStalled:!0}),captured:b({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:b({onSubmit:!0}),captured:b({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:b({onSuspend:!0}),captured:b({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:b({onTimeUpdate:!0}),captured:b({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:b({onTouchCancel:!0}),captured:b({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:b({onTouchEnd:!0}),captured:b({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:b({onTouchMove:!0}),captured:b({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:b({onTouchStart:!0}),captured:b({onTouchStartCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:b({onVolumeChange:!0}),captured:b({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:b({onWaiting:!0}),captured:b({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:b({onWheel:!0}),captured:b({onWheelCapture:!0})}}},C={topAbort:j.abort,topBlur:j.blur,topCanPlay:j.canPlay,topCanPlayThrough:j.canPlayThrough,topClick:j.click,topContextMenu:j.contextMenu,topCopy:j.copy,topCut:j.cut,topDoubleClick:j.doubleClick,topDrag:j.drag,topDragEnd:j.dragEnd,topDragEnter:j.dragEnter,topDragExit:j.dragExit,topDragLeave:j.dragLeave,topDragOver:j.dragOver,topDragStart:j.dragStart,topDrop:j.drop,topDurationChange:j.durationChange,topEmptied:j.emptied,topEncrypted:j.encrypted,topEnded:j.ended,topError:j.error,topFocus:j.focus,topInput:j.input,topKeyDown:j.keyDown,topKeyPress:j.keyPress,topKeyUp:j.keyUp,topLoad:j.load,topLoadedData:j.loadedData,topLoadedMetadata:j.loadedMetadata,topLoadStart:j.loadStart,topMouseDown:j.mouseDown,topMouseMove:j.mouseMove,topMouseOut:j.mouseOut,topMouseOver:j.mouseOver,topMouseUp:j.mouseUp,topPaste:j.paste,topPause:j.pause,topPlay:j.play,topPlaying:j.playing,topProgress:j.progress,topRateChange:j.rateChange,topReset:j.reset,topScroll:j.scroll,topSeeked:j.seeked,topSeeking:j.seeking,topStalled:j.stalled,topSubmit:j.submit,topSuspend:j.suspend,topTimeUpdate:j.timeUpdate,topTouchCancel:j.touchCancel,topTouchEnd:j.touchEnd,topTouchMove:j.touchMove,topTouchStart:j.touchStart,topVolumeChange:j.volumeChange,topWaiting:j.waiting,topWheel:j.wheel};for(var v in C)C[v].dependencies=[v];var x=b({onClick:null}),S={},A={eventTypes:j,extractEvents:function(e,n,t,a,s){var r=C[e];if(!r)return null;var g;switch(e){case k.topAbort:case k.topCanPlay:case k.topCanPlayThrough:case k.topDurationChange:case k.topEmptied:case k.topEncrypted:case k.topEnded:case k.topError:case k.topInput:case k.topLoad:case k.topLoadedData:case k.topLoadedMetadata:case k.topLoadStart:case k.topPause:case k.topPlay:case k.topPlaying:case k.topProgress:case k.topRateChange:case k.topReset:case k.topSeeked:case k.topSeeking:case k.topStalled:case k.topSubmit:case k.topSuspend:case k.topTimeUpdate:case k.topVolumeChange:case k.topWaiting:g=i;break;case k.topKeyPress:if(0===w(a))return null;case k.topKeyDown:case k.topKeyUp:g=p;break;case k.topBlur:case k.topFocus:g=c;break;case k.topClick:if(2===a.button)return null;case k.topContextMenu:case k.topDoubleClick:case k.topMouseDown:case k.topMouseMove:case k.topMouseOut:case k.topMouseOver:case k.topMouseUp:g=h;break;case k.topDrag:case k.topDragEnd:case k.topDragEnter:case k.topDragExit:case k.topDragLeave:case k.topDragOver:case k.topDragStart:case k.topDrop:g=d;break;case k.topTouchCancel:case k.topTouchEnd:case k.topTouchMove:case k.topTouchStart:g=u;break;case k.topScroll:g=m;break;case k.topWheel:g=f;break;case k.topCopy:case k.topCut:case k.topPaste:g=l}g?void 0:y(!1);var b=g.getPooled(r,t,a,s);return o.accumulateTwoPhaseDispatches(b),b},didPutListener:function(e,n,t){if(n===x){var a=r.getNode(e);S[e]||(S[e]=s.listen(a,"click",g))}},willDeleteListener:function(e,n){n===x&&(S[e].remove(),delete S[e])}};e.exports=A},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o={relatedTarget:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(136),r=t(137),l=t(88),i={key:r,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:l,charCode:function(e){return"keypress"===e.type?o(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?o(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};s.augmentClass(a,i),e.exports=a},function(e,n){"use strict";function t(e){var n,t=e.keyCode;return"charCode"in e?(n=e.charCode,0===n&&13===t&&(n=13)):n=t,n>=32||13===n?n:0}e.exports=t},function(e,n,t){"use strict";function a(e){if(e.key){var n=o[e.key]||e.key;if("Unidentified"!==n)return n}if("keypress"===e.type){var t=s(e);return 13===t?"Enter":String.fromCharCode(t)}return"keydown"===e.type||"keyup"===e.type?r[e.keyCode]||"Unidentified":""}var s=t(136),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},r={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(86),o={dataTransfer:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(88),r={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};s.augmentClass(a,r),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(86),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";var a=t(23),s=a.injection.MUST_USE_ATTRIBUTE,o={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},r={Properties:{clipPath:s,cx:s,cy:s,d:s,dx:s,dy:s,fill:s,fillOpacity:s,fontFamily:s,fontSize:s,fx:s,fy:s,gradientTransform:s,gradientUnits:s,markerEnd:s,markerMid:s,markerStart:s,offset:s,opacity:s,patternContentUnits:s,patternUnits:s,points:s,preserveAspectRatio:s,r:s,rx:s,ry:s,spreadMethod:s,stopColor:s,stopOpacity:s,stroke:s,strokeDasharray:s,strokeLinecap:s,strokeOpacity:s,strokeWidth:s,textAnchor:s,transform:s,version:s,viewBox:s,x1:s,x2:s,x:s,xlinkActuate:s,xlinkArcrole:s,xlinkHref:s,xlinkRole:s,xlinkShow:s,xlinkTitle:s,xlinkType:s,xmlBase:s,xmlLang:s,xmlSpace:s,y1:s,y2:s,y:s},DOMAttributeNamespaces:{xlinkActuate:o.xlink,xlinkArcrole:o.xlink,xlinkHref:o.xlink,xlinkRole:o.xlink,xlinkShow:o.xlink,xlinkTitle:o.xlink,xlinkType:o.xlink,xmlBase:o.xml,xmlLang:o.xml,xmlSpace:o.xml},DOMAttributeNames:{clipPath:"clip-path",fillOpacity:"fill-opacity",fontFamily:"font-family",fontSize:"font-size",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",patternContentUnits:"patternContentUnits",patternUnits:"patternUnits",preserveAspectRatio:"preserveAspectRatio",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeDasharray:"stroke-dasharray",strokeLinecap:"stroke-linecap",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",textAnchor:"text-anchor",viewBox:"viewBox",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlLang:"xml:lang",xmlSpace:"xml:space"}};e.exports=r},function(e,n){"use strict";e.exports="0.14.7"},function(e,n,t){"use strict";var a=t(28);e.exports=a.renderSubtreeIntoContainer},function(e,n,t){"use strict";var a=t(71),s=t(145),o=t(142);a.inject();var r={renderToString:s.renderToString,renderToStaticMarkup:s.renderToStaticMarkup,version:o};e.exports=r},function(e,n,t){"use strict";function a(e){r.isValidElement(e)?void 0:m(!1);var n;try{h.injection.injectBatchingStrategy(c);var t=l.createReactRootID();return n=p.getPooled(!1),n.perform(function(){var a=u(e,null),s=a.mountComponent(t,n,d);return i.addChecksumToMarkup(s)},null)}finally{p.release(n),h.injection.injectBatchingStrategy(o)}}function s(e){r.isValidElement(e)?void 0:m(!1);var n;try{h.injection.injectBatchingStrategy(c);var t=l.createReactRootID();return n=p.getPooled(!0),n.perform(function(){var a=u(e,null);return a.mountComponent(t,n,d)},null)}finally{p.release(n),h.injection.injectBatchingStrategy(o)}}var o=t(92),r=t(42),l=t(45),i=t(48),c=t(146),p=t(147),h=t(54),d=t(58),u=t(62),m=t(13);e.exports={renderToString:a,renderToStaticMarkup:s}},function(e,n){"use strict";var t={isBatchingUpdates:!1,batchedUpdates:function(e){}};e.exports=t},function(e,n,t){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.reactMountReady=o.getPooled(null),this.useCreateElement=!1}var s=t(56),o=t(55),r=t(57),l=t(39),i=t(15),c={initialize:function(){this.reactMountReady.reset()},close:i},p=[c],h={getTransactionWrappers:function(){return p},getReactMountReady:function(){return this.reactMountReady},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null}};l(a.prototype,r.Mixin,h),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";var a=t(110),s=t(123),o=t(122),r=t(149),l=t(42),i=(t(150),t(107)),c=t(142),p=t(39),h=t(152),d=l.createElement,u=l.createFactory,m=l.cloneElement,f={Children:{map:a.map,forEach:a.forEach,count:a.count,toArray:a.toArray,only:h},Component:s,createElement:d,cloneElement:m,isValidElement:l.isValidElement,PropTypes:i,
createClass:o.createClass,createFactory:u,createMixin:function(e){return e},DOM:r,version:c,__spread:p};e.exports=f},function(e,n,t){"use strict";function a(e){return s.createFactory(e)}var s=t(42),o=(t(150),t(151)),r=o({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul","var":"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},a);e.exports=r},function(e,n,t){"use strict";function a(){if(h.current){var e=h.current.getName();if(e)return" Check the render method of `"+e+"`."}return""}function s(e,n){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=!0;o("uniqueKey",e,n)}}function o(e,n,t){var s=a();if(!s){var o="string"==typeof t?t:t.displayName||t.name;o&&(s=" Check the top-level render call using <"+o+">.")}var r=m[e]||(m[e]={});if(r[s])return null;r[s]=!0;var l={parentOrOwner:s,url:" See https://fb.me/react-warning-keys for more information.",childOwner:null};return n&&n._owner&&n._owner!==h.current&&(l.childOwner=" It was passed a child from "+n._owner.getName()+"."),l}function r(e,n){if("object"==typeof e)if(Array.isArray(e))for(var t=0;t<e.length;t++){var a=e[t];c.isValidElement(a)&&s(a,n)}else if(c.isValidElement(e))e._store&&(e._store.validated=!0);else if(e){var o=d(e);if(o&&o!==e.entries)for(var r,l=o.call(e);!(r=l.next()).done;)c.isValidElement(r.value)&&s(r.value,n)}}function l(e,n,t,s){for(var o in n)if(n.hasOwnProperty(o)){var r;try{"function"!=typeof n[o]?u(!1):void 0,r=n[o](t,o,e,s)}catch(l){r=l}if(r instanceof Error&&!(r.message in f)){f[r.message]=!0;a()}}}function i(e){var n=e.type;if("function"==typeof n){var t=n.displayName||n.name;n.propTypes&&l(t,n.propTypes,e.props,p.prop),"function"==typeof n.getDefaultProps}}var c=t(42),p=t(65),h=(t(66),t(5)),d=(t(43),t(108)),u=t(13),m=(t(25),{}),f={},g={createElement:function(e,n,t){var a="string"==typeof e||"function"==typeof e,s=c.createElement.apply(this,arguments);if(null==s)return s;if(a)for(var o=2;o<arguments.length;o++)r(arguments[o],e);return i(s),s},createFactory:function(e){var n=g.createElement.bind(null,e);return n.type=e,n},cloneElement:function(e,n,t){for(var a=c.cloneElement.apply(this,arguments),s=2;s<arguments.length;s++)r(arguments[s],a.type);return i(a),a}};e.exports=g},function(e,n){"use strict";function t(e,n,t){if(!e)return null;var s={};for(var o in e)a.call(e,o)&&(s[o]=n.call(t,e[o],o,e));return s}var a=Object.prototype.hasOwnProperty;e.exports=t},function(e,n,t){"use strict";function a(e){return s.isValidElement(e)?void 0:o(!1),e}var s=t(42),o=t(13);e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a,s){return s}t(39),t(25);e.exports=a},function(e,n,t){"use strict";e.exports=t(4)},function(e,n,t){"use strict";n.DefaultRoute=t(156),n.Link=t(171),n.NotFoundRoute=t(172),n.Redirect=t(173),n.Route=t(170),n.ActiveHandler=t(168),n.RouteHandler=n.ActiveHandler,n.HashLocation=t(174),n.HistoryLocation=t(178),n.RefreshLocation=t(179),n.StaticLocation=t(180),n.TestLocation=t(181),n.ImitateBrowserBehavior=t(182),n.ScrollToTopBehavior=t(183),n.History=t(176),n.Navigation=t(184),n.State=t(185),n.createRoute=t(158).createRoute,n.createDefaultRoute=t(158).createDefaultRoute,n.createNotFoundRoute=t(158).createNotFoundRoute,n.createRedirect=t(158).createRedirect,n.createRoutesFromReactChildren=t(186),n.create=t(187),n.run=t(196)},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},r=t(157),l=t(168),i=t(170),c=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(i);c.propTypes={name:r.string,path:r.falsy,children:r.falsy,handler:r.func.isRequired},c.defaultProps={handler:l},e.exports=c},function(e,n,t){"use strict";var a=t(39),s=t(2).PropTypes,o=t(158),r=a({},s,{falsy:function(e,n,t){return e[n]?new Error("<"+t+'> should not have a "'+n+'" prop'):void 0},route:s.instanceOf(o),router:s.func});e.exports=r},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var s,o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(39),l=t(159),i=t(160),c=t(161),p=function(){function e(n,t,s,o,r,l,i,p){a(this,e),this.name=n,this.path=t,this.paramNames=c.extractParamNames(this.path),this.ignoreScrollBehavior=!!s,this.isDefault=!!o,this.isNotFound=!!r,this.onEnter=l,this.onLeave=i,this.handler=p}return o(e,null,[{key:"createRoute",value:function(n,t){n=n||{},"string"==typeof n&&(n={path:n});var a=s;a?i(null==n.parentRoute||n.parentRoute===a,"You should not use parentRoute with createRoute inside another route's child callback; it is ignored"):a=n.parentRoute;var o=n.name,r=n.path||o;!r||n.isDefault||n.isNotFound?r=a?a.path:"/":c.isAbsolute(r)?a&&l(r===a.path||0===a.paramNames.length,'You cannot nest path "%s" inside "%s"; the parent requires URL parameters',r,a.path):r=a?c.join(a.path,r):"/"+r,n.isNotFound&&!/\*$/.test(r)&&(r+="*");var p=new e(o,r,n.ignoreScrollBehavior,n.isDefault,n.isNotFound,n.onEnter,n.onLeave,n.handler);if(a&&(p.isDefault?(l(null==a.defaultRoute,"%s may not have more than one default route",a),a.defaultRoute=p):p.isNotFound&&(l(null==a.notFoundRoute,"%s may not have more than one not found route",a),a.notFoundRoute=p),a.appendChild(p)),"function"==typeof t){var h=s;s=p,t.call(p,p),s=h}return p}},{key:"createDefaultRoute",value:function(n){return e.createRoute(r({},n,{isDefault:!0}))}},{key:"createNotFoundRoute",value:function(n){return e.createRoute(r({},n,{isNotFound:!0}))}},{key:"createRedirect",value:function(n){return e.createRoute(r({},n,{path:n.path||n.from||"*",onEnter:function(e,t,a){e.redirect(n.to,n.params||t,n.query||a)}}))}}]),o(e,[{key:"appendChild",value:function(n){l(n instanceof e,"route.appendChild must use a valid Route"),this.childRoutes||(this.childRoutes=[]),this.childRoutes.push(n)}},{key:"toString",value:function(){var e="<Route";return this.name&&(e+=' name="'+this.name+'"'),e+=' path="'+this.path+'">'}}]),e}();e.exports=p},function(e,n,t){"use strict";var a=function(e,n,t,a,s,o,r,l){if(!e){var i;if(void 0===n)i=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,a,s,o,r,l],p=0;i=new Error(n.replace(/%s/g,function(){return c[p++]})),i.name="Invariant Violation"}throw i.framesToPop=1,i}};e.exports=a},function(e,n,t){"use strict";var a=!1,s=function(){};a&&(s=function(e,n){for(var t=arguments.length,a=Array(t>2?t-2:0),s=2;t>s;s++)a[s-2]=arguments[s];if(void 0===n)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");if(n.length<10||/^[s\W]*$/.test(n))throw new Error("The warning format should be able to uniquely identify this warning. Please, use a more descriptive format than: "+n);if(0!==n.indexOf("Failed Composite propType: ")&&!e){var o=0,r="Warning: "+n.replace(/%s/g,function(){return a[o++]});console.warn(r);try{throw new Error(r)}catch(l){}}}),e.exports=s},function(e,n,t){"use strict";function a(e){if(!(e in h)){var n=[],t=e.replace(l,function(e,t){return t?(n.push(t),"([^/?#]+)"):"*"===e?(n.push("splat"),"(.*?)"):"\\"+e});h[e]={matcher:new RegExp("^"+t+"$","i"),paramNames:n}}return h[e]}var s=t(159),o=t(162),r=t(163),l=/:([a-zA-Z_$][a-zA-Z0-9_$]*)|[*.()\[\]\\+|{}^$]/g,i=/:([a-zA-Z_$][a-zA-Z0-9_$?]*[?]?)|[*]/g,c=/\/\/\?|\/\?\/|\/\?(?![^\/=]+=.*$)/g,p=/\?(.*)$/,h={},d={isAbsolute:function(e){return"/"===e.charAt(0)},join:function(e,n){return e.replace(/\/*$/,"/")+n},extractParamNames:function(e){return a(e).paramNames},extractParams:function(e,n){var t=a(e),s=t.matcher,o=t.paramNames,r=n.match(s);if(!r)return null;var l={};return o.forEach(function(e,n){l[e]=r[n+1]}),l},injectParams:function(e,n){n=n||{};var t=0;return e.replace(i,function(a,o){if(o=o||"splat","?"===o.slice(-1)){if(o=o.slice(0,-1),null==n[o])return""}else s(null!=n[o],'Missing "%s" parameter for path "%s"',o,e);var r;return"splat"===o&&Array.isArray(n[o])?(r=n[o][t++],s(null!=r,'Missing splat # %s for path "%s"',t,e)):r=n[o],r}).replace(c,"/")},extractQuery:function(e){var n=e.match(p);return n&&r.parse(n[1])},withoutQuery:function(e){return e.replace(p,"")},withQuery:function(e,n){var t=d.extractQuery(e);t&&(n=n?o(t,n):t);var a=r.stringify(n,{arrayFormat:"brackets"});return a?d.withoutQuery(e)+"?"+a:d.withoutQuery(e)}};e.exports=d},function(e,n){"use strict";function t(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=Object.assign||function(e,n){for(var a,s,o=t(e),r=1;r<arguments.length;r++){a=arguments[r],s=Object.keys(Object(a));for(var l=0;l<s.length;l++)o[s[l]]=a[s[l]]}return o}},function(e,n,t){e.exports=t(164)},function(e,n,t){var a=t(165),s=t(167);e.exports={stringify:a,parse:s}},function(e,n,t){var a=t(166),s={delimiter:"&",arrayPrefixGenerators:{brackets:function(e,n){return e+"[]"},indices:function(e,n){return e+"["+n+"]"},repeat:function(e,n){return e}}};s.stringify=function(e,n,t){if(a.isBuffer(e)?e=e.toString():e instanceof Date?e=e.toISOString():null===e&&(e=""),"string"==typeof e||"number"==typeof e||"boolean"==typeof e)return[encodeURIComponent(n)+"="+encodeURIComponent(e)];var o=[];if("undefined"==typeof e)return o;for(var r=Object.keys(e),l=0,i=r.length;i>l;++l){var c=r[l];o=Array.isArray(e)?o.concat(s.stringify(e[c],t(n,c),t)):o.concat(s.stringify(e[c],n+"["+c+"]",t))}return o},e.exports=function(e,n){n=n||{};var t="undefined"==typeof n.delimiter?s.delimiter:n.delimiter,a=[];if("object"!=typeof e||null===e)return"";var o;o=n.arrayFormat in s.arrayPrefixGenerators?n.arrayFormat:"indices"in n?n.indices?"indices":"repeat":"indices";for(var r=s.arrayPrefixGenerators[o],l=Object.keys(e),i=0,c=l.length;c>i;++i){var p=l[i];a=a.concat(s.stringify(e[p],p,r))}return a.join(t)}},function(e,n){n.arrayToObject=function(e){for(var n={},t=0,a=e.length;a>t;++t)"undefined"!=typeof e[t]&&(n[t]=e[t]);return n},n.merge=function(e,t){if(!t)return e;if("object"!=typeof t)return Array.isArray(e)?e.push(t):e[t]=!0,e;if("object"!=typeof e)return e=[e].concat(t);Array.isArray(e)&&!Array.isArray(t)&&(e=n.arrayToObject(e));for(var a=Object.keys(t),s=0,o=a.length;o>s;++s){var r=a[s],l=t[r];e[r]?e[r]=n.merge(e[r],l):e[r]=l}return e},n.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(n){return e}},n.compact=function(e,t){if("object"!=typeof e||null===e)return e;t=t||[];var a=t.indexOf(e);if(-1!==a)return t[a];if(t.push(e),Array.isArray(e)){for(var s=[],o=0,r=e.length;r>o;++o)"undefined"!=typeof e[o]&&s.push(e[o]);return s}var l=Object.keys(e);for(o=0,r=l.length;r>o;++o){var i=l[o];e[i]=n.compact(e[i],t)}return e},n.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},n.isBuffer=function(e){return null===e||"undefined"==typeof e?!1:!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},function(e,n,t){var a=t(166),s={delimiter:"&",depth:5,arrayLimit:20,parameterLimit:1e3};s.parseValues=function(e,n){for(var t={},s=e.split(n.delimiter,n.parameterLimit===1/0?void 0:n.parameterLimit),o=0,r=s.length;r>o;++o){var l=s[o],i=-1===l.indexOf("]=")?l.indexOf("="):l.indexOf("]=")+1;if(-1===i)t[a.decode(l)]="";else{var c=a.decode(l.slice(0,i)),p=a.decode(l.slice(i+1));if(Object.prototype.hasOwnProperty(c))continue;t.hasOwnProperty(c)?t[c]=[].concat(t[c]).concat(p):t[c]=p}}return t},s.parseObject=function(e,n,t){if(!e.length)return n;var a=e.shift(),o={};if("[]"===a)o=[],o=o.concat(s.parseObject(e,n,t));else{var r="["===a[0]&&"]"===a[a.length-1]?a.slice(1,a.length-1):a,l=parseInt(r,10),i=""+l;!isNaN(l)&&a!==r&&i===r&&l>=0&&l<=t.arrayLimit?(o=[],o[l]=s.parseObject(e,n,t)):o[r]=s.parseObject(e,n,t)}return o},s.parseKeys=function(e,n,t){if(e){var a=/^([^\[\]]*)/,o=/(\[[^\[\]]*\])/g,r=a.exec(e);if(!Object.prototype.hasOwnProperty(r[1])){var l=[];r[1]&&l.push(r[1]);for(var i=0;null!==(r=o.exec(e))&&i<t.depth;)++i,Object.prototype.hasOwnProperty(r[1].replace(/\[|\]/g,""))||l.push(r[1]);return r&&l.push("["+e.slice(r.index)+"]"),s.parseObject(l,n,t)}}},e.exports=function(e,n){if(""===e||null===e||"undefined"==typeof e)return{};n=n||{},n.delimiter="string"==typeof n.delimiter||a.isRegExp(n.delimiter)?n.delimiter:s.delimiter,n.depth="number"==typeof n.depth?n.depth:s.depth,n.arrayLimit="number"==typeof n.arrayLimit?n.arrayLimit:s.arrayLimit,n.parameterLimit="number"==typeof n.parameterLimit?n.parameterLimit:s.parameterLimit;for(var t="string"==typeof e?s.parseValues(e,n):e,o={},r=Object.keys(t),l=0,i=r.length;i>l;++l){var c=r[l],p=s.parseKeys(c,t[c],n);o=a.merge(o,p)}return a.compact(o)}},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},l=t(2),i=t(169),c=t(39),p=t(157),h="__routeHandler__",d=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"getChildContext",value:function(){return{routeDepth:this.context.routeDepth+1}}},{key:"componentDidMount",value:function(){this._updateRouteComponent(this.refs[h])}},{key:"componentDidUpdate",value:function(){this._updateRouteComponent(this.refs[h])}},{key:"componentWillUnmount",value:function(){this._updateRouteComponent(null)}},{key:"_updateRouteComponent",value:function(e){this.context.router.setRouteComponentAtDepth(this.getRouteDepth(),e)}},{key:"getRouteDepth",value:function(){return this.context.routeDepth}},{key:"createChildRouteHandler",value:function(e){var n=this.context.router.getRouteAtDepth(this.getRouteDepth());if(null==n)return null;var t=c({},e||this.props,{ref:h,params:this.context.router.getCurrentParams(),query:this.context.router.getCurrentQuery()});return l.createElement(n.handler,t)}},{key:"render",value:function(){var e=this.createChildRouteHandler();return e?l.createElement(i,null,e):l.createElement("script",null)}}]),n}(l.Component);d.contextTypes={routeDepth:p.number.isRequired,router:p.router.isRequired},d.childContextTypes={routeDepth:p.number.isRequired},e.exports=d},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},l=t(2),i=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"render",value:function(){return this.props.children}}]),n}(l.Component);e.exports=i},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},l=t(2),i=t(159),c=t(157),p=t(168),h=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"render",value:function(){i(!1,"%s elements are for router configuration only and should not be rendered",this.constructor.name)}}]),n}(l.Component);h.propTypes={name:c.string,path:c.string,handler:c.func,ignoreScrollBehavior:c.bool},h.defaultProps={handler:p},e.exports=h},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}function o(e){return 0===e.button}function r(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}var l=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),i=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},c=t(2),p=t(39),h=t(157),d=function(e){function n(){a(this,n),i(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),l(n,[{key:"handleClick",value:function(e){var n,t=!0;this.props.onClick&&(n=this.props.onClick(e)),!r(e)&&o(e)&&((n===!1||e.defaultPrevented===!0)&&(t=!1),e.preventDefault(),t&&this.context.router.transitionTo(this.props.to,this.props.params,this.props.query))}},{key:"getHref",value:function(){return this.context.router.makeHref(this.props.to,this.props.params,this.props.query)}},{key:"getClassName",value:function(){var e=this.props.className;return this.getActiveState()&&(e+=" "+this.props.activeClassName),e}},{key:"getActiveState",value:function(){return this.context.router.isActive(this.props.to,this.props.params,this.props.query)}},{key:"render",value:function(){var e=p({},this.props,{href:this.getHref(),className:this.getClassName(),onClick:this.handleClick.bind(this)});return e.activeStyle&&this.getActiveState()&&(e.style=e.activeStyle),c.DOM.a(e,this.props.children)}}]),n}(c.Component);d.contextTypes={router:h.router.isRequired},d.propTypes={activeClassName:h.string.isRequired,to:h.oneOfType([h.string,h.route]).isRequired,params:h.object,query:h.object,activeStyle:h.object,onClick:h.func},d.defaultProps={activeClassName:"active",className:""},e.exports=d},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},r=t(157),l=t(168),i=t(170),c=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(i);c.propTypes={name:r.string,path:r.falsy,children:r.falsy,handler:r.func.isRequired},c.defaultProps={handler:l},e.exports=c},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var l=Object.getOwnPropertyDescriptor(s,o);if(void 0!==l){if("value"in l)return l.value;var i=l.get;if(void 0===i)return;return i.call(r)}var c=Object.getPrototypeOf(s);if(null===c)return;e=c,n=o,t=r,a=!0,l=c=void 0}},r=t(157),l=t(170),i=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(l);i.propTypes={path:r.string,from:r.string,to:r.string,handler:r.falsy},i.defaultProps={},e.exports=i},function(e,n,t){"use strict";function a(e){e===l.PUSH&&(i.length+=1);var n={path:h.getCurrentPath(),type:e};c.forEach(function(e){e.call(h,n)})}function s(){var e=h.getCurrentPath();return"/"===e.charAt(0)?!0:(h.replace("/"+e),!1)}function o(){if(s()){var e=r;r=null,a(e||l.POP)}}var r,l=t(175),i=t(176),c=[],p=!1,h={addChangeListener:function(e){c.push(e),s(),p||(window.addEventListener?window.addEventListener("hashchange",o,!1):window.attachEvent("onhashchange",o),p=!0)},removeChangeListener:function(e){c=c.filter(function(n){return n!==e}),0===c.length&&(window.removeEventListener?window.removeEventListener("hashchange",o,!1):window.removeEvent("onhashchange",o),p=!1)},push:function(e){r=l.PUSH,window.location.hash=e},replace:function(e){r=l.REPLACE,window.location.replace(window.location.pathname+window.location.search+"#"+e)},pop:function(){r=l.POP,i.back()},getCurrentPath:function(){return decodeURI(window.location.href.split("#")[1]||"")},toString:function(){return"<HashLocation>"}};e.exports=h},function(e,n){"use strict";var t={PUSH:"push",REPLACE:"replace",POP:"pop"};e.exports=t},function(e,n,t){"use strict";var a=t(159),s=t(177),o={length:1,back:function(){a(s,"Cannot use History.back without a DOM"),o.length-=1,window.history.back()}};e.exports=o},function(e,n){var t=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=t},function(e,n,t){"use strict";function a(e){var n={path:c.getCurrentPath(),type:e};l.forEach(function(e){e.call(c,n)})}function s(e){void 0!==e.state&&a(o.POP)}var o=t(175),r=t(176),l=[],i=!1,c={addChangeListener:function(e){l.push(e),i||(window.addEventListener?window.addEventListener("popstate",s,!1):window.attachEvent("onpopstate",s),i=!0)},removeChangeListener:function(e){l=l.filter(function(n){return n!==e}),0===l.length&&(window.addEventListener?window.removeEventListener("popstate",s,!1):window.removeEvent("onpopstate",s),i=!1)},push:function(e){window.history.pushState({path:e},"",e),r.length+=1,a(o.PUSH)},replace:function(e){window.history.replaceState({path:e},"",e),a(o.REPLACE)},pop:r.back,getCurrentPath:function(){return decodeURI(window.location.pathname+window.location.search)},toString:function(){return"<HistoryLocation>"}};e.exports=c},function(e,n,t){"use strict";var a=t(178),s=t(176),o={push:function(e){window.location=e},replace:function(e){window.location.replace(e)},pop:s.back,getCurrentPath:a.getCurrentPath,toString:function(){return"<RefreshLocation>"}};e.exports=o},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(){r(!1,"You cannot modify a static location")}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(159),l=function(){function e(n){a(this,e),this.path=n}return o(e,[{key:"getCurrentPath",value:function(){return this.path}},{key:"toString",value:function(){return'<StaticLocation path="'+this.path+'">'}}]),e}();l.prototype.push=s,l.prototype.replace=s,l.prototype.pop=s,e.exports=l},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var s=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),o=t(159),r=t(175),l=t(176),i=function(){function e(n){a(this,e),this.history=n||[],this.listeners=[],this.needsDOM=!1,this._updateHistoryLength()}return s(e,[{key:"_updateHistoryLength",value:function(){l.length=this.history.length}},{key:"_notifyChange",value:function(e){for(var n={path:this.getCurrentPath(),type:e},t=0,a=this.listeners.length;a>t;++t)this.listeners[t].call(this,n)}},{key:"addChangeListener",value:function(e){this.listeners.push(e)}},{key:"removeChangeListener",value:function(e){this.listeners=this.listeners.filter(function(n){return n!==e})}},{key:"push",value:function(e){this.history.push(e),this._updateHistoryLength(),this._notifyChange(r.PUSH)}},{key:"replace",value:function(e){o(this.history.length,"You cannot replace the current path with no history"),this.history[this.history.length-1]=e,this._notifyChange(r.REPLACE)}},{key:"pop",value:function(){this.history.pop(),this._updateHistoryLength(),this._notifyChange(r.POP)}},{key:"getCurrentPath",value:function(){return this.history[this.history.length-1]}},{key:"toString",value:function(){return"<TestLocation>"}}]),e}();e.exports=i},function(e,n,t){"use strict";var a=t(175),s={updateScrollPosition:function(e,n){switch(n){case a.PUSH:case a.REPLACE:window.scrollTo(0,0);break;case a.POP:e?window.scrollTo(e.x,e.y):window.scrollTo(0,0)}}};e.exports=s},function(e,n){"use strict";var t={updateScrollPosition:function(){window.scrollTo(0,0)}};e.exports=t},function(e,n,t){"use strict";var a=t(157),s={contextTypes:{router:a.router.isRequired},makePath:function(e,n,t){return this.context.router.makePath(e,n,t)},makeHref:function(e,n,t){return this.context.router.makeHref(e,n,t)},transitionTo:function(e,n,t){this.context.router.transitionTo(e,n,t)},replaceWith:function(e,n,t){this.context.router.replaceWith(e,n,t)},goBack:function(){return this.context.router.goBack()}};e.exports=s},function(e,n,t){"use strict";var a=t(157),s={contextTypes:{router:a.router.isRequired},getPath:function(){return this.context.router.getCurrentPath()},getPathname:function(){return this.context.router.getCurrentPathname()},getParams:function(){return this.context.router.getCurrentParams()},getQuery:function(){return this.context.router.getCurrentQuery()},getRoutes:function(){return this.context.router.getCurrentRoutes()},isActive:function(e,n,t){return this.context.router.isActive(e,n,t)}};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){e=e||"UnknownComponent";for(var a in n)if(n.hasOwnProperty(a)){var s=n[a](t,a,e);s instanceof Error&&c(!1,s.message)}}function s(e){var n=i({},e),t=n.handler;return t&&(n.onEnter=t.willTransitionTo,n.onLeave=t.willTransitionFrom),n}function o(e){if(l.isValidElement(e)){var n=e.type,t=i({},n.defaultProps,e.props);return n.propTypes&&a(n.displayName,n.propTypes,t),n===p?u.createDefaultRoute(s(t)):n===h?u.createNotFoundRoute(s(t)):n===d?u.createRedirect(s(t)):u.createRoute(s(t),function(){t.children&&r(t.children)})}}function r(e){var n=[];return l.Children.forEach(e,function(e){(e=o(e))&&n.push(e)}),n}var l=t(2),i=t(39),c=t(160),p=t(156),h=t(172),d=t(173),u=t(158);e.exports=r},function(e,n,t){"use strict";function a(e,n){for(var t in n)if(n.hasOwnProperty(t)&&e[t]!==n[t])return!1;return!0}function s(e,n,t,s,o,r){return e.some(function(e){if(e!==n)return!1;for(var l,i=n.paramNames,c=0,p=i.length;p>c;++c)if(l=i[c],s[l]!==t[l])return!1;return a(o,r)&&a(r,o)})}function o(e,n){for(var t,a=0,s=e.length;s>a;++a)t=e[a],t.name&&(d(null==n[t.name],'You may not have more than one route named "%s"',t.name),n[t.name]=t),t.childRoutes&&o(t.childRoutes,n)}function r(e,n){return e.some(function(e){return e.name===n})}function l(e,n){for(var t in n)if(String(e[t])!==String(n[t]))return!1;return!0}function i(e,n){for(var t in n)if(String(e[t])!==String(n[t]))return!1;return!0}function c(e){e=e||{},C(e)&&(e={routes:e});var n=[],t=e.location||R,a=e.scrollBehavior||N,c={},f={},F=null,M=null;"string"==typeof t&&(t=new b(t)),
t instanceof b?h(!u||!1,"You should not use a static location in a DOM environment because the router will not be kept in sync with the current URL"):d(u||t.needsDOM===!1,"You cannot use %s without a DOM",t),t!==w||I()||(t=y);var q=p.createClass({displayName:"Router",statics:{isRunning:!1,cancelPendingTransition:function(){F&&(F.cancel(),F=null)},clearAllRoutes:function(){q.cancelPendingTransition(),q.namedRoutes={},q.routes=[]},addRoutes:function(e){C(e)&&(e=j(e)),o(e,q.namedRoutes),q.routes.push.apply(q.routes,e)},replaceRoutes:function(e){q.clearAllRoutes(),q.addRoutes(e),q.refresh()},match:function(e){return E.findMatch(q.routes,e)},makePath:function(e,n,t){var a;if(O.isAbsolute(e))a=e;else{var s=e instanceof P?e:q.namedRoutes[e];d(s instanceof P,'Cannot find a route named "%s"',e),a=s.path}return O.withQuery(O.injectParams(a,n),t)},makeHref:function(e,n,a){var s=q.makePath(e,n,a);return t===g?"#"+s:s},transitionTo:function(e,n,a){var s=q.makePath(e,n,a);F?t.replace(s):t.push(s)},replaceWith:function(e,n,a){t.replace(q.makePath(e,n,a))},goBack:function(){return A.length>1||t===y?(t.pop(),!0):(h(!1,"goBack() was ignored because there is no router history"),!1)},handleAbort:e.onAbort||function(e){if(t instanceof b)throw new Error("Unhandled aborted transition! Reason: "+e);e instanceof T||(e instanceof S?t.replace(q.makePath(e.to,e.params,e.query)):t.pop())},handleError:e.onError||function(e){throw e},handleLocationChange:function(e){q.dispatch(e.path,e.type)},dispatch:function(e,t){q.cancelPendingTransition();var a=c.path,o=null==t;if(a!==e||o){a&&t===m.PUSH&&q.recordScrollPosition(a);var r=q.match(e);h(null!=r,'No route matches path "%s". Make sure you have <Route path="%s"> somewhere in your routes',e,e),null==r&&(r={});var l,i,p=c.routes||[],d=c.params||{},u=c.query||{},f=r.routes||[],g=r.params||{},w=r.query||{};p.length?(l=p.filter(function(e){return!s(f,e,d,g,u,w)}),i=f.filter(function(e){return!s(p,e,d,g,u,w)})):(l=[],i=f);var y=new v(e,q.replaceWith.bind(q,e));F=y;var b=n.slice(p.length-l.length);v.from(y,l,b,function(n){return n||y.abortReason?M.call(q,n,y):void v.to(y,i,g,w,function(n){M.call(q,n,y,{path:e,action:t,pathname:r.pathname,routes:f,params:g,query:w})})})}},run:function(e){d(!q.isRunning,"Router is already running"),M=function(n,t,a){n&&q.handleError(n),F===t&&(F=null,t.abortReason?q.handleAbort(t.abortReason):e.call(q,q,f=a))},t instanceof b||(t.addChangeListener&&t.addChangeListener(q.handleLocationChange),q.isRunning=!0),q.refresh()},refresh:function(){q.dispatch(t.getCurrentPath(),null)},stop:function(){q.cancelPendingTransition(),t.removeChangeListener&&t.removeChangeListener(q.handleLocationChange),q.isRunning=!1},getLocation:function(){return t},getScrollBehavior:function(){return a},getRouteAtDepth:function(e){var n=c.routes;return n&&n[e]},setRouteComponentAtDepth:function(e,t){n[e]=t},getCurrentPath:function(){return c.path},getCurrentPathname:function(){return c.pathname},getCurrentParams:function(){return c.params},getCurrentQuery:function(){return c.query},getCurrentRoutes:function(){return c.routes},isActive:function(e,n,t){return O.isAbsolute(e)?e===c.path:r(c.routes,e)&&l(c.params,n)&&(null==t||i(c.query,t))}},mixins:[k],propTypes:{children:x.falsy},childContextTypes:{routeDepth:x.number.isRequired,router:x.router.isRequired},getChildContext:function(){return{routeDepth:1,router:q}},getInitialState:function(){return c=f},componentWillReceiveProps:function(){this.setState(c=f)},componentWillUnmount:function(){q.stop()},render:function(){var e=q.getRouteAtDepth(0);return e?p.createElement(e.handler,this.props):null}});return q.clearAllRoutes(),e.routes&&q.addRoutes(e.routes),q}var p=t(2),h=t(160),d=t(159),u=t(177),m=t(175),f=t(182),g=t(174),w=t(178),y=t(179),b=t(180),k=t(188),j=t(186),C=t(190),v=t(191),x=t(157),S=t(193),A=t(176),T=t(192),E=t(194),P=t(158),I=t(195),O=t(161),R=u?g:"/",N=u?f:null;e.exports=c},function(e,n,t){"use strict";function a(e,n){if(!n)return!0;if(e.pathname===n.pathname)return!1;var t=e.routes,a=n.routes,s=t.filter(function(e){return-1!==a.indexOf(e)});return!s.some(function(e){return e.ignoreScrollBehavior})}var s=t(159),o=t(177),r=t(189),l={statics:{recordScrollPosition:function(e){this.scrollHistory||(this.scrollHistory={}),this.scrollHistory[e]=r()},getScrollPosition:function(e){return this.scrollHistory||(this.scrollHistory={}),this.scrollHistory[e]||null}},componentWillMount:function(){s(null==this.constructor.getScrollBehavior()||o,"Cannot use scroll behavior without a DOM")},componentDidMount:function(){this._updateScroll()},componentDidUpdate:function(e,n){this._updateScroll(n)},_updateScroll:function(e){if(a(this.state,e)){var n=this.constructor.getScrollBehavior();n&&n.updateScrollPosition(this.constructor.getScrollPosition(this.state.path),this.state.action)}}};e.exports=l},function(e,n,t){"use strict";function a(){return s(o,"Cannot get current scroll position without a DOM"),{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}}var s=t(159),o=t(177);e.exports=a},function(e,n,t){"use strict";function a(e){return null==e||o.isValidElement(e)}function s(e){return a(e)||Array.isArray(e)&&e.every(a)}var o=t(2);e.exports=s},function(e,n,t){"use strict";function a(e,n){this.path=e,this.abortReason=null,this.retry=n.bind(this)}var s=t(192),o=t(193);a.prototype.abort=function(e){null==this.abortReason&&(this.abortReason=e||"ABORT")},a.prototype.redirect=function(e,n,t){this.abort(new o(e,n,t))},a.prototype.cancel=function(){this.abort(new s)},a.from=function(e,n,t,a){n.reduce(function(n,a,s){return function(o){if(o||e.abortReason)n(o);else if(a.onLeave)try{a.onLeave(e,t[s],n),a.onLeave.length<3&&n()}catch(r){n(r)}else n()}},a)()},a.to=function(e,n,t,a,s){n.reduceRight(function(n,s){return function(o){if(o||e.abortReason)n(o);else if(s.onEnter)try{s.onEnter(e,t,a,n),s.onEnter.length<4&&n()}catch(r){n(r)}else n()}},s)()},e.exports=a},function(e,n){"use strict";function t(){}e.exports=t},function(e,n){"use strict";function t(e,n,t){this.to=e,this.params=n,this.query=t}e.exports=t},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n,t){var a=e.childRoutes;if(a)for(var o,i,c=0,p=a.length;p>c;++c)if(i=a[c],!i.isDefault&&!i.isNotFound&&(o=s(i,n,t)))return o.routes.unshift(e),o;var h=e.defaultRoute;if(h&&(u=r.extractParams(h.path,n)))return new l(n,u,t,[e,h]);var d=e.notFoundRoute;if(d&&(u=r.extractParams(d.path,n)))return new l(n,u,t,[e,d]);var u=r.extractParams(e.path,n);return u?new l(n,u,t,[e]):null}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(161),l=function(){function e(n,t,s,o){a(this,e),this.pathname=n,this.params=t,this.query=s,this.routes=o}return o(e,null,[{key:"findMatch",value:function(e,n){for(var t=r.withoutQuery(n),a=r.extractQuery(n),o=null,l=0,i=e.length;null==o&&i>l;++l)o=s(e[l],t,a);return o}}]),e}();e.exports=l},function(e,n){"use strict";function t(){/*! taken from modernizr
	   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	   * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	   */
var e=navigator.userAgent;return-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone")?window.history&&"pushState"in window.history:!1}e.exports=t},function(e,n,t){"use strict";function a(e,n,t){"function"==typeof n&&(t=n,n=null);var a=s({routes:e,location:n});return a.run(t),a}var s=t(187);e.exports=a},function(e,n,t){var a=t(198),s=t(219),o=s(a);e.exports=o},function(e,n,t){var a=t(199),s=t(218),o=s(a);e.exports=o},function(e,n,t){function a(e,n){return s(e,n,o)}var s=t(200),o=t(204);e.exports=a},function(e,n,t){var a=t(201),s=a();e.exports=s},function(e,n,t){function a(e){return function(n,t,a){for(var o=s(n),r=a(n),l=r.length,i=e?l:-1;e?i--:++i<l;){var c=r[i];if(t(o[c],c,o)===!1)break}return n}}var s=t(202);e.exports=a},function(e,n,t){function a(e){return s(e)?e:Object(e)}var s=t(203);e.exports=a},function(e,n){function t(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}e.exports=t},function(e,n,t){var a=t(205),s=t(209),o=t(203),r=t(213),l=a(Object,"keys"),i=l?function(e){var n=null==e?void 0:e.constructor;return"function"==typeof n&&n.prototype===e||"function"!=typeof e&&s(e)?r(e):o(e)?l(e):[]}:r;e.exports=i},function(e,n,t){function a(e,n){var t=null==e?void 0:e[n];return s(t)?t:void 0}var s=t(206);e.exports=a},function(e,n,t){function a(e){return null==e?!1:s(e)?p.test(i.call(e)):o(e)&&r.test(e)}var s=t(207),o=t(208),r=/^\[object .+?Constructor\]$/,l=Object.prototype,i=Function.prototype.toString,c=l.hasOwnProperty,p=RegExp("^"+i.call(c).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=a},function(e,n,t){function a(e){return s(e)&&l.call(e)==o}var s=t(203),o="[object Function]",r=Object.prototype,l=r.toString;e.exports=a},function(e,n){function t(e){return!!e&&"object"==typeof e}e.exports=t},function(e,n,t){function a(e){return null!=e&&o(s(e))}var s=t(210),o=t(212);e.exports=a},function(e,n,t){var a=t(211),s=a("length");e.exports=s},function(e,n){function t(e){return function(n){return null==n?void 0:n[e]}}e.exports=t},function(e,n){function t(e){return"number"==typeof e&&e>-1&&e%1==0&&a>=e}var a=9007199254740991;e.exports=t},function(e,n,t){function a(e){for(var n=i(e),t=n.length,a=t&&e.length,c=!!a&&l(a)&&(o(e)||s(e)),h=-1,d=[];++h<t;){var u=n[h];(c&&r(u,a)||p.call(e,u))&&d.push(u)}return d}var s=t(214),o=t(215),r=t(216),l=t(212),i=t(217),c=Object.prototype,p=c.hasOwnProperty;e.exports=a},function(e,n,t){function a(e){return o(e)&&s(e)&&l.call(e,"callee")&&!i.call(e,"callee")}var s=t(209),o=t(208),r=Object.prototype,l=r.hasOwnProperty,i=r.propertyIsEnumerable;e.exports=a},function(e,n,t){var a=t(205),s=t(212),o=t(208),r="[object Array]",l=Object.prototype,i=l.toString,c=a(Array,"isArray"),p=c||function(e){return o(e)&&s(e.length)&&i.call(e)==r};e.exports=p},function(e,n){function t(e,n){return e="number"==typeof e||a.test(e)?+e:-1,n=null==n?s:n,e>-1&&e%1==0&&n>e}var a=/^\d+$/,s=9007199254740991;e.exports=t},function(e,n,t){function a(e){if(null==e)return[];i(e)||(e=Object(e));var n=e.length;n=n&&l(n)&&(o(e)||s(e))&&n||0;for(var t=e.constructor,a=-1,c="function"==typeof t&&t.prototype===e,h=Array(n),d=n>0;++a<n;)h[a]=a+"";for(var u in e)d&&r(u,n)||"constructor"==u&&(c||!p.call(e,u))||h.push(u);return h}var s=t(214),o=t(215),r=t(216),l=t(212),i=t(203),c=Object.prototype,p=c.hasOwnProperty;e.exports=a},function(e,n,t){function a(e,n){return function(t,a){var l=t?s(t):0;if(!o(l))return e(t,a);for(var i=n?l:-1,c=r(t);(n?i--:++i<l)&&a(c[i],i,c)!==!1;);return t}}var s=t(210),o=t(212),r=t(202);e.exports=a},function(e,n,t){function a(e,n){return function(t,a,i){if(a=s(a,i,3),l(t)){var c=r(t,a,n);return c>-1?t[c]:void 0}return o(t,a,e)}}var s=t(220),o=t(244),r=t(245),l=t(215);e.exports=a},function(e,n,t){function a(e,n,t){var a=typeof e;return"function"==a?void 0===n?e:r(e,n,t):null==e?l:"object"==a?s(e):void 0===n?i(e):o(e,n)}var s=t(221),o=t(233),r=t(240),l=t(241),i=t(242);e.exports=a},function(e,n,t){function a(e){var n=o(e);if(1==n.length&&n[0][2]){var t=n[0][0],a=n[0][1];return function(e){return null==e?!1:e[t]===a&&(void 0!==a||t in r(e))}}return function(e){return s(e,n)}}var s=t(222),o=t(230),r=t(202);e.exports=a},function(e,n,t){function a(e,n,t){var a=n.length,r=a,l=!t;if(null==e)return!r;for(e=o(e);a--;){var i=n[a];if(l&&i[2]?i[1]!==e[i[0]]:!(i[0]in e))return!1}for(;++a<r;){i=n[a];var c=i[0],p=e[c],h=i[1];if(l&&i[2]){if(void 0===p&&!(c in e))return!1}else{var d=t?t(p,h,c):void 0;if(!(void 0===d?s(h,p,t,!0):d))return!1}}return!0}var s=t(223),o=t(202);e.exports=a},function(e,n,t){function a(e,n,t,l,i,c){return e===n?!0:null==e||null==n||!o(e)&&!r(n)?e!==e&&n!==n:s(e,n,a,t,l,i,c)}var s=t(224),o=t(203),r=t(208);e.exports=a},function(e,n,t){function a(e,n,t,a,d,f,g){var w=l(e),y=l(n),b=p,k=p;w||(b=m.call(e),b==c?b=h:b!=h&&(w=i(e))),y||(k=m.call(n),k==c?k=h:k!=h&&(y=i(n)));var j=b==h,C=k==h,v=b==k;if(v&&!w&&!j)return o(e,n,b);if(!d){var x=j&&u.call(e,"__wrapped__"),S=C&&u.call(n,"__wrapped__");if(x||S)return t(x?e.value():e,S?n.value():n,a,d,f,g)}if(!v)return!1;f||(f=[]),g||(g=[]);for(var A=f.length;A--;)if(f[A]==e)return g[A]==n;f.push(e),g.push(n);var T=(w?s:r)(e,n,t,a,d,f,g);return f.pop(),g.pop(),T}var s=t(225),o=t(227),r=t(228),l=t(215),i=t(229),c="[object Arguments]",p="[object Array]",h="[object Object]",d=Object.prototype,u=d.hasOwnProperty,m=d.toString;e.exports=a},function(e,n,t){function a(e,n,t,a,o,r,l){var i=-1,c=e.length,p=n.length;if(c!=p&&!(o&&p>c))return!1;for(;++i<c;){var h=e[i],d=n[i],u=a?a(o?d:h,o?h:d,i):void 0;if(void 0!==u){if(u)continue;return!1}if(o){if(!s(n,function(e){return h===e||t(h,e,a,o,r,l)}))return!1}else if(h!==d&&!t(h,d,a,o,r,l))return!1}return!0}var s=t(226);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length;++t<a;)if(n(e[t],t,e))return!0;return!1}e.exports=t},function(e,n){function t(e,n,t){switch(t){case a:case s:return+e==+n;case o:return e.name==n.name&&e.message==n.message;case r:return e!=+e?n!=+n:e==+n;case l:case i:return e==n+""}return!1}var a="[object Boolean]",s="[object Date]",o="[object Error]",r="[object Number]",l="[object RegExp]",i="[object String]";e.exports=t},function(e,n,t){function a(e,n,t,a,o,l,i){var c=s(e),p=c.length,h=s(n),d=h.length;if(p!=d&&!o)return!1;for(var u=p;u--;){var m=c[u];if(!(o?m in n:r.call(n,m)))return!1}for(var f=o;++u<p;){m=c[u];var g=e[m],w=n[m],y=a?a(o?w:g,o?g:w,m):void 0;if(!(void 0===y?t(g,w,a,o,l,i):y))return!1;f||(f="constructor"==m)}if(!f){var b=e.constructor,k=n.constructor;if(b!=k&&"constructor"in e&&"constructor"in n&&!("function"==typeof b&&b instanceof b&&"function"==typeof k&&k instanceof k))return!1}return!0}var s=t(204),o=Object.prototype,r=o.hasOwnProperty;e.exports=a},function(e,n,t){function a(e){return o(e)&&s(e.length)&&!!P[O.call(e)]}var s=t(212),o=t(208),r="[object Arguments]",l="[object Array]",i="[object Boolean]",c="[object Date]",p="[object Error]",h="[object Function]",d="[object Map]",u="[object Number]",m="[object Object]",f="[object RegExp]",g="[object Set]",w="[object String]",y="[object WeakMap]",b="[object ArrayBuffer]",k="[object Float32Array]",j="[object Float64Array]",C="[object Int8Array]",v="[object Int16Array]",x="[object Int32Array]",S="[object Uint8Array]",A="[object Uint8ClampedArray]",T="[object Uint16Array]",E="[object Uint32Array]",P={};P[k]=P[j]=P[C]=P[v]=P[x]=P[S]=P[A]=P[T]=P[E]=!0,P[r]=P[l]=P[b]=P[i]=P[c]=P[p]=P[h]=P[d]=P[u]=P[m]=P[f]=P[g]=P[w]=P[y]=!1;var I=Object.prototype,O=I.toString;e.exports=a},function(e,n,t){function a(e){for(var n=o(e),t=n.length;t--;)n[t][2]=s(n[t][1]);return n}var s=t(231),o=t(232);e.exports=a},function(e,n,t){function a(e){return e===e&&!s(e)}var s=t(203);e.exports=a},function(e,n,t){function a(e){e=o(e);for(var n=-1,t=s(e),a=t.length,r=Array(a);++n<a;){var l=t[n];r[n]=[l,e[l]]}return r}var s=t(204),o=t(202);e.exports=a},function(e,n,t){function a(e,n){var t=l(e),a=i(e)&&c(n),u=e+"";return e=d(e),function(l){if(null==l)return!1;var i=u;if(l=h(l),(t||!a)&&!(i in l)){if(l=1==e.length?l:s(l,r(e,0,-1)),null==l)return!1;i=p(e),l=h(l)}return l[i]===n?void 0!==n||i in l:o(n,l[i],void 0,!0)}}var s=t(234),o=t(223),r=t(235),l=t(215),i=t(236),c=t(231),p=t(237),h=t(202),d=t(238);e.exports=a},function(e,n,t){function a(e,n,t){if(null!=e){void 0!==t&&t in s(e)&&(n=[t]);for(var a=0,o=n.length;null!=e&&o>a;)e=e[n[a++]];return a&&a==o?e:void 0}}var s=t(202);e.exports=a},function(e,n){function t(e,n,t){var a=-1,s=e.length;n=null==n?0:+n||0,0>n&&(n=-n>s?0:s+n),t=void 0===t||t>s?s:+t||0,0>t&&(t+=s),s=n>t?0:t-n>>>0,n>>>=0;for(var o=Array(s);++a<s;)o[a]=e[a+n];return o}e.exports=t},function(e,n,t){function a(e,n){var t=typeof e;if("string"==t&&l.test(e)||"number"==t)return!0;if(s(e))return!1;var a=!r.test(e);return a||null!=n&&e in o(n)}var s=t(215),o=t(202),r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,l=/^\w*$/;e.exports=a},function(e,n){function t(e){var n=e?e.length:0;return n?e[n-1]:void 0}e.exports=t},function(e,n,t){function a(e){if(o(e))return e;var n=[];return s(e).replace(r,function(e,t,a,s){n.push(a?s.replace(l,"$1"):t||e)}),n}var s=t(239),o=t(215),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,l=/\\(\\)?/g;e.exports=a},function(e,n){function t(e){return null==e?"":e+""}e.exports=t},function(e,n,t){function a(e,n,t){if("function"!=typeof e)return s;if(void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 3:return function(t,a,s){return e.call(n,t,a,s)};case 4:return function(t,a,s,o){return e.call(n,t,a,s,o)};case 5:return function(t,a,s,o,r){return e.call(n,t,a,s,o,r)}}return function(){return e.apply(n,arguments)}}var s=t(241);e.exports=a},function(e,n){function t(e){return e}e.exports=t},function(e,n,t){function a(e){return r(e)?s(e):o(e)}var s=t(211),o=t(243),r=t(236);e.exports=a},function(e,n,t){function a(e){var n=e+"";return e=o(e),function(t){return s(t,e,n)}}var s=t(234),o=t(238);e.exports=a},function(e,n){function t(e,n,t,a){var s;return t(e,function(e,t,o){return n(e,t,o)?(s=a?t:e,!1):void 0}),s}e.exports=t},function(e,n){function t(e,n,t){for(var a=e.length,s=t?a:-1;t?s--:++s<a;)if(n(e[s],s,e))return s;return-1}e.exports=t},function(e,n,t){function a(e,n,t){var a=l(e)?s:r;return n=o(n,t,3),a(e,n)}var s=t(247),o=t(220),r=t(248),l=t(215);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length,s=-1,o=[];++t<a;){var r=e[t];n(r,t,e)&&(o[++s]=r)}return o}e.exports=t},function(e,n,t){function a(e,n){var t=[];return s(e,function(e,a,s){n(e,a,s)&&t.push(e)}),t}var s=t(198);e.exports=a},function(e,n,t){"use strict";(function(){var n,a,s,o,r,l,i;n=t(155),s=t(246),i=t(250),r=t(237),o=t(256),a=t(258).config,l=t(259).link,e.exports=function(e,a){var c,p,h,d,u,m,f,g,w,y,b,k,j,C,v,x;for(x={},x.root=n.createRoute({name:"root-template",path:l("/"),handler:a("./_template")}),v=s(e,function(e){return"_template"===e.file.name&&"."!==e.file.dirname}),d=0,m=v.length;m>d;d++)C=v[d],j=s(v,function(e){return o(C.requirePath,e.file.dirname)}),j=i(j,function(e){return null!=e?e.file.dirname.length:void 0}),k=r(j),y=x[null!=k?k.file.dirname:void 0],y||(y=x.root),x[C.file.dirname]=n.createRoute({name:C.file.dirname+"-template",path:l(C.templatePath),parentRoute:y,handler:a("./"+C.requirePath)});for(c=s(e,function(e){return"_"!==e.file.name.slice(0,1)}),g=t(261),h=t(284),u=0,f=c.length;f>u;u++){switch(w=c[u],w.file.ext){case"md":p=g,w.data=a("./"+w.requirePath);break;case"html":p=h;break;case"jsx":p=a("./"+w.requirePath),w.data=a("./"+w.requirePath).metadata?a("./"+w.requirePath).metadata():void 0;break;case"cjsx":p=a("./"+w.requirePath),w.data=a("./"+w.requirePath).metadata?a("./"+w.requirePath).metadata():void 0;break;default:p=a("./"+w.requirePath)}b=s(v,function(e){return o(w.requirePath,e.file.dirname)}),b=i(b,function(e){return null!=e?e.file.dirname.length:void 0}),k=r(b),y=x[null!=k?k.file.dirname:void 0],y||(y=x.root),o(w.path,"/index")&&y.file.dirname===k.file.dirname?n.createDefaultRoute({name:w.path,parentRoute:y,handler:p}):n.createRoute({name:w.path,path:l(w.path),parentRoute:y,handler:p})}return x.root}}).call(void 0)},function(e,n,t){function a(e,n,t){if(null==e)return[];t&&i(e,n,t)&&(n=void 0);var a=-1;n=s(n,t,3);var c=o(e,function(e,t,s){return{criteria:n(e,t,s),index:++a,value:e}});return r(c,l)}var s=t(220),o=t(251),r=t(252),l=t(253),i=t(255);e.exports=a},function(e,n,t){function a(e,n){var t=-1,a=o(e)?Array(e.length):[];return s(e,function(e,s,o){a[++t]=n(e,s,o)}),a}var s=t(198),o=t(209);e.exports=a},function(e,n){function t(e,n){var t=e.length;for(e.sort(n);t--;)e[t]=e[t].value;return e}e.exports=t},function(e,n,t){function a(e,n){return s(e.criteria,n.criteria)||e.index-n.index}var s=t(254);e.exports=a},function(e,n){function t(e,n){if(e!==n){var t=null===e,a=void 0===e,s=e===e,o=null===n,r=void 0===n,l=n===n;if(e>n&&!o||!s||t&&!r&&l||a&&l)return 1;if(n>e&&!t||!l||o&&!a&&s||r&&s)return-1}return 0}e.exports=t},function(e,n,t){function a(e,n,t){if(!r(t))return!1;var a=typeof n;if("number"==a?s(t)&&o(n,t.length):"string"==a&&n in t){var l=t[n];return e===e?e===l:l!==l}return!1}var s=t(209),o=t(216),r=t(203);e.exports=a},function(e,n,t){var a=t(257);e.exports=function(e,n){return""===n?!0:-1!==a(e).indexOf(n)}},function(e,n){e.exports=function(e){return null==e?"":""+e}},function(e,n){e.exports={config:{siteTitle:"FreeCodeCamp Wiki",headerColor:"#006400",linkPrefix:"/wiki"},relativePath:"",pages:[{file:{dirname:".",basename:"_template.jsx",name:"_template",extname:".jsx",extSegments:[".jsx"],ext:"jsx"},requirePath:"_template.jsx",templatePath:"/./"},{file:{dirname:"en",basename:"_template.jsx",name:"_template",extname:".jsx",extSegments:[".jsx"],ext:"jsx"},requirePath:"en/_template.jsx",templatePath:"/en/"},{file:{dirname:"en/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/index.md",data:{title:"10 Steps To Plan Better So You Can Write Less Code",order:5},path:"/en/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/"},{file:{dirname:"en/Academic-Honesty-Policy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Academic-Honesty-Policy/index.md",data:{title:"Academic Honesty Policy",order:5},path:"/en/Academic-Honesty-Policy/"},{file:{dirname:"en/Algorithm-Arguments-Optional",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Arguments-Optional/index.md",data:{title:"Algorithm Arguments Optional",order:5},path:"/en/Algorithm-Arguments-Optional/"},{file:{dirname:"en/Algorithm-Binary-Agents",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Binary-Agents/index.md",data:{title:"Algorithm Binary Agents",order:5},path:"/en/Algorithm-Binary-Agents/"},{file:{dirname:"en/Algorithm-Boo-who",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Boo-who/index.md",data:{title:"Algorithm Boo who",order:5},path:"/en/Algorithm-Boo-who/"},{file:{dirname:"en/Algorithm-Caesars-Cipher",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Caesars-Cipher/index.md",data:{title:"Algorithm Caesars Cipher",order:5},path:"/en/Algorithm-Caesars-Cipher/"},{file:{dirname:"en/Algorithm-Check-for-Palindromes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Check-for-Palindromes/index.md",data:{title:"Algorithm Check for Palindromes",order:5},path:"/en/Algorithm-Check-for-Palindromes/"},{file:{dirname:"en/Algorithm-Chunky-Monkey",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Chunky-Monkey/index.md",data:{title:"Algorithm Chunky Monkey",order:5},path:"/en/Algorithm-Chunky-Monkey/"},{file:{dirname:"en/Algorithm-Confirm-the-Ending",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Confirm-the-Ending/index.md",data:{title:"Algorithm Confirm the Ending",order:5},path:"/en/Algorithm-Confirm-the-Ending/"},{file:{dirname:"en/Algorithm-Convert-HTML-Entities",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Convert-HTML-Entities/index.md",data:{title:"Algorithm Convert HTML Entities",order:5},path:"/en/Algorithm-Convert-HTML-Entities/"},{file:{dirname:"en/Algorithm-Diff-Two-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Diff-Two-Arrays/index.md",data:{title:"Algorithm Diff Two Arrays",order:5},path:"/en/Algorithm-Diff-Two-Arrays/"},{file:{dirname:"en/Algorithm-DNA-Pairing",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-DNA-Pairing/index.md",data:{title:"Algorithm DNA Pairing",order:5},path:"/en/Algorithm-DNA-Pairing/"},{file:{dirname:"en/Algorithm-Drop-it",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Drop-it/index.md",data:{title:"Algorithm Drop it",order:5},path:"/en/Algorithm-Drop-it/"},{file:{dirname:"en/Algorithm-Everything-be-True",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Everything-be-True/index.md",data:{title:"Algorithm Everything be True",order:5},path:"/en/Algorithm-Everything-be-True/"},{file:{dirname:"en/Algorithm-Exact-Change",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Exact-Change/index.md",data:{title:"Algorithm Exact Change",order:5},path:"/en/Algorithm-Exact-Change/"},{file:{dirname:"en/Algorithm-Factorialize-a-Number",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Factorialize-a-Number/index.md",data:{title:"Algorithm Factorialize a Number",order:5},path:"/en/Algorithm-Factorialize-a-Number/"},{file:{dirname:"en/Algorithm-Falsy-Bouncer",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Falsy-Bouncer/index.md",data:{title:"Algorithm Falsy Bouncer",order:5},path:"/en/Algorithm-Falsy-Bouncer/"},{file:{dirname:"en/Algorithm-Find-The-Longest-Word-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Find-The-Longest-Word-in-a-String/index.md",data:{title:"Algorithm Find The Longest Word in a String",order:5},path:"/en/Algorithm-Find-The-Longest-Word-in-a-String/"},{file:{dirname:"en/Algorithm-Finders-Keepers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Finders-Keepers/index.md",data:{title:"Algorithm Finders Keepers",order:5},path:"/en/Algorithm-Finders-Keepers/"},{file:{dirname:"en/Algorithm-Friendly-Date-Ranges",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Friendly-Date-Ranges/index.md",data:{title:"Algorithm Friendly Date Ranges",order:5},path:"/en/Algorithm-Friendly-Date-Ranges/"},{file:{dirname:"en/Algorithm-Inventory-Update",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Inventory-Update/index.md",data:{title:"Algorithm Inventory Update",order:5},path:"/en/Algorithm-Inventory-Update/"},{file:{dirname:"en/Algorithm-Make-a-Person",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Make-a-Person/index.md",data:{title:"Algorithm Make a Person",order:5},path:"/en/Algorithm-Make-a-Person/"},{file:{dirname:"en/Algorithm-Map-the-Debris",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Map-the-Debris/index.md",data:{title:"Algorithm Map the Debris",order:5},path:"/en/Algorithm-Map-the-Debris/"},{file:{dirname:"en/Algorithm-Missing-letters",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Missing-letters/index.md",data:{title:"Algorithm Missing letters",order:5},path:"/en/Algorithm-Missing-letters/"},{file:{dirname:"en/Algorithm-Mutations",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Mutations/index.md",data:{title:"Algorithm Mutations",order:5},path:"/en/Algorithm-Mutations/"},{file:{dirname:"en/Algorithm-No-Repeats-Please",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-No-Repeats-Please/index.md",data:{title:"Algorithm No Repeats Please",order:5},path:"/en/Algorithm-No-Repeats-Please/"},{file:{dirname:"en/Algorithm-Pairwise",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Pairwise/index.md",data:{title:"Algorithm Pairwise",order:5},path:"/en/Algorithm-Pairwise/"},{file:{dirname:"en/Algorithm-Pig-Latin",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Pig-Latin/index.md",data:{title:"Algorithm Pig Latin",order:5},path:"/en/Algorithm-Pig-Latin/"},{file:{dirname:"en/Algorithm-Repeat-a-String-Repeat-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Repeat-a-String-Repeat-a-String/index.md",data:{title:"Algorithm Repeat a String Repeat a String",order:5},path:"/en/Algorithm-Repeat-a-String-Repeat-a-String/"},{file:{dirname:"en/Algorithm-Return-Largest-Numbers-in-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Return-Largest-Numbers-in-Arrays/index.md",data:{title:"Algorithm Return Largest Numbers in Arrays",order:5},path:"/en/Algorithm-Return-Largest-Numbers-in-Arrays/"},{file:{dirname:"en/Algorithm-Reverse-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Reverse-a-String/index.md",data:{title:"Algorithm Reverse a String",order:5},path:"/en/Algorithm-Reverse-a-String/"},{file:{dirname:"en/Algorithm-Roman-Numeral-Converter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Roman-Numeral-Converter/index.md",data:{title:"Algorithm Roman Numeral Converter",order:5},path:"/en/Algorithm-Roman-Numeral-Converter/"},{file:{dirname:"en/Algorithm-Search-and-Replace",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Search-and-Replace/index.md",data:{title:"Algorithm Search and Replace",order:5},path:"/en/Algorithm-Search-and-Replace/"},{file:{dirname:"en/Algorithm-Seek-and-Destroy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Seek-and-Destroy/index.md",data:{title:"Algorithm Seek and Destroy",order:5},path:"/en/Algorithm-Seek-and-Destroy/"},{file:{dirname:"en/Algorithm-Slasher-Flick",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Slasher-Flick/index.md",data:{title:"Algorithm Slasher Flick",order:5},path:"/en/Algorithm-Slasher-Flick/"},{file:{dirname:"en/Algorithm-Smallest-Common-Multiple",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Smallest-Common-Multiple/index.md",data:{title:"Algorithm Smallest Common Multiple",order:5},path:"/en/Algorithm-Smallest-Common-Multiple/"},{file:{dirname:"en/Algorithm-Sorted-Union",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Sorted-Union/index.md",data:{title:"Algorithm Sorted Union",order:5},path:"/en/Algorithm-Sorted-Union/"},{file:{dirname:"en/Algorithm-Spinal-Tap-Case",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Spinal-Tap-Case/index.md",data:{title:"Algorithm Spinal Tap Case",order:5},path:"/en/Algorithm-Spinal-Tap-Case/"},{file:{dirname:"en/Algorithm-Steamroller",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Steamroller/index.md",data:{title:"Algorithm Steamroller",order:5},path:"/en/Algorithm-Steamroller/"},{file:{dirname:"en/Algorithm-Style-Guide",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Style-Guide/index.md",data:{title:"Algorithm Style Guide",order:5},path:"/en/Algorithm-Style-Guide/"},{file:{dirname:"en/Algorithm-Sum-All-Numbers-in-a-Range",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Sum-All-Numbers-in-a-Range/index.md",data:{title:"Algorithm Sum All Numbers in a Range",order:5},path:"/en/Algorithm-Sum-All-Numbers-in-a-Range/"},{file:{dirname:"en/Algorithm-Sum-All-Odd-Fibonacci-Numbers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Sum-All-Odd-Fibonacci-Numbers/index.md",data:{title:"Algorithm Sum All Odd Fibonacci Numbers",order:5},path:"/en/Algorithm-Sum-All-Odd-Fibonacci-Numbers/"},{file:{dirname:"en/Algorithm-Sum-All-Primes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Sum-All-Primes/index.md",data:{title:"Algorithm Sum All Primes",order:5},path:"/en/Algorithm-Sum-All-Primes/"},{file:{dirname:"en/Algorithm-Symmetric-Difference",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Symmetric-Difference/index.md",data:{title:"Algorithm Symmetric Difference",order:5},path:"/en/Algorithm-Symmetric-Difference/"},{file:{dirname:"en/Algorithm-Title-Case-a-Sentence",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Title-Case-a-Sentence/index.md",data:{title:"Algorithm Title Case a Sentence",order:5},path:"/en/Algorithm-Title-Case-a-Sentence/"},{file:{dirname:"en/Algorithm-Truncate-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Truncate-a-String/index.md",data:{title:"Algorithm Truncate a String",order:5},path:"/en/Algorithm-Truncate-a-String/"},{file:{dirname:"en/Algorithm-Validate-US-Telephone-Numbers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Validate-US-Telephone-Numbers/index.md",data:{title:"Algorithm Validate US Telephone Numbers",order:5},path:"/en/Algorithm-Validate-US-Telephone-Numbers/"},{file:{dirname:"en/Algorithm-Where-art-thou",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Where-art-thou/index.md",data:{title:"Algorithm Where art thou",order:5},path:"/en/Algorithm-Where-art-thou/"},{file:{dirname:"en/Algorithm-Where-do-I-belong",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Where-do-I-belong/index.md",data:{title:"Algorithm Where do I belong",order:5},path:"/en/Algorithm-Where-do-I-belong/"},{file:{dirname:"en/Algorithm-Wiki-Template",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Algorithm-Wiki-Template/index.md",data:{title:"Algorithm Wiki Template",order:5},path:"/en/Algorithm-Wiki-Template/"},{file:{dirname:"en/August-2015-Improvements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/August-2015-Improvements/index.md",data:{title:"August 2015 Improvements",order:5},path:"/en/August-2015-Improvements/"},{file:{dirname:"en/August-Live-Stream",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/August-Live-Stream/index.md",data:{title:"August Live Stream",order:5},path:"/en/August-Live-Stream/"},{file:{dirname:"en/Back-End-Project-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Back-End-Project-Resources/index.md",data:{title:"Back End Project Resources",order:5},path:"/en/Back-End-Project-Resources/"},{file:{dirname:"en/Bonus-SocketIO",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Bonus-SocketIO/index.md",data:{title:"Bonus SocketIO",order:5},path:"/en/Bonus-SocketIO/"},{file:{dirname:"en/bot-announce",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/bot-announce/index.md",data:{title:"bot announce",order:5},path:"/en/bot-announce/"},{file:{dirname:"en/camperbot",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/camperbot/index.md",data:{title:"camperbot",order:5},path:"/en/camperbot/"},{file:{dirname:"en/Challenge-Access-Array-Data-with-Indexes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Access-Array-Data-with-Indexes/index.md",data:{title:"Challenge Access Array Data with Indexes",order:5},path:"/en/Challenge-Access-Array-Data-with-Indexes/"},{file:{dirname:"en/Challenge-Access-Multi-Dimensional-Arrays-With-Indexes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Access-Multi-Dimensional-Arrays-With-Indexes/index.md",data:{title:"Challenge Access Multi Dimensional Arrays With Indexes",order:5},path:"/en/Challenge-Access-Multi-Dimensional-Arrays-With-Indexes/"},{file:{dirname:"en/Challenge-Accessing-Nested-Arrays-In-Json",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Accessing-Nested-Arrays-In-Json/index.md",data:{title:"Challenge Accessing Nested Arrays In Json",order:5},path:"/en/Challenge-Accessing-Nested-Arrays-In-Json/"},{file:{dirname:"en/Challenge-Accessing-Nested-Objects-In-Json",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Accessing-Nested-Objects-In-Json/index.md",data:{title:"Challenge Accessing Nested Objects In Json",order:5},path:"/en/Challenge-Accessing-Nested-Objects-In-Json/"},{file:{dirname:"en/Challenge-Accessing-Objects-Properties-With-Bracket-Notation",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Accessing-Objects-Properties-With-Bracket-Notation/index.md",data:{title:"Challenge Accessing Objects Properties With Bracket Notation",order:5},path:"/en/Challenge-Accessing-Objects-Properties-With-Bracket-Notation/"},{file:{dirname:"en/Challenge-Accessing-Objects-Properties-With-The-Dot-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Accessing-Objects-Properties-With-The-Dot-Operator/index.md",data:{title:"Challenge Accessing Objects Properties With The Dot Operator",order:5},path:"/en/Challenge-Accessing-Objects-Properties-With-The-Dot-Operator/"},{file:{dirname:"en/Challenge-Accessing-Objects-Properties-With-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Accessing-Objects-Properties-With-Variables/index.md",data:{title:"Challenge Accessing Objects Properties With Variables",order:5},path:"/en/Challenge-Accessing-Objects-Properties-With-Variables/"},{file:{dirname:"en/Challenge-Add-a-Negative-Margin-to-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-a-Negative-Margin-to-an-Element/index.md",data:{title:"Challenge Add a Negative Margin to an Element",order:5},path:"/en/Challenge-Add-a-Negative-Margin-to-an-Element/"},{file:{dirname:"en/Challenge-Add-a-Submit-Button-to-a-Form",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-a-Submit-Button-to-a-Form/index.md",data:{title:"Challenge Add a Submit Button to a Form",order:5},path:"/en/Challenge-Add-a-Submit-Button-to-a-Form/"},{file:{
dirname:"en/Challenge-Add-Alt-Text-to-an-Image-for-Accessibility",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Alt-Text-to-an-Image-for-Accessibility/index.md",data:{title:"Challenge Add Alt Text to an Image for Accessibility",order:5},path:"/en/Challenge-Add-Alt-Text-to-an-Image-for-Accessibility/"},{file:{dirname:"en/Challenge-Add-Borders-Around-your-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Borders-Around-your-Elements/index.md",data:{title:"Challenge Add Borders Around your Elements",order:5},path:"/en/Challenge-Add-Borders-Around-your-Elements/"},{file:{dirname:"en/Challenge-Add-Different-Margins-to-Each-Side-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Different-Margins-to-Each-Side-of-an-Element/index.md",data:{title:"Challenge Add Different Margins to Each Side of an Element",order:5},path:"/en/Challenge-Add-Different-Margins-to-Each-Side-of-an-Element/"},{file:{dirname:"en/Challenge-Add-Different-Padding-to-Each-Side-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Different-Padding-to-Each-Side-of-an-Element/index.md",data:{title:"Challenge Add Different Padding to Each Side of an Element",order:5},path:"/en/Challenge-Add-Different-Padding-to-Each-Side-of-an-Element/"},{file:{dirname:"en/Challenge-Add-Elements-within-your-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Elements-within-your-Bootstrap-Wells/index.md",data:{title:"Challenge Add Elements within your Bootstrap Wells",order:5},path:"/en/Challenge-Add-Elements-within-your-Bootstrap-Wells/"},{file:{dirname:"en/Challenge-Add-Font-Awesome-Icons-to-all-of-our-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Font-Awesome-Icons-to-all-of-our-Buttons/index.md",data:{title:"Challenge Add Font Awesome Icons to all of our Buttons",order:5},path:"/en/Challenge-Add-Font-Awesome-Icons-to-all-of-our-Buttons/"},{file:{dirname:"en/Challenge-Add-Font-Awesome-Icons-to-our-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Font-Awesome-Icons-to-our-Buttons/index.md",data:{title:"Challenge Add Font Awesome Icons to our Buttons",order:5},path:"/en/Challenge-Add-Font-Awesome-Icons-to-our-Buttons/"},{file:{dirname:"en/Challenge-Add-ID-Attributes-to-Bootstrap-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-ID-Attributes-to-Bootstrap-Elements/index.md",data:{title:"Challenge Add ID Attributes to Bootstrap Elements",order:5},path:"/en/Challenge-Add-ID-Attributes-to-Bootstrap-Elements/"},{file:{dirname:"en/Challenge-Add-Images-to-your-Website",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Images-to-your-Website/index.md",data:{title:"Challenge Add Images to your Website",order:5},path:"/en/Challenge-Add-Images-to-your-Website/"},{file:{dirname:"en/Challenge-Add-New-Properties-to-a-JavaScript-Object",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-New-Properties-to-a-JavaScript-Object/index.md",data:{title:"Challenge Add New Properties to a JavaScript Object",order:5},path:"/en/Challenge-Add-New-Properties-to-a-JavaScript-Object/"},{file:{dirname:"en/Challenge-Add-Placeholder-Text-to-a-Text-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Placeholder-Text-to-a-Text-Field/index.md",data:{title:"Challenge Add Placeholder Text to a Text Field",order:5},path:"/en/Challenge-Add-Placeholder-Text-to-a-Text-Field/"},{file:{dirname:"en/Challenge-Add-Rounded-Corners-with-a-Border-Radius",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Rounded-Corners-with-a-Border-Radius/index.md",data:{title:"Challenge Add Rounded Corners with a Border Radius",order:5},path:"/en/Challenge-Add-Rounded-Corners-with-a-Border-Radius/"},{file:{dirname:"en/Challenge-Add-Two-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-Two-Numbers-with-JavaScript/index.md",data:{title:"Challenge Add Two Numbers with JavaScript",order:5},path:"/en/Challenge-Add-Two-Numbers-with-JavaScript/"},{file:{dirname:"en/Challenge-Add-your-JavaScript-Slot-Machine-Slots",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Add-your-JavaScript-Slot-Machine-Slots/index.md",data:{title:"Challenge Add your JavaScript Slot Machine Slots",order:5},path:"/en/Challenge-Add-your-JavaScript-Slot-Machine-Slots/"},{file:{dirname:"en/Challenge-Adding-A-Default-Option-In-Switch-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Adding-A-Default-Option-In-Switch-Statements/index.md",data:{title:"Challenge Adding A Default Option In Switch Statements",order:5},path:"/en/Challenge-Adding-A-Default-Option-In-Switch-Statements/"},{file:{dirname:"en/Challenge-Adjust-the-Margin-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Adjust-the-Margin-of-an-Element/index.md",data:{title:"Challenge Adjust the Margin of an Element",order:5},path:"/en/Challenge-Adjust-the-Margin-of-an-Element/"},{file:{dirname:"en/Challenge-Adjusting-the-Padding-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Adjusting-the-Padding-of-an-Element/index.md",data:{title:"Challenge Adjusting the Padding of an Element",order:5},path:"/en/Challenge-Adjusting-the-Padding-of-an-Element/"},{file:{dirname:"en/Challenge-Appending-Variables-to-Strings",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Appending-Variables-to-Strings/index.md",data:{title:"Challenge Appending Variables to Strings",order:5},path:"/en/Challenge-Appending-Variables-to-Strings/"},{file:{dirname:"en/Challenge-Apply-the-Default-Bootstrap-Button-Style",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Apply-the-Default-Bootstrap-Button-Style/index.md",data:{title:"Challenge Apply the Default Bootstrap Button Style",order:5},path:"/en/Challenge-Apply-the-Default-Bootstrap-Button-Style/"},{file:{dirname:"en/Challenge-Assignment-With-A-Returned-Value",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Assignment-With-A-Returned-Value/index.md",data:{title:"Challenge Assignment With A Returned Value",order:5},path:"/en/Challenge-Assignment-With-A-Returned-Value/"},{file:{dirname:"en/Challenge-Assignment-with-Divided-by-Equals",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Assignment-with-Divided-by-Equals/index.md",data:{title:"Challenge Assignment with Divided by Equals",order:5},path:"/en/Challenge-Assignment-with-Divided-by-Equals/"},{file:{dirname:"en/Challenge-Assignment-with-Minus-Equals",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Assignment-with-Minus-Equals/index.md",data:{title:"Challenge Assignment with Minus Equals",order:5},path:"/en/Challenge-Assignment-with-Minus-Equals/"},{file:{dirname:"en/Challenge-Assignment-with-Plus-Equals",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Assignment-with-Plus-Equals/index.md",data:{title:"Challenge Assignment with Plus Equals",order:5},path:"/en/Challenge-Assignment-with-Plus-Equals/"},{file:{dirname:"en/Challenge-Assignment-with-Times-Equals",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Assignment-with-Times-Equals/index.md",data:{title:"Challenge Assignment with Times Equals",order:5},path:"/en/Challenge-Assignment-with-Times-Equals/"},{file:{dirname:"en/Challenge-Bring-your-JavaScript-Slot-Machine-to-Life",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Bring-your-JavaScript-Slot-Machine-to-Life/index.md",data:{title:"Challenge Bring your JavaScript Slot Machine to Life",order:5},path:"/en/Challenge-Bring-your-JavaScript-Slot-Machine-to-Life/"},{file:{dirname:"en/Challenge-Build-JavaScript-Objects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Build-JavaScript-Objects/index.md",data:{title:"Challenge Build JavaScript Objects",order:5},path:"/en/Challenge-Build-JavaScript-Objects/"},{file:{dirname:"en/Challenge-Call-out-Optional-Actions-with-Button-Info",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Call-out-Optional-Actions-with-Button-Info/index.md",data:{title:"Challenge Call out Optional Actions with Button Info",order:5},path:"/en/Challenge-Call-out-Optional-Actions-with-Button-Info/"},{file:{dirname:"en/Challenge-Center-Text-with-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Center-Text-with-Bootstrap/index.md",data:{title:"Challenge Center Text with Bootstrap",order:5},path:"/en/Challenge-Center-Text-with-Bootstrap/"},{file:{dirname:"en/Challenge-Chaining-If-Else-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Chaining-If-Else-Statements/index.md",data:{title:"Challenge Chaining If Else Statements",order:5},path:"/en/Challenge-Chaining-If-Else-Statements/"},{file:{dirname:"en/Challenge-Change-Text-Inside-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Change-Text-Inside-an-Element-Using-jQuery/index.md",data:{title:"Challenge Change Text Inside an Element Using jQuery",order:5},path:"/en/Challenge-Change-Text-Inside-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Change-Text-with-Click-Events",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Change-Text-with-Click-Events/index.md",data:{title:"Challenge Change Text with Click Events",order:5},path:"/en/Challenge-Change-Text-with-Click-Events/"},{file:{dirname:"en/Challenge-Change-the-Color-of-Text",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Change-the-Color-of-Text/index.md",data:{title:"Challenge Change the Color of Text",order:5},path:"/en/Challenge-Change-the-Color-of-Text/"},{file:{dirname:"en/Challenge-Change-the-CSS-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Change-the-CSS-of-an-Element-Using-jQuery/index.md",data:{title:"Challenge Change the CSS of an Element Using jQuery",order:5},path:"/en/Challenge-Change-the-CSS-of-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Change-the-Font-Size-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Change-the-Font-Size-of-an-Element/index.md",data:{title:"Challenge Change the Font Size of an Element",order:5},path:"/en/Challenge-Change-the-Font-Size-of-an-Element/"},{file:{dirname:"en/Challenge-Check-Radio-Buttons-and-Checkboxes-by-Default",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Check-Radio-Buttons-and-Checkboxes-by-Default/index.md",data:{title:"Challenge Check Radio Buttons and Checkboxes by Default",order:5},path:"/en/Challenge-Check-Radio-Buttons-and-Checkboxes-by-Default/"},{file:{dirname:"en/Challenge-Check-the-Length-Property-of-a-String-Variable",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Check-the-Length-Property-of-a-String-Variable/index.md",data:{title:"Challenge Check the Length Property of a String Variable",order:5},path:"/en/Challenge-Check-the-Length-Property-of-a-String-Variable/"},{file:{dirname:"en/Challenge-Clone-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Clone-an-Element-Using-jQuery/index.md",data:{title:"Challenge Clone an Element Using jQuery",order:5},path:"/en/Challenge-Clone-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Comment-out-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comment-out-HTML/index.md",data:{title:"Challenge Comment out HTML",order:5},path:"/en/Challenge-Comment-out-HTML/"},{file:{dirname:"en/Challenge-Comment-your-JavaScript-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comment-your-JavaScript-Code/index.md",data:{title:"Challenge Comment your JavaScript Code",order:5},path:"/en/Challenge-Comment-your-JavaScript-Code/"},{file:{dirname:"en/Challenge-Comparison-With-The-Equality-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Equality-Operator/index.md",data:{title:"Challenge Comparison With The Equality Operator",order:5},path:"/en/Challenge-Comparison-With-The-Equality-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Greater-Than-Equal-To-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Greater-Than-Equal-To-Operator/index.md",data:{title:"Challenge Comparison With The Greater Than Equal To Operator",order:5},path:"/en/Challenge-Comparison-With-The-Greater-Than-Equal-To-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Greater-Than-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Greater-Than-Operator/index.md",data:{title:"Challenge Comparison With The Greater Than Operator",order:5},path:"/en/Challenge-Comparison-With-The-Greater-Than-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Inequality-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Inequality-Operator/index.md",data:{title:"Challenge Comparison With The Inequality Operator",order:5},path:"/en/Challenge-Comparison-With-The-Inequality-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Less-Than-Equal-To-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Less-Than-Equal-To-Operator/index.md",data:{title:"Challenge Comparison With The Less Than Equal To Operator",order:5},path:"/en/Challenge-Comparison-With-The-Less-Than-Equal-To-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Less-Than-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Less-Than-Operator/index.md",data:{title:"Challenge Comparison With The Less Than Operator",order:5},path:"/en/Challenge-Comparison-With-The-Less-Than-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Strict-Equality-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Strict-Equality-Operator/index.md",data:{title:"Challenge Comparison With The Strict Equality Operator",order:5},path:"/en/Challenge-Comparison-With-The-Strict-Equality-Operator/"},{file:{dirname:"en/Challenge-Comparison-With-The-Strict-Inequality-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparison-With-The-Strict-Inequality-Operator/index.md",data:{title:"Challenge Comparison With The Strict Inequality Operator",order:5},path:"/en/Challenge-Comparison-With-The-Strict-Inequality-Operator/"},{file:{dirname:"en/Challenge-Comparisons-With-The-Logical-And-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparisons-With-The-Logical-And-Operator/index.md",data:{title:"Challenge Comparisons With The Logical And Operator",order:5},path:"/en/Challenge-Comparisons-With-The-Logical-And-Operator/"},{file:{dirname:"en/Challenge-Comparisons-With-The-Logical-Or-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Comparisons-With-The-Logical-Or-Operator/index.md",data:{title:"Challenge Comparisons With The Logical Or Operator",order:5},path:"/en/Challenge-Comparisons-With-The-Logical-Or-Operator/"},{file:{dirname:"en/Challenge-Concatenate-Strings-with-.concat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Concatenate-Strings-with-.concat/index.md",data:{title:"Challenge Concatenate Strings with .concat",order:5},path:"/en/Challenge-Concatenate-Strings-with-.concat/"},{file:{dirname:"en/Challenge-Concatenating-Strings-with-Plus-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Concatenating-Strings-with-Plus-Operator/index.md",data:{title:"Challenge Concatenating Strings with Plus Operator",order:5},path:"/en/Challenge-Concatenating-Strings-with-Plus-Operator/"},{file:{dirname:"en/Challenge-Concatenating-Strings-with-the-Plus-Equals-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Concatenating-Strings-with-the-Plus-Equals-Operator/index.md",data:{title:"Challenge Concatenating Strings with the Plus Equals Operator",order:5},path:"/en/Challenge-Concatenating-Strings-with-the-Plus-Equals-Operator/"},{file:{dirname:"en/Challenge-Condense-arrays-with-reduce",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Condense-arrays-with-reduce/index.md",data:{title:"Challenge Condense arrays with reduce",order:5},path:"/en/Challenge-Condense-arrays-with-reduce/"},{file:{dirname:"en/Challenge-Construct-JavaScript-Objects-with-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Construct-JavaScript-Objects-with-Functions/index.md",data:{title:"Challenge Construct JavaScript Objects with Functions",order:5},path:"/en/Challenge-Construct-JavaScript-Objects-with-Functions/"},{file:{dirname:"en/Challenge-Constructing-Strings-with-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Constructing-Strings-with-Variables/index.md",data:{title:"Challenge Constructing Strings with Variables",order:5},path:"/en/Challenge-Constructing-Strings-with-Variables/"},{file:{dirname:"en/Challenge-Convert-JSON-Data-to-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Convert-JSON-Data-to-HTML/index.md",data:{title:"Challenge Convert JSON Data to HTML",order:5},path:"/en/Challenge-Convert-JSON-Data-to-HTML/"},{file:{dirname:"en/Challenge-Count-Backwards-With-a-For-Loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Count-Backwards-With-a-For-Loop/index.md",data:{title:"Challenge Count Backwards With a For Loop",order:5},path:"/en/Challenge-Count-Backwards-With-a-For-Loop/"},{file:{dirname:"en/Challenge-Create-a-Block-Element-Bootstrap-Button",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Block-Element-Bootstrap-Button/index.md",data:{title:"Challenge Create a Block Element Bootstrap Button",order:5},path:"/en/Challenge-Create-a-Block-Element-Bootstrap-Button/"},{file:{dirname:"en/Challenge-Create-a-Bootstrap-Button",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Bootstrap-Button/index.md",data:{title:"Challenge Create a Bootstrap Button",order:5},path:"/en/Challenge-Create-a-Bootstrap-Button/"},{file:{dirname:"en/Challenge-Create-a-Bootstrap-Headline",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Bootstrap-Headline/index.md",data:{title:"Challenge Create a Bootstrap Headline",order:5},path:"/en/Challenge-Create-a-Bootstrap-Headline/"},{file:{dirname:"en/Challenge-Create-a-Bootstrap-Row",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Bootstrap-Row/index.md",data:{title:"Challenge Create a Bootstrap Row",order:5},path:"/en/Challenge-Create-a-Bootstrap-Row/"},{file:{dirname:"en/Challenge-Create-a-Bulleted-Unordered-List",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Bulleted-Unordered-List/index.md",data:{title:"Challenge Create a Bulleted Unordered List",order:5},path:"/en/Challenge-Create-a-Bulleted-Unordered-List/"},{file:{dirname:"en/Challenge-Create-a-Class-to-Target-with-jQuery-Selectors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Class-to-Target-with-jQuery-Selectors/index.md",data:{title:"Challenge Create a Class to Target with jQuery Selectors",order:5},path:"/en/Challenge-Create-a-Class-to-Target-with-jQuery-Selectors/"},{file:{dirname:"en/Challenge-Create-a-Custom-Heading",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Custom-Heading/index.md",data:{title:"Challenge Create a Custom Heading",order:5},path:"/en/Challenge-Create-a-Custom-Heading/"},{file:{dirname:"en/Challenge-Create-a-Form-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Form-Element/index.md",data:{title:"Challenge Create a Form Element",order:5},path:"/en/Challenge-Create-a-Form-Element/"},{file:{dirname:"en/Challenge-Create-a-JavaScript-Slot-Machine",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-JavaScript-Slot-Machine/index.md",data:{title:"Challenge Create a JavaScript Slot Machine",order:5},path:"/en/Challenge-Create-a-JavaScript-Slot-Machine/"},{file:{dirname:"en/Challenge-Create-a-Set-of-Checkboxes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Set-of-Checkboxes/index.md",data:{title:"Challenge Create a Set of Checkboxes",order:5},path:"/en/Challenge-Create-a-Set-of-Checkboxes/"},{file:{dirname:"en/Challenge-Create-a-Set-of-Radio-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Set-of-Radio-Buttons/index.md",data:{title:"Challenge Create a Set of Radio Buttons",order:5},path:"/en/Challenge-Create-a-Set-of-Radio-Buttons/"},{file:{dirname:"en/Challenge-Create-a-Text-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-a-Text-Field/index.md",data:{title:"Challenge Create a Text Field",order:5},path:"/en/Challenge-Create-a-Text-Field/"},{file:{dirname:"en/Challenge-Create-an-Ordered-List",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-an-Ordered-List/index.md",data:{title:"Challenge Create an Ordered List",order:5},path:"/en/Challenge-Create-an-Ordered-List/"},{file:{dirname:"en/Challenge-Create-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-Bootstrap-Wells/index.md",data:{title:"Challenge Create Bootstrap Wells",order:5},path:"/en/Challenge-Create-Bootstrap-Wells/"},{file:{dirname:"en/Challenge-Create-Decimal-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Create-Decimal-Numbers-with-JavaScript/index.md",data:{title:"Challenge Create Decimal Numbers with JavaScript",order:5},path:"/en/Challenge-Create-Decimal-Numbers-with-JavaScript/"},{file:{dirname:"en/Challenge-Declare-JavaScript-Objects-as-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Declare-JavaScript-Objects-as-Variables/index.md",data:{title:"Challenge Declare JavaScript Objects as Variables",order:5},path:"/en/Challenge-Declare-JavaScript-Objects-as-Variables/"},{file:{dirname:"en/Challenge-Declare-JavaScript-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Declare-JavaScript-Variables/index.md",data:{title:"Challenge Declare JavaScript Variables",order:5},path:"/en/Challenge-Declare-JavaScript-Variables/"},{file:{dirname:"en/Challenge-Declare-String-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Declare-String-Variables/index.md",data:{title:"Challenge Declare String Variables",order:5},path:"/en/Challenge-Declare-String-Variables/"},{file:{dirname:"en/Challenge-Decrement-a-Number-with-Javascript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Decrement-a-Number-with-Javascript/index.md",data:{title:"Challenge Decrement a Number with Javascript",order:5},path:"/en/Challenge-Decrement-a-Number-with-Javascript/"},{file:{dirname:"en/Challenge-Delete-HTML-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Delete-HTML-Elements/index.md",data:{title:"Challenge Delete HTML Elements",order:5},path:"/en/Challenge-Delete-HTML-Elements/"},{file:{dirname:"en/Challenge-Delete-Properties-from-a-JavaScript-Object",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Delete-Properties-from-a-JavaScript-Object/index.md",data:{title:"Challenge Delete Properties from a JavaScript Object",order:5},path:"/en/Challenge-Delete-Properties-from-a-JavaScript-Object/"},{file:{dirname:"en/Challenge-Delete-your-jQuery-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Delete-your-jQuery-Functions/index.md",data:{title:"Challenge Delete your jQuery Functions",order:5},path:"/en/Challenge-Delete-your-jQuery-Functions/"},{file:{dirname:"en/Challenge-Disable-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Disable-an-Element-Using-jQuery/index.md",data:{title:"Challenge Disable an Element Using jQuery",order:5},path:"/en/Challenge-Disable-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Ditch-Custom-CSS-for-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Ditch-Custom-CSS-for-Bootstrap/index.md",data:{title:"Challenge Ditch Custom CSS for Bootstrap",order:5},path:"/en/Challenge-Ditch-Custom-CSS-for-Bootstrap/"},{file:{dirname:"en/Challenge-Divide-One-Number-by-Another-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Divide-One-Number-by-Another-with-JavaScript/index.md",data:{title:"Challenge Divide One Number by Another with JavaScript",order:5},path:"/en/Challenge-Divide-One-Number-by-Another-with-JavaScript/"},{file:{dirname:"en/Challenge-Escape-Sequences-in-Strings",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Escape-Sequences-in-Strings/index.md",data:{title:"Challenge Escape Sequences in Strings",order:5},path:"/en/Challenge-Escape-Sequences-in-Strings/"},{file:{dirname:"en/Challenge-Escaping-Literal-Quotes-in-Strings",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Escaping-Literal-Quotes-in-Strings/index.md",data:{title:"Challenge Escaping Literal Quotes in Strings",order:5},path:"/en/Challenge-Escaping-Literal-Quotes-in-Strings/"},{file:{dirname:"en/Challenge-Fill-in-the-Blank-with-Placeholder-Text",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Fill-in-the-Blank-with-Placeholder-Text/index.md",data:{title:"Challenge Fill in the Blank with Placeholder Text",order:5},path:"/en/Challenge-Fill-in-the-Blank-with-Placeholder-Text/"},{file:{dirname:"en/Challenge-Filter-Arrays-with-filter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Filter-Arrays-with-filter/index.md",data:{title:"Challenge Filter Arrays with filter",order:5},path:"/en/Challenge-Filter-Arrays-with-filter/"},{file:{dirname:"en/Challenge-Find-Numbers-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Find-Numbers-with-Regular-Expressions/index.md",data:{title:"Challenge Find Numbers with Regular Expressions",order:5},path:"/en/Challenge-Find-Numbers-with-Regular-Expressions/"},{file:{dirname:"en/Challenge-Find-the-Length-of-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Find-the-Length-of-a-String/index.md",data:{title:"Challenge Find the Length of a String",order:5},path:"/en/Challenge-Find-the-Length-of-a-String/"},{file:{dirname:"en/Challenge-Find-White-Space-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Find-White-Space-with-Regular-Expressions/index.md",data:{title:"Challenge Find White Space with Regular Expressions",order:5},path:"/en/Challenge-Find-White-Space-with-Regular-Expressions/"},{file:{dirname:"en/Challenge-Finding-a-Remainder-in-Javascript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Finding-a-Remainder-in-Javascript/index.md",data:{title:"Challenge Finding a Remainder in Javascript",order:5},path:"/en/Challenge-Finding-a-Remainder-in-Javascript/"},{file:{dirname:"en/Challenge-Generate-Random-Fractions-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Generate-Random-Fractions-with-JavaScript/index.md",data:{title:"Challenge Generate Random Fractions with JavaScript",order:5},path:"/en/Challenge-Generate-Random-Fractions-with-JavaScript/"},{file:{dirname:"en/Challenge-Generate-Random-Whole-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Generate-Random-Whole-Numbers-with-JavaScript/index.md",data:{title:"Challenge Generate Random Whole Numbers with JavaScript",order:5},path:"/en/Challenge-Generate-Random-Whole-Numbers-with-JavaScript/"},{file:{dirname:"en/Challenge-Generate-Random-Whole-Numbers-within-a-Range",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Generate-Random-Whole-Numbers-within-a-Range/index.md",data:{title:"Challenge Generate Random Whole Numbers within a Range",order:5},path:"/en/Challenge-Generate-Random-Whole-Numbers-within-a-Range/"},{file:{dirname:"en/Challenge-Get-Geo-location-Data",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Get-Geo-location-Data/index.md",data:{title:"Challenge Get Geo location Data",order:5},path:"/en/Challenge-Get-Geo-location-Data/"},{file:{dirname:"en/Challenge-Get-JSON-with-the-jQuery-getJSON-Method",
basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Get-JSON-with-the-jQuery-getJSON-Method/index.md",data:{title:"Challenge Get JSON with the jQuery getJSON Method",order:5},path:"/en/Challenge-Get-JSON-with-the-jQuery-getJSON-Method/"},{file:{dirname:"en/Challenge-Give-a-Background-Color-to-a-Div-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Give-a-Background-Color-to-a-Div-Element/index.md",data:{title:"Challenge Give a Background Color to a Div Element",order:5},path:"/en/Challenge-Give-a-Background-Color-to-a-Div-Element/"},{file:{dirname:"en/Challenge-Give-Each-Element-a-Unique-ID",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Give-Each-Element-a-Unique-ID/index.md",data:{title:"Challenge Give Each Element a Unique ID",order:5},path:"/en/Challenge-Give-Each-Element-a-Unique-ID/"},{file:{dirname:"en/Challenge-Give-your-JavaScript-Slot-Machine-some-stylish-images",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Give-your-JavaScript-Slot-Machine-some-stylish-images/index.md",data:{title:"Challenge Give your JavaScript Slot Machine some stylish images",order:5},path:"/en/Challenge-Give-your-JavaScript-Slot-Machine-some-stylish-images/"},{file:{dirname:"en/Challenge-Global-Scope-And-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Global-Scope-And-Functions/index.md",data:{title:"Challenge Global Scope And Functions",order:5},path:"/en/Challenge-Global-Scope-And-Functions/"},{file:{dirname:"en/Challenge-Global-Vs-Local-Scope-In-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Global-Vs-Local-Scope-In-Functions/index.md",data:{title:"Challenge Global Vs Local Scope In Functions",order:5},path:"/en/Challenge-Global-Vs-Local-Scope-In-Functions/"},{file:{dirname:"en/Challenge-Headline-with-the-h2-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Headline-with-the-h2-Element/index.md",data:{title:"Challenge Headline with the h2 Element",order:5},path:"/en/Challenge-Headline-with-the-h2-Element/"},{file:{dirname:"en/Challenge-House-our-page-within-a-Bootstrap-Container-Fluid-Div",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-House-our-page-within-a-Bootstrap-Container-Fluid-Div/index.md",data:{title:"Challenge House our page within a Bootstrap Container Fluid Div",order:5},path:"/en/Challenge-House-our-page-within-a-Bootstrap-Container-Fluid-Div/"},{file:{dirname:"en/Challenge-Import-a-Google-Font",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Import-a-Google-Font/index.md",data:{title:"Challenge Import a Google Font",order:5},path:"/en/Challenge-Import-a-Google-Font/"},{file:{dirname:"en/Challenge-Increment-a-Number-with-Javascript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Increment-a-Number-with-Javascript/index.md",data:{title:"Challenge Increment a Number with Javascript",order:5},path:"/en/Challenge-Increment-a-Number-with-Javascript/"},{file:{dirname:"en/Challenge-Inform-with-the-Paragraph-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Inform-with-the-Paragraph-Element/index.md",data:{title:"Challenge Inform with the Paragraph Element",order:5},path:"/en/Challenge-Inform-with-the-Paragraph-Element/"},{file:{dirname:"en/Challenge-Inherit-Styles-from-the-Body-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Inherit-Styles-from-the-Body-Element/index.md",data:{title:"Challenge Inherit Styles from the Body Element",order:5},path:"/en/Challenge-Inherit-Styles-from-the-Body-Element/"},{file:{dirname:"en/Challenge-Initializing-Variables-with-the-Equal-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Initializing-Variables-with-the-Equal-Operator/index.md",data:{title:"Challenge Initializing Variables with the Equal Operator",order:5},path:"/en/Challenge-Initializing-Variables-with-the-Equal-Operator/"},{file:{dirname:"en/Challenge-Introducing-Else-If-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Introducing-Else-If-Statements/index.md",data:{title:"Challenge Introducing Else If Statements",order:5},path:"/en/Challenge-Introducing-Else-If-Statements/"},{file:{dirname:"en/Challenge-Introducing-Else-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Introducing-Else-Statements/index.md",data:{title:"Challenge Introducing Else Statements",order:5},path:"/en/Challenge-Introducing-Else-Statements/"},{file:{dirname:"en/Challenge-Introducing-Javascript-Object-Notation-Json",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Introducing-Javascript-Object-Notation-Json/index.md",data:{title:"Challenge Introducing Javascript Object Notation Json",order:5},path:"/en/Challenge-Introducing-Javascript-Object-Notation-Json/"},{file:{dirname:"en/Challenge-Invert-Regular-Expression-Matches-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Invert-Regular-Expression-Matches-with-JavaScript/index.md",data:{title:"Challenge Invert Regular Expression Matches with JavaScript",order:5},path:"/en/Challenge-Invert-Regular-Expression-Matches-with-JavaScript/"},{file:{dirname:"en/Challenge-Iterate-Odd-Numbers-With-a-For-Loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Iterate-Odd-Numbers-With-a-For-Loop/index.md",data:{title:"Challenge Iterate Odd Numbers With a For Loop",order:5},path:"/en/Challenge-Iterate-Odd-Numbers-With-a-For-Loop/"},{file:{dirname:"en/Challenge-Iterate-over-Arrays-with-map",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Iterate-over-Arrays-with-map/index.md",data:{title:"Challenge Iterate over Arrays with map",order:5},path:"/en/Challenge-Iterate-over-Arrays-with-map/"},{file:{dirname:"en/Challenge-Iterate-Through-An-Array-With-A-For-Loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Iterate-Through-An-Array-With-A-For-Loop/index.md",data:{title:"Challenge Iterate Through An Array With A For Loop",order:5},path:"/en/Challenge-Iterate-Through-An-Array-With-A-For-Loop/"},{file:{dirname:"en/Challenge-Iterate-with-JavaScript-For-Loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Iterate-with-JavaScript-For-Loops/index.md",data:{title:"Challenge Iterate with JavaScript For Loops",order:5},path:"/en/Challenge-Iterate-with-JavaScript-For-Loops/"},{file:{dirname:"en/Challenge-Iterate-with-JavaScript-While-Loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Iterate-with-JavaScript-While-Loops/index.md",data:{title:"Challenge Iterate with JavaScript While Loops",order:5},path:"/en/Challenge-Iterate-with-JavaScript-While-Loops/"},{file:{dirname:"en/Challenge-Join-Strings-with-.join",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Join-Strings-with-.join/index.md",data:{title:"Challenge Join Strings with .join",order:5},path:"/en/Challenge-Join-Strings-with-.join/"},{file:{dirname:"en/Challenge-Label-Bootstrap-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Label-Bootstrap-Buttons/index.md",data:{title:"Challenge Label Bootstrap Buttons",order:5},path:"/en/Challenge-Label-Bootstrap-Buttons/"},{file:{dirname:"en/Challenge-Label-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Label-Bootstrap-Wells/index.md",data:{title:"Challenge Label Bootstrap Wells",order:5},path:"/en/Challenge-Label-Bootstrap-Wells/"},{file:{dirname:"en/Challenge-Learn-how-Script-Tags-and-Document-Ready-Work",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Learn-how-Script-Tags-and-Document-Ready-Work/index.md",data:{title:"Challenge Learn how Script Tags and Document Ready Work",order:5},path:"/en/Challenge-Learn-how-Script-Tags-and-Document-Ready-Work/"},{file:{dirname:"en/Challenge-Line-up-Form-Elements-Responsively-with-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Line-up-Form-Elements-Responsively-with-Bootstrap/index.md",data:{title:"Challenge Line up Form Elements Responsively with Bootstrap",order:5},path:"/en/Challenge-Line-up-Form-Elements-Responsively-with-Bootstrap/"},{file:{dirname:"en/Challenge-Link-to-External-Pages-with-Anchor-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Link-to-External-Pages-with-Anchor-Elements/index.md",data:{title:"Challenge Link to External Pages with Anchor Elements",order:5},path:"/en/Challenge-Link-to-External-Pages-with-Anchor-Elements/"},{file:{dirname:"en/Challenge-Local-Scope-And-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Local-Scope-And-Functions/index.md",data:{title:"Challenge Local Scope And Functions",order:5},path:"/en/Challenge-Local-Scope-And-Functions/"},{file:{dirname:"en/Challenge-Make-Circular-Images-with-a-Border-Radius",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Circular-Images-with-a-Border-Radius/index.md",data:{title:"Challenge Make Circular Images with a Border Radius",order:5},path:"/en/Challenge-Make-Circular-Images-with-a-Border-Radius/"},{file:{dirname:"en/Challenge-Make-Dead-Links-using-the-Hash-Symbol",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Dead-Links-using-the-Hash-Symbol/index.md",data:{title:"Challenge Make Dead Links using the Hash Symbol",order:5},path:"/en/Challenge-Make-Dead-Links-using-the-Hash-Symbol/"},{file:{dirname:"en/Challenge-Make-Images-Mobile-Responsive",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Images-Mobile-Responsive/index.md",data:{title:"Challenge Make Images Mobile Responsive",order:5},path:"/en/Challenge-Make-Images-Mobile-Responsive/"},{file:{dirname:"en/Challenge-Make-Instances-of-Objects-with-a-Constructor-Function",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Instances-of-Objects-with-a-Constructor-Function/index.md",data:{title:"Challenge Make Instances of Objects with a Constructor Function",order:5},path:"/en/Challenge-Make-Instances-of-Objects-with-a-Constructor-Function/"},{file:{dirname:"en/Challenge-Make-Object-Properties-Private",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Object-Properties-Private/index.md",data:{title:"Challenge Make Object Properties Private",order:5},path:"/en/Challenge-Make-Object-Properties-Private/"},{file:{dirname:"en/Challenge-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/index.md",data:{title:"Challenge Make Unique Objects by Passing Parameters to our Constructor",order:5},path:"/en/Challenge-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/"},{file:{dirname:"en/Challenge-Manipulate-Arrays-With-pop()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Manipulate-Arrays-With-pop()/index.md",data:{title:"Challenge Manipulate Arrays With pop()",order:5},path:"/en/Challenge-Manipulate-Arrays-With-pop()/"},{file:{dirname:"en/Challenge-Manipulate-Arrays-With-push()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Manipulate-Arrays-With-push()/index.md",data:{title:"Challenge Manipulate Arrays With push()",order:5},path:"/en/Challenge-Manipulate-Arrays-With-push()/"},{file:{dirname:"en/Challenge-Manipulate-Arrays-With-shift()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Manipulate-Arrays-With-shift()/index.md",data:{title:"Challenge Manipulate Arrays With shift()",order:5},path:"/en/Challenge-Manipulate-Arrays-With-shift()/"},{file:{dirname:"en/Challenge-Manipulate-Arrays-With-unshift()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Manipulate-Arrays-With-unshift()/index.md",data:{title:"Challenge Manipulate Arrays With unshift()",order:5},path:"/en/Challenge-Manipulate-Arrays-With-unshift()/"},{file:{dirname:"en/Challenge-Manipulate-JavaScript-Objects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Manipulate-JavaScript-Objects/index.md",data:{title:"Challenge Manipulate JavaScript Objects",order:5},path:"/en/Challenge-Manipulate-JavaScript-Objects/"},{file:{dirname:"en/Challenge-Modify-Array-Data-With-Indexes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Modify-Array-Data-With-Indexes/index.md",data:{title:"Challenge Modify Array Data With Indexes",order:5},path:"/en/Challenge-Modify-Array-Data-With-Indexes/"},{file:{dirname:"en/Challenge-Multiple-Identical-Options-In-Switch-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Multiple-Identical-Options-In-Switch-Statements/index.md",data:{title:"Challenge Multiple Identical Options In Switch Statements",order:5},path:"/en/Challenge-Multiple-Identical-Options-In-Switch-Statements/"},{file:{dirname:"en/Challenge-Multiply-Two-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Multiply-Two-Numbers-with-JavaScript/index.md",data:{title:"Challenge Multiply Two Numbers with JavaScript",order:5},path:"/en/Challenge-Multiply-Two-Numbers-with-JavaScript/"},{file:{dirname:"en/Challenge-Nest-an-Anchor-Element-within-a-Paragraph",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Nest-an-Anchor-Element-within-a-Paragraph/index.md",data:{title:"Challenge Nest an Anchor Element within a Paragraph",order:5},path:"/en/Challenge-Nest-an-Anchor-Element-within-a-Paragraph/"},{file:{dirname:"en/Challenge-Nest-Many-Elements-within-a-Single-Div-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Nest-Many-Elements-within-a-Single-Div-Element/index.md",data:{title:"Challenge Nest Many Elements within a Single Div Element",order:5},path:"/en/Challenge-Nest-Many-Elements-within-a-Single-Div-Element/"},{file:{dirname:"en/Challenge-Nest-one-Array-within-Another-Array",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Nest-one-Array-within-Another-Array/index.md",data:{title:"Challenge Nest one Array within Another Array",order:5},path:"/en/Challenge-Nest-one-Array-within-Another-Array/"},{file:{dirname:"en/Challenge-Nesting-For-Loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Nesting-For-Loops/index.md",data:{title:"Challenge Nesting For Loops",order:5},path:"/en/Challenge-Nesting-For-Loops/"},{file:{dirname:"en/Challenge-Override-All-Other-Styles-by-using-Important",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Override-All-Other-Styles-by-using-Important/index.md",data:{title:"Challenge Override All Other Styles by using Important",order:5},path:"/en/Challenge-Override-All-Other-Styles-by-using-Important/"},{file:{dirname:"en/Challenge-Override-Class-Declarations-by-Styling-ID-Attributes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Override-Class-Declarations-by-Styling-ID-Attributes/index.md",data:{title:"Challenge Override Class Declarations by Styling ID Attributes",order:5},path:"/en/Challenge-Override-Class-Declarations-by-Styling-ID-Attributes/"},{file:{dirname:"en/Challenge-Override-Class-Declarations-with-Inline-Styles",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Override-Class-Declarations-with-Inline-Styles/index.md",data:{title:"Challenge Override Class Declarations with Inline Styles",order:5},path:"/en/Challenge-Override-Class-Declarations-with-Inline-Styles/"},{file:{dirname:"en/Challenge-Override-Styles-in-Subsequent-CSS",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Override-Styles-in-Subsequent-CSS/index.md",data:{title:"Challenge Override Styles in Subsequent CSS",order:5},path:"/en/Challenge-Override-Styles-in-Subsequent-CSS/"},{file:{dirname:"en/Challenge-Passing-Values-To-Functions-With-Arguments",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Passing-Values-To-Functions-With-Arguments/index.md",data:{title:"Challenge Passing Values To Functions With Arguments",order:5},path:"/en/Challenge-Passing-Values-To-Functions-With-Arguments/"},{file:{dirname:"en/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/index.md",data:{title:"Challenge Perform Arithmetic Operations on Decimals with JavaScript",order:5},path:"/en/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/"},{file:{dirname:"en/Challenge-Prefilter-JSON",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Prefilter-JSON/index.md",data:{title:"Challenge Prefilter JSON",order:5},path:"/en/Challenge-Prefilter-JSON/"},{file:{dirname:"en/Challenge-Prioritize-One-Style-Over-Another",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Prioritize-One-Style-Over-Another/index.md",data:{title:"Challenge Prioritize One Style Over Another",order:5},path:"/en/Challenge-Prioritize-One-Style-Over-Another/"},{file:{dirname:"en/Challenge-Quoting-Strings-with-Single-Quotes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Quoting-Strings-with-Single-Quotes/index.md",data:{title:"Challenge Quoting Strings with Single Quotes",order:5},path:"/en/Challenge-Quoting-Strings-with-Single-Quotes/"},{file:{dirname:"en/Challenge-Remove-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Remove-an-Element-Using-jQuery/index.md",data:{title:"Challenge Remove an Element Using jQuery",order:5},path:"/en/Challenge-Remove-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Remove-Classes-from-an-element-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Remove-Classes-from-an-element-with-jQuery/index.md",data:{title:"Challenge Remove Classes from an element with jQuery",order:5},path:"/en/Challenge-Remove-Classes-from-an-element-with-jQuery/"},{file:{dirname:"en/Challenge-Render-Images-from-Data-Sources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Render-Images-from-Data-Sources/index.md",data:{title:"Challenge Render Images from Data Sources",order:5},path:"/en/Challenge-Render-Images-from-Data-Sources/"},{file:{dirname:"en/Challenge-Replacing-If-Else-Chains-With-Switch",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Replacing-If-Else-Chains-With-Switch/index.md",data:{title:"Challenge Replacing If Else Chains With Switch",order:5},path:"/en/Challenge-Replacing-If-Else-Chains-With-Switch/"},{file:{dirname:"en/Challenge-Responsively-Style-Checkboxes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Responsively-Style-Checkboxes/index.md",data:{title:"Challenge Responsively Style Checkboxes",order:5},path:"/en/Challenge-Responsively-Style-Checkboxes/"},{file:{dirname:"en/Challenge-Responsively-Style-Radio-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Responsively-Style-Radio-Buttons/index.md",data:{title:"Challenge Responsively Style Radio Buttons",order:5},path:"/en/Challenge-Responsively-Style-Radio-Buttons/"},{file:{dirname:"en/Challenge-Return-A-Value-From-A-Function-With-Return",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Return-A-Value-From-A-Function-With-Return/index.md",data:{title:"Challenge Return A Value From A Function With Return",order:5},path:"/en/Challenge-Return-A-Value-From-A-Function-With-Return/"},{file:{dirname:"en/Challenge-Return-Early-Pattern-For-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Return-Early-Pattern-For-Functions/index.md",data:{title:"Challenge Return Early Pattern For Functions",order:5},path:"/en/Challenge-Return-Early-Pattern-For-Functions/"},{file:{dirname:"en/Challenge-Returning-Boolean-Values-From-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Returning-Boolean-Values-From-Functions/index.md",data:{title:"Challenge Returning Boolean Values From Functions",order:5},path:"/en/Challenge-Returning-Boolean-Values-From-Functions/"},{file:{dirname:"en/Challenge-Reverse-Arrays-with-reverse",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Reverse-Arrays-with-reverse/index.md",data:{title:"Challenge Reverse Arrays with reverse",order:5},path:"/en/Challenge-Reverse-Arrays-with-reverse/"},{file:{dirname:"en/Challenge-Save-your-Code-Revisions-Forever-with-Git",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Save-your-Code-Revisions-Forever-with-Git/index.md",data:{title:"Challenge Save your Code Revisions Forever with Git",order:5},path:"/en/Challenge-Save-your-Code-Revisions-Forever-with-Git/"},{file:{dirname:"en/Challenge-Say-Hello-to-HTML-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Say-Hello-to-HTML-Elements/index.md",data:{title:"Challenge Say Hello to HTML Elements",order:5},path:"/en/Challenge-Say-Hello-to-HTML-Elements/"},{file:{dirname:"en/Challenge-Selecting-From-Many-Options-With-Switch-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Selecting-From-Many-Options-With-Switch-Statements/index.md",data:{title:"Challenge Selecting From Many Options With Switch Statements",order:5},path:"/en/Challenge-Selecting-From-Many-Options-With-Switch-Statements/"},{file:{dirname:"en/Challenge-Set-the-Font-Family-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Set-the-Font-Family-of-an-Element/index.md",data:{title:"Challenge Set the Font Family of an Element",order:5},path:"/en/Challenge-Set-the-Font-Family-of-an-Element/"},{file:{dirname:"en/Challenge-Set-the-ID-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Set-the-ID-of-an-Element/index.md",data:{title:"Challenge Set the ID of an Element",order:5},path:"/en/Challenge-Set-the-ID-of-an-Element/"},{file:{dirname:"en/Challenge-Sift-through-Text-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Sift-through-Text-with-Regular-Expressions/index.md",data:{title:"Challenge Sift through Text with Regular Expressions",order:5},path:"/en/Challenge-Sift-through-Text-with-Regular-Expressions/"},{file:{dirname:"en/Challenge-Size-your-Images",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Size-your-Images/index.md",data:{title:"Challenge Size your Images",order:5},path:"/en/Challenge-Size-your-Images/"},{file:{dirname:"en/Challenge-Sort-Arrays-with-sort",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Sort-Arrays-with-sort/index.md",data:{title:"Challenge Sort Arrays with sort",order:5},path:"/en/Challenge-Sort-Arrays-with-sort/"},{file:{dirname:"en/Challenge-Specify-How-Fonts-Should-Degrade",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Specify-How-Fonts-Should-Degrade/index.md",data:{title:"Challenge Specify How Fonts Should Degrade",order:5},path:"/en/Challenge-Specify-How-Fonts-Should-Degrade/"},{file:{dirname:"en/Challenge-Split-Strings-with-split",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Split-Strings-with-split/index.md",data:{title:"Challenge Split Strings with split",order:5},path:"/en/Challenge-Split-Strings-with-split/"},{file:{dirname:"en/Challenge-Split-your-Bootstrap-Row",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Split-your-Bootstrap-Row/index.md",data:{title:"Challenge Split your Bootstrap Row",order:5},path:"/en/Challenge-Split-your-Bootstrap-Row/"},{file:{dirname:"en/Challenge-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/index.md",data:{title:"Challenge Store Multiple Values in one Variable using JavaScript Arrays",order:5},path:"/en/Challenge-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/"},{file:{dirname:"en/Challenge-Storing-Values-with-the-Equal-Operator",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Storing-Values-with-the-Equal-Operator/index.md",data:{title:"Challenge Storing Values with the Equal Operator",order:5},path:"/en/Challenge-Storing-Values-with-the-Equal-Operator/"},{file:{dirname:"en/Challenge-Style-Multiple-Elements-with-a-CSS-Class",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Style-Multiple-Elements-with-a-CSS-Class/index.md",data:{title:"Challenge Style Multiple Elements with a CSS Class",order:5},path:"/en/Challenge-Style-Multiple-Elements-with-a-CSS-Class/"},{file:{dirname:"en/Challenge-Style-Text-Inputs-as-Form-Controls",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Style-Text-Inputs-as-Form-Controls/index.md",data:{title:"Challenge Style Text Inputs as Form Controls",order:5},path:"/en/Challenge-Style-Text-Inputs-as-Form-Controls/"},{file:{dirname:"en/Challenge-Style-the-HTML-Body-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Style-the-HTML-Body-Element/index.md",data:{title:"Challenge Style the HTML Body Element",order:5},path:"/en/Challenge-Style-the-HTML-Body-Element/"},{file:{dirname:"en/Challenge-Subtract-One-Number-from-Another-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Subtract-One-Number-from-Another-with-JavaScript/index.md",data:{title:"Challenge Subtract One Number from Another with JavaScript",order:5},path:"/en/Challenge-Subtract-One-Number-from-Another-with-JavaScript/"},{file:{dirname:"en/Challenge-Target-a-Specific-Child-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-a-Specific-Child-of-an-Element-Using-jQuery/index.md",data:{title:"Challenge Target a Specific Child of an Element Using jQuery",order:5},path:"/en/Challenge-Target-a-Specific-Child-of-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-Elements-by-Class-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-Elements-by-Class-Using-jQuery/index.md",data:{title:"Challenge Target Elements by Class Using jQuery",order:5},path:"/en/Challenge-Target-Elements-by-Class-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-Elements-by-ID-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-Elements-by-ID-Using-jQuery/index.md",data:{title:"Challenge Target Elements by ID Using jQuery",order:5},path:"/en/Challenge-Target-Elements-by-ID-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-Even-Numbered-Elements-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-Even-Numbered-Elements-Using-jQuery/index.md",data:{title:"Challenge Target Even Numbered Elements Using jQuery",order:5},path:"/en/Challenge-Target-Even-Numbered-Elements-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-HTML-Elements-with-Selectors-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-HTML-Elements-with-Selectors-Using-jQuery/index.md",data:{title:"Challenge Target HTML Elements with Selectors Using jQuery",order:5},path:"/en/Challenge-Target-HTML-Elements-with-Selectors-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-the-Children-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-the-Children-of-an-Element-Using-jQuery/index.md",data:{title:"Challenge Target the Children of an Element Using jQuery",order:5},path:"/en/Challenge-Target-the-Children-of-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-the-Parent-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-the-Parent-of-an-Element-Using-jQuery/index.md",data:{title:"Challenge Target the Parent of an Element Using jQuery",order:5},path:"/en/Challenge-Target-the-Parent-of-an-Element-Using-jQuery/"},{file:{dirname:"en/Challenge-Target-the-same-element-with-multiple-jQuery-Selectors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Target-the-same-element-with-multiple-jQuery-Selectors/index.md",data:{title:"Challenge Target the same element with multiple jQuery Selectors",order:5},path:"/en/Challenge-Target-the-same-element-with-multiple-jQuery-Selectors/"},{file:{dirname:"en/Challenge-Taste-the-Bootstrap-Button-Color-Rainbow",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Taste-the-Bootstrap-Button-Color-Rainbow/index.md",data:{title:"Challenge Taste the Bootstrap Button Color Rainbow",order:5},path:"/en/Challenge-Taste-the-Bootstrap-Button-Color-Rainbow/"},{file:{dirname:"en/Challenge-Testing-Objects-For-Properties",
basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Testing-Objects-For-Properties/index.md",data:{title:"Challenge Testing Objects For Properties",order:5},path:"/en/Challenge-Testing-Objects-For-Properties/"},{file:{dirname:"en/Challenge-Trigger-Click Events-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Trigger-Click Events-with-jQuery/index.md",data:{title:"Challenge Trigger Click Events with jQuery",order:5},path:"/en/Challenge-Trigger-Click Events-with-jQuery/"},{file:{dirname:"en/Challenge-Turn-an-Image-into-a-Link",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Turn-an-Image-into-a-Link/index.md",data:{title:"Challenge Turn an Image into a Link",order:5},path:"/en/Challenge-Turn-an-Image-into-a-Link/"},{file:{dirname:"en/Challenge-Uncomment-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Uncomment-HTML/index.md",data:{title:"Challenge Uncomment HTML",order:5},path:"/en/Challenge-Uncomment-HTML/"},{file:{dirname:"en/Challenge-Understand-Boolean-Values",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Understand-Boolean-Values/index.md",data:{title:"Challenge Understand Boolean Values",order:5},path:"/en/Challenge-Understand-Boolean-Values/"},{file:{dirname:"en/Challenge-Understand-String-Immutability",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Understand-String-Immutability/index.md",data:{title:"Challenge Understand String Immutability",order:5},path:"/en/Challenge-Understand-String-Immutability/"},{file:{dirname:"en/Challenge-Understanding-Case-Sensitivity-in-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Understanding-Case-Sensitivity-in-Variables/index.md",data:{title:"Challenge Understanding Case Sensitivity in Variables",order:5},path:"/en/Challenge-Understanding-Case-Sensitivity-in-Variables/"},{file:{dirname:"en/Challenge-Understanding-Uninitialized-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Understanding-Uninitialized-Variables/index.md",data:{title:"Challenge Understanding Uninitialized Variables",order:5},path:"/en/Challenge-Understanding-Uninitialized-Variables/"},{file:{dirname:"en/Challenge-Updating-Object-Properties",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Updating-Object-Properties/index.md",data:{title:"Challenge Updating Object Properties",order:5},path:"/en/Challenge-Updating-Object-Properties/"},{file:{dirname:"en/Challenge-Use-a-CSS-Class-to-Style-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-a-CSS-Class-to-Style-an-Element/index.md",data:{title:"Challenge Use a CSS Class to Style an Element",order:5},path:"/en/Challenge-Use-a-CSS-Class-to-Style-an-Element/"},{file:{dirname:"en/Challenge-Use-Abbreviated-Hex-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Abbreviated-Hex-Code/index.md",data:{title:"Challenge Use Abbreviated Hex Code",order:5},path:"/en/Challenge-Use-Abbreviated-Hex-Code/"},{file:{dirname:"en/Challenge-Use-an-ID-Attribute-to-Style-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-an-ID-Attribute-to-Style-an-Element/index.md",data:{title:"Challenge Use an ID Attribute to Style an Element",order:5},path:"/en/Challenge-Use-an-ID-Attribute-to-Style-an-Element/"},{file:{dirname:"en/Challenge-Use-appendTo-to-Move-Elements-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-appendTo-to-Move-Elements-with-jQuery/index.md",data:{title:"Challenge Use appendTo to Move Elements with jQuery",order:5},path:"/en/Challenge-Use-appendTo-to-Move-Elements-with-jQuery/"},{file:{dirname:"en/Challenge-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/index.md",data:{title:"Challenge Use Bracket Notation to Find the First Character in a String",order:5},path:"/en/Challenge-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/"},{file:{dirname:"en/Challenge-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/index.md",data:{title:"Challenge Use Bracket Notation to Find the Last Character in a String",order:5},path:"/en/Challenge-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/"},{file:{dirname:"en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/index.md",data:{title:"Challenge Use Bracket Notation to Find the Nth Character in a String",order:5},path:"/en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/"},{file:{dirname:"en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/index.md",data:{title:"Challenge Use Bracket Notation to Find the Nth to Last Character in a String",order:5},path:"/en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/"},{file:{dirname:"en/Challenge-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/index.md",data:{title:"Challenge Use Clockwise Notation to Specify the Margin of an Element",order:5},path:"/en/Challenge-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/"},{file:{dirname:"en/Challenge-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/index.md",data:{title:"Challenge Use Clockwise Notation to Specify the Padding of an Element",order:5},path:"/en/Challenge-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/"},{file:{dirname:"en/Challenge-Use-Comments-to-Clarify-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Comments-to-Clarify-Code/index.md",data:{title:"Challenge Use Comments to Clarify Code",order:5},path:"/en/Challenge-Use-Comments-to-Clarify-Code/"},{file:{dirname:"en/Challenge-Use-Conditional-Logic-with-If-Else-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Conditional-Logic-with-If-Else-Statements/index.md",data:{title:"Challenge Use Conditional Logic with If Else Statements",order:5},path:"/en/Challenge-Use-Conditional-Logic-with-If-Else-Statements/"},{file:{dirname:"en/Challenge-Use-CSS-Selectors-to-Style-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-CSS-Selectors-to-Style-Elements/index.md",data:{title:"Challenge Use CSS Selectors to Style Elements",order:5},path:"/en/Challenge-Use-CSS-Selectors-to-Style-Elements/"},{file:{dirname:"en/Challenge-Use-Hex-Code-for-Specific-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-for-Specific-Colors/index.md",data:{title:"Challenge Use Hex Code for Specific Colors",order:5},path:"/en/Challenge-Use-Hex-Code-for-Specific-Colors/"},{file:{dirname:"en/Challenge-Use-Hex-Code-for-Specific-Shades-of-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-for-Specific-Shades-of-Gray/index.md",data:{title:"Challenge Use Hex Code for Specific Shades of Gray",order:5},path:"/en/Challenge-Use-Hex-Code-for-Specific-Shades-of-Gray/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Color-Elements-Blue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Color-Elements-Blue/index.md",data:{title:"Challenge Use Hex Code to Color Elements Blue",order:5},path:"/en/Challenge-Use-Hex-Code-to-Color-Elements-Blue/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Color-Elements-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Color-Elements-Gray/index.md",data:{title:"Challenge Use Hex Code to Color Elements Gray",order:5},path:"/en/Challenge-Use-Hex-Code-to-Color-Elements-Gray/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Color-Elements-Green",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Color-Elements-Green/index.md",data:{title:"Challenge Use Hex Code to Color Elements Green",order:5},path:"/en/Challenge-Use-Hex-Code-to-Color-Elements-Green/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Color-Elements-Red",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Color-Elements-Red/index.md",data:{title:"Challenge Use Hex Code to Color Elements Red",order:5},path:"/en/Challenge-Use-Hex-Code-to-Color-Elements-Red/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Color-Elements-White",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Color-Elements-White/index.md",data:{title:"Challenge Use Hex Code to Color Elements White",order:5},path:"/en/Challenge-Use-Hex-Code-to-Color-Elements-White/"},{file:{dirname:"en/Challenge-Use-Hex-Code-to-Mix-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Hex-Code-to-Mix-Colors/index.md",data:{title:"Challenge Use Hex Code to Mix Colors",order:5},path:"/en/Challenge-Use-Hex-Code-to-Mix-Colors/"},{file:{dirname:"en/Challenge-Use-HTML5-to-Require-a-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-HTML5-to-Require-a-Field/index.md",data:{title:"Challenge Use HTML5 to Require a Field",order:5},path:"/en/Challenge-Use-HTML5-to-Require-a-Field/"},{file:{dirname:"en/Challenge-Use-jQuery-to-Modify-the-Entire-Page",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-jQuery-to-Modify-the-Entire-Page/index.md",data:{title:"Challenge Use jQuery to Modify the Entire Page",order:5},path:"/en/Challenge-Use-jQuery-to-Modify-the-Entire-Page/"},{file:{dirname:"en/Challenge-Use-Responsive-Design-with-Bootstrap-Fluid-Containers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/index.md",data:{title:"Challenge Use Responsive Design with Bootstrap Fluid Containers",order:5},path:"/en/Challenge-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/"},{file:{dirname:"en/Challenge-Use-RGB-to-Color-Elements-Blue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Color-Elements-Blue/index.md",data:{title:"Challenge Use RGB to Color Elements Blue",order:5},path:"/en/Challenge-Use-RGB-to-Color-Elements-Blue/"},{file:{dirname:"en/Challenge-Use-RGB-to-Color-Elements-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Color-Elements-Gray/index.md",data:{title:"Challenge Use RGB to Color Elements Gray",order:5},path:"/en/Challenge-Use-RGB-to-Color-Elements-Gray/"},{file:{dirname:"en/Challenge-Use-RGB-to-Color-Elements-Green",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Color-Elements-Green/index.md",data:{title:"Challenge Use RGB to Color Elements Green",order:5},path:"/en/Challenge-Use-RGB-to-Color-Elements-Green/"},{file:{dirname:"en/Challenge-Use-RGB-to-Color-Elements-Red",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Color-Elements-Red/index.md",data:{title:"Challenge Use RGB to Color Elements Red",order:5},path:"/en/Challenge-Use-RGB-to-Color-Elements-Red/"},{file:{dirname:"en/Challenge-Use-RGB-to-Color-Elements-White",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Color-Elements-White/index.md",data:{title:"Challenge Use RGB to Color Elements White",order:5},path:"/en/Challenge-Use-RGB-to-Color-Elements-White/"},{file:{dirname:"en/Challenge-Use-RGB-to-Mix-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-to-Mix-Colors/index.md",data:{title:"Challenge Use RGB to Mix Colors",order:5},path:"/en/Challenge-Use-RGB-to-Mix-Colors/"},{file:{dirname:"en/Challenge-Use-RGB-values-to-Color-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-RGB-values-to-Color-Elements/index.md",data:{title:"Challenge Use RGB values to Color Elements",order:5},path:"/en/Challenge-Use-RGB-values-to-Color-Elements/"},{file:{dirname:"en/Challenge-Use-Spans-for-Inline-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-Spans-for-Inline-Elements/index.md",data:{title:"Challenge Use Spans for Inline Elements",order:5},path:"/en/Challenge-Use-Spans-for-Inline-Elements/"},{file:{dirname:"en/Challenge-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/index.md",data:{title:"Challenge Use the Bootstrap Grid to Put Elements Side By Side",order:5},path:"/en/Challenge-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/"},{file:{dirname:"en/Challenge-Use-the-Javascript-Console",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Use-the-Javascript-Console/index.md",data:{title:"Challenge Use the Javascript Console",order:5},path:"/en/Challenge-Use-the-Javascript-Console/"},{file:{dirname:"en/Challenge-Using-Objects-For-Lookups",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Using-Objects-For-Lookups/index.md",data:{title:"Challenge Using Objects For Lookups",order:5},path:"/en/Challenge-Using-Objects-For-Lookups/"},{file:{dirname:"en/Challenge-Using-typeof",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Using-typeof/index.md",data:{title:"Challenge Using typeof",order:5},path:"/en/Challenge-Using-typeof/"},{file:{dirname:"en/Challenge-Warn-your-Users-of-a-Dangerous-Action",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Warn-your-Users-of-a-Dangerous-Action/index.md",data:{title:"Challenge Warn your Users of a Dangerous Action",order:5},path:"/en/Challenge-Warn-your-Users-of-a-Dangerous-Action/"},{file:{dirname:"en/Challenge-Write-Reusable-JavaScript-with-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Challenge-Write-Reusable-JavaScript-with-Functions/index.md",data:{title:"Challenge Write Reusable JavaScript with Functions",order:5},path:"/en/Challenge-Write-Reusable-JavaScript-with-Functions/"},{file:{dirname:"en/Checkpoint-Counting-Cards",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Counting-Cards/index.md",data:{title:"Checkpoint Counting Cards",order:5},path:"/en/Checkpoint-Counting-Cards/"},{file:{dirname:"en/Checkpoint-Golf-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Golf-Code/index.md",data:{title:"Checkpoint Golf Code",order:5},path:"/en/Checkpoint-Golf-Code/"},{file:{dirname:"en/Checkpoint-Profile-Lookup",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Profile-Lookup/index.md",data:{title:"Checkpoint Profile Lookup",order:5},path:"/en/Checkpoint-Profile-Lookup/"},{file:{dirname:"en/Checkpoint-Record-Collection",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Record-Collection/index.md",data:{title:"Checkpoint Record Collection",order:5},path:"/en/Checkpoint-Record-Collection/"},{file:{dirname:"en/Checkpoint-Shopping-List",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Shopping-List/index.md",data:{title:"Checkpoint Shopping List",order:5},path:"/en/Checkpoint-Shopping-List/"},{file:{dirname:"en/Checkpoint-Stand-In-Line",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Stand-In-Line/index.md",data:{title:"Checkpoint Stand In Line",order:5},path:"/en/Checkpoint-Stand-In-Line/"},{file:{dirname:"en/Checkpoint-Word-Blanks",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Checkpoint-Word-Blanks/index.md",data:{title:"Checkpoint Word Blanks",order:5},path:"/en/Checkpoint-Word-Blanks/"},{file:{dirname:"en/Coding-Help",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Coding-Help/index.md",data:{title:"Coding Help",order:5},path:"/en/Coding-Help/"},{file:{dirname:"en/Contributions-Guide---with-Typo-Demo",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Contributions-Guide---with-Typo-Demo/index.md",data:{title:"Contributions Guide   with Typo Demo",order:5},path:"/en/Contributions-Guide---with-Typo-Demo/"},{file:{dirname:"en/Creating-a-New-Github-Issue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Creating-a-New-Github-Issue/index.md",data:{title:"Creating a New Github Issue",order:5},path:"/en/Creating-a-New-Github-Issue/"},{file:{dirname:"en/Develop-Back-End-Project-locally-and-run-on-c9.io",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Develop-Back-End-Project-locally-and-run-on-c9.io/index.md",data:{title:"Develop Back End Project locally and run on c9.io",order:5},path:"/en/Develop-Back-End-Project-locally-and-run-on-c9.io/"},{file:{dirname:"en/Disable-Code-Auto-Run",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Disable-Code-Auto-Run/index.md",data:{title:"Disable Code Auto Run",order:5},path:"/en/Disable-Code-Auto-Run/"},{file:{dirname:"en/Free-Code-Camp-Front-End-Development-Certificate",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Free-Code-Camp-Front-End-Development-Certificate/index.md",data:{title:"Free Code Camp Front End Development Certificate",order:5},path:"/en/Free-Code-Camp-Front-End-Development-Certificate/"},{file:{dirname:"en/Free-Code-Camp-Full-Stack-Development-Certificate",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Free-Code-Camp-Full-Stack-Development-Certificate/index.md",data:{title:"Free Code Camp Full Stack Development Certificate",order:5},path:"/en/Free-Code-Camp-Full-Stack-Development-Certificate/"},{file:{dirname:"en/Front-End-Project-Use-the-Twitchtv-JSON-API",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Front-End-Project-Use-the-Twitchtv-JSON-API/index.md",data:{title:"Front End Project Use the Twitchtv JSON API",order:5},path:"/en/Front-End-Project-Use-the-Twitchtv-JSON-API/"},{file:{dirname:"en/Frontend-file-structure",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Frontend-file-structure/index.md",data:{title:"Frontend file structure",order:5},path:"/en/Frontend-file-structure/"},{file:{dirname:"en/Guide-to-Back-End-Projects-Table-of-Contents",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Guide-to-Back-End-Projects-Table-of-Contents/index.md",data:{title:"Guide to Back End Projects Table of Contents",order:5},path:"/en/Guide-to-Back-End-Projects-Table-of-Contents/"},{file:{dirname:"en/How-Free-Code-Camp-works",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-Free-Code-Camp-works/index.md",data:{title:"How Free Code Camp works",order:5},path:"/en/How-Free-Code-Camp-works/"},{file:{dirname:"en/How-to-clear-specific-values-from-your-browser's-local-storage",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-to-clear-specific-values-from-your-browser's-local-storage/index.md",data:{title:"How to clear specific values from your browser's local storage",order:5},path:"/en/How-to-clear-specific-values-from-your-browser's-local-storage/"},{file:{dirname:"en/How-To-Contribute-To-The-Wiki",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-To-Contribute-To-The-Wiki/index.md",data:{title:"How To Contribute To The Wiki",order:5},path:"/en/How-To-Contribute-To-The-Wiki/"},{file:{dirname:"en/How-To-Create-A-Pull-Request-for-Free-Code-Camp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-To-Create-A-Pull-Request-for-Free-Code-Camp/index.md",data:{title:"How To Create A Pull Request for Free Code Camp",order:5},path:"/en/How-To-Create-A-Pull-Request-for-Free-Code-Camp/"},{file:{dirname:"en/How-to-get-the-MEAN-stack-running-locally-on-OSX",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-to-get-the-MEAN-stack-running-locally-on-OSX/index.md",data:{title:"How to get the MEAN stack running locally on OSX",order:5},path:"/en/How-to-get-the-MEAN-stack-running-locally-on-OSX/"},{file:{dirname:"en/How-to-install-Screenhero",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-to-install-Screenhero/index.md",data:{title:"How to install Screenhero",order:5},path:"/en/How-to-install-Screenhero/"},{file:{dirname:"en/How-to-start-when-you-are-stuck-(I)",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-to-start-when-you-are-stuck-(I)/index.md",data:{title:"How to start when you are stuck (I)",order:5},path:"/en/How-to-start-when-you-are-stuck-(I)/"},{file:{dirname:"en/How-to-start-when-you-are-stuck-(II)",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-to-start-when-you-are-stuck-(II)/index.md",data:{title:"How to start when you are stuck (II)",order:5},path:"/en/How-to-start-when-you-are-stuck-(II)/"},{file:{dirname:"en/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/index.md",data:{title:"How you can help to stimulate your city's Campsite on Facebook",order:5},path:"/en/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/"},{file:{dirname:"en/html-elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/html-elements/index.md",data:{title:"html elements",order:5},path:"/en/html-elements/"},{file:{dirname:"en",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/index.md",data:{title:"Welcome to the Free Code Camp Wiki",order:0},path:"/en/"},{file:{dirname:"en/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects/index.md",data:{title:"Intro to Yeoman Angular Fullstack Back End Projects",order:5},path:"/en/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects/"},{file:{dirname:"en/js-Array-prototype-filter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/js-Array-prototype-filter/index.md",data:{title:"js Array prototype filter",order:5},path:"/en/js-Array-prototype-filter/"},{file:{dirname:"en/js-for-loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/js-for-loop/index.md",data:{title:"js for loop",order:5},path:"/en/js-for-loop/"},{file:{dirname:"en/js-for-of-loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/js-for-of-loop/index.md",data:{title:"js for of loop",order:5},path:"/en/js-for-of-loop/"},{file:{dirname:"en/List-of-Free-Code-Camp-city-based-Campsites",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/List-of-Free-Code-Camp-city-based-Campsites/index.md",data:{title:"List of Free Code Camp city based Campsites",order:5},path:"/en/List-of-Free-Code-Camp-city-based-Campsites/"},{file:{dirname:"en/Map",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Map/index.md",data:{title:"Map",order:5},path:"/en/Map/"},{file:{dirname:"en/October-2015-Improvements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/October-2015-Improvements/index.md",data:{title:"October 2015 Improvements",order:5},path:"/en/October-2015-Improvements/"},{file:{dirname:"en/October-2015-Summit-Agenda",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/October-2015-Summit-Agenda/index.md",data:{title:"October 2015 Summit Agenda",order:5},path:"/en/October-2015-Summit-Agenda/"},{file:{dirname:"en/Saturday-Summit-August-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Saturday-Summit-August-2015/index.md",data:{title:"Saturday Summit August 2015",order:5},path:"/en/Saturday-Summit-August-2015/"},{file:{dirname:"en/Saturday-Summit-December-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Saturday-Summit-December-2015/index.md",data:{title:"Saturday Summit December 2015",order:5},path:"/en/Saturday-Summit-December-2015/"},{file:{dirname:"en/Saturday-Summit-October-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Saturday-Summit-October-2015/index.md",data:{title:"Saturday Summit October 2015",order:5},path:"/en/Saturday-Summit-October-2015/"},{file:{dirname:"en/Select-Issues-for-Contributing-Using-Labels",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Select-Issues-for-Contributing-Using-Labels/index.md",data:{title:"Select Issues for Contributing Using Labels",order:5},path:"/en/Select-Issues-for-Contributing-Using-Labels/"},{file:{dirname:"en/Site-Improvements-August-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Site-Improvements-August-2015/index.md",data:{title:"Site Improvements August 2015",order:5},path:"/en/Site-Improvements-August-2015/"},{file:{dirname:"en/Site-Improvements-October-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Site-Improvements-October-2015/index.md",data:{title:"Site Improvements October 2015",order:5},path:"/en/Site-Improvements-October-2015/"},{file:{dirname:"en/Spanish-Translation-Terminology",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Spanish-Translation-Terminology/index.md",data:{title:"Spanish Translation Terminology",order:5},path:"/en/Spanish-Translation-Terminology/"},{file:{dirname:"en/Start-Here",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Start-Here/index.md",data:{title:"Start Here",order:5},path:"/en/Start-Here/"},{file:{dirname:"en/Using-Github-Pages-for-your-front-end-development-projects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Using-Github-Pages-for-your-front-end-development-projects/index.md",data:{title:"Using Github Pages for your front end development projects",order:5},path:"/en/Using-Github-Pages-for-your-front-end-development-projects/"},{file:{dirname:"en/What-the-style-guide-for-Algorithms-is",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/What-the-style-guide-for-Algorithms-is/index.md",data:{title:"What the style guide for Algorithms is",order:5},path:"/en/What-the-style-guide-for-Algorithms-is/"},{file:{dirname:"en/Why-You-Should-Try-Pair-Programming",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Why-You-Should-Try-Pair-Programming/index.md",data:{title:"Why You Should Try Pair Programming",order:5},path:"/en/Why-You-Should-Try-Pair-Programming/"},{file:{dirname:"en/Wiki-Style-Guide",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"en/Wiki-Style-Guide/index.md",data:{title:"Wiki Style Guide",order:5},path:"/en/Wiki-Style-Guide/"},{file:{dirname:"es",basename:"_template.jsx",name:"_template",extname:".jsx",extSegments:[".jsx"],ext:"jsx"},requirePath:"es/_template.jsx",templatePath:"/es/"},{file:{dirname:"es",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"es/index.md",data:{title:"Welcome to the Free Code Camp Wiki",order:0},path:"/es/"},{file:{dirname:".",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"index.md",data:{title:"Welcome to the Free Code Camp Wiki!"},path:"/"}]}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(258),o=t(246),r=a(o),l=t(260),i=a(l),c=t(256),p=a(c),h=n.link=function(e){return null!==s.config.linkPrefix?s.config.linkPrefix+e:e};n.templateChildrenPages=function(e,n){var t=e.split("/");t.pop();var a="/"+t.join("/");a=h(a);var o=(0,i["default"])((0,r["default"])(n.routes,function(e){return(0,p["default"])(e.path,a)})).childRoutes,l=o.map(function(e){return e.path}),c=void 0;return c=l?(0,r["default"])(s.pages,function(e){return l.indexOf(h(e.path))>=0}):[]}},function(e,n){function t(e){return e?e[0]:void 0}e.exports=t},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(2),o=a(s),r=t(262),l=a(r),i=t(264),c=a(i);c["default"].rhythm;e.exports=o["default"].createClass({displayName:"exports",render:function(){var e;return e=this.props.page.data,o["default"].createElement(l["default"],{title:e.title+" | "+this.props.config.siteTitle},o["default"].createElement("div",{className:"markdown"},o["default"].createElement("h1",null,e.title),o["default"].createElement("div",{dangerouslySetInnerHTML:{__html:e.body}})))}})},function(e,n,t){"use strict";function a(e){var n=e[e.length-1];return n?n.title:void 0}function s(e){document.title=e||""}var o=t(2),r=t(263),l=o.createClass({propTypes:{title:o.PropTypes.string.isRequired},render:function(){return this.props.children?o.Children.only(this.props.children):null}});e.exports=r(a,s)(l)},function(e,n,t){"use strict";function a(e){
return e&&e.__esModule?e:{"default":e}}function s(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),l=t(2),i=a(l),c=t(9),p=a(c),h=t(117),d=a(h);e.exports=function(e,n,t){function a(e){return e.displayName||e.name||"Component"}if("function"!=typeof e)throw new Error("Expected reducePropsToState to be a function.");if("function"!=typeof n)throw new Error("Expected handleStateChangeOnClient to be a function.");if("undefined"!=typeof t&&"function"!=typeof t)throw new Error("Expected mapStateOnServer to either be undefined or a function.");return function(c){function h(){m=e(u.map(function(e){return e.props})),f.canUseDOM?n(m):t&&(m=t(m))}if("function"!=typeof c)throw new Error("Expected WrappedComponent to be a React component.");var u=[],m=void 0,f=function(e){function n(){s(this,n),e.apply(this,arguments)}return o(n,e),n.peek=function(){return m},n.rewind=function(){if(n.canUseDOM)throw new Error("You may ony call rewind() on the server. Call peek() to read the current state.");var e=m;return m=void 0,u=[],e},n.prototype.shouldComponentUpdate=function(e){return!d["default"](e,this.props)},n.prototype.componentWillMount=function(){u.push(this),h()},n.prototype.componentDidUpdate=function(){h()},n.prototype.componentWillUnmount=function(){var e=u.indexOf(this);u.splice(e,1),h()},n.prototype.render=function(){return i["default"].createElement(c,this.props)},r(n,null,[{key:"displayName",value:"SideEffect("+a(c)+")",enumerable:!0},{key:"canUseDOM",value:p["default"].canUseDOM,enumerable:!0}]),n}(l.Component);return f}}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(n,"__esModule",{value:!0});var s=t(265),o=a(s),r={baseFontSize:"16px",baseLineHeight:"24px",bodyFontFamily:'"Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',headerFontFamily:'"Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',bodyWeight:300,headerWeight:600,boldWeight:600,modularScales:[{scale:"minor third"}]},l=new o["default"](r);n["default"]=l,e.exports=n["default"]},function(e,n,t){var a,s,o,r,l,i,c,p,h;a=t(2),p=t(162),s=t(266),c=t(270),i=t(272),o=t(273),r=t(274),l=function(e){var n,t,a,o,l;if(l=s(e),a=r(l,e),null!=e.subThemes&&i(e.subThemes)){t=e.subThemes;for(n in t)o=t[n],l=s(o),a+=r(l,o,n,e)}return a},e.exports=h=function(e){var n,a,r,h,d;if(n={baseFontSize:"18px",baseLineHeight:"28.5px",modularScales:[{scale:"diminished fourth"},{maxWidth:"768px",scale:"minor third"}],googleFonts:[],headerFontFamily:'"Avenir Next", "Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',bodyFontFamily:"georgia, serif",headerGray:20,headerGrayHue:0,bodyGray:20,bodyGrayHue:0,headerWeight:700,bodyWeight:400,boldWeight:700,fontFaces:[]},e=p(n,e),null!=e.subThemes&&i(e.subThemes)){r=e.subThemes;for(a in r)h=r[a],e.subThemes[a]=p(o(e),h,{rhythmUnit:"px"})}return d=s(e),{options:e,GoogleFont:t(282)(e),TypographyStyle:t(283)(function(){return l(e)}),rhythm:d.rhythm,createStyles:function(){return l(e)},fontSizeToPx:d.adjustFontSizeTo,fontSizeToMS:function(n){var t,a;return t=e.baseFontSize.slice(0,-2),a=c(n,e.modularScales[0])*t+"px",d.adjustFontSizeTo(a)},injectStyles:function(){var n,t;return"undefined"!=typeof document&&null!==document?null!=document.getElementById("typography.js")?(t=document.getElementById("typography.js"),t.innerHTML=l(e)):(n="undefined"!=typeof document&&null!==document?document.createElement("style"):void 0,n.id="typography.js",n.innerHTML=l(e),document.head.appendChild(n)):void 0}}}},function(e,n,t){var a,s,o,r,l,i,c,p,h,d;i=t(162),s=t(267),c=t(268),h=function(e){return c(e)[1]},d=function(e){return c(e)[0]},o={baseFontSize:"16px",baseLineHeight:"24px",rhythmUnit:"rem",defaultRhythmBorderWidth:"1px",defaultRhythmBorderStyle:"solid",roundToNearestHalfLine:!0,minLinePadding:"2px"},l=function(e,n){var t,a,o,r,l;return a=s(n.baseFontSize),o=d(a(e,"px")),t=d(a(n.baseLineHeight,"px")),l=d(a(n.minLinePadding,"px")),r=n.roundToNearestHalfLine?Math.ceil(2*o/t)/2:Math.ceil(o/t),2*l>r*t-o&&(r+=n.roundToNearestHalfLine?.5:1),r},p=function(e){var n;return n=s(e.baseFontSize),function(t,a,s){var o,r;return null==t&&(t=1),null==a&&(a=e.baseFontSize),null==s&&(s=0),o=t*d(e.baseLineHeight)-s,o+=h(e.baseLineHeight),r=n(o,e.rhythmUnit,a),"px"===h(r)&&(r=Math.floor(d(r))+h(r)),parseFloat(d(r).toFixed(5))+h(r)}},r=function(e){var n;return n=s(e.baseFontSize),{fontSize:d(e.baseFontSize)/16*100+"%",lineHeight:n(e.baseLineHeight,"em")}},a=function(e,n,t,a){var o,r;return null==t&&(t=a.baseFontSize),"%"===h(e)&&(e=d(a.baseFontSize)*(d(e)/100)+"px"),o=s(a.baseFontSize),t=o(t,"px"),e=o(e,"px",t),r=p(a),"auto"===n&&(n=l(e,a)),{fontSize:o(e,a.rhythmUnit,t),lineHeight:r(n,t)}},e.exports=function(e){var n;return n=JSON.parse(JSON.stringify(o)),e=i(n,e),{rhythm:p(e),establishBaseline:function(){return r(e)},linesForFontSize:function(n){return l(n,e)},adjustFontSizeTo:function(n,t,s){return null==t&&(t="auto"),a(n,t,s,e)}}}},function(e,n,t){var a,s,o,r;s=t(268),t(269),a="16px",o=function(e){return s(e)[1]},r=function(e){return s(e)[0]},e.exports=function(e){return null==e&&(e=e),function(n,t,a,s){var l,i,c;if(null==a&&(a=e),null==s&&(s=a),l=o(n),l===t)return n;if(c=r(n),"px"!==o(a)&&console.warn("Parameter fromContext must resolve to a value in pixel units."),"px"!==o(s)&&console.warn("Parameter toContext must resolve to a value in pixel units."),"px"!==l)if("em"===l)c=r(n)*r(a);else if("rem"===l)c=r(n)*r(e);else{if("ex"!==l)return"ch"===l||"vw"===l||"vh"===l||"vmin"===l?(console.warn(l+" units can't be reliably converted; Returning original value."),n):(console.warn(l+" is an unknown or unsupported length unit; Returning original value."),n);c=r(n)*r(a)*2}if(i=c,"px"!==t)if("em"===t)i=c/r(s);else if("rem"===t)i=c/r(e);else{if("ex"!==t)return"ch"===t||"vw"===t||"vh"===t||"vmin"===t?(console.warn(t+" units can't be reliably converted; Returning original value."),n):(console.warn(t+" is an unknown or unsupported length unit; Returning original value."),n);i=c/r(s)/2}return parseFloat(i.toFixed(5))+t}}},function(e,n){e.exports=function(e,n){n||(n=[0,""]),e=String(e);var t=parseFloat(e,10);return n[0]=t,n[1]=e.match(/[\d.\-\+]*\s*(.*)/)[1]||"",n}},function(e,n){!function(e){"use strict";for(var n,t,a={},s=function(){},o="memory".split(","),r="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");n=o.pop();)e[n]=e[n]||a;for(;t=r.pop();)e[t]=e[t]||s}(this.console=this.console||{})},function(e,n,t){var a,s;a=t(271),s={"minor second":16/15,"major second":9/8,"minor third":1.2,"major third":4/3,"diminished fourth":Math.sqrt(2),"perfect fifth":1.5,"minor sixth":1.6,golden:1.61803398875,phi:1.61803398875,"major sixth":5/3,"minor seventh":16/9,"major seventh":15/8,octave:2,"major tenth":2.5,"major eleventh":8/3,"major twelfth":3,"double octave":4},e.exports=function(e,n){var t;return null==e&&(e=0),null==n&&(n="golden"),t=a(n)?n:null!=s[n]?s[n]:s.golden,Math.pow(t,e)}},function(e,n){(function(n){function t(e){return!!e&&"object"==typeof e}function a(e){return"number"==typeof e||t(e)&&r.call(e)==s}var s="[object Number]",o=n.Object.prototype,r=o.toString;e.exports=a}).call(n,function(){return this}())},function(e,n){/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2015, Jon Schlinkert.
	 * Licensed under the MIT License.
	 */
"use strict";e.exports=function(e){return null!=e&&"object"==typeof e&&!Array.isArray(e)}},function(e,n){e.exports=function(e){if(!e||"object"!=typeof e)return e;var n;if(a(e)){var s=e.length;n=Array(s);for(var o=0;s>o;o++)n[o]=e[o]}else{var r=t(e);n={};for(var o=0,l=r.length;l>o;o++){var i=r[o];n[i]=e[i]}}return n};var t=Object.keys||function(e){var n=[];for(var t in e)({}).hasOwnProperty.call(e,t)&&n.push(t);return n},a=Array.isArray||function(e){return"[object Array]"==={}.toString.call(e)}},function(e,n,t){var a,s,o,r,l,i,c,p,h,d;p=t(270),h=t(275),l=t(276),i=t(277),s=t(278),c=t(280),d=null,o=function(e,n){var t,a,o,r,l,i,c,p,h,d;if(h="",l="",!(null!=n.fontFaces&&n.fontFaces.length>0))return h;for(i=n.fontFaces,a=0,r=i.length;r>a;a++){t=i[a],p=function(){var e,n,a,s;for(a=t.src,s=[],e=0,n=a.length;n>e;e++)c=a[e],s.push("src: "+c+";");return s}();for(o in t)d=t[o],"src"!==o&&(l+=s(o,"-")+": "+d+";\n");h+="@font-face {\n  "+l+"\n  "+p.join("\n")+"\n}"}return h},a=function(e,n){var t;return null!=d&&(e=c(e,function(e){return".typography-theme-"+d+" "+e})),t=e.join(","),t+" {\n"+n+"\n}\n\n"},r=function(e,n){var t,s,o,r,l,i,c,h,d,u,m,f,g,w;for(w="",t=n.baseFontSize.slice(0,-2),f=n.modularScales,h=0,d=f.length;d>h;h++)m=f[h],u=m.maxWidth,g=m.scale,s=e.adjustFontSizeTo(p(3,g)*t+"px"),o=e.adjustFontSizeTo(p(2,g)*t+"px"),r=e.adjustFontSizeTo(p(1,g)*t+"px"),l=e.adjustFontSizeTo(p(2/3,g)*t+"px"),i=e.adjustFontSizeTo(p(1/3,g)*t+"px"),c=e.adjustFontSizeTo(p(0,g)*t+"px"),u&&(w+="@media only screen and (max-width: "+u+") {\n"),w+=a(["h1"],"font-size: "+s.fontSize+";\nline-height: "+s.lineHeight+";"),w+=a(["h2"],"font-size: "+o.fontSize+";\nline-height: "+o.lineHeight+";"),w+=a(["h3"],"font-size: "+r.fontSize+";\nline-height: "+r.lineHeight+";"),w+=a(["h4"],"font-size: "+l.fontSize+";\nline-height: "+l.lineHeight+";"),w+=a(["h5"],"font-size: "+i.fontSize+";\nline-height: "+c.lineHeight+";"),w+=a(["h6"],"font-size: "+c.fontSize+";\nline-height: "+c.lineHeight+";"),u&&(w+="}");return w},e.exports=function(e,n,t,s){var i;return d=t,i="",null==t&&(i=h+"\n\nhtml {\n  box-sizing: border-box;\n  font-size: "+e.establishBaseline().fontSize+";\n  line-height: "+e.establishBaseline().lineHeight+";\n  overflow-y: scroll;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  color: "+l(n.bodyGray,n.bodyGrayHue)+";\n  font-family: "+n.bodyFontFamily+";\n  font-weight: "+n.bodyWeight+";\n  word-wrap: break-word;\n}\n\n/* Make image responsive by default */\nimg {\n  max-width: 100%;\n}\n\n"),t&&(i+=".typography-theme-"+t+" {\n  color: "+l(n.bodyGray,n.bodyGrayHue)+";\n  font-family: "+n.bodyFontFamily+";\n  font-weight: "+n.bodyWeight+";\n  font-size: "+e.adjustFontSizeTo(n.baseFontSize,"auto",s.baseFontSize).fontSize+";\n  line-height: "+e.adjustFontSizeTo(n.baseFontSize,"auto",s.baseFontSize).lineHeight+";\n}"),i+=a(["h1","h2","h3","h4","h5","h6","hgroup","ul","ol","dl","dd","p","figure","pre","table","fieldset","blockquote","form","noscript","iframe","img","hr"],"margin: 0;\nmargin-bottom: "+e.rhythm(1)+";\npadding: 0;"),i+=a(["blockquote"],"margin: "+e.rhythm(1)+" "+e.rhythm(2.5)+";"),i+=a(["b","strong"],"font-weight: "+n.boldWeight),i+=a(["hr"],"background: "+l(80,n.bodyGrayHue)+";\nborder: none;\nheight: 1px;\nmargin-bottom: calc("+e.rhythm(1)+" - 1px);"),i+=a(["ol","ul"],"list-style-position: outside;\nmargin-left: "+e.rhythm(1)+";"),i+=a(["ul li","ol li"],"padding-left: 0;"),i+=a(["code","kbd","pre","samp"],"font-size: "+e.adjustFontSizeTo("85%").fontSize+";\nline-height: "+e.adjustFontSizeTo("85%").lineHeight+";"),i+=a(["table"],"font-size: "+e.adjustFontSizeTo(n.baseFontSize).fontSize+";\nline-height: "+e.adjustFontSizeTo(n.baseLineHeight).lineHeight+";\nwidth: 100%;"),i+=a(["thead"],"text-align: left;"),i+=a(["h1","h2","h3","h4","h5","h6"],"color: "+l(n.headerGray,n.headerGrayHue)+";\nfont-family: "+n.headerFontFamily+";\nfont-weight: "+n.headerWeight+";"),i+=r(e,n)+"\n"+o(e,n)}},function(e,n){e.exports="/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}"},function(e,n){function t(e){return!isNaN(parseFloat(e))&&isFinite(e)}e.exports=function(e,n){if("undefined"==typeof n&&(n=0),e>100&&(e=100),0>e&&(e=0),"cool"===n?n=237:"slate"===n?n=122:"warm"===n&&(n=69),!t(n))throw new Error("Hue is not a number");if(!t(e))throw new Error("Lightness is not a number");var a=0;if(0!==n){var s=19.92978,o=-.3651759,r=.001737214;a=s+o*e+r*Math.pow(e,2)}return"hsl("+n+","+a+"%,"+e+"%)"}},function(e,n){"use strict";var t=String.prototype.valueOf,a=function(e){try{return t.call(e),!0}catch(n){return!1}},s=Object.prototype.toString,o="[object String]",r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;e.exports=function(e){return"string"==typeof e?!0:"object"!=typeof e?!1:r?a(e):s.call(e)===o}},function(e,n,t){"use strict";var a=t(279);e.exports=function(e,n){if("string"!=typeof e)throw new TypeError("Expected a string");n="undefined"==typeof n?"_":n;var t=a(n);return e.replace(/([a-z\d])([A-Z])/g,"$1"+n+"$2").replace(new RegExp("("+t+"[A-Z])([A-Z])","g"),"$1"+t+"$2").toLowerCase()}},function(e,n){"use strict";var t=/[|\\{}()[\]^$+*?.]/g;e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(t,"\\$&")}},function(e,n,t){function a(e,n,t){var a=l(e)?s:r;return n=o(n,t,3),a(e,n)}var s=t(281),o=t(220),r=t(251),l=t(215);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length,s=Array(a);++t<a;)s[t]=n(e[t],t,e);return s}e.exports=t},function(e,n,t){var a;a=t(2),e.exports=function(e){return a.createClass({displayName:"GoogleFont",render:function(){var n,t;return t="",n=e.googleFonts.map(function(e){var n;return n="",n+=e.name.split(" ").join("+"),n+=":",n+=e.styles.join(",")}),t=n.join("|"),t?a.DOM.link({href:"//fonts.googleapis.com/css?family="+t,rel:"stylesheet",type:"text/css"}):null}})}},function(e,n,t){var a,s;a=t(2),s=t(274),e.exports=function(e){return a.createClass({displayName:"TypographyStyle",render:function(){return a.DOM.style({id:"typography.js",dangerouslySetInnerHTML:{__html:e()}})}})}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(2),o=a(s);e.exports=o["default"].createClass({displayName:"exports",propTypes:{page:s.PropTypes.shape({data:s.PropTypes.string})},render:function(){var e=this.props.page.data;return o["default"].createElement("div",{dangerouslySetInnerHTML:{__html:e}})}})},function(e,n,t){"use strict";n.loadContext=function(e){var n;return n=t(286),e(n)}},function(e,n,t){function a(e){return t(s(e))}function s(e){return o[e]||function(){throw new Error("Cannot find module '"+e+"'.")}()}var o={"./_template":287,"./_template.jsx":287,"./en/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/index.md":333,"./en/Academic-Honesty-Policy/index.md":334,"./en/Algorithm-Arguments-Optional/index.md":335,"./en/Algorithm-Binary-Agents/index.md":336,"./en/Algorithm-Boo-who/index.md":337,"./en/Algorithm-Caesars-Cipher/index.md":338,"./en/Algorithm-Check-for-Palindromes/index.md":339,"./en/Algorithm-Chunky-Monkey/index.md":340,"./en/Algorithm-Confirm-the-Ending/index.md":341,"./en/Algorithm-Convert-HTML-Entities/index.md":342,"./en/Algorithm-DNA-Pairing/index.md":343,"./en/Algorithm-Diff-Two-Arrays/index.md":344,"./en/Algorithm-Drop-it/index.md":345,"./en/Algorithm-Everything-be-True/index.md":346,"./en/Algorithm-Exact-Change/index.md":347,"./en/Algorithm-Factorialize-a-Number/index.md":348,"./en/Algorithm-Falsy-Bouncer/index.md":349,"./en/Algorithm-Find-The-Longest-Word-in-a-String/index.md":350,"./en/Algorithm-Finders-Keepers/index.md":351,"./en/Algorithm-Friendly-Date-Ranges/index.md":352,"./en/Algorithm-Inventory-Update/index.md":353,"./en/Algorithm-Make-a-Person/index.md":354,"./en/Algorithm-Map-the-Debris/index.md":355,"./en/Algorithm-Missing-letters/index.md":356,"./en/Algorithm-Mutations/index.md":357,"./en/Algorithm-No-Repeats-Please/index.md":358,"./en/Algorithm-Pairwise/index.md":359,"./en/Algorithm-Pig-Latin/index.md":360,"./en/Algorithm-Repeat-a-String-Repeat-a-String/index.md":361,"./en/Algorithm-Return-Largest-Numbers-in-Arrays/index.md":362,"./en/Algorithm-Reverse-a-String/index.md":363,"./en/Algorithm-Roman-Numeral-Converter/index.md":364,"./en/Algorithm-Search-and-Replace/index.md":365,"./en/Algorithm-Seek-and-Destroy/index.md":366,"./en/Algorithm-Slasher-Flick/index.md":367,"./en/Algorithm-Smallest-Common-Multiple/index.md":368,"./en/Algorithm-Sorted-Union/index.md":369,"./en/Algorithm-Spinal-Tap-Case/index.md":370,"./en/Algorithm-Steamroller/index.md":371,"./en/Algorithm-Style-Guide/index.md":372,"./en/Algorithm-Sum-All-Numbers-in-a-Range/index.md":373,"./en/Algorithm-Sum-All-Odd-Fibonacci-Numbers/index.md":374,"./en/Algorithm-Sum-All-Primes/index.md":375,"./en/Algorithm-Symmetric-Difference/index.md":376,"./en/Algorithm-Title-Case-a-Sentence/index.md":377,"./en/Algorithm-Truncate-a-String/index.md":378,"./en/Algorithm-Validate-US-Telephone-Numbers/index.md":379,"./en/Algorithm-Where-art-thou/index.md":380,"./en/Algorithm-Where-do-I-belong/index.md":381,"./en/Algorithm-Wiki-Template/index.md":382,"./en/August-2015-Improvements/index.md":383,"./en/August-Live-Stream/index.md":384,"./en/Back-End-Project-Resources/index.md":385,"./en/Bonus-SocketIO/index.md":386,"./en/Challenge-Access-Array-Data-with-Indexes/index.md":387,"./en/Challenge-Access-Multi-Dimensional-Arrays-With-Indexes/index.md":388,"./en/Challenge-Accessing-Nested-Arrays-In-Json/index.md":389,"./en/Challenge-Accessing-Nested-Objects-In-Json/index.md":390,"./en/Challenge-Accessing-Objects-Properties-With-Bracket-Notation/index.md":391,"./en/Challenge-Accessing-Objects-Properties-With-The-Dot-Operator/index.md":392,"./en/Challenge-Accessing-Objects-Properties-With-Variables/index.md":393,"./en/Challenge-Add-Alt-Text-to-an-Image-for-Accessibility/index.md":394,"./en/Challenge-Add-Borders-Around-your-Elements/index.md":395,"./en/Challenge-Add-Different-Margins-to-Each-Side-of-an-Element/index.md":396,"./en/Challenge-Add-Different-Padding-to-Each-Side-of-an-Element/index.md":397,"./en/Challenge-Add-Elements-within-your-Bootstrap-Wells/index.md":398,"./en/Challenge-Add-Font-Awesome-Icons-to-all-of-our-Buttons/index.md":399,"./en/Challenge-Add-Font-Awesome-Icons-to-our-Buttons/index.md":400,"./en/Challenge-Add-ID-Attributes-to-Bootstrap-Elements/index.md":401,"./en/Challenge-Add-Images-to-your-Website/index.md":402,"./en/Challenge-Add-New-Properties-to-a-JavaScript-Object/index.md":403,"./en/Challenge-Add-Placeholder-Text-to-a-Text-Field/index.md":404,"./en/Challenge-Add-Rounded-Corners-with-a-Border-Radius/index.md":405,"./en/Challenge-Add-Two-Numbers-with-JavaScript/index.md":406,"./en/Challenge-Add-a-Negative-Margin-to-an-Element/index.md":407,"./en/Challenge-Add-a-Submit-Button-to-a-Form/index.md":408,"./en/Challenge-Add-your-JavaScript-Slot-Machine-Slots/index.md":409,"./en/Challenge-Adding-A-Default-Option-In-Switch-Statements/index.md":410,"./en/Challenge-Adjust-the-Margin-of-an-Element/index.md":411,"./en/Challenge-Adjusting-the-Padding-of-an-Element/index.md":412,"./en/Challenge-Appending-Variables-to-Strings/index.md":413,"./en/Challenge-Apply-the-Default-Bootstrap-Button-Style/index.md":414,"./en/Challenge-Assignment-With-A-Returned-Value/index.md":415,"./en/Challenge-Assignment-with-Divided-by-Equals/index.md":416,"./en/Challenge-Assignment-with-Minus-Equals/index.md":417,"./en/Challenge-Assignment-with-Plus-Equals/index.md":418,"./en/Challenge-Assignment-with-Times-Equals/index.md":419,"./en/Challenge-Bring-your-JavaScript-Slot-Machine-to-Life/index.md":420,"./en/Challenge-Build-JavaScript-Objects/index.md":421,"./en/Challenge-Call-out-Optional-Actions-with-Button-Info/index.md":422,"./en/Challenge-Center-Text-with-Bootstrap/index.md":423,"./en/Challenge-Chaining-If-Else-Statements/index.md":424,"./en/Challenge-Change-Text-Inside-an-Element-Using-jQuery/index.md":425,"./en/Challenge-Change-Text-with-Click-Events/index.md":426,"./en/Challenge-Change-the-CSS-of-an-Element-Using-jQuery/index.md":427,"./en/Challenge-Change-the-Color-of-Text/index.md":428,"./en/Challenge-Change-the-Font-Size-of-an-Element/index.md":429,"./en/Challenge-Check-Radio-Buttons-and-Checkboxes-by-Default/index.md":430,"./en/Challenge-Check-the-Length-Property-of-a-String-Variable/index.md":431,"./en/Challenge-Clone-an-Element-Using-jQuery/index.md":432,"./en/Challenge-Comment-out-HTML/index.md":433,"./en/Challenge-Comment-your-JavaScript-Code/index.md":434,"./en/Challenge-Comparison-With-The-Equality-Operator/index.md":435,"./en/Challenge-Comparison-With-The-Greater-Than-Equal-To-Operator/index.md":436,"./en/Challenge-Comparison-With-The-Greater-Than-Operator/index.md":437,"./en/Challenge-Comparison-With-The-Inequality-Operator/index.md":438,"./en/Challenge-Comparison-With-The-Less-Than-Equal-To-Operator/index.md":439,"./en/Challenge-Comparison-With-The-Less-Than-Operator/index.md":440,"./en/Challenge-Comparison-With-The-Strict-Equality-Operator/index.md":441,"./en/Challenge-Comparison-With-The-Strict-Inequality-Operator/index.md":442,"./en/Challenge-Comparisons-With-The-Logical-And-Operator/index.md":443,"./en/Challenge-Comparisons-With-The-Logical-Or-Operator/index.md":444,"./en/Challenge-Concatenate-Strings-with-.concat/index.md":445,"./en/Challenge-Concatenating-Strings-with-Plus-Operator/index.md":446,"./en/Challenge-Concatenating-Strings-with-the-Plus-Equals-Operator/index.md":447,"./en/Challenge-Condense-arrays-with-reduce/index.md":448,"./en/Challenge-Construct-JavaScript-Objects-with-Functions/index.md":449,"./en/Challenge-Constructing-Strings-with-Variables/index.md":450,"./en/Challenge-Convert-JSON-Data-to-HTML/index.md":451,"./en/Challenge-Count-Backwards-With-a-For-Loop/index.md":452,"./en/Challenge-Create-Bootstrap-Wells/index.md":453,"./en/Challenge-Create-Decimal-Numbers-with-JavaScript/index.md":454,"./en/Challenge-Create-a-Block-Element-Bootstrap-Button/index.md":455,"./en/Challenge-Create-a-Bootstrap-Button/index.md":456,"./en/Challenge-Create-a-Bootstrap-Headline/index.md":457,"./en/Challenge-Create-a-Bootstrap-Row/index.md":458,"./en/Challenge-Create-a-Bulleted-Unordered-List/index.md":459,"./en/Challenge-Create-a-Class-to-Target-with-jQuery-Selectors/index.md":460,"./en/Challenge-Create-a-Custom-Heading/index.md":461,"./en/Challenge-Create-a-Form-Element/index.md":462,"./en/Challenge-Create-a-JavaScript-Slot-Machine/index.md":463,"./en/Challenge-Create-a-Set-of-Checkboxes/index.md":464,"./en/Challenge-Create-a-Set-of-Radio-Buttons/index.md":465,"./en/Challenge-Create-a-Text-Field/index.md":466,"./en/Challenge-Create-an-Ordered-List/index.md":467,"./en/Challenge-Declare-JavaScript-Objects-as-Variables/index.md":468,"./en/Challenge-Declare-JavaScript-Variables/index.md":469,"./en/Challenge-Declare-String-Variables/index.md":470,"./en/Challenge-Decrement-a-Number-with-Javascript/index.md":471,"./en/Challenge-Delete-HTML-Elements/index.md":472,"./en/Challenge-Delete-Properties-from-a-JavaScript-Object/index.md":473,"./en/Challenge-Delete-your-jQuery-Functions/index.md":474,"./en/Challenge-Disable-an-Element-Using-jQuery/index.md":475,"./en/Challenge-Ditch-Custom-CSS-for-Bootstrap/index.md":476,"./en/Challenge-Divide-One-Number-by-Another-with-JavaScript/index.md":477,"./en/Challenge-Escape-Sequences-in-Strings/index.md":478,"./en/Challenge-Escaping-Literal-Quotes-in-Strings/index.md":479,"./en/Challenge-Fill-in-the-Blank-with-Placeholder-Text/index.md":480,"./en/Challenge-Filter-Arrays-with-filter/index.md":481,"./en/Challenge-Find-Numbers-with-Regular-Expressions/index.md":482,"./en/Challenge-Find-White-Space-with-Regular-Expressions/index.md":483,"./en/Challenge-Find-the-Length-of-a-String/index.md":484,"./en/Challenge-Finding-a-Remainder-in-Javascript/index.md":485,"./en/Challenge-Generate-Random-Fractions-with-JavaScript/index.md":486,"./en/Challenge-Generate-Random-Whole-Numbers-with-JavaScript/index.md":487,"./en/Challenge-Generate-Random-Whole-Numbers-within-a-Range/index.md":488,"./en/Challenge-Get-Geo-location-Data/index.md":489,"./en/Challenge-Get-JSON-with-the-jQuery-getJSON-Method/index.md":490,"./en/Challenge-Give-Each-Element-a-Unique-ID/index.md":491,"./en/Challenge-Give-a-Background-Color-to-a-Div-Element/index.md":492,"./en/Challenge-Give-your-JavaScript-Slot-Machine-some-stylish-images/index.md":493,"./en/Challenge-Global-Scope-And-Functions/index.md":494,"./en/Challenge-Global-Vs-Local-Scope-In-Functions/index.md":495,"./en/Challenge-Headline-with-the-h2-Element/index.md":496,"./en/Challenge-House-our-page-within-a-Bootstrap-Container-Fluid-Div/index.md":497,"./en/Challenge-Import-a-Google-Font/index.md":498,"./en/Challenge-Increment-a-Number-with-Javascript/index.md":499,"./en/Challenge-Inform-with-the-Paragraph-Element/index.md":500,"./en/Challenge-Inherit-Styles-from-the-Body-Element/index.md":501,"./en/Challenge-Initializing-Variables-with-the-Equal-Operator/index.md":502,"./en/Challenge-Introducing-Else-If-Statements/index.md":503,"./en/Challenge-Introducing-Else-Statements/index.md":504,"./en/Challenge-Introducing-Javascript-Object-Notation-Json/index.md":505,"./en/Challenge-Invert-Regular-Expression-Matches-with-JavaScript/index.md":506,"./en/Challenge-Iterate-Odd-Numbers-With-a-For-Loop/index.md":507,"./en/Challenge-Iterate-Through-An-Array-With-A-For-Loop/index.md":508,"./en/Challenge-Iterate-over-Arrays-with-map/index.md":509,"./en/Challenge-Iterate-with-JavaScript-For-Loops/index.md":510,"./en/Challenge-Iterate-with-JavaScript-While-Loops/index.md":511,"./en/Challenge-Join-Strings-with-.join/index.md":512,"./en/Challenge-Label-Bootstrap-Buttons/index.md":513,"./en/Challenge-Label-Bootstrap-Wells/index.md":514,"./en/Challenge-Learn-how-Script-Tags-and-Document-Ready-Work/index.md":515,"./en/Challenge-Line-up-Form-Elements-Responsively-with-Bootstrap/index.md":516,"./en/Challenge-Link-to-External-Pages-with-Anchor-Elements/index.md":517,"./en/Challenge-Local-Scope-And-Functions/index.md":518,"./en/Challenge-Make-Circular-Images-with-a-Border-Radius/index.md":519,"./en/Challenge-Make-Dead-Links-using-the-Hash-Symbol/index.md":520,"./en/Challenge-Make-Images-Mobile-Responsive/index.md":521,"./en/Challenge-Make-Instances-of-Objects-with-a-Constructor-Function/index.md":522,"./en/Challenge-Make-Object-Properties-Private/index.md":523,"./en/Challenge-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/index.md":524,"./en/Challenge-Manipulate-Arrays-With-pop()/index.md":525,"./en/Challenge-Manipulate-Arrays-With-push()/index.md":526,"./en/Challenge-Manipulate-Arrays-With-shift()/index.md":527,"./en/Challenge-Manipulate-Arrays-With-unshift()/index.md":528,"./en/Challenge-Manipulate-JavaScript-Objects/index.md":529,"./en/Challenge-Modify-Array-Data-With-Indexes/index.md":530,"./en/Challenge-Multiple-Identical-Options-In-Switch-Statements/index.md":531,"./en/Challenge-Multiply-Two-Numbers-with-JavaScript/index.md":532,"./en/Challenge-Nest-Many-Elements-within-a-Single-Div-Element/index.md":533,"./en/Challenge-Nest-an-Anchor-Element-within-a-Paragraph/index.md":534,"./en/Challenge-Nest-one-Array-within-Another-Array/index.md":535,"./en/Challenge-Nesting-For-Loops/index.md":536,"./en/Challenge-Override-All-Other-Styles-by-using-Important/index.md":537,"./en/Challenge-Override-Class-Declarations-by-Styling-ID-Attributes/index.md":538,"./en/Challenge-Override-Class-Declarations-with-Inline-Styles/index.md":539,"./en/Challenge-Override-Styles-in-Subsequent-CSS/index.md":540,"./en/Challenge-Passing-Values-To-Functions-With-Arguments/index.md":541,"./en/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/index.md":542,"./en/Challenge-Prefilter-JSON/index.md":543,"./en/Challenge-Prioritize-One-Style-Over-Another/index.md":544,"./en/Challenge-Quoting-Strings-with-Single-Quotes/index.md":545,"./en/Challenge-Remove-Classes-from-an-element-with-jQuery/index.md":546,"./en/Challenge-Remove-an-Element-Using-jQuery/index.md":547,"./en/Challenge-Render-Images-from-Data-Sources/index.md":548,"./en/Challenge-Replacing-If-Else-Chains-With-Switch/index.md":549,"./en/Challenge-Responsively-Style-Checkboxes/index.md":550,"./en/Challenge-Responsively-Style-Radio-Buttons/index.md":551,"./en/Challenge-Return-A-Value-From-A-Function-With-Return/index.md":552,"./en/Challenge-Return-Early-Pattern-For-Functions/index.md":553,"./en/Challenge-Returning-Boolean-Values-From-Functions/index.md":554,"./en/Challenge-Reverse-Arrays-with-reverse/index.md":555,"./en/Challenge-Save-your-Code-Revisions-Forever-with-Git/index.md":556,"./en/Challenge-Say-Hello-to-HTML-Elements/index.md":557,"./en/Challenge-Selecting-From-Many-Options-With-Switch-Statements/index.md":558,"./en/Challenge-Set-the-Font-Family-of-an-Element/index.md":559,"./en/Challenge-Set-the-ID-of-an-Element/index.md":560,"./en/Challenge-Sift-through-Text-with-Regular-Expressions/index.md":561,"./en/Challenge-Size-your-Images/index.md":562,"./en/Challenge-Sort-Arrays-with-sort/index.md":563,"./en/Challenge-Specify-How-Fonts-Should-Degrade/index.md":564,"./en/Challenge-Split-Strings-with-split/index.md":565,"./en/Challenge-Split-your-Bootstrap-Row/index.md":566,"./en/Challenge-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/index.md":567,"./en/Challenge-Storing-Values-with-the-Equal-Operator/index.md":568,"./en/Challenge-Style-Multiple-Elements-with-a-CSS-Class/index.md":569,"./en/Challenge-Style-Text-Inputs-as-Form-Controls/index.md":570,"./en/Challenge-Style-the-HTML-Body-Element/index.md":571,"./en/Challenge-Subtract-One-Number-from-Another-with-JavaScript/index.md":572,"./en/Challenge-Target-Elements-by-Class-Using-jQuery/index.md":573,"./en/Challenge-Target-Elements-by-ID-Using-jQuery/index.md":574,"./en/Challenge-Target-Even-Numbered-Elements-Using-jQuery/index.md":575,"./en/Challenge-Target-HTML-Elements-with-Selectors-Using-jQuery/index.md":576,"./en/Challenge-Target-a-Specific-Child-of-an-Element-Using-jQuery/index.md":577,"./en/Challenge-Target-the-Children-of-an-Element-Using-jQuery/index.md":578,"./en/Challenge-Target-the-Parent-of-an-Element-Using-jQuery/index.md":579,"./en/Challenge-Target-the-same-element-with-multiple-jQuery-Selectors/index.md":580,"./en/Challenge-Taste-the-Bootstrap-Button-Color-Rainbow/index.md":581,"./en/Challenge-Testing-Objects-For-Properties/index.md":582,"./en/Challenge-Trigger-Click Events-with-jQuery/index.md":583,"./en/Challenge-Turn-an-Image-into-a-Link/index.md":584,"./en/Challenge-Uncomment-HTML/index.md":585,"./en/Challenge-Understand-Boolean-Values/index.md":586,"./en/Challenge-Understand-String-Immutability/index.md":587,"./en/Challenge-Understanding-Case-Sensitivity-in-Variables/index.md":588,"./en/Challenge-Understanding-Uninitialized-Variables/index.md":589,"./en/Challenge-Updating-Object-Properties/index.md":590,"./en/Challenge-Use-Abbreviated-Hex-Code/index.md":591,"./en/Challenge-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/index.md":592,"./en/Challenge-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/index.md":593,"./en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/index.md":594,"./en/Challenge-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/index.md":595,"./en/Challenge-Use-CSS-Selectors-to-Style-Elements/index.md":596,"./en/Challenge-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/index.md":597,"./en/Challenge-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/index.md":598,"./en/Challenge-Use-Comments-to-Clarify-Code/index.md":599,"./en/Challenge-Use-Conditional-Logic-with-If-Else-Statements/index.md":600,"./en/Challenge-Use-HTML5-to-Require-a-Field/index.md":601,"./en/Challenge-Use-Hex-Code-for-Specific-Colors/index.md":602,"./en/Challenge-Use-Hex-Code-for-Specific-Shades-of-Gray/index.md":603,"./en/Challenge-Use-Hex-Code-to-Color-Elements-Blue/index.md":604,"./en/Challenge-Use-Hex-Code-to-Color-Elements-Gray/index.md":605,"./en/Challenge-Use-Hex-Code-to-Color-Elements-Green/index.md":606,"./en/Challenge-Use-Hex-Code-to-Color-Elements-Red/index.md":607,"./en/Challenge-Use-Hex-Code-to-Color-Elements-White/index.md":608,"./en/Challenge-Use-Hex-Code-to-Mix-Colors/index.md":609,"./en/Challenge-Use-RGB-to-Color-Elements-Blue/index.md":610,"./en/Challenge-Use-RGB-to-Color-Elements-Gray/index.md":611,"./en/Challenge-Use-RGB-to-Color-Elements-Green/index.md":612,"./en/Challenge-Use-RGB-to-Color-Elements-Red/index.md":613,"./en/Challenge-Use-RGB-to-Color-Elements-White/index.md":614,"./en/Challenge-Use-RGB-to-Mix-Colors/index.md":615,"./en/Challenge-Use-RGB-values-to-Color-Elements/index.md":616,"./en/Challenge-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/index.md":617,"./en/Challenge-Use-Spans-for-Inline-Elements/index.md":618,"./en/Challenge-Use-a-CSS-Class-to-Style-an-Element/index.md":619,"./en/Challenge-Use-an-ID-Attribute-to-Style-an-Element/index.md":620,"./en/Challenge-Use-appendTo-to-Move-Elements-with-jQuery/index.md":621,"./en/Challenge-Use-jQuery-to-Modify-the-Entire-Page/index.md":622,"./en/Challenge-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/index.md":623,"./en/Challenge-Use-the-Javascript-Console/index.md":624,"./en/Challenge-Using-Objects-For-Lookups/index.md":625,"./en/Challenge-Using-typeof/index.md":626,"./en/Challenge-Warn-your-Users-of-a-Dangerous-Action/index.md":627,"./en/Challenge-Write-Reusable-JavaScript-with-Functions/index.md":628,"./en/Checkpoint-Counting-Cards/index.md":629,"./en/Checkpoint-Golf-Code/index.md":630,"./en/Checkpoint-Profile-Lookup/index.md":631,"./en/Checkpoint-Record-Collection/index.md":632,"./en/Checkpoint-Shopping-List/index.md":633,"./en/Checkpoint-Stand-In-Line/index.md":634,"./en/Checkpoint-Word-Blanks/index.md":635,"./en/Coding-Help/index.md":636,"./en/Contributions-Guide---with-Typo-Demo/index.md":637,"./en/Creating-a-New-Github-Issue/index.md":638,"./en/Develop-Back-End-Project-locally-and-run-on-c9.io/index.md":639,"./en/Disable-Code-Auto-Run/index.md":640,"./en/Free-Code-Camp-Front-End-Development-Certificate/index.md":641,"./en/Free-Code-Camp-Full-Stack-Development-Certificate/index.md":642,"./en/Front-End-Project-Use-the-Twitchtv-JSON-API/index.md":643,"./en/Frontend-file-structure/index.md":644,"./en/Guide-to-Back-End-Projects-Table-of-Contents/index.md":645,"./en/How-Free-Code-Camp-works/index.md":646,"./en/How-To-Contribute-To-The-Wiki/index.md":647,"./en/How-To-Create-A-Pull-Request-for-Free-Code-Camp/index.md":648,"./en/How-to-clear-specific-values-from-your-browser's-local-storage/index.md":649,"./en/How-to-get-the-MEAN-stack-running-locally-on-OSX/index.md":650,"./en/How-to-install-Screenhero/index.md":651,"./en/How-to-start-when-you-are-stuck-(I)/index.md":652,"./en/How-to-start-when-you-are-stuck-(II)/index.md":653,"./en/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/index.md":654,"./en/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects/index.md":655,"./en/List-of-Free-Code-Camp-city-based-Campsites/index.md":656,"./en/Map/index.md":657,"./en/October-2015-Improvements/index.md":658,"./en/October-2015-Summit-Agenda/index.md":659,"./en/Saturday-Summit-August-2015/index.md":660,"./en/Saturday-Summit-December-2015/index.md":661,"./en/Saturday-Summit-October-2015/index.md":662,"./en/Select-Issues-for-Contributing-Using-Labels/index.md":663,"./en/Site-Improvements-August-2015/index.md":664,"./en/Site-Improvements-October-2015/index.md":665,"./en/Spanish-Translation-Terminology/index.md":666,"./en/Start-Here/index.md":667,"./en/Using-Github-Pages-for-your-front-end-development-projects/index.md":668,"./en/What-the-style-guide-for-Algorithms-is/index.md":669,"./en/Why-You-Should-Try-Pair-Programming/index.md":670,"./en/Wiki-Style-Guide/index.md":671,"./en/_template":672,"./en/_template.jsx":672,"./en/bot-announce/index.md":673,"./en/camperbot/index.md":674,"./en/html-elements/index.md":675,"./en/index.md":676,"./en/js-Array-prototype-filter/index.md":677,"./en/js-for-loop/index.md":678,"./en/js-for-of-loop/index.md":679,"./es/_template":680,"./es/_template.jsx":680,"./es/index.md":681,"./index.md":682};a.keys=function(){return Object.keys(o)},a.resolve=s,e.exports=a,a.id=286},function(e,n,t){(function(n){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o=t(2),r=a(o),l=t(155),i=(t(288),t(265)),c=(a(i),t(250)),p=a(c),h=t(319),d=(a(h),t(320)),u=(a(d),t(256)),m=(a(u),t(259)),f=t(264),g=a(f);t(327),t(331);var w=g["default"].rhythm;g["default"].fontSizeToPx;e.exports=r["default"].createClass({displayName:"exports",mixins:[l.State,l.Navigation],getInitialState:function(){return{filterText:""}},handleTopicChange:function(e){return this.transitionTo(e.target.value)},handleSearchChange:function(e){this.setState({filterText:this.refs.filterTextInput.value})},render:function(){var e,t,a;return e=(0,m.templateChildrenPages)(n,this.props.state).map(function(e){return{title:e.data.title,order:e.data.order,path:e.path}}),e=(0,p["default"])(e,function(e){return e.order}),t=e.map(function(e){return r["default"].createElement("option",{key:e.path,value:e.path},e.title)}),a=e.filter(function(e){if(this.state.filterText.length>0){var n=new RegExp(this.state.filterText,"i");return n.test(e.title)}return!0},this).map(function(e){return function(n){var t;return t=e.isActive((0,m.link)(n.path)),r["default"].createElement("li",{key:n.path,style:{marginBottom:w(.5)}},r["default"].createElement(l.Link,{to:(0,m.link)(n.path)},t?r["default"].createElement("strong",null,n.title):n.title))}}(this)),r["default"].createElement("div",{className:"wiki-container"},r["default"].createElement("div",{className:"article-container"},r["default"].createElement(l.RouteHandler,s({typography:g["default"]},this.props))))}})}).call(n,"_template.jsx")},function(e,n,t){n.Container=t(289),n.Grid=t(290),n.Breakpoint=t(309),n.Span=t(317)},function(e,n,t){var a,s;a=t(2),s=t(39),e.exports=a.createClass({displayName:"Container",render:function(){var e,n;return e={maxWidth:"960px",marginLeft:"auto",
marginRight:"auto"},n=s(e,this.props.style),a.createElement("div",a.__spread({},this.props,{style:n}),this.props.children,a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){var a;a=t(291),e.exports=a.createClass({displayName:"Grid",propTypes:{columns:a.PropTypes.number,gutterRatio:a.PropTypes.number},getDefaultProps:function(){return{columns:12,gutterRatio:.25}},renderChildren:function(){return a.Children.map(this.props.children,function(e){return function(n){var t,s;return"Breakpoint"===(t=null!=(s=n.type)?s.displayName:void 0)||"Span"===t?a.addons.cloneWithProps(n,{context:{columns:e.props.columns,gutterRatio:e.props.gutterRatio}}):n}}(this))},render:function(){return a.createElement("div",a.__spread({},this.props),this.renderChildren(),a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){"use strict";var a=t(25);a(!1,"require('react/addons') is deprecated. Access using require('react-addons-{addon}') instead."),e.exports=t(292)},function(e,n,t){"use strict";var a=t(293),s=t(3),o=t(296),r=t(298),l=t(304),i=t(299),c=t(54),p=t(305),h=t(297),d=t(308);t(25);s.addons={CSSTransitionGroup:r,LinkedStateMixin:a,PureRenderMixin:o,TransitionGroup:i,batchedUpdates:function(){return c.batchedUpdates.apply(this,arguments)},cloneWithProps:p,createFragment:l.create,shallowCompare:h,update:d},e.exports=s},function(e,n,t){"use strict";var a=t(294),s=t(295),o={linkState:function(e){return new a(this.state[e],s.createStateKeySetter(this,e))}};e.exports=o},function(e,n,t){"use strict";function a(e,n){this.value=e,this.requestChange=n}function s(e){var n={value:"undefined"==typeof e?o.PropTypes.any.isRequired:e.isRequired,requestChange:o.PropTypes.func.isRequired};return o.PropTypes.shape(n)}var o=t(3);a.PropTypes={link:s},e.exports=a},function(e,n){"use strict";function t(e,n){var t={};return function(a){t[n]=a,e.setState(t)}}var a={createStateSetter:function(e,n){return function(t,a,s,o,r,l){var i=n.call(e,t,a,s,o,r,l);i&&e.setState(i)}},createStateKeySetter:function(e,n){var a=e.__keySetters||(e.__keySetters={});return a[n]||(a[n]=t(e,n))}};a.Mixin={createStateSetter:function(e){return a.createStateSetter(this,e)},createStateKeySetter:function(e){return a.createStateKeySetter(this,e)}},e.exports=a},function(e,n,t){"use strict";var a=t(297),s={shouldComponentUpdate:function(e,n){return a(this,e,n)}};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){return!s(e.props,n)||!s(e.state,t)}var s=t(117);e.exports=a},function(e,n,t){"use strict";function a(e){var n="transition"+e+"Timeout",t="transition"+e;return function(e){if(e[t]){if(null==e[n])return new Error(n+" wasn't supplied to ReactCSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!=typeof e[n])return new Error(n+" must be a number (in milliseconds)")}}}var s=t(3),o=t(39),r=t(299),l=t(301),i=s.createClass({displayName:"ReactCSSTransitionGroup",propTypes:{transitionName:l.propTypes.name,transitionAppear:s.PropTypes.bool,transitionEnter:s.PropTypes.bool,transitionLeave:s.PropTypes.bool,transitionAppearTimeout:a("Appear"),transitionEnterTimeout:a("Enter"),transitionLeaveTimeout:a("Leave")},getDefaultProps:function(){return{transitionAppear:!1,transitionEnter:!0,transitionLeave:!0}},_wrapChild:function(e){return s.createElement(l,{name:this.props.transitionName,appear:this.props.transitionAppear,enter:this.props.transitionEnter,leave:this.props.transitionLeave,appearTimeout:this.props.transitionAppearTimeout,enterTimeout:this.props.transitionEnterTimeout,leaveTimeout:this.props.transitionLeaveTimeout},e)},render:function(){return s.createElement(r,o({},this.props,{childFactory:this._wrapChild}))}});e.exports=i},function(e,n,t){"use strict";var a=t(3),s=t(300),o=t(39),r=t(15),l=a.createClass({displayName:"ReactTransitionGroup",propTypes:{component:a.PropTypes.any,childFactory:a.PropTypes.func},getDefaultProps:function(){return{component:"span",childFactory:r.thatReturnsArgument}},getInitialState:function(){return{children:s.getChildMapping(this.props.children)}},componentWillMount:function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},componentDidMount:function(){var e=this.state.children;for(var n in e)e[n]&&this.performAppear(n)},componentWillReceiveProps:function(e){var n=s.getChildMapping(e.children),t=this.state.children;this.setState({children:s.mergeChildMappings(t,n)});var a;for(a in n){var o=t&&t.hasOwnProperty(a);!n[a]||o||this.currentlyTransitioningKeys[a]||this.keysToEnter.push(a)}for(a in t){var r=n&&n.hasOwnProperty(a);!t[a]||r||this.currentlyTransitioningKeys[a]||this.keysToLeave.push(a)}},componentDidUpdate:function(){var e=this.keysToEnter;this.keysToEnter=[],e.forEach(this.performEnter);var n=this.keysToLeave;this.keysToLeave=[],n.forEach(this.performLeave)},performAppear:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillAppear?n.componentWillAppear(this._handleDoneAppearing.bind(this,e)):this._handleDoneAppearing(e)},_handleDoneAppearing:function(e){var n=this.refs[e];n.componentDidAppear&&n.componentDidAppear(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)||this.performLeave(e)},performEnter:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillEnter?n.componentWillEnter(this._handleDoneEntering.bind(this,e)):this._handleDoneEntering(e)},_handleDoneEntering:function(e){var n=this.refs[e];n.componentDidEnter&&n.componentDidEnter(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)||this.performLeave(e)},performLeave:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillLeave?n.componentWillLeave(this._handleDoneLeaving.bind(this,e)):this._handleDoneLeaving(e)},_handleDoneLeaving:function(e){var n=this.refs[e];n.componentDidLeave&&n.componentDidLeave(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)?this.performEnter(e):this.setState(function(n){var t=o({},n.children);return delete t[e],{children:t}})},render:function(){var e=[];for(var n in this.state.children){var t=this.state.children[n];t&&e.push(a.cloneElement(this.props.childFactory(t),{ref:n,key:n}))}return a.createElement(this.props.component,this.props,e)}});e.exports=l},function(e,n,t){"use strict";var a=t(116),s={getChildMapping:function(e){return e?a(e):e},mergeChildMappings:function(e,n){function t(t){return n.hasOwnProperty(t)?n[t]:e[t]}e=e||{},n=n||{};var a={},s=[];for(var o in e)n.hasOwnProperty(o)?s.length&&(a[o]=s,s=[]):s.push(o);var r,l={};for(var i in n){if(a.hasOwnProperty(i))for(r=0;r<a[i].length;r++){var c=a[i][r];l[a[i][r]]=t(c)}l[i]=t(i)}for(r=0;r<s.length;r++)l[s[r]]=t(s[r]);return l}};e.exports=s},function(e,n,t){"use strict";var a=t(3),s=t(4),o=t(302),r=t(303),l=t(152),i=17,c=a.createClass({displayName:"ReactCSSTransitionGroupChild",propTypes:{name:a.PropTypes.oneOfType([a.PropTypes.string,a.PropTypes.shape({enter:a.PropTypes.string,leave:a.PropTypes.string,active:a.PropTypes.string}),a.PropTypes.shape({enter:a.PropTypes.string,enterActive:a.PropTypes.string,leave:a.PropTypes.string,leaveActive:a.PropTypes.string,appear:a.PropTypes.string,appearActive:a.PropTypes.string})]).isRequired,appear:a.PropTypes.bool,enter:a.PropTypes.bool,leave:a.PropTypes.bool,appearTimeout:a.PropTypes.number,enterTimeout:a.PropTypes.number,leaveTimeout:a.PropTypes.number},transition:function(e,n,t){var a=s.findDOMNode(this);if(!a)return void(n&&n());var l=this.props.name[e]||this.props.name+"-"+e,i=this.props.name[e+"Active"]||l+"-active",c=null,p=function(e){e&&e.target!==a||(clearTimeout(c),o.removeClass(a,l),o.removeClass(a,i),r.removeEndEventListener(a,p),n&&n())};o.addClass(a,l),this.queueClass(i),t?(c=setTimeout(p,t),this.transitionTimeouts.push(c)):r.addEndEventListener(a,p)},queueClass:function(e){this.classNameQueue.push(e),this.timeout||(this.timeout=setTimeout(this.flushClassNameQueue,i))},flushClassNameQueue:function(){this.isMounted()&&this.classNameQueue.forEach(o.addClass.bind(o,s.findDOMNode(this))),this.classNameQueue.length=0,this.timeout=null},componentWillMount:function(){this.classNameQueue=[],this.transitionTimeouts=[]},componentWillUnmount:function(){this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)})},componentWillAppear:function(e){this.props.appear?this.transition("appear",e,this.props.appearTimeout):e()},componentWillEnter:function(e){this.props.enter?this.transition("enter",e,this.props.enterTimeout):e()},componentWillLeave:function(e){this.props.leave?this.transition("leave",e,this.props.leaveTimeout):e()},render:function(){return l(this.props.children)}});e.exports=c},function(e,n,t){"use strict";var a=t(13),s={addClass:function(e,n){return/\s/.test(n)?a(!1):void 0,n&&(e.classList?e.classList.add(n):s.hasClass(e,n)||(e.className=e.className+" "+n)),e},removeClass:function(e,n){return/\s/.test(n)?a(!1):void 0,n&&(e.classList?e.classList.remove(n):s.hasClass(e,n)&&(e.className=e.className.replace(new RegExp("(^|\\s)"+n+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,""))),e},conditionClass:function(e,n,t){return(t?s.addClass:s.removeClass)(e,n)},hasClass:function(e,n){return/\s/.test(n)?a(!1):void 0,e.classList?!!n&&e.classList.contains(n):(" "+e.className+" ").indexOf(" "+n+" ")>-1}};e.exports=s},function(e,n,t){"use strict";function a(){var e=document.createElement("div"),n=e.style;"AnimationEvent"in window||delete l.animationend.animation,"TransitionEvent"in window||delete l.transitionend.transition;for(var t in l){var a=l[t];for(var s in a)if(s in n){i.push(a[s]);break}}}function s(e,n,t){e.addEventListener(n,t,!1)}function o(e,n,t){e.removeEventListener(n,t,!1)}var r=t(9),l={transitionend:{transition:"transitionend",WebkitTransition:"webkitTransitionEnd",MozTransition:"mozTransitionEnd",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd"},animationend:{animation:"animationend",WebkitAnimation:"webkitAnimationEnd",MozAnimation:"mozAnimationEnd",OAnimation:"oAnimationEnd",msAnimation:"MSAnimationEnd"}},i=[];r.canUseDOM&&a();var c={addEndEventListener:function(e,n){return 0===i.length?void window.setTimeout(n,0):void i.forEach(function(t){s(e,t,n)})},removeEndEventListener:function(e,n){0!==i.length&&i.forEach(function(t){o(e,t,n)})}};e.exports=c},function(e,n,t){"use strict";var a=t(110),s=t(42),o=t(15),r=t(13),l=(t(25),{create:function(e){if("object"!=typeof e||!e||Array.isArray(e))return e;if(s.isValidElement(e))return e;1===e.nodeType?r(!1):void 0;var n=[];for(var t in e)a.mapIntoWithKeyPrefixInternal(e[t],n,t,o.thatReturnsArgument);return n}});e.exports=l},function(e,n,t){"use strict";function a(e,n){var t=o.mergeProps(n,e.props);return!t.hasOwnProperty(l)&&e.props.hasOwnProperty(l)&&(t.children=e.props.children),s.createElement(e.type,t)}var s=t(42),o=t(306),r=t(79),l=(t(25),r({children:null}));e.exports=a},function(e,n,t){"use strict";function a(e){return function(n,t,a){n.hasOwnProperty(t)?n[t]=e(n[t],a):n[t]=a}}function s(e,n){for(var t in n)if(n.hasOwnProperty(t)){var a=c[t];a&&c.hasOwnProperty(t)?a(e,t,n[t]):e.hasOwnProperty(t)||(e[t]=n[t])}return e}var o=t(39),r=t(15),l=t(307),i=a(function(e,n){return o({},n,e)}),c={children:r,className:a(l),style:i},p={mergeProps:function(e,n){return s(o({},e),n)}};e.exports=p},function(e,n){"use strict";function t(e){e||(e="");var n,t=arguments.length;if(t>1)for(var a=1;t>a;a++)n=arguments[a],n&&(e=(e?e+" ":"")+n);return e}e.exports=t},function(e,n,t){"use strict";function a(e){return Array.isArray(e)?e.concat():e&&"object"==typeof e?r(new e.constructor,e):e}function s(e,n,t){Array.isArray(e)?void 0:i(!1);var a=n[t];Array.isArray(a)?void 0:i(!1)}function o(e,n){if("object"!=typeof n?i(!1):void 0,c.call(n,u))return 1!==Object.keys(n).length?i(!1):void 0,n[u];var t=a(e);if(c.call(n,m)){var l=n[m];l&&"object"==typeof l?void 0:i(!1),t&&"object"==typeof t?void 0:i(!1),r(t,n[m])}c.call(n,p)&&(s(e,n,p),n[p].forEach(function(e){t.push(e)})),c.call(n,h)&&(s(e,n,h),n[h].forEach(function(e){t.unshift(e)})),c.call(n,d)&&(Array.isArray(e)?void 0:i(!1),Array.isArray(n[d])?void 0:i(!1),n[d].forEach(function(e){Array.isArray(e)?void 0:i(!1),t.splice.apply(t,e)})),c.call(n,f)&&("function"!=typeof n[f]?i(!1):void 0,t=n[f](t));for(var g in n)w.hasOwnProperty(g)&&w[g]||(t[g]=o(e[g],n[g]));return t}var r=t(39),l=t(79),i=t(13),c={}.hasOwnProperty,p=l({$push:null}),h=l({$unshift:null}),d=l({$splice:null}),u=l({$set:null}),m=l({$merge:null}),f=l({$apply:null}),g=[p,h,d,u,m,f],w={};g.forEach(function(e){w[e]=!0}),e.exports=o},function(e,n,t){var a,s,o,r,l;r=t(2),l=t(310),o=t(312),a=r.createClass({displayName:"Breakpoint",mixins:[l],propTypes:{minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{minWidth:0,maxWidth:1e21}},renderChildren:function(){return r.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=(t=n.type)?t.displayName:void 0)?r.addons.cloneWithProps(n,{context:e.props.context}):n}}(this))},render:function(){var e;return this.state.componentWidth&&this.props.minWidth<=(e=this.state.componentWidth)&&e<this.props.maxWidth?r.createElement("div",r.__spread({},this.props),this.renderChildren()):r.createElement("div",null)}}),s=r.createClass({displayName:"Breakpoint",mixins:[o],propTypes:{minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{minWidth:0,maxWidth:1e21}},renderChildren:function(){return r.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=(t=n.type)?t.displayName:void 0)?r.cloneElement(n,{context:e.props.context}):n}}(this))},render:function(){var e;return this.state.pageWidth&&this.props.minWidth<=(e=this.state.pageWidth)&&e<this.props.maxWidth?r.createElement("div",r.__spread({},this.props),this.renderChildren()):r.createElement("div",null)}}),e.exports=r.createClass({displayName:"Breakpoint",propTypes:{widthMethod:r.PropTypes.string.isRequired,minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{widthMethod:"pageWidth"}},render:function(){return"pageWidth"===this.props.widthMethod?r.createElement(s,r.__spread({},this.props)):"componentWidth"===this.props.widthMethod?r.createElement(a,r.__spread({},this.props)):void 0}})},function(e,n,t){var a=t(311);e.exports={getInitialState:function(){return void 0!==this.props.initialComponentWidth&&null!==this.props.initialComponentWidth?{componentWidth:this.props.initialComponentWidth}:{}},componentDidMount:function(){this.setState({componentWidth:this.getDOMNode().getBoundingClientRect().width}),a(this.getDOMNode(),this.onResize)},componentDidUpdate:function(){0===this.getDOMNode().getElementsByClassName("resize-sensor").length&&a(this.getDOMNode(),this.onResize)},onResize:function(){this.setState({componentWidth:this.getDOMNode().getBoundingClientRect().width})}}},function(e,n){e.exports=function(e,n){function t(e){var n=e.target||e.srcElement;n.__resizeRAF__&&c(n.__resizeRAF__),n.__resizeRAF__=i(function(){var t=n.__resizeTrigger__;t.__resizeListeners__.forEach(function(n){n.call(t,e)})})}function a(e){this.contentDocument.defaultView.__resizeTrigger__=this.__resizeElement__,this.contentDocument.defaultView.addEventListener("resize",t)}var s=this,o=s.document,r=o.attachEvent;if("undefined"!=typeof navigator)var l=navigator.userAgent.match(/Trident/);var i=function(){var e=s.requestAnimationFrame||s.mozRequestAnimationFrame||s.webkitRequestAnimationFrame||function(e){return s.setTimeout(e,20)};return function(n){return e(n)}}(),c=function(){var e=s.cancelAnimationFrame||s.mozCancelAnimationFrame||s.webkitCancelAnimationFrame||s.clearTimeout;return function(n){return e(n)}}();if(!e.__resizeListeners__)if(e.__resizeListeners__=[],r)e.__resizeTrigger__=e,e.attachEvent("onresize",t);else{"static"==getComputedStyle(e).position&&(e.style.position="relative");var p=e.__resizeTrigger__=o.createElement("object");p.setAttribute("style","display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"),p.setAttribute("class","resize-sensor"),p.__resizeElement__=e,p.onload=a,p.type="text/html",l&&e.appendChild(p),p.data="about:blank",l||e.appendChild(p)}e.__resizeListeners__.push(n)}},function(e,n,t){var a;a=t(313),e.exports={getInitialState:function(){return this.props.initialPageWidth?{pageWidth:this.props.initialPageWidth}:{}},componentDidMount:function(){return a.on(this.onResize)},componentWillUnmount:function(){return a.off(this.onResize)},onResize:function(e){return this.setState({pageWidth:e})}}},function(e,n,t){var a,s,o,r,l,i;o=t(314),a=void 0,r=[],l=!1,"undefined"!=typeof window&&null!==window&&(a=window.innerWidth),s=function(){return l?void 0:(l=!0,o(i))},i=function(){var e,n,t;for(a=window.innerWidth,e=0,n=r.length;n>e;e++)(t=r[e])(a);return l=!1},"undefined"!=typeof window&&null!==window&&window.addEventListener("resize",s),e.exports={on:function(e){return e(a),r.push(e)},off:function(e){return r.splice(r.indexOf(e),1)}}},function(e,n,t){for(var a=t(315),s="undefined"==typeof window?{}:window,o=["moz","webkit"],r="AnimationFrame",l=s["request"+r],i=s["cancel"+r]||s["cancelRequest"+r],c=!0,p=0;p<o.length&&!l;p++)l=s[o[p]+"Request"+r],i=s[o[p]+"Cancel"+r]||s[o[p]+"CancelRequest"+r];if(!l||!i){c=!1;var h=0,d=0,u=[],m=1e3/60;l=function(e){if(0===u.length){var n=a(),t=Math.max(0,m-(n-h));h=t+n,setTimeout(function(){var e=u.slice(0);u.length=0;for(var n=0;n<e.length;n++)if(!e[n].cancelled)try{e[n].callback(h)}catch(t){setTimeout(function(){throw t},0)}},Math.round(t))}return u.push({handle:++d,callback:e,cancelled:!1}),d},i=function(e){for(var n=0;n<u.length;n++)u[n].handle===e&&(u[n].cancelled=!0)}}e.exports=function(e){return c?l.call(s,function(){try{e.apply(this,arguments)}catch(n){setTimeout(function(){throw n},0)}}):l.call(s,e)},e.exports.cancel=function(){i.apply(s,arguments)}},function(e,n,t){(function(n){(function(){var t,a,s;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!=typeof n&&null!==n&&n.hrtime?(e.exports=function(){return(t()-s)/1e6},a=n.hrtime,t=function(){var e;return e=a(),1e9*e[0]+e[1]},s=t()):Date.now?(e.exports=function(){return Date.now()-s},s=Date.now()):(e.exports=function(){return(new Date).getTime()-s},s=(new Date).getTime())}).call(this)}).call(n,t(316))},function(e,n){function t(){c=!1,r.length?i=r.concat(i):p=-1,i.length&&a()}function a(){if(!c){var e=setTimeout(t);c=!0;for(var n=i.length;n;){for(r=i,i=[];++p<n;)r&&r[p].run();p=-1,n=i.length}r=null,c=!1,clearTimeout(e)}}function s(e,n){this.fun=e,this.array=n}function o(){}var r,l=e.exports={},i=[],c=!1,p=-1;l.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];i.push(new s(e,n)),1!==i.length||c||setTimeout(a,0)},s.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=o,l.addListener=o,l.once=o,l.off=o,l.removeListener=o,l.removeAllListeners=o,l.emit=o,l.binding=function(e){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(e){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},function(e,n,t){var a,s,o;a=t(2),s=t(39),o=t(318),e.exports=a.createClass({displayName:"Span",propTypes:{context:a.PropTypes.object.isRequired,columns:a.PropTypes.number,at:a.PropTypes.number,pre:a.PropTypes.number,post:a.PropTypes.number,squish:a.PropTypes.number,last:a.PropTypes.bool,"break":a.PropTypes.bool},getDefaultProps:function(){return{at:0,pre:0,post:0,squish:0,last:!1,first:!1,"break":!1}},renderChildren:function(){return a.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=n&&null!=(t=n.type)?t.displayName:void 0)?a.cloneElement(n,{context:{columns:e.props.columns,gutterRatio:e.props.context.gutterRatio}}):n}}(this))},render:function(){var e;return e=o({contextColumns:this.props.context.columns,gutterRatio:this.props.context.gutterRatio,columns:this.props.columns,at:this.props.at,pre:this.props.pre,post:this.props.post,squish:this.props.squish,last:this.props.last,"break":this.props["break"]}),e=s(e,this.props.style),a.createElement("div",a.__spread({},this.props,{style:e}),this.renderChildren(),a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){var a;a=t(39),e.exports=function(e){var n,t,s,o,r,l,i,c,p,h;return s={columns:3,at:0,pre:0,post:0,squish:0,contextColumns:12,gutterRatio:.25,first:!1,last:!1},p=a(s,e),c=100/(p.contextColumns+(p.contextColumns-1)*p.gutterRatio),r=p.gutterRatio*c,t=function(e){return c*e+r*(e-1)},n=function(e){return 0===e?0:t(e)+r},h=t(p.columns),l=0===p.at&&0===p.pre&&0===p.squish?0:n(p.at)+n(p.pre)+n(p.squish),p.last&&0===p.post&&0===p.squish?i=0:0!==p.post||0!==p.squish?(i=n(p.post)+n(p.squish),p.last||(i+=r)):i=r,o=p.last?"right":"left",h+="%",l+="%",i+="%",{"float":o,marginLeft:l,marginRight:i,width:h,clear:p["break"]?"both":"none"}}},function(e,n,t){var a,s,o,r,l;a=t(320),l=t(162),o=t(322),r=t(326),e.exports=s=function(e,n,t){var s,i,c,p,h,d,u,m,f,g,w,y;return null==t&&(t={}),null==n&&(n=e),r(n)&&(t=n,n=e),t=l({colorIsBackground:!0,contrast:5,foregroundMax:.98,foregroundMin:.02,backgroundMax:.85,backgroundMin:.15,direction:void 0},t),t.colorIsBackground?(w=t.foregroundMin,p=t.foregroundMax):(w=t.backgroundMin,p=t.backgroundMax),null!=t.direction?g=o(n,e,w,p,t.direction,t.contrast):(h=a(n,"lab").luminance(p),y=a(n,"lab").luminance(w),c=a.contrast(e,y.css()),i=a.contrast(e,h.css()),i>t.contrast?g=o(n,e,w,p,"end",t.contrast):c>t.contrast?g=o(n,e,w,p,"start",t.contrast):(t.colorIsBackground?(f=t.backgroundMin,m=t.backgroundMax):(f=t.foregroundMin,m=t.foregroundMax),i>c?(g=a(n,"lab").luminance(p),u=a.contrast(g.css(),a(e,"lab").luminance(f)),e=u>t.contrast?o(e,g.css(),f,m,"start",t.contrast):a(e,"lab").luminance(f).lab(),g=g.lab()):(g=a(e,"lab").luminance(w),u=a.contrast(g.css(),a(e,"lab").luminance(m)),e=u>t.contrast?o(e,g.css(),f,m,"end",t.contrast):a(e,"lab").luminance(m).lab(),g=g.lab()))),t.colorIsBackground?(s=e,d=g):(s=g,d=e),{bg:a.lab(s).css(),fg:a.lab(d).css()}}},function(e,n,t){var a,s;(function(e){/** echo  * @license echo  * while read i do echo  *  done echo
	*/
(function(){var t,o,r,l,i,c,p,h,d,u,m,f,g,w,y,b,k,j,C,v,x,S,A,T,E,P,I,O,R,N,F,M,q,D,B,L,_,U,W,H;u=function(e,n,a,s){return new t(e,n,a,s)},"undefined"!=typeof e&&null!==e&&null!=e.exports&&(e.exports=u),a=[],s=function(){return u}.apply(n,a),!(void 0!==s&&(e.exports=s)),u.color=function(e,n,a,s){return new t(e,n,a,s)},u.hsl=function(e,n,a,s){return new t(e,n,a,s,"hsl")},u.hsv=function(e,n,a,s){return new t(e,n,a,s,"hsv")},u.rgb=function(e,n,a,s){return new t(e,n,a,s,"rgb")},u.hex=function(e){return new t(e)},u.css=function(e){return new t(e)},u.lab=function(e,n,a){return new t(e,n,a,"lab")},u.lch=function(e,n,a){return new t(e,n,a,"lch")},u.hsi=function(e,n,a){return new t(e,n,a,"hsi")},u.gl=function(e,n,a,s){return new t(255*e,255*n,255*a,s,"gl")},u.num=function(e){return new t(e,"num")},u.random=function(){var e,n,a,s;for(n="0123456789abcdef",e="#",a=s=0;6>s;a=++s)e+=n.charAt(Math.floor(16*Math.random()));return new t(e)},u.interpolate=function(e,n,a,s){var o,r;return null==e||null==n?"#000":(("string"===(o=L(e))||"number"===o)&&(e=new t(e)),("string"===(r=L(n))||"number"===r)&&(n=new t(n)),e.interpolate(a,n,s))},u.mix=u.interpolate,u.contrast=function(e,n){var a,s,o,r;return("string"===(o=L(e))||"number"===o)&&(e=new t(e)),("string"===(r=L(n))||"number"===r)&&(n=new t(n)),a=e.luminance(),s=n.luminance(),a>s?(a+.05)/(s+.05):(s+.05)/(a+.05)},u.luminance=function(e){return u(e).luminance()},u._Color=t,t=function(){function e(){var e,n,t,a,s,o,r,l,i,c,p,h,d,u,f,g;for(s=this,t=[],c=0,p=arguments.length;p>c;c++)n=arguments[c],null!=n&&t.push(n);if(0===t.length)h=[255,0,255,1,"rgb"],r=h[0],l=h[1],i=h[2],e=h[3],a=h[4];else if("array"===L(t[0])){if(3===t[0].length)d=t[0],r=d[0],l=d[1],i=d[2],e=1;else{if(4!==t[0].length)throw"unknown input argument";u=t[0],r=u[0],l=u[1],i=u[2],e=u[3]}a=null!=(f=t[1])?f:"rgb"}else"string"===L(t[0])?(r=t[0],a="hex"):"object"===L(t[0])?(g=t[0]._rgb,r=g[0],l=g[1],i=g[2],e=g[3],a="rgb"):t.length<=2&&"number"===L(t[0])?(r=t[0],a="num"):t.length>=3&&(r=t[0],l=t[1],i=t[2]);3===t.length?(a="rgb",e=1):4===t.length?"string"===L(t[3])?(a=t[3],e=1):"number"===L(t[3])&&(a="rgb",e=t[3]):5===t.length&&(e=t[3],a=t[4]),null==e&&(e=1),"rgb"===a?s._rgb=[r,l,i,e]:"gl"===a?s._rgb=[255*r,255*l,255*i,e]:"hsl"===a?(s._rgb=k(r,l,i),s._rgb[3]=e):"hsv"===a?(s._rgb=j(r,l,i),s._rgb[3]=e):"hex"===a?s._rgb=y(r):"lab"===a?(s._rgb=v(r,l,i),s._rgb[3]=e):"lch"===a?(s._rgb=A(r,l,i),s._rgb[3]=e):"hsi"===a?(s._rgb=b(r,l,i),s._rgb[3]=e):"num"===a&&(s._rgb=I(r)),o=m(s._rgb)}return e.prototype.rgb=function(){return this._rgb.slice(0,3)},e.prototype.rgba=function(){return this._rgb},e.prototype.hex=function(){return O(this._rgb)},e.prototype.toString=function(){return this.name()},e.prototype.hsl=function(){return N(this._rgb)},e.prototype.hsv=function(){return F(this._rgb)},e.prototype.lab=function(){return M(this._rgb)},e.prototype.lch=function(){return q(this._rgb)},e.prototype.hsi=function(){return R(this._rgb)},e.prototype.gl=function(){return[this._rgb[0]/255,this._rgb[1]/255,this._rgb[2]/255,this._rgb[3]]},e.prototype.num=function(){return D(this._rgb)},e.prototype.luminance=function(n,t){var a,s,o,r;return null==t&&(t="rgb"),arguments.length?(0===n&&(this._rgb=[0,0,0,this._rgb[3]]),1===n&&(this._rgb=[255,255,255,this._rgb[3]]),a=E(this._rgb),s=1e-7,o=20,r=function(e,a){var l,i;return i=e.interpolate(.5,a,t),l=i.luminance(),Math.abs(n-l)<s||!o--?i:l>n?r(e,i):r(i,a)},this._rgb=(a>n?r(new e("black"),this):r(this,new e("white"))).rgba(),this):E(this._rgb)},e.prototype.name=function(){var e,n;e=this.hex();for(n in u.colors)if(e===u.colors[n])return n;return e},e.prototype.alpha=function(e){return arguments.length?(this._rgb[3]=e,this):this._rgb[3]},e.prototype.css=function(e){var n,t,a,s;return null==e&&(e="rgb"),t=this,a=t._rgb,3===e.length&&a[3]<1&&(e+="a"),"rgb"===e?e+"("+a.slice(0,3).map(Math.round).join(",")+")":"rgba"===e?e+"("+a.slice(0,3).map(Math.round).join(",")+","+a[3]+")":"hsl"===e||"hsla"===e?(n=t.hsl(),s=function(e){return Math.round(100*e)/100},n[0]=s(n[0]),n[1]=s(100*n[1])+"%",n[2]=s(100*n[2])+"%",4===e.length&&(n[3]=a[3]),e+"("+n.join(",")+")"):void 0},e.prototype.interpolate=function(n,t,a){var s,o,r,l,i,c,p,h,d,u,m,f,g,w;if(h=this,null==a&&(a="rgb"),"string"===L(t)&&(t=new e(t)),"hsl"===a||"hsv"===a||"lch"===a||"hsi"===a)"hsl"===a?(g=h.hsl(),w=t.hsl()):"hsv"===a?(g=h.hsv(),w=t.hsv()):"hsi"===a?(g=h.hsi(),w=t.hsi()):"lch"===a&&(g=h.lch(),w=t.lch()),"h"===a.substr(0,1)?(r=g[0],m=g[1],c=g[2],l=w[0],f=w[1],p=w[2]):(c=g[0],m=g[1],r=g[2],p=w[0],f=w[1],l=w[2]),isNaN(r)||isNaN(l)?isNaN(r)?isNaN(l)?o=Number.NaN:(o=l,1!==c&&0!==c||"hsv"===a||(u=f)):(o=r,1!==p&&0!==p||"hsv"===a||(u=m)):(s=l>r&&l-r>180?l-(r+360):r>l&&r-l>180?l+360-r:l-r,o=r+n*s),null==u&&(u=m+n*(f-m)),i=c+n*(p-c),d="h"===a.substr(0,1)?new e(o,u,i,a):new e(i,u,o,a);else if("rgb"===a)g=h._rgb,w=t._rgb,d=new e(g[0]+n*(w[0]-g[0]),g[1]+n*(w[1]-g[1]),g[2]+n*(w[2]-g[2]),a);else if("num"===a)t instanceof e||(t=new e(t,a)),g=h._rgb,w=t._rgb,d=new e((g[0]+n*(w[0]-g[0])<<16)+(g[1]+n*(w[1]-g[1])<<8)+(g[2]+n*(w[2]-g[2])&255),a);else{if("lab"!==a)throw"color mode "+a+" is not supported";g=h.lab(),w=t.lab(),d=new e(g[0]+n*(w[0]-g[0]),g[1]+n*(w[1]-g[1]),g[2]+n*(w[2]-g[2]),a)}return d.alpha(h.alpha()+n*(t.alpha()-h.alpha())),d},e.prototype.premultiply=function(){var e,n;return n=this.rgb(),e=this.alpha(),u(n[0]*e,n[1]*e,n[2]*e,e)},e.prototype.darken=function(e){var n,t;return null==e&&(e=20),t=this,n=t.lch(),n[0]-=e,u.lch(n).alpha(t.alpha())},e.prototype.darker=function(e){return this.darken(e)},e.prototype.brighten=function(e){return null==e&&(e=20),this.darken(-e)},e.prototype.brighter=function(e){return this.brighten(e)},e.prototype.saturate=function(e){var n,t;return null==e&&(e=20),t=this,n=t.lch(),n[1]+=e,u.lch(n).alpha(t.alpha())},e.prototype.desaturate=function(e){return null==e&&(e=20),this.saturate(-e)},e}(),m=function(e){var n;for(n in e)3>n?(e[n]<0&&(e[n]=0),e[n]>255&&(e[n]=255)):3===n&&(e[n]<0&&(e[n]=0),e[n]>1&&(e[n]=1));return e},w=function(e){var n,t,a,s,o,r,l,i;if(e=e.toLowerCase(),null!=u.colors&&u.colors[e])return y(u.colors[e]);if(a=e.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)){for(s=a.slice(1,4),t=o=0;2>=o;t=++o)s[t]=+s[t];s[3]=1}else if(a=e.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/))for(s=a.slice(1,5),t=r=0;3>=r;t=++r)s[t]=+s[t];else if(a=e.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){for(s=a.slice(1,4),t=l=0;2>=l;t=++l)s[t]=Math.round(2.55*s[t]);s[3]=1}else if(a=e.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){for(s=a.slice(1,5),t=i=0;2>=i;t=++i)s[t]=Math.round(2.55*s[t]);s[3]=+s[3]}else(a=e.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/))?(n=a.slice(1,4),n[1]*=.01,n[2]*=.01,s=k(n),s[3]=1):(a=e.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/))&&(n=a.slice(1,4),n[1]*=.01,n[2]*=.01,s=k(n),s[3]=+a[4]);return s},y=function(e){var n,t,a,s,o,r;if(e.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return(4===e.length||7===e.length)&&(e=e.substr(1)),3===e.length&&(e=e.split(""),e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]),r=parseInt(e,16),s=r>>16,a=r>>8&255,t=255&r,[s,a,t,1];if(e.match(/^#?([A-Fa-f0-9]{8})$/))return 9===e.length&&(e=e.substr(1)),r=parseInt(e,16),s=r>>24&255,a=r>>16&255,t=r>>8&255,n=255&r,[s,a,t,n];if(o=w(e))return o;throw"unknown color: "+e},b=function(e,n,t){var a,s,o,i;return i=_(arguments),e=i[0],n=i[1],t=i[2],e/=360,1/3>e?(a=(1-n)/3,o=(1+n*g(l*e)/g(r-l*e))/3,s=1-(a+o)):2/3>e?(e-=1/3,o=(1-n)/3,s=(1+n*g(l*e)/g(r-l*e))/3,a=1-(o+s)):(e-=2/3,s=(1-n)/3,a=(1+n*g(l*e)/g(r-l*e))/3,o=1-(s+a)),o=T(t*o*3),s=T(t*s*3),a=T(t*a*3),[255*o,255*s,255*a]},k=function(){var e,n,t,a,s,o,r,l,i,c,p,h,d,u;if(d=_(arguments),a=d[0],l=d[1],o=d[2],0===l)r=t=e=255*o;else{for(p=[0,0,0],n=[0,0,0],c=.5>o?o*(1+l):o+l-o*l,i=2*o-c,a/=360,p[0]=a+1/3,p[1]=a,p[2]=a-1/3,s=h=0;2>=h;s=++h)p[s]<0&&(p[s]+=1),p[s]>1&&(p[s]-=1),6*p[s]<1?n[s]=i+6*(c-i)*p[s]:2*p[s]<1?n[s]=c:3*p[s]<2?n[s]=i+(c-i)*(2/3-p[s])*6:n[s]=i;u=[Math.round(255*n[0]),Math.round(255*n[1]),Math.round(255*n[2])],r=u[0],t=u[1],e=u[2]}return[r,t,e]},j=function(){var e,n,t,a,s,o,r,l,i,c,p,h,d,u,m,f,g,w;if(h=_(arguments),a=h[0],i=h[1],p=h[2],p*=255,0===i)l=t=e=p;else switch(360===a&&(a=0),a>360&&(a-=360),0>a&&(a+=360),a/=60,s=Math.floor(a),n=a-s,o=p*(1-i),r=p*(1-i*n),c=p*(1-i*(1-n)),s){case 0:d=[p,c,o],l=d[0],t=d[1],e=d[2];break;case 1:u=[r,p,o],l=u[0],t=u[1],e=u[2];break;case 2:m=[o,p,c],l=m[0],t=m[1],e=m[2];break;case 3:f=[o,r,p],l=f[0],t=f[1],e=f[2];break;case 4:g=[c,o,p],l=g[0],t=g[1],e=g[2];break;case 5:w=[p,o,r],l=w[0],t=w[1],e=w[2]}return l=Math.round(l),t=Math.round(t),e=Math.round(e),[l,t,e]},o=18,i=.95047,c=1,p=1.08883,C=function(){var e,n,t,a,s,o;return o=_(arguments),s=o[0],e=o[1],n=o[2],t=Math.sqrt(e*e+n*n),a=(Math.atan2(n,e)/Math.PI*180+360)%360,[s,t,a]},v=function(e,n,t){var a,s,o,r,l,h,d;return void 0!==e&&3===e.length&&(h=e,e=h[0],n=h[1],t=h[2]),void 0!==e&&3===e.length&&(d=e,e=d[0],n=d[1],t=d[2]),r=(e+16)/116,o=r+n/500,l=r-t/200,o=x(o)*i,r=x(r)*c,l=x(l)*p,s=W(3.2404542*o-1.5371385*r-.4985314*l),a=W(-.969266*o+1.8760108*r+.041556*l),t=W(.0556434*o-.2040259*r+1.0572252*l),[T(s,0,255),T(a,0,255),T(t,0,255),1]},x=function(e){return e>.206893034?e*e*e:(e-4/29)/7.787037},W=function(e){return Math.round(255*(.00304>=e?12.92*e:1.055*Math.pow(e,1/2.4)-.055))},S=function(){var e,n,t,a;return a=_(arguments),t=a[0],e=a[1],n=a[2],n=n*Math.PI/180,[t,Math.cos(n)*e,Math.sin(n)*e]},A=function(e,n,t){var a,s,o,r,l,i,c;return i=S(e,n,t),a=i[0],s=i[1],o=i[2],c=v(a,s,o),l=c[0],r=c[1],o=c[2],[T(l,0,255),T(r,0,255),T(o,0,255)]},E=function(e,n,t){var a;return a=_(arguments),e=a[0],n=a[1],t=a[2],e=P(e),n=P(n),t=P(t),.2126*e+.7152*n+.0722*t},P=function(e){return e/=255,.03928>=e?e/12.92:Math.pow((e+.055)/1.055,2.4)},I=function(e){var n,t,a;if("number"===L(e)&&e>=0&&16777215>=e)return a=e>>16,t=e>>8&255,n=255&e,[a,t,n,1];throw"unknown num color: "+e},O=function(){var e,n,t,a,s,o;return o=_(arguments),t=o[0],n=o[1],e=o[2],s=t<<16|n<<8|e,a="000000"+s.toString(16),"#"+a.substr(a.length-6)},R=function(){var e,n,t,a,s,o,r,l,i;return i=_(arguments),r=i[0],t=i[1],n=i[2],e=2*Math.PI,r/=255,t/=255,n/=255,o=Math.min(r,t,n),s=(r+t+n)/3,l=1-o/s,0===l?a=0:(a=(r-t+(r-n))/2,a/=Math.sqrt((r-t)*(r-t)+(r-n)*(t-n)),a=Math.acos(a),n>t&&(a=e-a),a/=e),[360*a,l,s]},N=function(e,n,t){var a,s,o,r,l,i;return void 0!==e&&e.length>=3&&(i=e,e=i[0],n=i[1],t=i[2]),e/=255,n/=255,t/=255,r=Math.min(e,n,t),o=Math.max(e,n,t),s=(o+r)/2,o===r?(l=0,a=Number.NaN):l=.5>s?(o-r)/(o+r):(o-r)/(2-o-r),e===o?a=(n-t)/(o-r):n===o?a=2+(t-e)/(o-r):t===o&&(a=4+(e-n)/(o-r)),a*=60,0>a&&(a+=360),[a,l,s]},F=function(){var e,n,t,a,s,o,r,l,i,c;return c=_(arguments),r=c[0],t=c[1],e=c[2],o=Math.min(r,t,e),s=Math.max(r,t,e),n=s-o,i=s/255,0===s?(a=Number.NaN,l=0):(l=n/s,r===s&&(a=(t-e)/n),t===s&&(a=2+(e-r)/n),e===s&&(a=4+(r-t)/n),a*=60,0>a&&(a+=360)),[a,l,i]},M=function(){var e,n,t,a,s,o,r;return r=_(arguments),t=r[0],n=r[1],e=r[2],t=B(t),n=B(n),e=B(e),a=U((.4124564*t+.3575761*n+.1804375*e)/i),s=U((.2126729*t+.7151522*n+.072175*e)/c),o=U((.0193339*t+.119192*n+.9503041*e)/p),[116*s-16,500*(a-s),200*(s-o)]},B=function(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)},U=function(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29},q=function(){var e,n,t,a,s,o,r;return o=_(arguments),s=o[0],t=o[1],n=o[2],r=M(s,t,n),a=r[0],e=r[1],n=r[2],C(a,e,n)},D=function(){var e,n,t,a;return a=_(arguments),t=a[0],n=a[1],e=a[2],(t<<16)+(n<<8)+e},u.scale=function(e,n){var t,a,s,o,r,l,i,c,p,h,d,m,f,g,w,y,b,k,j,C,v;return y="rgb",b=u("#ccc"),v=0,f=!1,m=[0,1],h=[],j=!1,C=[],w=0,g=1,d=!1,k=0,p={},l=function(e,n){var t,a,s,o,l,i,c;if(null==e&&(e=["#ddd","#222"]),null!=e&&"string"===L(e)&&null!=(null!=(l=u.brewer)?l[e]:void 0)&&(e=u.brewer[e]),"array"===L(e)){for(e=e.slice(0),t=s=0,i=e.length-1;i>=0?i>=s:s>=i;t=i>=0?++s:--s)a=e[t],"string"===L(a)&&(e[t]=u(a));if(null!=n)C=n;else for(C=[],t=o=0,c=e.length-1;c>=0?c>=o:o>=c;t=c>=0?++o:--o)C.push(t/(e.length-1))}return r(),h=e},i=function(e){return null==e&&(e=[]),m=e,w=e[0],g=e[e.length-1],r(),k=2===e.length?0:e.length-1},s=function(e){var n,t;if(null!=m){for(t=m.length-1,n=0;t>n&&e>=m[n];)n++;return n-1}return 0},c=function(e){return e},t=function(e){var n,t,a,o,r;return r=e,m.length>2&&(o=m.length-1,n=s(e),a=m[0]+(m[1]-m[0])*(0+.5*v),t=m[o-1]+(m[o]-m[o-1])*(1-.5*v),r=w+(m[n]+.5*(m[n+1]-m[n])-a)/(t-a)*(g-w)),r},o=function(e,n){var t,a,o,r,l,i,d,f,j;if(null==n&&(n=!1),isNaN(e))return b;if(n?d=e:m.length>2?(t=s(e),d=t/(k-1)):(d=o=w!==g?(e-w)/(g-w):0,d=o=(e-w)/(g-w),d=Math.min(1,Math.max(0,d))),n||(d=c(d)),l=Math.floor(1e4*d),p[l])a=p[l];else{if("array"===L(h))for(r=f=0,j=C.length-1;j>=0?j>=f:f>=j;r=j>=0?++f:--f){if(i=C[r],i>=d){a=h[r];break}if(d>=i&&r===C.length-1){a=h[r];break}if(d>i&&d<C[r+1]){d=(d-i)/(C[r+1]-i),a=u.interpolate(h[r],h[r+1],d,y);break}}else"function"===L(h)&&(a=h(d));p[l]=a}return a},r=function(){return p={}},l(e,n),a=function(e){var n;return n=o(e),j&&n[j]?n[j]():n},a.domain=function(e,n,t,s){var o;return null==t&&(t="e"),arguments.length?(null!=n&&(o=u.analyze(e,s),e=0===n?[o.min,o.max]:u.limits(o,t,n)),i(e),a):m},a.mode=function(e){return arguments.length?(y=e,r(),a):y},a.range=function(e,n){return l(e,n),a},a.out=function(e){return j=e,a},a.spread=function(e){return arguments.length?(v=e,a):v},a.correctLightness=function(e){return arguments.length?(d=e,r(),c=d?function(e){var n,t,a,s,r,l,i,c,p;for(n=o(0,!0).lab()[0],t=o(1,!0).lab()[0],i=n>t,a=o(e,!0).lab()[0],r=n+(t-n)*e,s=a-r,c=0,p=1,l=20;Math.abs(s)>.01&&l-- >0;)!function(){return i&&(s*=-1),0>s?(c=e,e+=.5*(p-e)):(p=e,e+=.5*(c-e)),a=o(e,!0).lab()[0],s=a-r}();return e}:function(e){return e},a):d},a.colors=function(n){var t,s,o,r,l,i;if(null==n&&(n="hex"),e=[],s=[],m.length>2)for(t=o=1,i=m.length;i>=1?i>o:o>i;t=i>=1?++o:--o)s.push(.5*(m[t-1]+m[t]));else s=m;for(r=0,l=s.length;l>r;r++)t=s[r],e.push(a(t)[n]());return e},a},null==(H=u.scales)&&(u.scales={}),u.scales.cool=function(){return u.scale([u.hsl(180,1,.9),u.hsl(250,.7,.4)])},u.scales.hot=function(){return u.scale(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")},u.analyze=function(e,n,t){var a,s,o,r,l,i,c;if(o={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==t&&(t=function(){return!0}),a=function(e){null==e||isNaN(e)||(o.values.push(e),o.sum+=e,e<o.min&&(o.min=e),e>o.max&&(o.max=e),o.count+=1)},l=function(e,s){return t(e,s)?a(null!=n&&"function"===L(n)?n(e):null!=n&&"string"===L(n)||"number"===L(n)?e[n]:e):void 0},"array"===L(e))for(i=0,c=e.length;c>i;i++)r=e[i],l(r);else for(s in e)r=e[s],l(r,s);return o.domain=[o.min,o.max],o.limits=function(e,n){return u.limits(o,e,n)},o},u.limits=function(e,n,t){var a,s,o,r,l,i,c,p,h,d,m,f,g,w,y,b,k,j,C,v,x,S,A,T,E,P,I,O,R,N,F,M,q,D,B,_,U,W,H,G,J,V,z,Y,Q,$,K,X,Z,ee,ne,te,ae,se,oe,re;if(null==n&&(n="equal"),null==t&&(t=7),"array"===L(e)&&(e=u.analyze(e)),g=e.min,m=e.max,A=e.sum,P=e.values.sort(function(e,n){return e-n}),d=[],"c"===n.substr(0,1)&&(d.push(g),d.push(m)),"e"===n.substr(0,1)){for(d.push(g),c=I=1,U=t-1;U>=1?U>=I:I>=U;c=U>=1?++I:--I)d.push(g+c/t*(m-g));d.push(m)}else if("l"===n.substr(0,1)){if(0>=g)throw"Logarithmic scales are only possible for values > 0";for(w=Math.LOG10E*Math.log(g),f=Math.LOG10E*Math.log(m),d.push(g),c=O=1,Y=t-1;Y>=1?Y>=O:O>=Y;c=Y>=1?++O:--O)d.push(Math.pow(10,w+c/t*(f-w)));d.push(m)}else if("q"===n.substr(0,1)){for(d.push(g),c=R=1,Q=t-1;Q>=1?Q>=R:R>=Q;c=Q>=1?++R:--R)C=P.length*c/t,v=Math.floor(C),v===C?d.push(P[v]):(x=C-v,d.push(P[v]*x+P[v+1]*(1-x)));d.push(m)}else if("k"===n.substr(0,1)){for(b=P.length,a=new Array(b),l=new Array(t),S=!0,k=0,o=null,o=[],o.push(g),c=N=1,$=t-1;$>=1?$>=N:N>=$;c=$>=1?++N:--N)o.push(g+c/t*(m-g));for(o.push(m);S;){for(p=F=0,K=t-1;K>=0?K>=F:F>=K;p=K>=0?++F:--F)l[p]=0;for(c=M=0,X=b-1;X>=0?X>=M:M>=X;c=X>=0?++M:--M){for(E=P[c],y=Number.MAX_VALUE,p=q=0,Z=t-1;Z>=0?Z>=q:q>=Z;p=Z>=0?++q:--q)i=Math.abs(o[p]-E),y>i&&(y=i,s=p);l[s]++,a[c]=s}for(j=new Array(t),p=D=0,ee=t-1;ee>=0?ee>=D:D>=ee;p=ee>=0?++D:--D)j[p]=null;for(c=B=0,ne=b-1;ne>=0?ne>=B:B>=ne;c=ne>=0?++B:--B)r=a[c],null===j[r]?j[r]=P[c]:j[r]+=P[c];for(p=_=0,W=t-1;W>=0?W>=_:_>=W;p=W>=0?++_:--_)j[p]*=1/l[p];for(S=!1,p=te=0,H=t-1;H>=0?H>=te:te>=H;p=H>=0?++te:--te)if(j[p]!==o[c]){S=!0;break}o=j,k++,k>200&&(S=!1)}for(h={},p=ae=0,G=t-1;G>=0?G>=ae:ae>=G;p=G>=0?++ae:--ae)h[p]=[];for(c=se=0,J=b-1;J>=0?J>=se:se>=J;c=J>=0?++se:--se)r=a[c],h[r].push(P[c]);for(T=[],p=oe=0,V=t-1;V>=0?V>=oe:oe>=V;p=V>=0?++oe:--oe)T.push(h[p][0]),T.push(h[p][h[p].length-1]);for(T=T.sort(function(e,n){return e-n}),d.push(T[0]),c=re=1,z=T.length-1;z>=re;c=re+=2)isNaN(T[c])||d.push(T[c])}return d},u.brewer=d={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},u.colors=f={indigo:"#4b0082",gold:"#ffd700",hotpink:"#ff69b4",firebrick:"#b22222",indianred:"#cd5c5c",yellow:"#ffff00",mistyrose:"#ffe4e1",darkolivegreen:"#556b2f",olive:"#808000",darkseagreen:"#8fbc8f",pink:"#ffc0cb",tomato:"#ff6347",lightcoral:"#f08080",orangered:"#ff4500",navajowhite:"#ffdead",lime:"#00ff00",palegreen:"#98fb98",darkslategrey:"#2f4f4f",greenyellow:"#adff2f",burlywood:"#deb887",seashell:"#fff5ee",mediumspringgreen:"#00fa9a",fuchsia:"#ff00ff",papayawhip:"#ffefd5",blanchedalmond:"#ffebcd",chartreuse:"#7fff00",dimgray:"#696969",black:"#000000",peachpuff:"#ffdab9",springgreen:"#00ff7f",aquamarine:"#7fffd4",white:"#ffffff",orange:"#ffa500",lightsalmon:"#ffa07a",darkslategray:"#2f4f4f",brown:"#a52a2a",ivory:"#fffff0",dodgerblue:"#1e90ff",peru:"#cd853f",lawngreen:"#7cfc00",chocolate:"#d2691e",crimson:"#dc143c",forestgreen:"#228b22",darkgrey:"#a9a9a9",lightseagreen:"#20b2aa",cyan:"#00ffff",mintcream:"#f5fffa",silver:"#c0c0c0",antiquewhite:"#faebd7",mediumorchid:"#ba55d3",skyblue:"#87ceeb",gray:"#808080",darkturquoise:"#00ced1",goldenrod:"#daa520",darkgreen:"#006400",floralwhite:"#fffaf0",darkviolet:"#9400d3",darkgray:"#a9a9a9",moccasin:"#ffe4b5",saddlebrown:"#8b4513",grey:"#808080",darkslateblue:"#483d8b",lightskyblue:"#87cefa",lightpink:"#ffb6c1",mediumvioletred:"#c71585",slategrey:"#708090",red:"#ff0000",deeppink:"#ff1493",limegreen:"#32cd32",darkmagenta:"#8b008b",palegoldenrod:"#eee8aa",plum:"#dda0dd",turquoise:"#40e0d0",lightgrey:"#d3d3d3",lightgoldenrodyellow:"#fafad2",darkgoldenrod:"#b8860b",lavender:"#e6e6fa",maroon:"#800000",yellowgreen:"#9acd32",sandybrown:"#f4a460",thistle:"#d8bfd8",violet:"#ee82ee",navy:"#000080",magenta:"#ff00ff",dimgrey:"#696969",tan:"#d2b48c",rosybrown:"#bc8f8f",olivedrab:"#6b8e23",blue:"#0000ff",lightblue:"#add8e6",ghostwhite:"#f8f8ff",honeydew:"#f0fff0",cornflowerblue:"#6495ed",slateblue:"#6a5acd",linen:"#faf0e6",darkblue:"#00008b",powderblue:"#b0e0e6",seagreen:"#2e8b57",darkkhaki:"#bdb76b",snow:"#fffafa",sienna:"#a0522d",mediumblue:"#0000cd",royalblue:"#4169e1",lightcyan:"#e0ffff",green:"#008000",mediumpurple:"#9370db",midnightblue:"#191970",cornsilk:"#fff8dc",paleturquoise:"#afeeee",bisque:"#ffe4c4",slategray:"#708090",darkcyan:"#008b8b",khaki:"#f0e68c",wheat:"#f5deb3",teal:"#008080",darkorchid:"#9932cc",deepskyblue:"#00bfff",salmon:"#fa8072",darkred:"#8b0000",steelblue:"#4682b4",palevioletred:"#db7093",lightslategray:"#778899",aliceblue:"#f0f8ff",lightslategrey:"#778899",lightgreen:"#90ee90",orchid:"#da70d6",gainsboro:"#dcdcdc",mediumseagreen:"#3cb371",lightgray:"#d3d3d3",mediumturquoise:"#48d1cc",lemonchiffon:"#fffacd",cadetblue:"#5f9ea0",lightyellow:"#ffffe0",lavenderblush:"#fff0f5",coral:"#ff7f50",purple:"#800080",aqua:"#00ffff",whitesmoke:"#f5f5f5",mediumslateblue:"#7b68ee",darkorange:"#ff8c00",mediumaquamarine:"#66cdaa",darksalmon:"#e9967a",beige:"#f5f5dc",blueviolet:"#8a2be2",azure:"#f0ffff",lightsteelblue:"#b0c4de",oldlace:"#fdf5e6"},L=function(){var e,n,t,a,s;for(e={},s="Boolean Number String Function Array Date RegExp Undefined Null".split(" "),t=0,a=s.length;a>t;t++)n=s[t],e["[object "+n+"]"]=n.toLowerCase();return function(n){var t;return t=Object.prototype.toString.call(n),e[t]||"object"}}(),T=function(e,n,t){return null==n&&(n=0),null==t&&(t=1),n>e&&(e=n),e>t&&(e=t),e},_=function(e){return e.length>=3?e:e[0]},l=2*Math.PI,r=Math.PI/3,g=Math.cos,h=function(e){var n,t,a,s,o,r,l,i,c,p,d;return e=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(u(s));return a}(),2===e.length?(c=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=c[0],r=c[1],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push(o[n]+e*(r[n]-o[n]));return a}(),u.lab.apply(u,t)}):3===e.length?(p=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=p[0],r=p[1],l=p[2],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push((1-e)*(1-e)*o[n]+2*(1-e)*e*r[n]+e*e*l[n]);return a}(),u.lab.apply(u,t)}):4===e.length?(d=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=d[0],r=d[1],l=d[2],i=d[3],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push((1-e)*(1-e)*(1-e)*o[n]+3*(1-e)*(1-e)*e*r[n]+3*(1-e)*e*e*l[n]+e*e*e*i[n]);return a}(),u.lab.apply(u,t)}):5===e.length&&(t=h(e.slice(0,3)),a=h(e.slice(2,5)),n=function(e){return.5>e?t(2*e):a(2*(e-.5))}),n},u.interpolate.bezier=h}).call(this)}).call(n,t(321)(e))},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,n,t){var a,s,o,r,l,i;a=t(320),l=t(323)("color-pairs-picker-binary-search-contrast"),r=0,e.exports=o=function(e,n,t,s,l,i){var c,p,h,d;return null==n&&(n=e),null==t&&(t=0),null==s&&(s=1),null==l&&(l="end"),null==i&&(i=5),r+=1,d=(t+s)/2,c=a(e,"lab"),p=c.luminance(d).lab(),h=a.contrast(a(n).css(),c.css()),r>15?(r=0,p):h>i-.1&&i+.1>h?(r=0,p):h>i?"end"===l?o(e,n,t,d-.001,l,i):o(e,n,d+.001,s,l,i):i>h?"start"===l?o(e,n,t,d-.001,l,i):o(e,n,d+.001,s,l,i):void 0},s="rgb(8, 27, 44)",i="rgb(124, 171, 217)",s="red",i="red"},function(e,n,t){function a(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function s(){var e=arguments,t=this.useColors;if(e[0]=(t?"%c":"")+this.namespace+(t?" %c":" ")+e[0]+(t?"%c ":" ")+"+"+n.humanize(this.diff),!t)return e;var a="color: "+this.color;e=[e[0],a,"color: inherit"].concat(Array.prototype.slice.call(e,1));var s=0,o=0;return e[0].replace(/%[a-z%]/g,function(e){"%%"!==e&&(s++,"%c"===e&&(o=s))}),e.splice(o,0,a),e}function o(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function r(e){try{null==e?n.storage.removeItem("debug"):n.storage.debug=e}catch(t){}}function l(){var e;try{e=n.storage.debug}catch(t){}return e}function i(){try{return window.localStorage}catch(e){}}n=e.exports=t(324),n.log=o,n.formatArgs=s,n.save=r,n.load=l,n.useColors=a,n.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:i(),n.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],n.formatters.j=function(e){return JSON.stringify(e)},n.enable(l())},function(e,n,t){function a(){return n.colors[p++%n.colors.length]}function s(e){function t(){}function s(){var e=s,t=+new Date,o=t-(c||t);e.diff=o,e.prev=c,e.curr=t,c=t,null==e.useColors&&(e.useColors=n.useColors()),null==e.color&&e.useColors&&(e.color=a());var r=Array.prototype.slice.call(arguments);r[0]=n.coerce(r[0]),"string"!=typeof r[0]&&(r=["%o"].concat(r));var l=0;r[0]=r[0].replace(/%([a-z%])/g,function(t,a){if("%%"===t)return t;l++;var s=n.formatters[a];if("function"==typeof s){var o=r[l];t=s.call(e,o),r.splice(l,1),l--}return t}),"function"==typeof n.formatArgs&&(r=n.formatArgs.apply(e,r));var i=s.log||n.log||console.log.bind(console);i.apply(e,r)}t.enabled=!1,s.enabled=!0;var o=n.enabled(e)?s:t;return o.namespace=e,o}function o(e){n.save(e);for(var t=(e||"").split(/[\s,]+/),a=t.length,s=0;a>s;s++)t[s]&&(e=t[s].replace(/\*/g,".*?"),"-"===e[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")))}function r(){n.enable("")}function l(e){var t,a;for(t=0,a=n.skips.length;a>t;t++)if(n.skips[t].test(e))return!1;for(t=0,a=n.names.length;a>t;t++)if(n.names[t].test(e))return!0;return!1}function i(e){return e instanceof Error?e.stack||e.message:e}n=e.exports=s,n.coerce=i,n.disable=r,n.enable=o,n.enabled=l,n.humanize=t(325),n.names=[],n.skips=[],n.formatters={};var c,p=0},function(e,n){function t(e){if(e=""+e,!(e.length>1e4)){var n=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(n){var t=parseFloat(n[1]),a=(n[2]||"ms").toLowerCase();switch(a){case"years":case"year":case"yrs":case"yr":case"y":return t*p;case"days":case"day":case"d":return t*c;case"hours":case"hour":case"hrs":case"hr":case"h":return t*i;case"minutes":case"minute":case"mins":case"min":case"m":return t*l;case"seconds":case"second":case"secs":case"sec":case"s":return t*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t}}}}function a(e){return e>=c?Math.round(e/c)+"d":e>=i?Math.round(e/i)+"h":e>=l?Math.round(e/l)+"m":e>=r?Math.round(e/r)+"s":e+"ms"}function s(e){return o(e,c,"day")||o(e,i,"hour")||o(e,l,"minute")||o(e,r,"second")||e+" ms"}function o(e,n,t){return n>e?void 0:1.5*n>e?Math.floor(e/n)+" "+t:Math.ceil(e/n)+" "+t+"s"}var r=1e3,l=60*r,i=60*l,c=24*i,p=365.25*c;e.exports=function(e,n){return n=n||{},"string"==typeof e?t(e):n["long"]?s(e):a(e)}},function(e,n){"use strict";e.exports=function(e){return"object"==typeof e&&null!==e}},function(e,n,t){var a=t(328);"string"==typeof a&&(a=[[e.id,a,""]]);t(330)(a,{});a.locals&&(e.exports=a.locals)},function(e,n,t){n=e.exports=t(329)(),n.push([e.id,".hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8;-webkit-text-size-adjust:none}.diff .hljs-header,.hljs-comment{color:#998;font-style:italic}.css .rule .hljs-keyword,.hljs-keyword,.hljs-request,.hljs-status,.hljs-subst,.hljs-winutils,.nginx .hljs-title{color:#333;font-weight:700}.hljs-hexcolor,.hljs-number,.ruby .hljs-constant{color:teal}.hljs-doctag,.hljs-string,.hljs-tag .hljs-value,.tex .hljs-formula{color:#d14}.hljs-id,.hljs-title,.scss .hljs-preprocessor{color:#900;font-weight:700}.hljs-list .hljs-keyword,.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type,.tex .hljs-command,.vhdl .hljs-literal{color:#458;font-weight:700}.django .hljs-tag .hljs-keyword,.hljs-rule .hljs-property,.hljs-tag,.hljs-tag .hljs-title{color:navy;font-weight:400}.hljs-attribute,.hljs-name,.hljs-variable,.lisp .hljs-body{color:teal}.hljs-regexp{color:#009926}.clojure .hljs-keyword,.hljs-prompt,.hljs-symbol,.lisp .hljs-keyword,.ruby .hljs-symbol .hljs-string,.scheme .hljs-keyword,.tex .hljs-special{color:#990073}.hljs-built_in{color:#0086b3}.hljs-cdata,.hljs-doctype,.hljs-pi,.hljs-pragma,.hljs-preprocessor,.hljs-shebang{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.diff .hljs-change{background:#0086b3}.hljs-chunk{color:#aaa}",""])},function(e,n){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],n=0;n<this.length;n++){var t=this[n];t[2]?e.push("@media "+t[2]+"{"+t[1]+"}"):e.push(t[1])}return e.join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var a={},s=0;s<this.length;s++){var o=this[s][0];"number"==typeof o&&(a[o]=!0)}for(s=0;s<n.length;s++){var r=n[s];"number"==typeof r[0]&&a[r[0]]||(t&&!r[2]?r[2]=t:t&&(r[2]="("+r[2]+") and ("+t+")"),e.push(r))}},e}},function(e,n,t){function a(e,n){for(var t=0;t<e.length;t++){var a=e[t],s=u[a.id];if(s){s.refs++;for(var o=0;o<s.parts.length;o++)s.parts[o](a.parts[o]);for(;o<a.parts.length;o++)s.parts.push(c(a.parts[o],n))}else{for(var r=[],o=0;o<a.parts.length;o++)r.push(c(a.parts[o],n));u[a.id]={id:a.id,refs:1,parts:r}}}}function s(e){for(var n=[],t={},a=0;a<e.length;a++){var s=e[a],o=s[0],r=s[1],l=s[2],i=s[3],c={css:r,media:l,sourceMap:i};t[o]?t[o].parts.push(c):n.push(t[o]={id:o,parts:[c]})}return n}function o(e,n){var t=g(),a=b[b.length-1];if("top"===e.insertAt)a?a.nextSibling?t.insertBefore(n,a.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),b.push(n);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
t.appendChild(n)}}function r(e){e.parentNode.removeChild(e);var n=b.indexOf(e);n>=0&&b.splice(n,1)}function l(e){var n=document.createElement("style");return n.type="text/css",o(e,n),n}function i(e){var n=document.createElement("link");return n.rel="stylesheet",o(e,n),n}function c(e,n){var t,a,s;if(n.singleton){var o=y++;t=w||(w=l(n)),a=p.bind(null,t,o,!1),s=p.bind(null,t,o,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=i(n),a=d.bind(null,t),s=function(){r(t),t.href&&URL.revokeObjectURL(t.href)}):(t=l(n),a=h.bind(null,t),s=function(){r(t)});return a(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;a(e=n)}else s()}}function p(e,n,t,a){var s=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=k(n,s);else{var o=document.createTextNode(s),r=e.childNodes;r[n]&&e.removeChild(r[n]),r.length?e.insertBefore(o,r[n]):e.appendChild(o)}}function h(e,n){var t=n.css,a=n.media;n.sourceMap;if(a&&e.setAttribute("media",a),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}function d(e,n){var t=n.css,a=(n.media,n.sourceMap);a&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var s=new Blob([t],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(s),o&&URL.revokeObjectURL(o)}var u={},m=function(e){var n;return function(){return"undefined"==typeof n&&(n=e.apply(this,arguments)),n}},f=m(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),g=m(function(){return document.head||document.getElementsByTagName("head")[0]}),w=null,y=0,b=[];e.exports=function(e,n){if("object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");n=n||{},"undefined"==typeof n.singleton&&(n.singleton=f()),"undefined"==typeof n.insertAt&&(n.insertAt="bottom");var t=s(e);return a(t,n),function(e){for(var o=[],r=0;r<t.length;r++){var l=t[r],i=u[l.id];i.refs--,o.push(i)}if(e){var c=s(e);a(c,n)}for(var r=0;r<o.length;r++){var i=o[r];if(0===i.refs){for(var p=0;p<i.parts.length;p++)i.parts[p]();delete u[i.id]}}}};var k=function(){var e=[];return function(n,t){return e[n]=t,e.filter(Boolean).join("\n")}}()},function(e,n,t){var a=t(332);"string"==typeof a&&(a=[[e.id,a,""]]);t(330)(a,{});a.locals&&(e.exports=a.locals)},function(e,n,t){n=e.exports=t(329)(),n.push([e.id,"body,html{overflow:hidden}.wiki-container{max-width:960px;padding:80px 30px 0;margin:0 auto;position:relative}a{text-decoration:none}a:hover{text-decoration:underline}.wiki-header{z-index:999;position:fixed;top:0;width:100%;height:80px;background:#fff}.wiki-header a{color:#fff}.wiki-header a:hover{color:#006400}.wiki-header img{margin-top:30px;width:270px}.wiki-header span{position:absolute}.articleContent{width:95%;margin:40px auto 0}.wikiSelector{position:fixed;top:50px}.wikiSelector select{width:95%}.wikiAside{width:220px;border-left:1px solid #d3d3d3;float:right;padding-left:20px}.searchBar{margin-top:10px;margin-bottom:25px}.articlesList ul{list-style:none;margin-left:0;height:82vh;overflow-y:scroll}@media (max-width:700px){.wiki-header,.wiki-selector{text-align:center}.wiki-header span{left:50%;top:60px;transform:translateX(-50%)}}@media (min-width:701px){.wiki-header span{margin-left:10px;top:40px}.articleContent{width:auto;padding-right:30px;height:88vh;overflow-y:scroll;margin-top:0}}",""])},function(e,n){e.exports={title:"10 Steps To Plan Better So You Can Write Less Code",order:5,body:'<h1>Learn how to plan your future project!</h1>\n<p><em>Blog post written by BiancaMihai - <a href="https://github.com/biancamihai">GitHub</a> / <a href="https://twitter.com/intent/user?screen_name=bubuslubu">Twitter</a></em></p>\n<p>An ounce of preparation is worth a pound of cure. That’s true in medicine, and that’s definitely true in software development.</p>\n<p>Here’s a structured 10-step workflow that will guide you through the app planning process, with the goal of saving you from writing a lot of unnecessary code.</p>\n<p>Together, we’ll plan out a simple “To-do” single-page web app. We’ll also plan for an API backend for a future mobile app.</p>\n<h2>1) Create our Trello board</h2>\n<p><a href="https://trello.com/">Trello</a> is a fun, free way to break your planning and development process into small tasks that can be tracked.</p>\n<p><img src="https://lh3.googleusercontent.com/EI4AQ4NINm3B2DHR_YIS29JyKVa5dTPiT3RtITylmndFlpshTHepsKuO8_1KQNfdPDSBjslDReHCuPFeH1GNrDtgOwTyq6ZtGf3DFBmq1AsAhPHKt_0pLXQLf0o4ZbDuKVj4-Bo" alt="Image of Trello board"></p>\n<p><a href="https://trello.com/b/O9MZcYyY/todo-app">Here’s what our Trello board will eventually look like</a>. I prefer to split my tasks into 3 columns (depending on the complexity of the project):</p>\n<ul>\n<li>To Do - what is left to do</li>\n<li>In progress - tasks that people are currently working on</li>\n<li>Done - tasks that are done and ready for testing</li>\n</ul>\n<h2>2) Write user stories</h2>\n<p>Here are some example user stories. These will guide how we think about our app’s features and functionality. Note that they all follow a similar structure: as a [person] I can [do something].</p>\n<ul>\n<li>as a logged-in user I can see the list of my to-do’s.</li>\n<li>as a logged-in user I can add a new to-do.</li>\n<li>as a logged-in user I can delete a to-do (only my to-do’s - not other users’).</li>\n<li>as a logged-in user I can complete a to-do (only my to-do’s - not other users’).</li>\n<li>as an anonymous user, I can register for a new account, recover my password, or log in to the app with an existing account.</li>\n</ul>\n<h2>3) Create our use case model</h2>\n<p>Our use case model will help us visualize our user stories so we can better understand how to implement them.</p>\n<p>![Anonymous user case diagram] (<a href="https://lh5.googleusercontent.com/2v6iIMbCrLSKVfqttEToum7OA3YGQCBKWUHcSCB1KEbEcijXxQtKJKY6fhLXeecJiO27P4icOuPlkVc9_uNXolzlzNXOo_TPh09GZsAqRH-JISqPrpx0PZdtbHOr0RIuQUbTbaw">https://lh5.googleusercontent.com/2v6iIMbCrLSKVfqttEToum7OA3YGQCBKWUHcSCB1KEbEcijXxQtKJKY6fhLXeecJiO27P4icOuPlkVc9_uNXolzlzNXOo_TPh09GZsAqRH-JISqPrpx0PZdtbHOr0RIuQUbTbaw</a>) ![Authenticated user case diagram] (<a href="https://lh6.googleusercontent.com/3V6dVvAcyjqFkaOukimucYOX0CfwBBYNN9SvjmnVy40Pdhs4Wtrr34i3E-9pbV7tFsp4jHm77IFQvFupjq6OWyxqEgCzcQ995Ayh52Msczu6TfwKeNhL9PYHyxSgmPYA1TR6l6Q">https://lh6.googleusercontent.com/3V6dVvAcyjqFkaOukimucYOX0CfwBBYNN9SvjmnVy40Pdhs4Wtrr34i3E-9pbV7tFsp4jHm77IFQvFupjq6OWyxqEgCzcQ995Ayh52Msczu6TfwKeNhL9PYHyxSgmPYA1TR6l6Q</a>)</p>\n<h2>4) Create our activity diagram</h2>\n<p>Our activity diagram will show the different paths our users can take through our app.</p>\n<p><img src="https://lh6.googleusercontent.com/jAQL4myqWOPA3gk2iTpGyAQBrO6p1GlPe8BQQ1Se6a-Di40X3Zw1p0wfJewZUL-YyDmedYzX5Lxvo2GW2Qnr6I-6kuKe1sDb9_5F_n46cKoawWReWW_ZoZCIJO6Semc4fvsiuHc" alt="Activity diagram picture"></p>\n<p>A user accesses our to-do application.</p>\n<ul>\n<li>\n<p>If the user is not logged in she will see our login page.</p>\n</li>\n<li>\n<p>If she already has an account, she can log in.</p>\n</li>\n<li>\n<p>If she has an account, but she forgot her password, she can recover her password.</p>\n</li>\n<li>\n<p>If she doesn’t have an account, she can create one.</p>\n</li>\n<li>\n<p>Both “create an account” and “recover my password” will require email validation. A user can log in to our application only after she has confirmed her email address.</p>\n</li>\n<li>\n<p>If she is logged in, she will see her to-do list (this can be empty if she hasn’t added any to-dos yet).</p>\n</li>\n<li>\n<p>A logged in user:</p>\n<ul>\n<li>is able to see her tasks list</li>\n<li>is able to mark a task from her list as completed</li>\n<li>is able to search within her task list</li>\n<li>is able to delete a task from her list</li>\n<li>can logout.</li>\n</ul>\n</li>\n<li>\n<p>The user can exit the application at any time.</p>\n</li>\n</ul>\n<h2>5) Create our mockups</h2>\n<p>Our mockups show what our app should look like. It’s much faster to iterate on a mockup than it is to do so on working code.</p>\n<p><img src="https://lh3.googleusercontent.com/GBFhmBkfr-xM5YSXlR0Fm9y8b24ivdRlUtRWQOHJ8skNxEgjTkAef0e5nZ-CcHKNUq2p4V4hgDuAm9LSEuvbovlVborH1ZioAUXVlEblWZ4hN_d2tGEpxhfTkKH9os2JS1pab4w" alt="Mockup picture"></p>\n<h2>6) Choose the right technologies for our project</h2>\n<p>Because this is a single page app, we’ll rely heavily - or in this case exclusively - on JavaScript. Let’s use one of the most popular JavaScript stacks: the MEAN stack. One big benefit of the MEAN stack is that all of its components are free and open-source. There are also tons of resources available for learning the MEAN stack, and for debugging it when you inevitably encounter errors.</p>\n<p>You can have a <a href="http://www.freecodecamp.com/challenges/get-set-for-our-back-end-development-projects">MEAN stack development environment</a> up and running in the cloud in less than an hour, for free.</p>\n<p>Here are the components we’ll use:</p>\n<ol>\n<li><a href="http://mongodb.org/">MongoDB</a> for our database</li>\n<li><a href="http://nodejs.org/">Node.js</a> and <a href="http://expressjs.com/">Express.js</a> for implementing our API</li>\n<li><a href="http://angularjs.org/">AngularJS</a>, along with HTML and CSS (and Bootstrap) for our client-side application</li>\n<li><a href="http://mongoosejs.com/">Mongoose</a> to connect our application to MongoDB</li>\n</ol>\n<h2>7) Design our database schema</h2>\n<p>It’s worth the effort to design a database schema, even for our simple application.</p>\n<p>We’ll have two collections: our “Users” collection will house our user data, and our “ToDo” collection will house our tasks that need to be done. One user can have zero, one, or many tasks in  her to-do list, so we will have a one-to-many (1:m) relationship between our two collections.</p>\n<p><img src="https://lh6.googleusercontent.com/5uSb_xnSSc5CWXJD0yyUGVJsL92RRZl3Bex_3wjuzl5Xr69Ks0j3od-yFju24SAd5wWMBNy9uqBrvOzdrUWluOkbcr4H5zFg-ZemJX3ZRWS12D42OowuvWnxA7wWIGrhhzaQ0aw" alt="Database schema diagram"></p>\n<h2>8) Define our use cases</h2>\n<ol>\n<li>What happens to the to-dos related to a user that deletes her account? When the user deletes her account the to-dos related to that user should also be deleted.</li>\n<li>No to-do can be added without being attached to a confirmed user.</li>\n<li>A to-do can only be deleted by its owner.</li>\n<li>No user can be added with an empty username or password.</li>\n<li>No to-do can be added with an empty task.</li>\n</ol>\n<p>Things to keep in mind:</p>\n<ol>\n<li>Use the Mongoose middleware to remove dependent documents like to-dos when a user deletes her account.</li>\n<li>Use Mongoose validation rules on models to prevent empty fields from being added to our database.</li>\n</ol>\n<h2>9) Design and test our API</h2>\n<p>I used a free product called Apiary <a href="http://docs.fcctodoapp.apiary.io/">to document our API</a>.</p>\n<p>Here’s the syntax I used to <a href="https://jsapi.apiary.io/apis/fcctodoapp.apib">create this simple BluePrint</a>.</p>\n<p>I recommend you create an account and start playing with it. If you link your <a href="http://github.com/">GitHub</a> account with Apiary, you can ensure your documentation always stays up to date. You’ll also be able to test your data visually without the need for actually hitting your API endpoints. If you prefer to test your API from the command line, <a href="http://docs.agendor.apiary.io/">here’s an example of how to do this</a>.</p>\n<p>Later, once you’ve implemented your API with Node.js and Express.js, you’ll just need to set your URL in Apiary. Then you can start testing your calls. Our current host url (<a href="http://fcctodoapp.apiblueprint.org/">http://fcctodoapp.apiblueprint.org/</a>) will be replaced by your API’s URL.</p>\n<p><img src="https://lh6.googleusercontent.com/hU3ilG_y9FqtL_zajQ_KOjWy8Qx590Go8nkNvA1j0oR50YJTpjJhL1lAPgjyeLTAS06tq6V62EcJrLQyT_TR2BK49DYiX6kksU6s9cqJDvvaS6jvepIM6uiO4JMbXuu-oXhdsas" alt="App demo picture"></p>\n<h2>10) Start writing code!</h2>\n<p>This is the fun part, and it will take up most of your project’s time. If you need help with this, join us and learn to code.</p>\n'}},function(e,n){e.exports={title:"Academic Honesty Policy",order:5,body:"<p>Before we issue our verified certificate to a camper, he or she must accept our Academic Honesty Pledge, which reads:</p>\n<p><strong>I understand that plagiarism means copying someone else’s work and presenting the work as if it were my own, without clearly attributing the original author.</strong></p>\n<p><strong>I understand that plagiarism is an act of intellectual dishonesty, and that people usually get kicked out of university or fired from their jobs if they get caught plagiarizing.</strong></p>\n<p><strong>Aside from using open source libraries such as jQuery and Bootstrap, and short snippets of code which are clearly attributed to their original author, 100% of the code in my Algorithms, Back End Projects and Front End Projects was written by me or along with another camper with whom I was pair programming in real time.</strong></p>\n<p><strong>I pledge that I did not plagiarize any of my Free Code Camp work, and that I am OK with any random auditing Free Code Camp may do to confirm this.</strong></p>\n"}},function(e,n){e.exports={title:"Algorithm Arguments Optional",order:5,body:'<p><img src="http://i.imgur.com/63Iaec6.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>It can be quite complicated to understand what needs to be done. There are always many ways to do something when coding but regardless of the algorithm used,  we have to create a program that does the following:</p>\n<ul>\n<li>It has to add two numbers passed as parameters and return the sum.</li>\n<li>It has to check if any of the numbers are actual numbers, otherwise return <strong>undefined</strong> and stop the program right there.</li>\n<li>It has to check if it has one or two arguments passed. More are ignored.</li>\n<li>If it has only one argument then it has to return a function that uses that number and expects another one, to then add it.</li>\n</ul>\n<h2>Hint: 1</h2>\n<p>Every time you deal with an argument, you have to check if it is a number or not. For this a function that handles this task will save you repeated code.</p>\n<h2>Hint: 2</h2>\n<p>When working on the case that it needs to return the function, it is wise to check if the first and only argument is a number again and base the code on that.</p>\n<h2>Hint: 3</h2>\n<p>In the case that only one argument was passed, do not worry about how to prompt input for the second one, just make the function definition properly and things will work out the way they should.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// Function to check if a number is actually a number</span>\n  <span class="hljs-comment">// and return undefined otherwise.</span>\n  <span class="hljs-keyword">var</span> checkNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> num !== <span class="hljs-string">\'number\'</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    } <span class="hljs-keyword">else</span>\n      <span class="hljs-keyword">return</span> num;\n  };\n\n  <span class="hljs-comment">// Check if we have two parameters, check if they are numbers</span>\n  <span class="hljs-comment">// handle the case where one is not</span>\n  <span class="hljs-comment">// returns the addition.</span>\n  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">arguments</span>.length &gt; <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">var</span> a = checkNum(<span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>]);\n    <span class="hljs-keyword">var</span> b = checkNum(<span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">if</span> (a === <span class="hljs-literal">undefined</span> || b === <span class="hljs-literal">undefined</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">return</span> a + b;\n    }\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">// If only one parameter was found, returns a new function that expects two</span>\n    <span class="hljs-comment">// Store first argument before entering the new function scope</span>\n    <span class="hljs-keyword">var</span> c = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>];\n\n    <span class="hljs-comment">// Check the number again, must be outside the function to about returning an object</span>\n    <span class="hljs-comment">// instead of undefined.</span>\n    <span class="hljs-keyword">if</span> (checkNum(c)) {\n      <span class="hljs-comment">// Return function that expect a second argument.</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arg2</span>) </span>{\n        <span class="hljs-comment">// Check for non-numbers</span>\n        <span class="hljs-keyword">if</span> (c === <span class="hljs-literal">undefined</span> || checkNum(arg2) === <span class="hljs-literal">undefined</span>) {\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-comment">// if numbers then add them.</span>\n          <span class="hljs-keyword">return</span> c + arg2;\n        }\n      };\n    }\n  }\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First, I create a function with the sole purpose of checking if a number is actually a number and returns undefined if it is not. It uses <strong>typeof</strong> to check.</li>\n<li>Check if we have two parameters, if so, then check if they are numbers or not using the <strong>checkNum</strong> function I created.</li>\n<li>If they are not <strong>undefined</strong> then add them and return the addition. If they any of them is undefined then return undefined.</li>\n<li>In the case that we only have one argument, then we return a new function that expects two parameters. For this we store the first argument before going into a new scope to avoid our arguments being overwritten.</li>\n<li>Still inside the big else, we need to check the argument we saved, if it is a number then we return the function expecting a second argument.</li>\n<li>Now inside the function we are returning, we have to check for non numbers again just as at the beginning using <strong>checkNum</strong> if undefined then return that, otherwise if numbers add them and return the addition.</li>\n</ul>\n<h2>Second Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> args = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-built_in">arguments</span>.length);\n  <span class="hljs-comment">//Storing the arguments in an array</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; args.length; ++i) {\n      args[i] = <span class="hljs-built_in">arguments</span>[i];\n    }\n <span class="hljs-comment">//Check for the arguments length</span>\n <span class="hljs-keyword">if</span>(args.length == <span class="hljs-number">2</span>){\n    <span class="hljs-comment">//If there are two arguments,check for the type of both arguments</span>\n    <span class="hljs-comment">//Use typeof to check the type of the argument(both should be numbers)</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> args[<span class="hljs-number">0</span>] !== <span class="hljs-string">\'number\'</span> || <span class="hljs-keyword">typeof</span> args[<span class="hljs-number">1</span>] !==<span class="hljs-string">\'number\'</span> ){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n      }\n    <span class="hljs-keyword">return</span> args[<span class="hljs-number">0</span>]+args[<span class="hljs-number">1</span>];\n   }\n <span class="hljs-comment">//When only one argument is provided</span>\n <span class="hljs-keyword">if</span>(args.length == <span class="hljs-number">1</span>){\n     a= args[<span class="hljs-number">0</span>];\n     <span class="hljs-comment">//Check the  argument using typeof </span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> a!==<span class="hljs-string">\'number\'</span>){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n      }\n    <span class="hljs-keyword">else</span>{\n       <span class="hljs-comment">//Making use of closures </span>\n       <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)</span>{\n       <span class="hljs-comment">//Checking the second argument </span>\n         <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> b !==<span class="hljs-string">\'number\'</span>){\n           <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n           }\n         <span class="hljs-keyword">else</span>\n           <span class="hljs-keyword">return</span> a+b;\n          };\n      }\n    }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @coded9 for your help with Algorithm: Arguments Optional</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Binary Agents",order:5,body:'<p><img src="http://i.imgur.com/HSwaSFK.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>This problem is very straight forward, you will get a string that will represent a sentence in binary code, and you need to translate that into words. There is not direct way to do this so you will have to translate twice.</p>\n<h2>Hint: 1</h2>\n<p>You should first convert from <strong>binary</strong> to <strong>decimal</strong> before translating those values into characters</p>\n<h2>Hint: 2</h2>\n<p>Things are easier when focusing on smaller parts, divide the input to focus on one letter at the time.</p>\n<h2>Hint: 3</h2>\n<p>Make sure that each time you transcode a character from binary to decimal, you reset whatever variable you used to keep track of the ones. Also do not forget to turn everything back into one string.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  biString = str.split(<span class="hljs-string">\' \'</span>);\n  uniString = [];\n  \n<span class="hljs-comment">/*using the radix (or base) parameter in parseInt, we can convert the binary \n  number to a decimal number while simultaneously converting to a char*/</span>\n\n   <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i &lt; biString.length;i++){\n   uniString.push(<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-built_in">parseInt</span>(biString[i], <span class="hljs-number">2</span>))); \n  }\n<span class="hljs-comment">//we then simply join the string</span>\n  <span class="hljs-keyword">return</span> uniString.join(<span class="hljs-string">\'\'</span>);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Separate the string into an array of strings separated by whitespace.</li>\n<li>Create some variables that will be needed along the way, the names are self explanatory for the most part.</li>\n<li>Iterate through each binary string in the new array.</li>\n<li>Convert to decimal by using parseInt(<em>binary</em>, 2) (with the second parameter we tell in which base our numbers currently are)</li>\n<li>At the end, we return out converted message.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Separate the binary code by space.</span>\n  str = str.split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">var</span> power;\n  <span class="hljs-keyword">var</span> decValue = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> sentence = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Check each binary number from the array.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-number">0</span>; s &lt; str.length; s++) {\n    <span class="hljs-comment">// Check each bit from binary number</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; str[s].length; t++) {\n      <span class="hljs-comment">// This only takes into consideration the active ones.</span>\n      <span class="hljs-keyword">if</span> (str[s][t] == <span class="hljs-number">1</span>) {\n        <span class="hljs-comment">// This is quivalent to 2 ** position</span>\n        power = <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>, +str[s].length - t - <span class="hljs-number">1</span>);\n        decValue += power;\n\n        <span class="hljs-comment">// Record the decimal value by adding the number to the previous one.</span>\n      }\n    }\n\n    <span class="hljs-comment">// After the binary number is converted to decimal, convert it to string and store</span>\n    sentence += (<span class="hljs-built_in">String</span>.fromCharCode(decValue));\n\n    <span class="hljs-comment">// Reset decimal value for next binary number.</span>\n    decValue = <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">return</span> sentence;\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>For each of these binary strings, check for the ones and ignore the zeroes.</li>\n<li>For those that are one or active then convert them to decimal, this takes into account the position and the right power it needs to be raised to.</li>\n<li>Store the power into the <strong>power</strong> variable by adding it to any previous ones on the variable <strong>decValue</strong>. This variable will add and add the powers of the active ones until the end of the loop and then return the decimal number.</li>\n<li>Convert the final decimal outside of the inner loop and then convert it to ASCII and saving it to <strong>sentence</strong> along with any other text string already converted and stored.</li>\n<li>Reset the variable <strong>decValue</strong> to avoid getting wrong decimals before continuing to the outer loop.</li>\n</ul>\n<h2>Code Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(...str.split(<span class="hljs-string">" "</span>).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">char</span>)</span>{ <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(char, <span class="hljs-number">2</span>); }));\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>First we use <code>split()</code> to be able to work on each character as an Array element</li>\n<li>Then use <code>map()</code> to process each element  from binary to decimal using <code>pareseInt()</code></li>\n<li>Last we can use <code>String.fromCharCode()</code> to convert each ASCII number into the corresponding character</li>\n<li>However <code>fromCharCode()</code> expects a series of numbers rather than an Array! We can use ES6 Spread Operator to pass in an Array of numbers as individual numbers. See here for more info; <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator</a></li>\n</ul>\n<h2>Code Solution 4:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/(\\d+)(\\s?)/g</span>;\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convertToChar</span>(<span class="hljs-params">match,p1,p2</span>)</span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-built_in">parseInt</span>(p1, <span class="hljs-number">2</span>));\n  }\n  <span class="hljs-keyword">return</span> str.replace(re, convertToChar);\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>In this solution we use <code>String.replace()</code> to find all the binary numbers and convert them to characters</li>\n<li>First we use a regular expression to find all the binary numbers and optional trailing spaces</li>\n<li>Then we define a function that converts the first parenthesized submatch into a number <code>parseInt()</code> and then into a character<code>String.fromCharCode()</code>. By not using the second parenthisized submatch we leave out all the spaces that where in between the binary numbers.</li>\n<li>Lastly we use our defined regex and function in the <code>String.replace()</code> function.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>thanks @Rafase282 @JamesKee @sabahang @crisvdkooij for your help with Algorithm: Binary Agents</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Boo who",order:5,body:'<p><img src="http://i.imgur.com/CgROCEF.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>This program is very simple, the trick is to understand what a boolean primitive is. The programs requires a true or false answer.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will need to check for the type of the parameter to see if it is a boolean.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>To check for the type of a parameter, you can use <code>typeof</code></li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Since you must return true or false you can use if statements or just have it return the boolean used for the if statement.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">boo</span>(<span class="hljs-params">bool</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> bool === <span class="hljs-string">\'boolean\'</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>Uses the operator <code>typeof</code> to check if the variable is a boolean.\nIf it is, it will return <code>true</code>. Otherwise, if it is any other type it will return <code>false</code>.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 for your help with Algorithm: Boo-who</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Caesars Cipher",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You need to write a function, which will take string encoded with\n<em>Caesar cipher</em> as a parameter and decode it.</li>\n<li>The one used here is ROT13 where the value of the letter is\nshifted by 13 places.\ne.g. ‘A’ ↔ ‘N’, ‘T’ ↔ ‘G’.</li>\n<li>You have to shift it back 13 positions, such that ‘N’ ↔ ‘A’.</li>\n</ul>\n<h2>Hint: 1</h2>\n<p>Use <em>String.charCodeAt()</em> to convert the English character to ASCII.</p>\n<h2>Hint: 2</h2>\n<p>Use <em>String.fromCharCode()</em> to convert ASCII to English character.</p>\n<h2>Hint: 3</h2>\n<p>Leave anything that doesn’t come between A-Z as it is.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rot13</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-keyword">var</span> nstr=<span class="hljs-string">""</span>;\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i&lt;str.length; i++){\n        <span class="hljs-comment">//Checks if character lies between A-Z</span>\n        <span class="hljs-keyword">if</span>(str.charCodeAt(i) &lt; <span class="hljs-number">65</span> || str.charCodeAt(i) &gt; <span class="hljs-number">91</span>) {\n            nstr += <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(i));\n            <span class="hljs-keyword">continue</span>;\n        }\n        <span class="hljs-comment">//N = ASCII 78, if the character code is less than 78, shift forward 13 places</span>\n        <span class="hljs-keyword">if</span>(str.charCodeAt(i) &lt; <span class="hljs-number">78</span>){\n            nstr += <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(i) + <span class="hljs-number">13</span>);\n        }\n        <span class="hljs-keyword">else</span>{\n            <span class="hljs-comment">//Otherwise shift the character 13 places backward</span>\n            nstr += <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(i) - <span class="hljs-number">13</span>);\n\n        }\n    }\n\n    <span class="hljs-keyword">return</span> nstr;\n}\n</code></pre>\n<h4>Second solution (advanced)</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rot13</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Split str into a character array</span>\n  <span class="hljs-keyword">return</span> str.split(<span class="hljs-string">\'\'</span>)\n  <span class="hljs-comment">// Iterate over each character in the array</span>\n    .map.call(str, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">char</span>) </span>{\n      <span class="hljs-comment">// Convert char to a character code</span>\n      x = char.charCodeAt(<span class="hljs-number">0</span>);\n      <span class="hljs-comment">// Checks if character lies between A-Z</span>\n      <span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">65</span> || x &gt; <span class="hljs-number">91</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(x);  <span class="hljs-comment">// Return un-converted character</span>\n      }\n      <span class="hljs-comment">//N = ASCII 78, if the character code is less than 78, shift forward 13 places</span>\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">78</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(x + <span class="hljs-number">13</span>);\n      }\n      <span class="hljs-comment">// Otherwise shift the character 13 places backward</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(x - <span class="hljs-number">13</span>);\n    }).join(<span class="hljs-string">\'\'</span>);  <span class="hljs-comment">// Rejoin the array into a string</span>\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h4>First solution</h4>\n<ul>\n<li>A string variable <code>nstr</code> is declared and initialized to store the\ndecoded string.</li>\n<li>The for loop is used to loop through each character of the input string.</li>\n<li>If the character is not uppercase English alphabets(i.e. its ascii doesn’t lie between 65 and 91 ), we’ll leave it\nas it is and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/continue">continue</a> with next iteration.</li>\n<li>If it’s the uppercase English alphabet, we’ll subtract 13 from it’s\nascii code.</li>\n<li>If the ascii code is less than 78, it’ll get out of\nrange when subtracted by 13 so we’ll add 26(number of letters in\nEnglish alphabets) to it so that after A it’ll go back to Z.\ne.g. M(77) ↔ 77-13 = 64(Not an English alphabet) +26 = 90 ↔ Z(90)</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @anuragaryan and @SaintPeter for your help with Algorithm: Caesar\'s Cipher</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Check for Palindromes",order:5,body:'<p><img src="http://i.imgur.com/ozDWKEi.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>Our goal for solving this problem is tidying up the string passed in, and checking whether it is in fact a palindrome.</p>\n<ul>\n<li>If you are unsure of what a palindrome is, it is a word or phrase that when reversed spells the same thing forwards or backwards. A simple example is <code>mom</code>, when you reverse the letters, it spells the same thing! Another example of a palindrome is <code>race car</code>. When we take out anything that is not a character it becomes <code>racecar</code> which is the same spelled forwards or backwards!</li>\n</ul>\n<p>Once we have determined whether it is a palindrome or not we want to return either <code>true</code> or <code>false</code> based on our findings.</p>\n<h2>Hint: 1</h2>\n<p>Regular expressions, <code>RegEx</code>, can be used to remove unwanted characters from the string.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+RegExp">http://devdocs.io/#q=js+RegExp</a></li>\n</ul>\n<h2>Hint: 2</h2>\n<p>The <code>Array.prototype.split</code> and <code>Array.prototype.join</code> methods can be of use here. <code>For</code> and <code>while</code> loops are another alternative, or why not even <code>map</code>!</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+String+split">http://devdocs.io/#q=js+String+split</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+join">http://devdocs.io/#q=js+Array+join</a></li>\n<li><a href="http://devdocs.io/#q=js+for">http://devdocs.io/#q=js+for</a></li>\n</ul>\n<h2>Hint: 3</h2>\n<p><code>String.prototype.toLowerCase</code> can be used to make a string lowercase.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+String+toLowerCase">http://devdocs.io/#q=js+String+toLowerCase</a></li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>First Solution</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/[\\W_]/g</span>, <span class="hljs-string">\'\'</span>).toLowerCase() ===\n         str.replace(<span class="hljs-regexp">/[\\W_]/g</span>, <span class="hljs-string">\'\'</span>).toLowerCase().split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>);\n}\n</code></pre>\n<h2>Second Solution</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n  str = str.toLowerCase().replace(<span class="hljs-regexp">/[\\W_]/g</span>, <span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = str.length - <span class="hljs-number">1</span>; i &lt; len/<span class="hljs-number">2</span>; i++) {\n    <span class="hljs-keyword">if</span>(str[i] !== str[len-i]) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n</code></pre>\n<h2>Third Solution</h2>\n<p>(using recursion)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n<span class="hljs-comment">// make all letters lowercase and remove non-alphanumeric characters</span>\n  str = str.toLowerCase().replace(<span class="hljs-regexp">/[^a-z|1-9]/g</span>, <span class="hljs-string">""</span>);\n\n  <span class="hljs-comment">// if the length of the string is 0 then it is a palindrome</span>\n  <span class="hljs-keyword">if</span> (str.length === <span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n  <span class="hljs-comment">// if the first letter and the last letter of the string</span>\n  <span class="hljs-comment">// do not equal each other, then it is not a palindrome</span>\n  <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>] !== str[str.length-<span class="hljs-number">1</span>]){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  <span class="hljs-comment">//Else, run the function without the first and last characters.</span>\n  <span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> palindrome(str.slice(<span class="hljs-number">1</span>,str.length - <span class="hljs-number">1</span>));\n  }\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h2>First Solution</h2>\n<ul>\n<li>\n<p>We start by using regular expressions to replace any white space or non-alphanumeric characters with nothing (or <code>null</code>), which essentially removes them from the string.</p>\n</li>\n<li>\n<p>Next we <em>chain</em> <code>.toLowerCase()</code> to remove any capital letters because <code>A</code> is a different character than <code>a</code>. The problem did not ask us to worry about making sure the case of the characters was identical, just the spelling.</p>\n</li>\n<li>\n<p>Our next step is to take our string and <code>.split()</code> it, <code>.reverse()</code> it, and finally <code>.join()</code> it back together.</p>\n</li>\n<li>\n<p>Last step is to check that the string is the same forwards and backwards and return our result!</p>\n</li>\n</ul>\n<h2>Second solution</h2>\n<ul>\n<li>\n<p>We start by using the same methods of replacing characters we don’t want in the string using <code>RegEx</code>\'s, regular expressions, and then make our string lowercase.</p>\n</li>\n<li>\n<p>Next we set up our <code>for</code> loop and declare an index <code>i</code> to keep track of the loop. We set our escape sequence to when <code>i</code> is greater than the length of the string divided by two, which tells the loop to stop after the halfway point of the string. And finally we set <code>i</code> to increment after every loop.</p>\n</li>\n<li>\n<p>Inside of each loop we want to check that the letter in element <code>[i]</code> is equal to the letter in the length of the string minus i, <code>[str.length - i]</code>. Each loop, the element that is checked on both sides of the string moves closer to the center until we have checked all of the letters. If at any point the letters do not match, we return <code>false</code>. If the loop completes successfully, it means we have a palindrome and therefore we return <code>true</code>!</p>\n</li>\n</ul>\n<h2>Third Solution</h2>\n<ul>\n<li>\n<p>This solution uses the power of recursion instead of a for loop! Our first step is to once again use <code>RegEx</code>\'s to remove any characters that we do not want in the string, like whitespace or non-alphanumeric characters.</p>\n</li>\n<li>\n<p>Our next step is check if the length of the string is 0, if it is we return <code>true</code> because it is a palindrome. (this will make a little more sense after you read all the steps).</p>\n</li>\n<li>\n<p>Next we want to check that the first and last elements of the string are the same. If they are not the same, we return false which exits the function, and breaks out of the recursive loop.</p>\n</li>\n<li>\n<p>If neither of the first two conditions are met, then we assume that the two characters are equal, and we return a recursive call to the function. The difference here is that we pass the current value of <code>str</code> and we slice the first and last elements off the string. This process continues until there are no characters left to check!</p>\n</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @abhisekp @shadowfool for your help with Algorithm: Check for Palindromes</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Chunky Monkey",order:5,body:'<p><img src="http://i.imgur.com/RdrnNvA.png" alt=""></p>\n<h1>Explanation</h1>\n<p>Our goal for this Algorithm is to split <code>arr</code> (first argument) into smaller chunks of arrays with the length provided by <code>size</code> (second argument). There are 4 green checks (objectives) our code needs to pass in order to complete this Algorithm:</p>\n<ol>\n<li><code>([\'a\', \'b\', \'c\', \'d\'], 2)</code> is expected to be <code>[[\'a\', \'b\'], [\'c\', \'d\']]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 3)</code> is expected to be <code>[[0, 1, 2], [3, 4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 2)</code> is expected to be <code>[[0, 1], [2, 3], [4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 4)</code> is expected to be <code>[[0, 1, 2, 3], [4, 5]]</code></li>\n</ol>\n<p>Click <strong>More information</strong> under the Algorithm title and read the helpful links if you haven’t yet.</p>\n<h2>How to approach the Algorithm</h2>\n<p>The helpful links suggest to use <code>Array.push()</code> so let’s start by first creating a new array to store the smaller arrays we will soon have like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> newArray = [];\n</code></pre>\n<p>Next we’ll need a <code>for loop</code> to loop through <code>arr</code> then finally we need a method to do the actual splitting and we can use <code>Array.slice()</code> to do that. The key to this Algorithm is understanding how a <code>for loop</code>, <code>size</code>, <code>Array.slice()</code> and <code>Array.push()</code> all work together.</p>\n<h1>How does a for loop and Array.slice() work</h1>\n<p><strong>For Loop</strong></p>\n<p>A <code>for loop</code> keeps looping until a condition evaluates to false for example if we had:</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++)\n</code></pre>\n<p><code>i</code> starts with a value of 0, <code>i</code> loops until <code>i</code> is no longer less than the length of <code>arr</code> and during each repeat loop, the value of <code>i</code> increases by 1 (one). If <code>arr.length</code> happens to be 4 then the <code>for loop</code> stops right before <code>i</code> reaches 4.</p>\n<p><strong>Array.slice() Method</strong></p>\n<p><code>Array.slice()</code> method extracts a portion of an array and returns a copy into a new array. We can declare which element to start and which element to stop. For example, if <code>arr</code> is <code>[\'a\', \'b\', \'c\', \'d\']</code> and we used <code>arr.slice(1, 3);</code>, the <code>Array.slice()</code> method starts at element 1 and stops at element 3 then returns:</p>\n<pre><code class="language-js">[<span class="hljs-string">"b"</span>,<span class="hljs-string">"c"</span>]\n</code></pre>\n<p><em>Notice how it captures the start element but doesn’t capture the stop element.</em></p>\n<h1>Using a for loop and Array.slice() together</h1>\n<p>If we use the following <code>for loop</code> while <code>size</code> is 2 (note: <code>size</code> = 2):</p>\n<pre><code class="language-js">(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i += size)\n</code></pre>\n<p>The loop starts at element 0, loops once then <code>i += 2</code> which is another way of stating <code>i = i + 2</code> so now the new value of <code>i</code> becomes 2. What happens if we combine the following <code>arr.slice()</code> with the <code>for loop</code>?</p>\n<pre><code class="language-js">arr.slice(i, i + size)\n</code></pre>\n<h1>Push the arrays out</h1>\n<p>We can combine the <code>Array.slice()</code> method with the <code>Array.push()</code> method inside the <code>for loop</code> like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i += size) {\nnewArray.push(arr.slice(i, i + size));\n}\n</code></pre>\n<p><code>arr.slice()</code> will start at element 0 and stop at element 2. Here’s the fun part: once the <code>for loop</code>, loops again then the value of <code>i</code> becomes 2 while the <code>i</code> in the <code>arr.slice()</code> will also have a value of 2. The new <code>arr.slice()</code> becomes:</p>\n<pre><code class="language-js">arr.slice(<span class="hljs-number">2</span>, <span class="hljs-number">2</span> + <span class="hljs-number">2</span>)\n</code></pre>\n<p>Now <code>arr.slice()</code> starts at the element 2 and stops at element 4 and in the next loop, <code>arr.slice()</code> will start at element 4 and stop at element 6. <code>newArray.push()</code> will push all the elements out into chunks of smaller arrays with the length of <code>size</code>.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>Solution 1:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n\n  <span class="hljs-keyword">var</span> temp = [];\n  <span class="hljs-keyword">var</span> result = [];\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (a % size !== size - <span class="hljs-number">1</span>)\n      temp.push(arr[a]);\n    <span class="hljs-keyword">else</span> {\n      temp.push(arr[a]);\n      result.push(temp);\n      temp = [];\n    }\n  }\n\n  <span class="hljs-keyword">if</span> (temp.length !== <span class="hljs-number">0</span>)\n    result.push(temp);\n  <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n<h4>Solution 2:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n  <span class="hljs-comment">// Break it up</span>\n  <span class="hljs-comment">// It\'s already broken :(</span>\n  arr = arr.slice();\n  <span class="hljs-keyword">var</span> arr2 = [];\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = arr.length; i &lt; len; i+=size) {\n    arr2.push(arr.slice(<span class="hljs-number">0</span>, size));\n    arr = arr.slice(size);\n  }\n  <span class="hljs-keyword">return</span> arr2;\n}\n</code></pre>\n<h4>Solution 3:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n  <span class="hljs-comment">// Break it up.</span>\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;\n  \n  <span class="hljs-keyword">while</span> (i &lt; arr.length) {\n    newArray.push(arr.slice(i, i+size));\n    i += size;\n  }\n  <span class="hljs-keyword">return</span> newArr;\n}\nchunk([<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span>, <span class="hljs-string">"d"</span>], <span class="hljs-number">2</span>);\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @kirah1314 @Rafase282 @jsommamtek for your help with Algorithm: Chunky Monkey</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Confirm the Ending",order:5,body:'<p><img src="http://i.imgur.com/Z7vhddH.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>The function is a whole Boolean operation. You need to return true if the first argument ends with the second argument. This means that for the problem script, it should return true for the <code>end(\'Bastian\', \'n\'); case.</code></p>\n<h2>Hint: 1</h2>\n<p>Take a look at how substr() works. You will be trying to get the last Nth characters.</p>\n<h2>Hint: 2</h2>\n<p>To get the Nth-to-Last character you will use length() and turn it into a negative number.</p>\n<h2>Hint: 3</h2>\n<p>Check that you have the proper syntax and that you use <code>===</code> to compare.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params">str, target</span>) </span>{\n  <span class="hljs-keyword">return</span> str.substr(-target.length) === target;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>We use the subtring() with the negative value of the lengths of target. We could use -1 to get the last element but if the target is actually longer than one letter then the program will provide the wrong information. Then we return the value of this boolean expression.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 for your help with Algorithm: Confirm the Ending</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Convert HTML Entities",order:5,body:'<p><img src="http://i.imgur.com/g7sWL1I.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>You have to create a program that will convert HTML entities from string to their corresponding HTML entities. There are only a few so you can use different methods.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You can use regular Expressions however I didn’t in this case.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will benefit form a chart with all the html entities so you know which ones are the right ones to put.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You should separate the string and work with each character to convert the right ones and then join everything back up.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Split by character to avoid problems.</span>\n\n  <span class="hljs-keyword">var</span> temp = str.split(<span class="hljs-string">\'\'</span>);\n\n  <span class="hljs-comment">// Since we are only checking for a few HTML elements I used a switch</span>\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; temp.length; i++) {\n    <span class="hljs-keyword">switch</span> (temp[i]) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&lt;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;lt;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&amp;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;amp;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&gt;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;gt;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'"\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;quot;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">"\'"</span>:\n        temp[i] = <span class="hljs-string">\'&amp;apos;\'</span>;\n        <span class="hljs-keyword">break</span>;\n    }\n  }\n\n  temp = temp.join(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">return</span> temp;\n}\n</code></pre>\n<p>##Another Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n    \n    <span class="hljs-comment">//map of key:value pairs</span>\n    <span class="hljs-keyword">var</span> html = {\n       <span class="hljs-string">"&amp;"</span>:<span class="hljs-string">"&amp;amp;"</span>,\n       <span class="hljs-string">"&lt;"</span>:<span class="hljs-string">"&amp;lt;"</span>,\n       <span class="hljs-string">"&gt;"</span>:<span class="hljs-string">"&amp;gt;"</span>,\n       <span class="hljs-string">"\\""</span>:<span class="hljs-string">"&amp;quot;"</span>,\n       <span class="hljs-string">"\\\'"</span>:<span class="hljs-string">"&amp;apos;"</span>\n    };\n        str = str.replace(<span class="hljs-regexp">/&amp;|&lt;|&gt;|"|\'/gi</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matched</span>)</span>{\n        <span class="hljs-keyword">return</span> html[matched];\n        });\n\n  <span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<p>##Another Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n<span class="hljs-comment">//Chaining of replace method with different arguments</span>\n  str = str.replace(<span class="hljs-regexp">/&amp;/g</span>,<span class="hljs-string">\'&amp;amp;\'</span>).replace(<span class="hljs-regexp">/&lt;/g</span>,<span class="hljs-string">\'&amp;lt;\'</span>).replace(<span class="hljs-regexp">/&gt;/g</span>,<span class="hljs-string">\'&amp;gt;\'</span>).replace(<span class="hljs-regexp">/"/g</span>,<span class="hljs-string">\'&amp;quot;\'</span>).replace(<span class="hljs-regexp">/\'/g</span>,<span class="hljs-string">\'&amp;apos;\'</span>);\n<span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @jhalls for your help with Algorithm: Convert HTML Entities</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm DNA Pairing",order:5,body:'<p><img src="http://i.imgur.com/usiNBDU.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>You will get a DNA strand sequence and you need to get the pair and return it as a 2D array of the base pairs. Keep in mind that the provided strand should be first always.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>There are two base case, A-T and C-G, these go both way. You can use regular expression, if statements of anything that you can think of.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>I would recommend using a switch, as it makes things a lot smoother.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The result must be an array of arrays, so keep that in mind when pushing things.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>Solution 1</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pair</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Return each strand as an array of two elements, the original and the pair.</span>\n  <span class="hljs-keyword">var</span> paired = [];\n\n  <span class="hljs-comment">// Function to check with strand to pair.</span>\n  <span class="hljs-keyword">var</span> search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">char</span>) </span>{\n    <span class="hljs-keyword">switch</span> (char) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'A\'</span>:\n        paired.push([<span class="hljs-string">\'A\'</span>, <span class="hljs-string">\'T\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'T\'</span>:\n        paired.push([<span class="hljs-string">\'T\'</span>, <span class="hljs-string">\'A\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'C\'</span>:\n        paired.push([<span class="hljs-string">\'C\'</span>, <span class="hljs-string">\'G\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'G\'</span>:\n        paired.push([<span class="hljs-string">\'G\'</span>, <span class="hljs-string">\'C\'</span>]);\n        <span class="hljs-keyword">break</span>;\n    }\n  };\n\n  <span class="hljs-comment">// Loops through the input and pair.</span>\n  <span class="hljs-built_in">console</span>.log(char);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; str.length; i++) {\n    search(str[i]);\n  }\n\n  <span class="hljs-keyword">return</span> paired;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The program is very simple, the best solution that I have come up with is to use a switch to catch all the possible four elements. Using if statements would take too much code. You could also use Regular Expressions.</li>\n<li>Since we have to the original and the pair, I decided to take all four cases instead of the base two.</li>\n<li>Create an empty array and use the <code>search</code> function to push the right values to the array and return them.</li>\n</ul>\n<h3>Solution 2</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pair</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">//define a map object with all pair possibilities </span>\n  <span class="hljs-keyword">var</span> map = {T:<span class="hljs-string">\'A\'</span>, A:<span class="hljs-string">\'T\'</span>, G:<span class="hljs-string">\'C\'</span>, C:<span class="hljs-string">\'G\'</span>};\n  <span class="hljs-comment">//split str into a a char Array</span>\n  strArr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-comment">//replace each Array item with a 2d Array using map</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;strArr.length;i++){\n    strArr[i]=[strArr[i], map[strArr[i]]];\n  }\n <span class="hljs-keyword">return</span> strArr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read the comments</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang for your help with Algorithm: DNA Pairing</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Diff Two Arrays",order:5,body:'<p><img src="http://i.imgur.com/HkEgef5.gif" alt=""></p>\n<h1>Explanation:</h1>\n<p>Check two arrays and return a new array that contains only the items that are not in either of the original arrays.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>Merge the list to make it easy to compare functions.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Use filter to get the new array, you will need to create a callback function.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The best way to go about the callback function is to check if the number from the new merged array is not in <strong>both</strong> original arrays and return it.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diff</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-keyword">var</span> newArr = arr1.concat(arr2);\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">item</span>) </span>{\n    <span class="hljs-keyword">if</span> (arr1.indexOf(item) === -<span class="hljs-number">1</span> || arr2.indexOf(item) === -<span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">return</span> item;\n    }\n  }\n\n  <span class="hljs-keyword">return</span> newArr.filter(check);\n}\n</code></pre>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diff</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-comment">// Same, same; but different.</span>\n  <span class="hljs-keyword">var</span> newArr = arr1.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>{\n    <span class="hljs-keyword">return</span> arr2.indexOf(el) === -<span class="hljs-number">1</span>;\n    \n    <span class="hljs-comment">// concat the previous output of filter method</span>\n    <span class="hljs-comment">// with the next output of filter method</span>\n  }).concat(arr2.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>{\n    <span class="hljs-keyword">return</span> arr1.indexOf(el) === -<span class="hljs-number">1</span>;\n  }));\n  <span class="hljs-keyword">return</span> newArr;\n}\n</code></pre>\n<h2>Code Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-comment">// This solution runs two times faster than solutions 1 and 2</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diff</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-comment">// Looping through arr1 to find elements that do not exist in arr2  </span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr1.length; i++) {\n    <span class="hljs-keyword">if</span> (arr2.indexOf(arr1[i]) === -<span class="hljs-number">1</span>){\n      <span class="hljs-comment">// Pushing the unique to arr1 elements to the newArr</span>\n      newArr.push(arr1[i]);\n    } \n  }\n  <span class="hljs-comment">// Looping through arr2 to find elements that do not exist in arr1</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; arr2.length; j++) {\n    <span class="hljs-keyword">if</span> (arr1.indexOf(arr2[j]) === -<span class="hljs-number">1</span>){\n      <span class="hljs-comment">// Pushing the unique to arr2 elements to the newArr    </span>\n      newArr.push(arr2[j]);\n    } \n  }\n  \n  <span class="hljs-keyword">return</span> newArr;\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @aganita for your help with Algorithm: Diff Two Arrays</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Drop it",order:5,body:'<p><img src="http://i.imgur.com/goyTFy2.png" alt=""></p>\n<h1>Explanation:</h1>\n<p>Basically while the second argument is not true, you will have to remove the first element from the left of the array that was passed as the first argument.</p>\n<h2>Hint: 1</h2>\n<p>You can use Array.shift() or filter that you should be more familiar with to solve this problem in a few lines of code.</p>\n<h2>Hint: 2</h2>\n<p>Shift returns the element that was removed which we don’t really need, all we need is the modified array that is left.</p>\n<h2>Hint: 3</h2>\n<p>If you still can’t figure out how to solve it with shift, then try solving it with filter, and check how filter works, if you become familiar with it, then you can make the code with shift.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drop</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-comment">// Drop them elements.</span>\n  <span class="hljs-keyword">var</span> times = arr.length;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; times; i++) {\n    <span class="hljs-keyword">if</span> (func(arr[<span class="hljs-number">0</span>])) {\n      <span class="hljs-keyword">break</span>;\n    } <span class="hljs-keyword">else</span> {\n      arr.shift();\n    }\n  }\n  <span class="hljs-keyword">return</span> arr;\n}\ndrop([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{<span class="hljs-keyword">return</span> n &lt; <span class="hljs-number">3</span>; });\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a for loop to check each element.</li>\n<li>Then check for the function given if true then stop, otherwise remove that element.</li>\n<li>return the array.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drop</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-keyword">return</span> arr.slice(arr.findIndex(func) &gt;= <span class="hljs-number">0</span> ? arr.findIndex(func): arr.length, arr.length);\n}\n\ndrop([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{<span class="hljs-keyword">return</span> n &gt;= <span class="hljs-number">3</span>;});\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Use ES6 <code>findIndex()</code> function to  find the index of the element that passes the condition</li>\n<li>Slice the array from the found index until the end</li>\n<li>There is one edge case! if the condition is not met against any of the elements ‘findIndex’ will return <code>-1</code> which messes up the input to <code>slice()</code>. In this case use a simple conditional operator to return <code>false</code> instead of <code>-1</code>. And the ternary operator (?:) returns the found index of required elements when the condition is <code>ture</code>, and the length of the array otherwise so that the return value is an empty array as is instructed. For more info see <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator</a></li>\n</ul>\n<h2>Code Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drop</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-keyword">while</span>(!func(arr[<span class="hljs-number">0</span>])){\n    arr.shift();\n  }\n  <span class="hljs-keyword">return</span> arr;\n}\n\ndrop([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{<span class="hljs-keyword">return</span> n &lt; <span class="hljs-number">3</span>; });\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>Use a while loop with <code>Array.shift()</code> to continue checking and dropping the first element of the array until the function returns true.</li>\n<li>Return the trimmed array.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @sabahang for your help with Algorithm: Drop it</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Everything be True",order:5,body:'<p><img src="http://i.imgur.com/oKEJJJI.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>The program needs to check if the second argument is a <a href="https://freecodecamp.com/wiki/js-truthy">truthy</a> element, and it must check this for each object in the first argument.</p>\n<h3>Hint: 1</h3>\n<p>Remember to iterate through the first argument to check each object.</p>\n<h3>Hint: 2</h3>\n<p>Only if all of them are truth will we return true, so make sure all of them check.</p>\n<h3>Hint: 3</h3>\n<p>You could use loops or callbacks functions, there are multiple ways to solve this problem.</p>\n<h3>Spoiler Alert!</h3>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solutions ahead!</strong></p>\n<h2>Code Solution using for-in loop &amp; hasOwnProperty:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">every</span>(<span class="hljs-params">collection, pre</span>) </span>{\n  <span class="hljs-comment">// Create a counter to check how many are true.</span>\n  <span class="hljs-keyword">var</span> counter = <span class="hljs-number">0</span>;\n  <span class="hljs-comment">// Check for each object</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> collection) {\n    <span class="hljs-comment">// If it is has property and value is truthy</span>\n    <span class="hljs-keyword">if</span> (collection[c].hasOwnProperty(pre) &amp;&amp; <span class="hljs-built_in">Boolean</span>(collection[c][pre])) {\n      counter++;\n    }\n  }\n  <span class="hljs-comment">// Outside the loop, check to see if we got true for all of them and return true or false</span>\n  <span class="hljs-keyword">return</span> counter == collection.length;\n}\n</code></pre>\n<h3>Code Explanation:</h3>\n<ul>\n<li>First I create a counter to check how many cases are actually true.</li>\n<li>Then check for each object if the value is truthy</li>\n<li>Outside the loop, I check to see if the counter variable has the same value as the length of <strong>collection</strong>, if true then return <strong>true</strong>, otherwise, return <strong>false</strong></li>\n</ul>\n<h2>Code Solution using Array.every():</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">every</span>(<span class="hljs-params">collection, pre</span>) </span>{\n  <span class="hljs-keyword">return</span> collection.every(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">element</span>) </span>{\n    <span class="hljs-keyword">return</span> element.hasOwnProperty(pre) &amp;&amp; <span class="hljs-built_in">Boolean</span>(element[pre]);\n  });\n}\n</code></pre>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Uses the native “every” method to test whether all elements in the array pass the test.</li>\n<li>This link will help <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every">Array.prototype.every()</a></li>\n</ul>\n<h2>Code solution using Array.reduce:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">every</span>(<span class="hljs-params">collection, pre</span>) </span>{\n    <span class="hljs-keyword">return</span> collection.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">acc, next</span>) </span>{\n        <span class="hljs-keyword">if</span> (next[pre]) {\n            <span class="hljs-keyword">return</span> acc;\n        } <span class="hljs-keyword">else</span> {\n            acc = <span class="hljs-literal">false</span>;\n            <span class="hljs-keyword">return</span> acc;\n        }\n    },<span class="hljs-literal">true</span>);\n</code></pre>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Set initial reduce value to true.</li>\n<li>Change it to false only when there is no key of a given name or it’s falsy. Otherwise stick to the initial truthy value.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @estevanmaito @HermanFassett for your help with Algorithm: Everything Be True</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Exact Change",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You have to create a program that will handle when the register does not have enough cash or will have no cash after the transaction. Other than that it needs to return an array of the change in the form of an array, so that will be a 2D array.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Is easier to handle if you will have to close the register or if you will not have enough money to complete the transaction if you know beforehand how much money is on your register. For this it would be recommended to have a function get the information assigned to a variable.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Life is easier when you get to know the value of each currency type in the register instead of how much money is composed of that particular currency. So be sure to watch out for that.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will have to get as much change from one type before moving to the next from greater value to lesser, and keep going until you have covered the whole change.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-comment">// Create an object which hold the denominations and their values</span>\n<span class="hljs-keyword">var</span> denom = [\n	{ name: <span class="hljs-string">\'ONE HUNDRED\'</span>, val: <span class="hljs-number">100.00</span>},\n	{ name: <span class="hljs-string">\'TWENTY\'</span>, val: <span class="hljs-number">20.00</span>},\n	{ name: <span class="hljs-string">\'TEN\'</span>, val: <span class="hljs-number">10.00</span>},\n	{ name: <span class="hljs-string">\'FIVE\'</span>, val: <span class="hljs-number">5.00</span>},\n	{ name: <span class="hljs-string">\'ONE\'</span>, val: <span class="hljs-number">1.00</span>},\n	{ name: <span class="hljs-string">\'QUARTER\'</span>, val: <span class="hljs-number">0.25</span>},\n	{ name: <span class="hljs-string">\'DIME\'</span>, val: <span class="hljs-number">0.10</span>},\n	{ name: <span class="hljs-string">\'NICKEL\'</span>, val: <span class="hljs-number">0.05</span>},\n	{ name: <span class="hljs-string">\'PENNY\'</span>, val: <span class="hljs-number">0.01</span>}\n];\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawer</span>(<span class="hljs-params">price, cash, cid</span>) </span>{\n    <span class="hljs-keyword">var</span> change = cash - price;\n\n    <span class="hljs-comment">// Transform CID array into drawer object</span>\n    <span class="hljs-keyword">var</span> register = cid.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">acc, curr</span>) </span>{\n        acc.total += curr[<span class="hljs-number">1</span>];\n        acc[curr[<span class="hljs-number">0</span>]] = curr[<span class="hljs-number">1</span>];\n        <span class="hljs-keyword">return</span> acc;\n    }, {total: <span class="hljs-number">0</span>});\n    \n    <span class="hljs-comment">// Handle exact change</span>\n    <span class="hljs-keyword">if</span>(register.total === change) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">\'Closed\'</span>;\n    }\n    \n    <span class="hljs-comment">// Handle obvious insufficent funds</span>\n    <span class="hljs-keyword">if</span>(register.total &lt; change) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">\'Insufficient Funds\'</span>;\n    }\n    \n    <span class="hljs-comment">// Loop through the denomination array</span>\n    <span class="hljs-keyword">var</span> change_arr = denom.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">acc, curr</span>) </span>{\n        <span class="hljs-keyword">var</span> value = <span class="hljs-number">0</span>;\n        <span class="hljs-comment">// While there is still money of this type in the drawer</span>\n        <span class="hljs-comment">// And while the denomination is larger than the change reminaing</span>\n        <span class="hljs-keyword">while</span>(register[curr.name] &gt; <span class="hljs-number">0</span> &amp;&amp; change &gt;= curr.val) {\n            change -= curr.val;\n            register[curr.name] -= curr.val;\n            value += curr.val;\n            \n            <span class="hljs-comment">// Round change to the nearest hundreth to deal with precision errors</span>\n            change = <span class="hljs-built_in">Math</span>.round(change * <span class="hljs-number">100</span>) / <span class="hljs-number">100</span>;\n        }\n        <span class="hljs-comment">// Add this denomination to the output only if any was used.</span>\n        <span class="hljs-keyword">if</span>(value &gt; <span class="hljs-number">0</span>) {\n            acc.push([ curr.name, value ]);\n        }\n        <span class="hljs-keyword">return</span> acc; <span class="hljs-comment">// Return the current Change Array</span>\n    }, []); <span class="hljs-comment">// Initial value of empty array for reduce</span>\n  \n  <span class="hljs-comment">// If there are no elements in change_arr or we have leftover change, return "Insufficient Funds"</span>\n  <span class="hljs-keyword">if</span>(change_arr.length &lt; <span class="hljs-number">1</span> || change &gt; <span class="hljs-number">0</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Insufficient Funds"</span>;\n  }\n    \n  <span class="hljs-comment">// Here is your change, ma\'am.</span>\n  <span class="hljs-keyword">return</span> change_arr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @SaintPeter for your help with Algorithm: Exact Change</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Factorialize a Number",order:5,body:'<h1>Problem Explanation:</h1>\n<p>Return the factorial of the provided integer. If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.</p>\n<p>Factorials are often represented with the shorthand notation n!</p>\n<p>For example: <code>5! = 1 * 2 * 3 * 4 * 5 = 120</code></p>\n<h2>Outline</h2>\n<p>This one starts easily since <code>0! = 1</code>, so you can go ahead and simply <code>return 1</code> there.</p>\n<p>We can use that as an <code>if</code> in order to break the loop we’re going to create using a <strong>recursive function</strong>. It will check if the number you gave the function is 0 (which would be the end of your factorial chain). Functions “end” when they return anything. In fact, <strong>all</strong> functions without an explicit <code>return</code> statement will return <code>undefined</code>.</p>\n<p>This is also why <strong>instead</strong> of having <em>“finished”</em>, a function is always said to <em>“have returned”</em>. And now this…</p>\n<h2>Understanding recursion</h2>\n<p>Recursion refers to a function repeating (calling) itself. In this case we are basically returning the given number (i.e. 5), multiplied by the function itself but this time the value passed to the <em>num</em> parameter is <code>num-1</code> (which initially translates to 4). The very function is going to <strong>run inside itself</strong> interesting, eh?</p>\n<h1>Understanding the flow</h1>\n<p>The first <strong>returned</strong> value can be visualized better if you think about those parenthesis operations you did in secondary school where you do the math inside every parenthesis from inside out, bracket and square bracket until you get a final result (a total). This time it’s the same thing, look at the program flow:</p>\n<h3>During the first execution of the function:</h3>\n<p>[<strong>num</strong> = 5]</p>\n<p>Is 5 <em>equal</em> to 1 or 0? <strong>No</strong> —&gt; Oki doki, let’s continue…</p>\n<p><strong>Returns:</strong></p>\n<p>(<strong>5</strong> _ (<em>second execution</em>: <strong>4</strong> _ (<em>third execution</em>: <strong>3</strong> _ (<em>fourth execution</em>: <strong>2</strong> _ <em>fifth execution</em>: <strong>1</strong>))))</p>\n<p>What it returns can be viewed as <code>(5*(4*(3*(2*1))))</code> or just <code>5 * 4 * 3 * 2 * 1</code>, and the function will return the result of that operation: <code>120</code>. Now, let’s check what the rest of the executions do:</p>\n<h3>During the rest of the executions:</h3>\n<p><strong>Second Execution</strong>:\n<em>num</em> = 5-1 = <strong>4</strong> -&gt; is <em>num</em> 0 or 1? No<br>\n–&gt; return the multiplication between 4 and the next result when <em>num</em> is now 4-1.</p>\n<p><strong>Third Execution</strong>: <em>num</em> = 4 - 1 = <strong>3</strong> -&gt; is <em>num</em> 0 or 1? No<br>\n–&gt; return the multiplication between 3 and the next result when <em>num</em> is now 3-1.</p>\n<p><strong>Fourth Execution</strong>: <em>num</em> = 3-1 = <strong>2</strong> -&gt; is <em>num</em> 0 or 1? No<br>\n–&gt; return the multiplication between 2 and the next result when <em>num</em> is now 2-1.</p>\n<p><strong>Fifth Execution</strong>: <em>num</em> = 2-1 = <strong>1</strong> -&gt; is <em>num</em> 0 or 1? Yep<br>\n–&gt; return <strong>1</strong>. And this is where the recursion stops because there are no more executions.</p>\n<p>Got it? ;)</p>\n<p><img src="http://i61.tinypic.com/28auvsw.jpg" alt="Recursion"></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">factorialize</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span> (num === <span class="hljs-number">0</span>) { <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; }\n  <span class="hljs-keyword">return</span> num * factorialize(num-<span class="hljs-number">1</span>);\n}\n\nfactorialize(<span class="hljs-number">5</span>);\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><strong>Recursion</strong>: <a href="https://www.codecademy.com/es/courses/javascript-lesson-205/0/1">https://www.codecademy.com/courses/javascript-lesson-205/0/1</a></li>\n<li><strong>Factorialization</strong>: <a href="https://en.wikipedia.org/wiki/Factorial">https://en.wikipedia.org/wiki/Factorial</a></li>\n<li><strong>Arithmetic Operators</strong> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @luishendrix92 @Rafase282 @hallaathrad for your help with Algorithm: Factorialize a Number</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n<pre><code>           ,,,         ,,,\n          <span class="hljs-comment">;"   ^;     ;\'   ",</span>\n          <span class="hljs-comment">;    s$$$$$$$s     ;</span>\n          ,  ss$$$$$$$$$$s  ,\'\n          <span class="hljs-comment">;s$$$$$$$$$$$$$$$</span>\n          $$$$$$$$$$$$$$$$$$\n         $$$$P<span class="hljs-string">""</span>Y$$$Y<span class="hljs-string">""</span>W$$$$$      -{ Happy Camping! }\n         $$$$  p<span class="hljs-string">"$$$"</span>q  $$$$$\n         $$$$  .$$$$$.  $$$$\n          $$DcaU$$$$$$$$$$\n            <span class="hljs-string">"Y$$$"</span>*<span class="hljs-string">"$$$Y"</span>    \n                <span class="hljs-string">"$b.$$"</span>\n</code></pre>\n'
}},function(e,n){e.exports={title:"Algorithm Falsy Bouncer",order:5,body:'<p><img src="http://i.imgur.com/GluUbAz.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<p>Remove all <a href="https://freecodecamp.com/wiki/js-falsy">falsy</a> values from an array.</p>\n<h2>Hint: 1</h2>\n<p>Falsy is something which evaluates to FALSE. There are only six falsy values in JavaScript: undefined, null, NaN, 0, “” (empty string), and false of course.</p>\n<h2>Hint: 2</h2>\n<p>We need to make sure we have all the falsy values to compare, we can know it, maybe with a function with all the falsy values…</p>\n<h2>Hint: 3</h2>\n<p>Then we need to add a <code>filter()</code> with the falsy values function…</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Solution Code:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Don\'t show a false ID to this bouncer.</span>\n  <span class="hljs-comment">// I\'ve a hammer fist.</span>\n\n  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-built_in">Boolean</span>);\n}\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isTruthy</span>(<span class="hljs-params">arg</span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Boolean</span>(arg);\n  }\n\n  <span class="hljs-keyword">var</span> filteredArray = arr.filter(isTruthy);\n  <span class="hljs-keyword">return</span> filteredArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>The <code>Array.prototype.filter</code> method expects a function that returns a <code>Boolean</code> value which takes a single argument and returns <code>true</code> for <a href="https://freecodecamp.com/wiki/js-truthy">truthy</a> value or <code>false</code> for <a href="https://freecodecamp.com/wiki/js-falsy">falsy</a> value. Hence we pass the built-in <code>Boolean</code> function.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @renelis @abhisekp @Rafase282 for your help with Algorithm: Falsy Bouncer</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Find The Longest Word in a String",order:5,body:'<h1>Explanation:</h1>\n<p>You have to go through each word and figure out which one is the longest and return not the word, but how many characters it has.</p>\n<h2>Hint: 1</h2>\n<p>You should split the string into an array of words.</p>\n<h2>Hint: 2</h2>\n<p>You will need to figure out a way to keep track globally of the greatest current length.</p>\n<h2>Hint: 3</h2>\n<p>Remember how to get the length of elements on the array? <code>Array[index].length</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<p>####First solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> words = str.split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">var</span> maxLength = <span class="hljs-number">0</span>;\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; words.length; i++) {\n    <span class="hljs-keyword">if</span> (words[i].length &gt; maxLength) {\n      maxLength = words[i].length;\n    }\n  }\n\n  <span class="hljs-keyword">return</span> maxLength;\n}\n</code></pre>\n<p>####Second solution\n(Using <code>.reduce()</code>)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">\' \'</span>)\n          .reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>) </span>{\n                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(x, y.length)\n                  }, <span class="hljs-number">0</span>);\n}\n</code></pre>\n<h4>Third solution</h4>\n<p>(Using recursiveness)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-comment">//split the string into individual words </span>\n  <span class="hljs-comment">//(important!!, you\'ll see why later)</span>\n  str = str.split(<span class="hljs-string">" "</span>);\n  \n  <span class="hljs-comment">//str only has 1 element left that is the longest element, </span>\n  <span class="hljs-comment">//return the length of that element</span>\n  <span class="hljs-keyword">if</span>(str.length == <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> str[<span class="hljs-number">0</span>].length;\n  }\n  \n  <span class="hljs-comment">//if the first element\'s length is greater than the second element\'s (or equal) </span>\n  <span class="hljs-comment">//remove the second element and recursively call the function)</span>\n  <span class="hljs-keyword">if</span>(str[<span class="hljs-number">0</span>].length &gt;= str[<span class="hljs-number">1</span>].length){\n    str.splice(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> findLongestWord(str.join(<span class="hljs-string">" "</span>));\n  }\n  \n  <span class="hljs-comment">//if the second element\'s length is greater thant the first element\'s start </span>\n  <span class="hljs-comment">//call the function past the first element </span>\n  <span class="hljs-keyword">if</span>(str[<span class="hljs-number">0</span>].length &lt;= str[<span class="hljs-number">1</span>].length){\n    <span class="hljs-comment">// from the first element to the last element inclusive.</span>\n    <span class="hljs-keyword">return</span> findLongestWord(str.slice(<span class="hljs-number">1</span>,str.length).join(<span class="hljs-string">" "</span>));\n  }\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>####First solution\nTake the string and convert it into an array of words. Declare a variable to keep track of the maximum length and loop from 0 to the length of the array of words.</p>\n<p>Then check for the longest word by comparing the current word to the previous one and storing the new longest word. At the end of the loop just return the number value of the variable maxLength.</p>\n<p>####Second solution\nFor more information on <code>reduce</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">click here.</a><br>\nIn case you’re wondering about that <code>0</code> after the callback function, it is used to give an initial value to the <code>x</code>, so that <code>Math.max</code> will know where to start.</p>\n<p>####Third solution\nSee the code’s inline comments.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @shadowfool @Hallaathrad for your help with Algorithm: Find the Longest Word in a String</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Finders Keepers",order:5,body:'<h1>Explanation:</h1>\n<p>The problem is quite simple to understand. You will check for each element in the array that is passed in the first argument, if the element plugged in to the function passed as the second argument returns true the first time. We do not care about the second or third one that is true, only the very first one if any. If there are none, then return undefined. This last bit is not explained but it is part of the tests used.</p>\n<h2>Hint: 1</h2>\n<p>You can use the function directly from the parameter, no need to rename it or anything.</p>\n<h2>Hint: 2</h2>\n<p>You need to pass an element and record it if the function returns true, for this you just have to pass the element as the parameter for the function.</p>\n<h2>Hint: 3</h2>\n<p>If no element satisfy the function then you must return <strong>undefined</strong></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-comment">// Make num undefined by default</span>\n  <span class="hljs-keyword">var</span> num;\n\n  <span class="hljs-comment">// Loop thorugh the array and use the function to check</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (func(arr[a])) {\n      <span class="hljs-comment">// Store the first case and break the loop</span>\n      num = arr[a];\n      <span class="hljs-keyword">return</span> num;\n    }\n  }\n\n  <span class="hljs-comment">// otherwise return undefined</span>\n  <span class="hljs-keyword">return</span> num;\n}\n\nfind([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>;\n});\n</code></pre>\n<h2>Another Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">arr, func</span>) </span>{\n  filterArr = arr.filter(func); <span class="hljs-comment">//filter array with the function provided</span>\n  \n  <span class="hljs-keyword">return</span> filterArr[<span class="hljs-number">0</span>]; <span class="hljs-comment">//return the first element that returns true, or undefined if no elements return true</span>\n}\n\nfind([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>)</span>{ <span class="hljs-keyword">return</span> num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>; });\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>To make the code easier, create an undefined variable that will be returned.</li>\n<li>Loop through the array to check for each element if it satisfy the function. This is done by passing the arr[index of the loop] as the parameter for the function from the second argument.</li>\n<li>If true, then store the array element, and return it. This will stop the loop. No else needed.</li>\n<li>If the loop was not broken and it has ended, then return <strong>num</strong> which by default is undefined. This means that none of the elements from the array satisfied the function.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @JamesKee for your help with Algorithm: Finders Keepers</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Friendly Date Ranges",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Create a program that will take two dates and convert them into a more easy to understand date such as <code>January 1st, 2017</code>. It will also check the difference between them, and handles cases with no difference, more than a day, more than a month, more than a year, and more than a month and less than a year respectively.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Split the string into an array where you get the “YYYY”, “MM”, “DD”</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You need to handle the case for “st”, “nd”, and “th”. Note that 13 is “th” not “rd”.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>If you are using <code>Date()</code> to create instances of dates to work with, then use UTC time to avoid errors due to time zone difference between servers.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">friendly</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-keyword">var</span> months = [<span class="hljs-string">\'January\'</span>, <span class="hljs-string">\'February\'</span>, <span class="hljs-string">\'March\'</span>, <span class="hljs-string">\'April\'</span>, <span class="hljs-string">\'May\'</span>, <span class="hljs-string">\'June\'</span>, <span class="hljs-string">\'July\'</span>, <span class="hljs-string">\'August\'</span>, <span class="hljs-string">\'September\'</span>, <span class="hljs-string">\'October\'</span>, <span class="hljs-string">\'November\'</span>, <span class="hljs-string">\'December\'</span>];\n\n  <span class="hljs-comment">// COnverst a YYYY-MM-DD string into a date object.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convertDate</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-comment">// Split the dates to work independently.</span>\n    <span class="hljs-keyword">var</span> dateStr = str.split(<span class="hljs-string">\'-\'</span>);\n\n    <span class="hljs-comment">// Force the dates into Universal time to avoid issues due to timezones.</span>\n    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">Date</span>.UTC(dateStr[<span class="hljs-number">0</span>], dateStr[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span>, dateStr[<span class="hljs-number">2</span>])));\n\n  }\n\n  <span class="hljs-comment">// Handles the case of the day\'s endings.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dateEnding</span>(<span class="hljs-params">val</span>) </span>{\n    <span class="hljs-keyword">switch</span> (val) {\n      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">21</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">31</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'st\'</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">22</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'nd\'</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">23</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'rd\'</span>;\n      <span class="hljs-keyword">default</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'th\'</span>;\n    }\n  }\n\n  <span class="hljs-comment">// Checks for the real difference in months to avoid errors</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">monthDiff</span>(<span class="hljs-params">date1, date2</span>) </span>{\n    <span class="hljs-keyword">var</span> month2 = date2.getUTCFullYear() * <span class="hljs-number">12</span> + date2.getUTCMonth();\n    <span class="hljs-keyword">var</span> month1 = date1.getUTCFullYear() * <span class="hljs-number">12</span> + date1.getUTCMonth();\n    <span class="hljs-keyword">return</span> month2 - month1;\n  }\n  \n  <span class="hljs-comment">//day diff</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dayDiff</span>(<span class="hljs-params">date1, date2</span>) </span>{\n    <span class="hljs-keyword">if</span>(date2.getUTCMonth() === date1.getUTCMonth()){\n      <span class="hljs-keyword">return</span> date1.getUTCDate()-date2.getUTCDate();\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-comment">// Get\'s the right month string.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMonth</span>(<span class="hljs-params">date</span>) </span>{\n    <span class="hljs-keyword">return</span> months[date.getUTCMonth()];\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayDate</span>(<span class="hljs-params"></span>) </span>{\n\n    <span class="hljs-comment">// Handles same day</span>\n    <span class="hljs-keyword">if</span> (date2.getTime() - date1.getTime() === <span class="hljs-number">0</span>) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()) + <span class="hljs-string">\', \'</span> + date1.getUTCFullYear()];\n    }\n\n    <span class="hljs-comment">// Handles same month</span>\n    <span class="hljs-keyword">if</span> (date1.getUTCMonth() === date2.getUTCMonth() &amp;&amp; date1.getUTCFullYear() === date2.getUTCFullYear()) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()), dateEnding(date2.getUTCDate())];\n    }\n    \n    <span class="hljs-comment">// Handles more than a month of difference, but less than 12 months and different year</span>\n    <span class="hljs-keyword">if</span> (monthDiff(date1, date2) &lt; <span class="hljs-number">12</span> &amp;&amp; date1.getUTCFullYear() !== date2.getUTCFullYear() ) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate())];\n    }\n\n    <span class="hljs-comment">// Handles same month but different year</span>\n    <span class="hljs-keyword">if</span> (monthDiff(date1, date2) &lt;= <span class="hljs-number">12</span> &amp;&amp; dayDiff(date1, date2)&gt;<span class="hljs-number">0</span>) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate())+<span class="hljs-string">\', \'</span>+date1.getUTCFullYear(), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate())];\n    }\n    \n    <span class="hljs-comment">// Handles more than a month of difference, but less than 12 months and same year</span>\n    <span class="hljs-keyword">if</span> (monthDiff(date1, date2) &lt; <span class="hljs-number">12</span>) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate())+<span class="hljs-string">\', \'</span>+date1.getUTCFullYear(), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate())];\n    }\n\n    <span class="hljs-comment">// Handles cases with more than 12 months apaprt.</span>\n    <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()) + <span class="hljs-string">\', \'</span> + date1.getUTCFullYear(), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate()) + <span class="hljs-string">\', \'</span> + date2.getUTCFullYear()];\n  }\n\n  <span class="hljs-keyword">var</span> date1 = convertDate(str[<span class="hljs-number">0</span>]);\n  <span class="hljs-keyword">var</span> date2 = convertDate(str[<span class="hljs-number">1</span>]);\n\n  <span class="hljs-keyword">return</span> displayDate();\n\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph for your help with Algorithm: Friendly Date Ranges</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Inventory Update",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Look through an array of new products, in the format: <code>[quantity, name]</code></li>\n<li>Return an array containing updated quantities for each item that already existed, and any new products</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You need to work through each item of the new inventory to see if it exists in the current inventory or not.</li>\n<li>Remember that the product name is stored as the second element of each sub-array: <code>arr2[0][1] = &quot;Bowling Ball&quot;</code></li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If the item exists, you need to add the quantity from the new inventory</li>\n<li>If the item doesn’t exist, you need to add the entire item</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Return the completed inventory in alphabetical order</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inventory</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n\n    <span class="hljs-comment">// Variable for location of product</span>\n    <span class="hljs-keyword">var</span> index;\n\n    <span class="hljs-comment">// A helper method to return the index of a specified product (undefined if not found)</span>\n    <span class="hljs-keyword">var</span> getProductIndex = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">name</span>) </span>{\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.length; i++) {\n            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>[i][<span class="hljs-number">1</span>] === name) {\n                <span class="hljs-keyword">return</span> i;\n            }\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    }\n\n    <span class="hljs-comment">// For each item of the new Inventory</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr2.length; i++) {\n\n        <span class="hljs-comment">// Invoke our helper function using arr1 as this</span>\n        index = getProductIndex.call(arr1, arr2[i][<span class="hljs-number">1</span>]);\n\n        <span class="hljs-comment">// If the item doesn\'t exist</span>\n        <span class="hljs-keyword">if</span> (index === <span class="hljs-literal">undefined</span>) {\n            <span class="hljs-comment">// Push the entire item</span>\n            arr1.push(arr2[i]);\n        } <span class="hljs-keyword">else</span> {\n            <span class="hljs-comment">// Add the new quantity of the current item</span>\n            arr1[index][<span class="hljs-number">0</span>] += arr2[i][<span class="hljs-number">0</span>];\n        }\n\n    }\n\n    <span class="hljs-comment">// Sort alphabetically, by the product name of each item</span>\n    arr1.sort(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) </span>{\n        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &gt; b[<span class="hljs-number">1</span>]) {\n            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;\n        }\n        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &lt; b[<span class="hljs-number">1</span>]) {\n            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n    });\n\n    <span class="hljs-keyword">return</span> arr1;\n}\n</code></pre>\n<h4>Second solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inventory</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-comment">// All inventory must be accounted for or you\'re fired!</span>\n\n  <span class="hljs-keyword">var</span> index;\n  <span class="hljs-keyword">var</span> arrCurInvName = []; <span class="hljs-comment">// Names of arr1\'s items</span>\n  <span class="hljs-keyword">var</span> arrNeInvName = []; <span class="hljs-comment">// Names of arr2\'s items</span>\n\n  <span class="hljs-comment">// Same as using two for loops, this takes care of increasing the number of stock quantity.</span>\n  arr1.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item1</span>) </span>{\n    <span class="hljs-keyword">return</span> arr2.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item2</span>) </span>{\n      <span class="hljs-keyword">if</span> (item1[<span class="hljs-number">1</span>] === item2[<span class="hljs-number">1</span>]) {\n        item1[<span class="hljs-number">0</span>] = item1[<span class="hljs-number">0</span>] + item2[<span class="hljs-number">0</span>]; <span class="hljs-comment">//Increase number of stock</span>\n      }\n    });\n  });\n\n  <span class="hljs-comment">// Get item\'s name for new Inventory</span>\n  arr2.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    arrNeInvName.push(item[<span class="hljs-number">1</span>]);\n  });\n\n  <span class="hljs-comment">// Get item\'s name for Current Inventory</span>\n  arr1.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    arrCurInvName.push(item[<span class="hljs-number">1</span>]);\n  });\n\n  <span class="hljs-comment">// Add new inventory items to current inventory.</span>\n  arrNeInvName.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    <span class="hljs-keyword">if</span> (arrCurInvName.indexOf(item) === -<span class="hljs-number">1</span>) {\n      index = arrNeInvName.indexOf(item);\n      arr1.push(arr2[index]);\n    }\n  });\n\n  <span class="hljs-comment">// Sort the array alphabetically using the second element of the array as base.</span>\n  arr1.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">currItem, nextItem</span>) </span>{\n\n    <span class="hljs-comment">//Ternary function to avoid using if else</span>\n    <span class="hljs-keyword">return</span> currItem[<span class="hljs-number">1</span>] &gt; nextItem[<span class="hljs-number">1</span>] ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>;\n  });\n\n  <span class="hljs-keyword">return</span> arr1;\n}\n</code></pre>\n<h4>Third solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inventory</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-keyword">var</span> flag=<span class="hljs-number">0</span>;\n  arr2.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>)</span>{\n    flag=<span class="hljs-number">0</span>;\n    arr1.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">list</span>)</span>{\n        <span class="hljs-comment">//If the product is already present, increase the quantity</span>\n      <span class="hljs-keyword">if</span>(item[<span class="hljs-number">1</span>]===list[<span class="hljs-number">1</span>]){ list[<span class="hljs-number">0</span>]+=item[<span class="hljs-number">0</span>]; flag=<span class="hljs-number">1</span>;}\n    });\n    <span class="hljs-comment">//If not already present, add the product</span>\n    <span class="hljs-keyword">if</span>(flag===<span class="hljs-number">0</span>) arr1.push(item);\n  });\n  <span class="hljs-comment">//Return the sorted inventory in alphabetical order wrt product name</span>\n    <span class="hljs-keyword">return</span> arr1.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{ \n    <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>] &gt; b[<span class="hljs-number">1</span>] ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>;\n});\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h4>First solution</h4>\n<ul>\n<li>Start by creating a variable to store the index in.  Define variables outside of loops</li>\n<li>Create a helper function to find the index of a product name</li>\n<li>The helper function iterates through each element of the array that it is called on, until it can either find the name parameter, or if it cannot find it then returns undefined</li>\n<li>Then, work through each item in the delivery, and set index to the result of invoking our helper function on the current inventory (IE: Search the new inventory for that product name, and return it’s index)</li>\n<li>If we can’t find that product, then we can add the entire product (Name and quantity) to the current inventory</li>\n<li>Otherwise, then we can add the quantity from the new inventory</li>\n<li>Then we sort the array by the product name (<code>arr1[x][1]</code> holds the name)</li>\n<li>Return the sorted array</li>\n<li>For Solution two, the explanation is on the code. Feel free to use different components on each solution to create your own if you like.</li>\n</ul>\n<h4>Second and Third solutions</h4>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h2>Related links</h2>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call">Function.prototype.call</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">Array.prototype.sort</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @guyjoseph @Rafase282 @anuragaryan for your help with Algorithm: Inventory Update</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Make a Person",order:5,body:'<h1>Explanation:</h1>\n<p>When I started the program I figured I just had to create the six functions mentioned in the details. However, it was not that simple. Creating them as a function was not the right way, I had to create them in a different way to make them a key.</p>\n<p>There is also a tricky part as you need six keys no more or less, so at first I had the variable that store the original name as a key too which was wrong.</p>\n<p>As for the usage of array, that is optional, you could also create new variable to hold the separated string if you wish but an array is easier to deal with as strings are immutable.</p>\n<p>Read the instructions carefully, it is always a good hint in itself to run the code and check what the test results were so you know what to expect but do not fixate yourself on that. Once you understand what you need to do, this problem is very easy and straightforward.</p>\n<h2>Hint: 1</h2>\n<p>Use the <strong>this</strong> notation to create the keys instead of regular functions: This means instead of <code>var varName = function() {/*...*/}</code> you should use <code>this.varName = function() {/*...*/}</code></p>\n<h2>Hint: 2</h2>\n<p>The program has a test that checks for how many keys you used, they have to be exactly six, the six mentioned in the details section. This means if you need to work with variables, make them local and not a key: <code>this.fullName = firstAndLast;</code></p>\n<h2>Hint: 3</h2>\n<p>Often the code would not work the way you expect it due to wrong variable names, make sure to check that you spell them the right way. This happens to all of us at some point.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<p>Please try hard before you check this solution.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Person = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">firstAndLast</span>) </span>{\n  <span class="hljs-keyword">var</span> fullName = firstAndLast;\n\n  <span class="hljs-keyword">this</span>.getFirstName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.getLastName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.getFullName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName;\n  };\n\n  <span class="hljs-keyword">this</span>.setFirstName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = name + <span class="hljs-string">" "</span> + fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.setLastName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">" "</span> + name;\n  };\n  \n  <span class="hljs-keyword">this</span>.setFullName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = name;\n  };\n};\n\n<span class="hljs-keyword">var</span> bob = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">\'Bob Ross\'</span>);\nbob.getFullName();\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable that will make a copy of the full name that was passed as a parameter.</li>\n<li>Then we can proceed to create the six methods needed and return what is asked for.</li>\n<li>For the individual setters, we can use the split to turn the fullname into an array of first and last names and concatenate the unchanged portion of the name with what was passed as a parameter.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @ltegman for your help with Algorithm: Make a Person</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Map the Debris",order:5,body:'<p><img src="http://i.imgur.com/jSJ4E7L.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<p>The first thing to do is to get familiar with what the program is for, for this I would suggest you check the Wikipedia link as that is very important and from where you can also get the formula for the conversion. The hardest part are finding the formula, implementing it and for some modifying objects by the key. However, something that is not very clear is the fact that your program has to be able to check for any number of objects in the array which is what is tested on the second part.</p>\n<h2>Hint: 1</h2>\n<p>The formula needed is: T = 2_pi _ sqrt(earthRadius + avgAlt to the cube / GM)</p>\n<h2>Hint: 2</h2>\n<p>Use Math.round() to round up to the next whole number as requested. Using Math.ceil() will let you pass the first test but fail the second one.</p>\n<h2>Hint: 3</h2>\n<p>Find out how to remove and add key to an object</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">orbitalPeriod</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> GM = <span class="hljs-number">398600.4418</span>;\n  <span class="hljs-keyword">var</span> earthRadius = <span class="hljs-number">6367.4447</span>;\n  <span class="hljs-keyword">var</span> a = <span class="hljs-number">2</span> * <span class="hljs-built_in">Math</span>.PI;\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-keyword">var</span> getOrbPeriod = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">var</span> c = <span class="hljs-built_in">Math</span>.pow(earthRadius + obj.avgAlt, <span class="hljs-number">3</span>);\n    <span class="hljs-keyword">var</span> b = <span class="hljs-built_in">Math</span>.sqrt(c / GM);\n    <span class="hljs-keyword">var</span> orbPeriod = <span class="hljs-built_in">Math</span>.round(a * b);\n    <span class="hljs-keyword">delete</span> obj.avgAlt;\n    obj.orbitalPeriod = orbPeriod;\n    <span class="hljs-keyword">return</span> obj;\n  };\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> elem <span class="hljs-keyword">in</span> arr) {\n    newArr.push(getOrbPeriod(arr[elem]));\n  }\n\n  <span class="hljs-keyword">return</span> newArr;\n}\n</code></pre>\n<h4>Second solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">orbitalPeriod</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> GM = <span class="hljs-number">398600.4418</span>;\n  <span class="hljs-keyword">var</span> earthRadius = <span class="hljs-number">6367.4447</span>;\n  \n  <span class="hljs-comment">//Looping through each key in arr object</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> arr){\n    <span class="hljs-comment">//formula  of orbital period https://en.wikipedia.org/wiki/Orbital_period here a = avgAlt+earthRadius</span>\n    <span class="hljs-comment">//Rounding off the orbital period value </span>\n  <span class="hljs-keyword">var</span> orbitalPer = <span class="hljs-built_in">Math</span>.round(<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI*<span class="hljs-built_in">Math</span>.sqrt(<span class="hljs-built_in">Math</span>.pow(arr[prop].avgAlt+earthRadius,<span class="hljs-number">3</span>)/GM));\n  <span class="hljs-comment">//deleting the avgAlt property </span>\n  <span class="hljs-keyword">delete</span> arr[prop].avgAlt;\n  <span class="hljs-comment">//adding orbitalPeriod property</span>\n  arr[prop].orbitalPeriod = orbitalPer;\n  }\n  <span class="hljs-keyword">return</span> arr;\n}\norbitalPeriod([{name : <span class="hljs-string">"sputnik"</span>, avgAlt : <span class="hljs-number">35873.5553</span>}]);\n</code></pre>\n<h4>Third solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">orbitalPeriod</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> GM = <span class="hljs-number">398600.4418</span>;\n  <span class="hljs-keyword">var</span> earthRadius = <span class="hljs-number">6367.4447</span>;\n  <span class="hljs-comment">// Loop through each item in the array arr</span>\n  arr.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>)</span>{\n    <span class="hljs-comment">// Calculate the Orbital period value</span>\n    <span class="hljs-keyword">var</span> tmp= <span class="hljs-built_in">Math</span>.round(<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI*<span class="hljs-built_in">Math</span>.sqrt(<span class="hljs-built_in">Math</span>.pow(earthRadius+item.avgAlt,<span class="hljs-number">3</span>)/GM));\n    <span class="hljs-comment">//Delete the avgAlt property</span>\n    <span class="hljs-keyword">delete</span> item.avgAlt;\n    <span class="hljs-comment">//Add orbitalPeriod property</span>\n    item.orbitalPeriod=tmp;\n  });\n  <span class="hljs-keyword">return</span> arr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h4>First solution</h4>\n<ul>\n<li>The GM and <code>earthRadius</code> is given to us.</li>\n<li>To make the code easier to edit and read, I separated each part of the equation.</li>\n<li>Create a new array to store the <code>orbPeriods</code>.</li>\n<li>a is 2 times pi. The part that is a constant is on the global scope while the rest is part of a function.</li>\n<li>Create a function that will do the required work for any amount of objects.</li>\n<li>c is the power of <code>earthRadius</code> + the value of <code>avgAlt</code> to the cube.</li>\n<li>b is the square root of c divided by GM.</li>\n<li>Create <code>orbPeriod</code> to store the product of a &amp; b, with the ceiling function applied to round up to the next whole number.</li>\n<li>Then we delete the key<code>avgAlt</code>, and add the new key and its value.</li>\n</ul>\n<h4>Second and Third solutions</h4>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @coded9 @anuragaryan for your help with Algorithm: Map the Debris</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Missing letters",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that will find the missing letter from a string and add it. If there is not missing letter it will return undefined. There is currently no test case for it missing more than one letter, but if anything recursion can be implemented or a second or more calls to the same function as needed. Also the letters are always provided in order so there is no need to sort them.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will need to convert from character to ASCII code using the two methods provided in the description.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will have to check for the difference in ASCII code as they are in order. Using a chart would be very helpful.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to figure out where to insert the letter and how to do it, along with handling the case that there is not missing letter as it needs an specific return value.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>First solution:</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create our variables.</span>\n  <span class="hljs-keyword">var</span> firstCharacter = str.charCodeAt(<span class="hljs-number">0</span>);\n  <span class="hljs-keyword">var</span> valueToReturn = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> secondCharacter = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Function to find the missing letters</span>\n  <span class="hljs-keyword">var</span> addCharacters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">while</span> (a - <span class="hljs-number">1</span> &gt; b) {\n      b++;\n      valueToReturn += <span class="hljs-built_in">String</span>.fromCharCode(b);\n    }\n    <span class="hljs-keyword">return</span> valueToReturn;\n  };\n\n  <span class="hljs-comment">// Check if letters are missing in between.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> index = <span class="hljs-number">1</span>; index &lt; str.length; index++) {\n    secondCharacter = str.charCodeAt(index);\n\n    <span class="hljs-comment">// Check if the diference in code is greater than one.</span>\n    <span class="hljs-keyword">if</span> (secondCharacter - firstCharacter &gt; <span class="hljs-number">1</span>) {\n      <span class="hljs-comment">// Call function to missing letters</span>\n      addCharacters(secondCharacter, firstCharacter);\n    }\n\n    <span class="hljs-comment">// Switch positions</span>\n    firstCharacter = str.charCodeAt(index);\n  }\n\n  <span class="hljs-comment">// Check whether to return undefined or the missing letters.</span>\n  <span class="hljs-keyword">if</span> (valueToReturn === <span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> valueToReturn;\n}\n</code></pre>\n<h3>Second solution:</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; str.length; i++) {\n    <span class="hljs-comment">/* code of current character */</span>\n    <span class="hljs-keyword">var</span> code = str.charCodeAt(i);\n\n    <span class="hljs-comment">/* if code of current character is not equal to first charcter + no of iteration\n    hence character has been escaped*/</span>\n    <span class="hljs-keyword">if</span> ( code !== str.charCodeAt(<span class="hljs-number">0</span>) + i) {\n\n      <span class="hljs-comment">/* if current character has escaped one character find previous char and return*/</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(code-<span class="hljs-number">1</span>);\n    }  \n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n}\n</code></pre>\n<h3>Third solution (Declarative)</h3>\n<pre><code class="language-js"><span class="hljs-comment">// Adding this solution for the sake of avoiding using \'for\' and \'while\' loops.</span>\n<span class="hljs-comment">// See the explanation for reference as to why. It\'s worth the effort.</span>\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> compare = str.charCodeAt(<span class="hljs-number">0</span>), missing;\n\n  str.split(<span class="hljs-string">\'\'</span>).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">letter,index</span>)</span>{\n    <span class="hljs-keyword">if</span> (str.charCodeAt(index) == compare) { ++compare; }\n    <span class="hljs-keyword">else</span> { missing = <span class="hljs-built_in">String</span>.fromCharCode(compare); }\n  });\n\n  <span class="hljs-keyword">return</span> missing;\n}\n</code></pre>\n<h3>Fourth solution:</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> strArr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> missingChars = [], i = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> nextChar = <span class="hljs-built_in">String</span>.fromCharCode(strArr[i].charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n  <span class="hljs-keyword">while</span> (i&lt;strArr.length - <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">if</span> (nextChar !== strArr[i+<span class="hljs-number">1</span>]){\n      missingChars.push(nextChar);\n      nextChar = <span class="hljs-built_in">String</span>.fromCharCode(nextChar.charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n    } <span class="hljs-keyword">else</span> {\n      i++;\n      nextChar = <span class="hljs-built_in">String</span>.fromCharCode(strArr[i].charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n    }\n  }\n  <span class="hljs-keyword">return</span> missingChars.join(<span class="hljs-string">\'\'</span>) === <span class="hljs-string">\'\'</span> ? <span class="hljs-literal">undefined</span> : missingChars.join(<span class="hljs-string">\'\'</span>) ;\n}\n</code></pre>\n<h3>Fifth solution:</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> allChars = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> notChars = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">\'[^\'</span>+str+<span class="hljs-string">\']\'</span>,<span class="hljs-string">\'g\'</span>);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;allChars[allChars.length-<span class="hljs-number">1</span>] !== str[str.length-<span class="hljs-number">1</span>] ;i++)\n    allChars += <span class="hljs-built_in">String</span>.fromCharCode(str[<span class="hljs-number">0</span>].charCodeAt(<span class="hljs-number">0</span>)+i);\n  <span class="hljs-keyword">return</span> allChars.match(notChars) ? allChars.match(notChars).join(<span class="hljs-string">\'\'</span>) : <span class="hljs-literal">undefined</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h2>First and second solutions:</h2>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h2>Third solution (Declarative):</h2>\n<ul>\n<li>First we define variables to store the character code for the first letter in the string, and to store whatever missing letters we may find.</li>\n<li>We turn the string to an array in order to map through it instead of using those nasty <code>for</code> and <code>whiles</code> (See <a href="http://www.sitepoint.com/quick-tip-stop-writing-loops-start-thinking-with-maps/">this article</a> for refence as to why. And give it a serious try. Really… you’ll thank me for it.</li>\n<li>(If you’re not sure how to <code>map</code>, you can review [Challenge: Iterate over arrays with map] ](<a href="http://www.freecodecamp.com/challenges/iterate-over-arrays-with-map">http://www.freecodecamp.com/challenges/iterate-over-arrays-with-map</a>) and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map">MDN’s reference</a>).</li>\n<li>As we <code>map</code> through our letters’ character codes, we go comparing with the one that should be in that position.</li>\n<li>If the current letter matches, we move the comparison variable to its next position so we can compare on the next cycle.</li>\n<li>if not, the missing letter will be assigned to the <code>missing</code> variable, which will be returned after the map is finished.</li>\n</ul>\n<h2>Fourth solution:</h2>\n<ul>\n<li>Increase loop index only when you have found all the missing letters between current and next letter</li>\n<li>Every time you find a missing letter push it to <code>missingchars</code></li>\n</ul>\n<h2>Fifth solution:</h2>\n<ul>\n<li>Create a new String that consists all the letters in the range</li>\n<li>Create a Regular Expression for anything except <code>str</code></li>\n<li>Use <code>match()</code> to strip off the <code>str</code> letters from your newly created String</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @rohitnwn @sabahang @Hallaathrad for your help with Algorithm: Missing Letters</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Mutations",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array…</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>If everything is lowercase it will be easier to compare.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Our strings might be easier to work with if they were arrays of characters.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>A loop might help. Use <code>indexOf()</code> to check if the letter of the second word is on the first.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h1>Code Solutions:</h1>\n<p>####First solution (Procedural):</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mutation</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> test = arr[<span class="hljs-number">1</span>].toLowerCase();\n  <span class="hljs-keyword">var</span> target = arr[<span class="hljs-number">0</span>].toLowerCase();\n  <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>;i&lt;test.length;i++) {\n    <span class="hljs-keyword">if</span> (target.indexOf(test[i]) &lt; <span class="hljs-number">0</span>)\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n }\n</code></pre>\n<p>####Second Solution (Declarative):</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mutation</span>(<span class="hljs-params">arr</span>) </span>{\n <span class="hljs-keyword">return</span> arr[<span class="hljs-number">1</span>].toLowerCase()\n              .split(<span class="hljs-string">\'\'</span>)\n              .every(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">letter</span>)</span>{\n                <span class="hljs-keyword">return</span> arr[<span class="hljs-number">0</span>].toLowerCase()\n                             .indexOf(letter) != -<span class="hljs-number">1</span>;\n              });\n}\n</code></pre>\n<h1>Code Explanations:</h1>\n<p>####First solution (Procedural):\nFirst we make the two strings in the array lowercase. <code>test</code> will hold what we are looking for in <code>target</code>.<br>\nThen we loop through our test characters and if any of them is not found we <code>return false</code>.</p>\n<p>If they are <em>all</em> found, the loop will finish without returning anything and we get to <code>return true</code>.</p>\n<p>####Second solution (Declarative):</p>\n<p>Grab the second string, lowercase and turn it into an array; then make sure <em>every</em> one of its <em>letters</em> is a part of the lowercased first string.</p>\n<p><code>Every</code> will basically give you letter by letter to compare, which we do by using <code>indexOf</code> on the first string.\n<code>indexOf</code> will give you -1 if the current <code>letter</code> is missing.\nWe check that not to be the case, for if this happens even once <code>every</code> will be false.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @sxmxc @Rafase282 @anuragaryan @hallaathrad for your help with Algorithm: Mutations</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm No Repeats Please",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>\n<p>This task requires us to look at each possible permutation of a string. This is best done using a recursion function. Being able to build a function which collects all permutations of a string is a common interview question, so there is no shortage of tutorials out there on how to do this, in many different code languages.</p>\n</li>\n<li>\n<p>This task can still be daunting even after watching a tutorial. You will want to send each new use of the function  3 inputs: 1. a new string (or character array) that is being built, 2. a position in your new string that’s going to be filled next, and 3. an idea of what characters (more specifically positions) from the original string have yet to be used. The pseudo code will look something like this:</p>\n<pre><code>var str = ???;\nperm(current position <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, what\'s been used <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, current <span class="hljs-type">string</span> build thus far){\n<span class="hljs-keyword">if</span>(current <span class="hljs-type">string</span> <span class="hljs-keyword">is</span> finished) {\n  print current <span class="hljs-type">string</span>;\n}<span class="hljs-keyword">else</span>{\n  <span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>; i &lt; str.<span class="hljs-property">length</span>; i++) {\n    <span class="hljs-keyword">if</span>(str[i] has <span class="hljs-keyword">not</span> been used) {\n      <span class="hljs-keyword">put</span> str[i] <span class="hljs-keyword">into</span> <span class="hljs-keyword">the</span> current position;\n      mark str[i] <span class="hljs-keyword">as</span> used\n      perm(current position <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, what\'s been used <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, current <span class="hljs-type">string</span> build thus far)\n      unmark str[i] <span class="hljs-keyword">as</span> used because another branch <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> tree <span class="hljs-keyword">for</span> i + <span class="hljs-number">1</span> will still likely use <span class="hljs-keyword">it</span>;\n    }\n  }\n}\n}\nperm(<span class="hljs-number">0</span>, nothing used yet, empty new <span class="hljs-type">string</span> (<span class="hljs-keyword">or</span> array <span class="hljs-keyword">the</span> same size <span class="hljs-keyword">as</span> str);\n</code></pre>\n</li>\n<li>\n<p>Another way to think about this problem is to start from an empty space. Introduce the first letter to the space. This space will now contain the first sub-permutation. Here’s a diagram illustrating the idea:</p>\n</li>\n</ul>\n<p><img src="http://i.imgur.com/zFm5gRx.png" alt="diagram"></p>\n<pre><code class="language-js"><span class="hljs-comment">// An approach to introduce a new character to a permutation</span>\n<span class="hljs-keyword">var</span> ch = <span class="hljs-string">\'?\'</span>;\n<span class="hljs-keyword">var</span> source = [<span class="hljs-string">\'?\'</span>, <span class="hljs-string">\'?\'</span>, <span class="hljs-string">\'?\'</span>];     <span class="hljs-comment">// Current sub-permutation</span>\n<span class="hljs-keyword">var</span> temp, dest = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= source.length; ++i) {\n    temp = source.slice(<span class="hljs-number">0</span>);    <span class="hljs-comment">// Copy the array</span>\n    temp.splice(i, <span class="hljs-number">0</span>, ch);    <span class="hljs-comment">// Insert the new character</span>\n    dest.push(temp);    <span class="hljs-comment">// Store the new sub-permutation    </span>\n}\n</code></pre>\n<p>Finding each permutation could then be done non-recursively by including the above in a function taking a source array and returning a destination array. For each letter of the input string, pass that character, as well as the array  returned from the previous call of the function.</p>\n<p>A way to visualize this is by considering a tree that starts with the first character of your string: <img src="http://i.imgur.com/t8zNarc.png" alt="Permutation Tree"></p>\n<h2>Hint: 1</h2>\n<ul>\n<li>The easiest way is to use Heap’s algorithm to recursively get a list of all the permutations.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Once you have the list then just create a regular expression to catch the repeating characters.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will want to have the permutations as an array of joined strings instead of separated characters.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">permAlone</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-comment">// Create a regex to match repeated consecutive characters.</span>\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/(.)\\1+/g</span>;\n\n  <span class="hljs-comment">// Split the string into an array of characters.</span>\n  <span class="hljs-keyword">var</span> arr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> permutations = [];\n  <span class="hljs-keyword">var</span> tmp;\n\n  <span class="hljs-comment">// FUnction to swap variables\' content.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">index1, index2</span>) </span>{\n    tmp = arr[index1];\n    arr[index1] = arr[index2];\n    arr[index2] = tmp;\n  }\n\n  <span class="hljs-comment">//Generate arrays of permutations using the algorithm.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generate</span>(<span class="hljs-params">int</span>) </span>{\n    <span class="hljs-keyword">if</span> (int === <span class="hljs-number">1</span>) {\n      <span class="hljs-comment">// Make sure to join the characters as we create  the permutation arrays</span>\n      permutations.push(arr.join(<span class="hljs-string">\'\'</span>));\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i != int; ++i) {\n        generate(int - <span class="hljs-number">1</span>);\n        swap(int % <span class="hljs-number">2</span> ? <span class="hljs-number">0</span> : i, int - <span class="hljs-number">1</span>);\n      }\n    }\n  }\n\n  generate(arr.length);\n\n  <span class="hljs-comment">// Filter the array of repeated permutations.</span>\n  <span class="hljs-keyword">var</span> filtered = permutations.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">string</span>) </span>{\n    <span class="hljs-keyword">return</span> !string.match(regex);\n  });\n\n  <span class="hljs-comment">//Return how many have no repetitions.</span>\n  <span class="hljs-keyword">return</span> filtered.length;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Philosophist @Rafase282 for your help with Algorithm: No Repeats Please</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Pairwise",order:5,body:'<h1>Explanation:</h1>\n<p>The program should look for the numbers in the array which would add to make the number from the <strong>arg.</strong> Then instead of adding those numbers up, you will add their <strong>indices</strong> which is the reason why you get 11 on the example from detail.</p>\n<p>Remember that arrays start at index 0 and go from there so from [1,4,2,3,0,5] if we switch to their indices it would be [0,1,2,3,4,5] then we add indices 1 + 2 + 3 + 5 and we get 11. That is what we need to return.</p>\n<h2>Hint: 1</h2>\n<p>Remember to return the smaller sum if multiple are possible. This means <code>[1,1,1],1 should use 0 + 1 instead of 0+1 &amp; 1 +1 , etc</code></p>\n<h2>Hint: 2</h2>\n<p>Try using an array of indices to track when an index has been used or not.</p>\n<h2>Hint: 3</h2>\n<p>It is easy to confuse indices as being numbers, but since you will be interacting with them, make sure to work with them as integers to prevent the code from behaving erratically.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pairwise</span>(<span class="hljs-params">arr, arg</span>) </span>{\n  <span class="hljs-comment">// Create empty array to keep the arrays we will add.</span>\n  <span class="hljs-keyword">var</span> index = [];\n\n  <span class="hljs-comment">// Loop to check the first number.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> arr) {\n    <span class="hljs-comment">// temporal first number.</span>\n    <span class="hljs-keyword">var</span> temp = arr[a];\n\n    <span class="hljs-comment">// Second loop to check against the first number.</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; arr.length; i++) {\n      <span class="hljs-comment">// temporal secodn number.</span>\n      <span class="hljs-keyword">var</span> temp2 = arr[i];\n\n      <span class="hljs-comment">// Key element, this check to make sure that the numbers add to arg</span>\n      <span class="hljs-comment">// also that the second index is greater than the first, and that neither</span>\n      <span class="hljs-comment">// of those indices are already on the array.</span>\n      <span class="hljs-keyword">if</span> (temp + temp2 === arg &amp;&amp; i &gt; a &amp;&amp; index.indexOf(+a) === -<span class="hljs-number">1</span> &amp;&amp; index.indexOf(+i) === -<span class="hljs-number">1</span>) {\n        <span class="hljs-comment">// if true then add both indices as integers then stop checking to avoid repeats.</span>\n        index.push(+a, +i);\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n  }\n\n  <span class="hljs-comment">// After the two loops are done, check if index is empty to return 0</span>\n  <span class="hljs-comment">// or if it is not, then use Array.reduce(callbackFunc) to returnt he sum</span>\n  <span class="hljs-comment">// of the numbers.</span>\n  <span class="hljs-keyword">if</span> (index.length &gt;= <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">var</span> addAll = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n      <span class="hljs-keyword">return</span> a + b;\n    };\n\n    <span class="hljs-keyword">return</span> index.reduce(addAll);\n  } <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First I create an empty array to store the indices that i will be adding.</li>\n<li>Then I create an outer loop to get the first number.</li>\n<li>Then get the second number from another inner loop.</li>\n<li>Then I check to make sure that the two numbers add to arg that was passed as a parameter to the function; we also have to make sure the index from the second loop is grater than the one from the first loop to avoid adding wrong indices. We also have to check to make sure the indices are not already part of the <strong>index</strong> array.</li>\n<li>If all that is true, then we add the two indices as integer by using ‘+’ or parseInt(), and then we stop the inner loop since everything else would be redundant and wrong.</li>\n<li>After all the loops are over, check in <strong>index</strong> is empty, if it is then return 0, otherwise return the addition of all the integers in it using Array.reduce(callbackFunc) to return the sum of the numbers.</li>\n<li></li>\n</ul>\n<p>##Another Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pairwise</span>(<span class="hljs-params">arr, arg</span>) </span>{\n <span class="hljs-comment">//Set sum of indices to zero</span>\n <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;\n <span class="hljs-comment">//looping from first element</span>\n  <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;arr.length;i++){\n  <span class="hljs-comment">//Looping from second element by setting first element  constant</span>\n <span class="hljs-keyword">for</span>(j=i+<span class="hljs-number">1</span>;j&lt;arr.length;j++){\n <span class="hljs-comment">//Check whether the sum is equal to arg</span>\n   <span class="hljs-keyword">if</span>(arr[i]+arr[j] ==arg){\n   <span class="hljs-comment">//Add the indices</span>\n     sum += i+j;\n     <span class="hljs-comment">//Set the indices to NaN so that they can\'t be used in next iteration</span>\n     arr[i] =arr[j] = <span class="hljs-literal">NaN</span>;\n    }\n   } \n  }\n <span class="hljs-keyword">return</span> sum;\n}\npairwise([<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], <span class="hljs-number">2</span>);\n</code></pre>\n<p>#Code explanation in comments</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @coded9 @SaintPeter for your help with Algorithm: Pairwise</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Pig Latin",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You need to create a program that will translate from English to Pig Latin. Check the instructions for converting to Pig Latin from the initial description or the wiki page. It might not be obvious but you need to remove all the consonants up to the first vowel in the case there letter does not start with a vowel.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will probably want to use regular expressions. This will allow you to convert the words easily.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If the first character is a vowel, then take that whole word and add ‘way’ at the end. Otherwise comes the tricky part, take the consonant(s) before the first vowel and move it to the end and add ‘ay’. This is where I had trouble since it was not clear that it was not just the first consonant but all of them before the first vowel.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to use everything you know about string manipulation to get the last part right. However, it can be done with <code>substr</code> alone.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create variables to be used</span>\n  <span class="hljs-keyword">var</span> pigLatin = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/[aeiou]/gi</span>;\n  \n  <span class="hljs-comment">// Check if the first character is a vowel</span>\n  <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>].match(regex)) {\n    pigLatin = str + <span class="hljs-string">\'way\'</span>;\n  \n  } <span class="hljs-keyword">else</span> {\n    \n    <span class="hljs-comment">// Find how many consonants before the first vowel.</span>\n    <span class="hljs-keyword">var</span> vowelIndice = str.indexOf(str.match(regex)[<span class="hljs-number">0</span>]);\n    \n    <span class="hljs-comment">// Take the string from the first vowel to the last char</span>\n    <span class="hljs-comment">// then add the consonants that were previously omitted and add the ending.</span>\n    pigLatin = str.substr(vowelIndice) + str.substr(<span class="hljs-number">0</span>, vowelIndice) + <span class="hljs-string">\'ay\'</span>;\n  }\n\n  <span class="hljs-keyword">return</span> pigLatin;\n}\n</code></pre>\n<h4>Second solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">//finding all the consonants in the beginning of the str. </span>\n  <span class="hljs-comment">//by using &amp;&amp; below I\'m achiving a concept called Intersection of Regular Expressions</span>\n  <span class="hljs-comment">//where your pattern finds the union of two or more RegEx rules. </span>\n  <span class="hljs-comment">//In Java you can achive this with RegEx special character \'&amp;&amp;\' </span>\n  <span class="hljs-comment">//but in Javascript you can use the following instead. </span>\n  <span class="hljs-comment">//Credit goes to http://stackoverflow.com/q/6595477</span>\n  <span class="hljs-keyword">var</span> consChars = str.match(<span class="hljs-regexp">/^[a-z]/</span>) &amp;&amp; str.match(<span class="hljs-regexp">/[^aeiou]*/</span>).join(<span class="hljs-string">\'\'</span>);\n  \n  <span class="hljs-comment">//if no consonants found (i.e. str starts with vowels)</span>\n  <span class="hljs-comment">//use replace to remove consonants and construct newStr else add \'way\' in the end</span>\n  <span class="hljs-keyword">if</span> (consChars !== <span class="hljs-string">\'\'</span>){\n    newStr = str.replace(consChars, <span class="hljs-string">\'\'</span>) + consChars + <span class="hljs-string">"ay"</span>;\n  } <span class="hljs-keyword">else</span> {\n    newStr = str + <span class="hljs-string">"way"</span>;\n  }\n  <span class="hljs-keyword">return</span> newStr;\n}\n</code></pre>\n<h4>Third solution</h4>\n<pre><code class="language-js">\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-keyword">var</span> strArr = [];\n    <span class="hljs-keyword">var</span> tmpChar;\n    \n    <span class="hljs-comment">// check if the char is consonant using RegEx</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isConsonant</span>(<span class="hljs-params">char</span>) </span>{\n        <span class="hljs-keyword">return</span> !<span class="hljs-regexp">/[aeiou]/</span>.test(char);\n    }\n    \n    <span class="hljs-comment">// return initial str + "way" if it starts with vowel </span>\n    <span class="hljs-comment">// if not - convert str to array</span>\n    <span class="hljs-keyword">if</span> (!isConsonant(str.charAt(<span class="hljs-number">0</span>)))\n        <span class="hljs-keyword">return</span> str + <span class="hljs-string">"way"</span>;\n    <span class="hljs-keyword">else</span> \n        strArr = str.split(<span class="hljs-string">""</span>);\n        \n    <span class="hljs-comment">// push all consonats to the end of the array</span>\n    <span class="hljs-keyword">while</span> (isConsonant(strArr[<span class="hljs-number">0</span>])) {\n        tmpChar = strArr.shift();\n        strArr.push(tmpChar);\n    }\n <span class="hljs-comment">// convert array to string and concatenate "ay" at the end  </span>\n <span class="hljs-keyword">return</span> strArr.join(<span class="hljs-string">""</span>)+<span class="hljs-string">"ay"</span>;\n}\n\ntranslate(<span class="hljs-string">"consonant"</span>);\n</code></pre>\n<h4>Fourth Solution (recursive and declarative)</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">obj</span>) </span>{\n  	<span class="hljs-keyword">return</span> [<span class="hljs-string">\'a\'</span>,<span class="hljs-string">\'i\'</span>,<span class="hljs-string">\'u\'</span>,<span class="hljs-string">\'e\'</span>,<span class="hljs-string">\'o\'</span>].indexOf(str.charAt(obj)) == -<span class="hljs-number">1</span> ?\n      										  check(obj+<span class="hljs-number">1</span>) : obj;}\n      										  \n  <span class="hljs-keyword">return</span> str.substr(check(<span class="hljs-number">0</span>))\n            .concat((check(<span class="hljs-number">0</span>) === <span class="hljs-number">0</span> ? \n                        <span class="hljs-string">\'w\'</span> : str.substr(<span class="hljs-number">0</span>, check(<span class="hljs-number">0</span>))) \n                        + <span class="hljs-string">\'ay\'</span>);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>####First-Third solution:</p>\n<ul>\n<li>Read comments on code.</li>\n</ul>\n<h4>Fourth solution (recursive and declarative)</h4>\n<p>Let’s start with a recursive function that will go checking for the first letter of the string to be in an <em>array of vowels</em>. In case of consonants, call itself on the next characters until finding the first vowel. It’ll return the index of whatever it finds to be the last initial consonant. (i.e. Schmidtsville’s would be 3).</p>\n<p>Then we’ll grab our string, remove the letters up until that index, concatenate either that same chunk of removed string or <code>w</code> accordingly, and then <code>ay</code> regardless.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang @aganita @Hallaathrad for your help with Algorithm: Pig Latin</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Repeat a String Repeat a String",order:5,body:'<h1>Explanation:</h1>\n<p>The program is very simple, we have to take a variable and return that variable being repeated certain amount of times. No need to add space or anything, just keep repeating it into one single string.</p>\n<h2>Hint: 1</h2>\n<p>You can’t edit strings, you will need to create a variable to store the new string.</p>\n<h2>Hint: 2</h2>\n<p>Create a loop to repeat the code as many times as needed.</p>\n<h2>Hint: 3</h2>\n<p>Make the variable created store the current value and append the word to it.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<p>####First Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">var</span> accumulatedStr = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-keyword">while</span> (num &gt; <span class="hljs-number">0</span>) {\n    accumulatedStr += str;\n    num--;\n  }\n\n  <span class="hljs-keyword">return</span> accumulatedStr;\n}\n</code></pre>\n<p>####Second Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">var</span> newstr = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; num; i++) {\n    newstr.push(str);\n  }\n  <span class="hljs-keyword">return</span> newstr.join(<span class="hljs-string">\'\'</span>);\n}\n\nrepeat(<span class="hljs-string">"abc"</span>, <span class="hljs-number">3</span>);\n</code></pre>\n<p>####Third Solution\n(using Recursion)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num &lt; <span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-string">""</span>;\n  <span class="hljs-keyword">if</span>(num === <span class="hljs-number">1</span>)\n    <span class="hljs-keyword">return</span> str;\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> str + repeat(str, num - <span class="hljs-number">1</span>);\n}\n</code></pre>\n<p>####Fourth Solution\n(Declarative approach)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">return</span> num &gt;= <span class="hljs-number">0</span> ? str.repeat(num) : <span class="hljs-string">""</span>;\n}\n\nrepeat(<span class="hljs-string">"abc"</span>, <span class="hljs-number">3</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>####First and Second solutions</p>\n<ul>\n<li>Create a variable to store the repeated word.</li>\n<li>Use a while loop or for loop to repeat code as many times as needed according to <code>num</code></li>\n<li>Then we just have to add the string to the variable created on step one. and increase or decrease num depending on how you set the loop.</li>\n<li>At the end of the loop, return the variable for the repeated word.</li>\n</ul>\n<p>####Third solution\n(using recursiveness)</p>\n<ul>\n<li>We check if <code>num</code> is a negative and return an empty string if true.</li>\n<li>Then we check if it’s equal to 1 and in that case we return the string itself.</li>\n<li>If not, we add the string to a call of our function with <code>num</code> being decreased by 1, which will add another <code>str</code> and another until eventually <code>num</code> is 1. And return that whole process.</li>\n</ul>\n<p>####Fourth solution\n(Declarative approach)</p>\n<ul>\n<li>This solution is somewhat similar to the third solution, except it uses the ternary operator form of the <code>if</code> statement.</li>\n<li>The conditional’s first statement (in this case our checking whether <code>num</code> is a negative number) is followed by <code>?</code>.</li>\n<li>The next statement is what to execute, or in our case return, when the condition evaluates to true.</li>\n<li>The final statement is what to execute, or again in our case return, if the initial statement evaluates to false.</li>\n<li>In between the two statements for true and false, you use a colon <code>:</code> to indicate the separation.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @shadowfool @Hallaathrad @sgalizia for your help with Algorithm: Repeat a String Repeat a String</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Return Largest Numbers in Arrays",order:5,body:'<h1>Explanation:</h1>\n<p>You will get an array that contains sub arrays of numbers and you need to return an array with the largest number from each of the sub arrays.</p>\n<h2>Hint: 1</h2>\n<p>You will need to keep track of the array with the answer and the largest number of each sub-array.</p>\n<h2>Hint: 2</h2>\n<p>You can work with multidimensional arrays by <code>Array[Index][SubIndex]</code></p>\n<h2>Hint: 3</h2>\n<p>Pay close attention to the timing of the storing of variables when working with loops</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solutions ahead!</strong></p>\n<h4>First solution</h4>\n<p>(Procedural approach)</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">largestOfFour</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> results = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; arr.length; n++) {\n    <span class="hljs-keyword">var</span> largestNumber = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> sb = <span class="hljs-number">0</span>; sb &lt; arr[n].length; sb++) {\n      <span class="hljs-keyword">if</span> (arr[n][sb] &gt; largestNumber) {\n        largestNumber = arr[n][sb];\n      }\n    }\n\n    results[n] = largestNumber;\n  }\n\n  <span class="hljs-keyword">return</span> results;\n}\n</code></pre>\n<h4>Second solution</h4>\n<p>(Declarative approach)</p>\n<blockquote>\n<p>NOTE: This is an advanced solution. NOT FOR BEGINNERS.</p>\n</blockquote>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">largestOfFour</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">return</span> arr.map(<span class="hljs-built_in">Function</span>.apply.bind(<span class="hljs-built_in">Math</span>.max, <span class="hljs-literal">null</span>));\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h4>First Solution</h4>\n<p>(Procedural approach)</p>\n<ul>\n<li>Create a variable to store the <em>results</em> as an array.</li>\n<li>Create an outer loop to iterate through the outer array.</li>\n<li>Create a second variable to hold the largest number. This must be outside an inner loop so it won’t be reassigned until we find a larger number.</li>\n<li>Create said inner loop to work with the sub-arrays.</li>\n<li>Check if the element of the sub array is larger than the currently stored largest number. If so, then update the number in the variable.</li>\n<li>After the inner loop, save the largest number in the corresponding position inside of the <code>results</code> array.</li>\n<li>And finally return said array.</li>\n</ul>\n<h4>Second Solution</h4>\n<p>(Declarative approach)</p>\n<blockquote>\n<p>TL;DR: **We build a special callback function (using the <code>Function.bind</code> method), that works just like <code>Math.max</code> but also has <code>Function.apply</code>\'s ability to take arrays as its arguments ** :smiley:</p>\n</blockquote>\n<ul>\n<li>\n<p>We start by mapping through the elements inside the main array. Meaning each one of the inner arrays.</p>\n</li>\n<li>\n<p>Now the need a callback function to find the max of each inner array provided by the map.<br>So we want to create a function that does the work of <code>Math.max</code> and accepts input as an array (which by it doesn’t by default).<br><br>In other words, it would be really nice and simple if this worked by itself:\n<code>Math.max([9, 43, 20, 6]); // Resulting in 43</code><br>Alas, it doesn’t.</p>\n</li>\n<li>\n<p>To do the work of accepting arguments in the shape of an array, there is this <code>Function.apply</code> method, but it complicates things a bit by <em>invoking</em> the <em>context</em> function.<br>\ni.e. <code>Math.max.apply(null, [9, 43, 20, 6]);</code> would invoke something like a <code>Max.max</code> method. What we’re looking for… almost.</p>\n</li>\n</ul>\n<blockquote>\n<p>Here we’re passing <code>null</code> as the <em>context</em> of the <code>Function.apply</code> method as <code>Math.max</code> doesn’t need any context.</p>\n</blockquote>\n<ul>\n<li>\n<p>Since <code>arr.map</code> expects a callback function, not just an expression, we create a function out of the previous expression by using the <code>Function.bind</code> method.</p>\n</li>\n<li>\n<p>Since, <code>Function.apply</code> is a static <em>method</em> of the same <code>Function</code> <em>object</em>, we can call <code>Function.prototype.bind</code> on <code>Function.apply</code> i.e. <code>Function.apply.bind</code>.</p>\n</li>\n<li>\n<p>Now we pass the <em>context</em> for the <code>Function.apply.bind</code> call (in this case we want <code>Math.max</code>so we can gain its functionality).</p>\n</li>\n<li>\n<p>Since the embedded <code>Function.apply</code> method will also require a context as it’s 1st argument, we need to pass it a bogus <em>context</em>.</p>\n<ul>\n<li>So, we pass <code>null</code> as the 2nd param to <code>Function.apply.bind</code> which gives a <em>context</em> to the <code>Math.max</code> method.</li>\n<li>Since, <code>Math.max</code> is independent of any <em>context</em>, hence, it ignores the bogus <em>context</em> given by <code>Function.apply</code> method call.</li>\n<li>Thus, our <code>Function.apply.bind(Math.max, null)</code> makes a new function accepting the <code>arr.map</code> values i.e. the inner arrays.</li>\n</ul>\n</li>\n</ul>\n<p><em>Bien noté</em>? :neutral_face:</p>\n<p><strong>Reference:-</strong></p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+Math+max">http://devdocs.io/#q=js+Math+max</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+map">http://devdocs.io/#q=js+Array+map</a></li>\n<li><a href="http://devdocs.io/#q=js+Function+apply">http://devdocs.io/#q=js+Function+apply</a></li>\n<li><a href="http://devdocs.io/#q=js+Function+bind">http://devdocs.io/#q=js+Function+bind</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @abhisekp @Hallaathrad for your help with Algorithm: Return Largest Numbers in Arrays</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Reverse a String",order:5,body:'<h1>Problem Explanation:</h1>\n<p>We need to take the string and reverse it, so if it originally reads ‘hello’, it will now read ‘olleh’. We will need to split the string, and therefore we will be working with Arrays as well.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>Start by splitting the string by characters.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Look up the built in function to reverse a string.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Do not forget to join the characters back together after you reverse them.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverseString</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> str.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>\n<p>Our goal is to take the input, <code>str</code>, and return it in reverse. Our first step is to split the string by characters using <code>split(\'\')</code>. Notice that we don’t leave anything in between the single quotes, this tells the function to split the string by each character.</p>\n</li>\n<li>\n<p>Using the <code>split()</code> function will turn our string into an array of characters, keep that in mind as we move forward.</p>\n</li>\n<li>\n<p>Next we <em>chain</em> the <code>reverse()</code> function, which takes our array of characters and reverses them.</p>\n</li>\n<li>\n<p>Finally, we <em>chain</em> <code>join(\'\')</code> to put our characters back together into a string. Notice once again that we left no spaces in the argument for join, this makes sure that the array of characters is joined back together by each character.</p>\n</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 for your help with Algorithm: Reverse a String</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Roman Numeral Converter",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that converts an integer to a roman numeral.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Creating an array with the Roman Numerals and one with the decimal equivalent for the new forms will be very helpful.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If you add the numbers that go before the new letter is introduced, it will save you plenty of code, like values for 4, 9, and 40.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You can’t have more than three consecutive Roman numerals together.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h1>Code Solution:</h1>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> convert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n\n  <span class="hljs-comment">// Create arrays with default conversion with matching indices.</span>\n  <span class="hljs-keyword">var</span> decimalValue = [ <span class="hljs-number">1000</span>, <span class="hljs-number">900</span>, <span class="hljs-number">500</span>, <span class="hljs-number">400</span>, <span class="hljs-number">100</span>, <span class="hljs-number">90</span>, <span class="hljs-number">50</span>, <span class="hljs-number">40</span>, <span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span> ];\n  <span class="hljs-keyword">var</span> romanNumeral = [ <span class="hljs-string">\'M\'</span>, <span class="hljs-string">\'CM\'</span>, <span class="hljs-string">\'D\'</span>, <span class="hljs-string">\'CD\'</span>, <span class="hljs-string">\'C\'</span>, <span class="hljs-string">\'XC\'</span>, <span class="hljs-string">\'L\'</span>, <span class="hljs-string">\'XL\'</span>, <span class="hljs-string">\'X\'</span>, <span class="hljs-string">\'IX\'</span>, <span class="hljs-string">\'V\'</span>, <span class="hljs-string">\'IV\'</span>, <span class="hljs-string">\'I\'</span> ];\n\n  <span class="hljs-comment">//empty string variable for the final roman number</span>\n  \n  <span class="hljs-keyword">var</span> romanized = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Loop through the indices of the decimalValue array.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> index = <span class="hljs-number">0</span>; index &lt; decimalValue.length; index++) {\n    <span class="hljs-comment">// Continue to loop while the value at the current index will fit into numCopy</span>\n    <span class="hljs-keyword">while</span> (decimalValue[index] &lt;= num) {\n      <span class="hljs-comment">// Add the Roman numeral &amp; decrease numCopy by the decimal equivalent.</span>\n      romanized += romanNumeral[index];\n      num -= decimalValue[index];\n    }\n  }\n\n  <span class="hljs-keyword">return</span> romanized;\n};\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @SaintPeter @benschac for your help with Algorithm: Roman Numeral Converter</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Search and Replace",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that takes a sentence, then search for a word in it and replaces it for a new one while preserving the uppercase if there is one.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Find the index where <code>before</code> is in the string.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Check first letter case.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Strings are immutable, you will need to save the edits on another variable, even if you must reuse the same one just to make it look like the changes where done using just that one variable.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution #1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myReplace</span>(<span class="hljs-params">str, before, after</span>) </span>{\n  <span class="hljs-comment">// Find index where before is on string</span>\n  <span class="hljs-keyword">var</span> index = str.indexOf(before);\n  <span class="hljs-comment">// Check to see if the first letter is uppercase or not</span>\n  <span class="hljs-keyword">if</span> (str[index] === str[index].toUpperCase()) {\n    <span class="hljs-comment">// Change the after word to be capitalized before we use it.</span>\n    after = after.charAt(<span class="hljs-number">0</span>).toUpperCase() + after.slice(<span class="hljs-number">1</span>);\n  }\n  <span class="hljs-comment">// Now replace the original str with the edited one.</span>\n  str = str.replace(before, after);\n\n  <span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<h2>Code Solution #2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myReplace</span>(<span class="hljs-params">str, before, after</span>) </span>{\n<span class="hljs-comment">//Create a regular expression object</span>\n  <span class="hljs-keyword">var</span> re = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(before,<span class="hljs-string">"gi"</span>);\n<span class="hljs-comment">//Check whether the first letter is uppercase or not</span>\n  <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(before[<span class="hljs-number">0</span>])){\n  <span class="hljs-comment">//Change the word to be capitalized</span>\n    after = after.charAt(<span class="hljs-number">0</span>).toUpperCase()+after.slice(<span class="hljs-number">1</span>);\n     }\n     <span class="hljs-comment">//Replace the original word with new one</span>\n  <span class="hljs-keyword">var</span>  newStr =  str.replace(re,after);\n\n <span class="hljs-keyword">return</span> newStr;\n\n}\n</code></pre>\n<h2>Code Solution #3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myReplace</span>(<span class="hljs-params">str, before, after</span>) </span>{\n\n    <span class="hljs-comment">// create a function that will change the casing of any number of letter in parameter "target" </span>\n    <span class="hljs-comment">// matching parameter "source"</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyCasing</span>(<span class="hljs-params">source, target</span>) </span>{\n        <span class="hljs-comment">// split the source and target strings to array of letters</span>\n        <span class="hljs-keyword">var</span> targetArr = target.split(<span class="hljs-string">""</span>);\n        <span class="hljs-keyword">var</span> sourceArr = source.split(<span class="hljs-string">""</span>);\n        <span class="hljs-comment">// iterate through all the items of sourceArr and targetArr arrays till loop hits the end of shortes array</span>\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">Math</span>.min(targetArr.length, sourceArr.length); i++){\n            <span class="hljs-comment">// find out the casing of every letter from sourceArr using regular expression</span>\n            <span class="hljs-comment">// if sourceArr[i] is upper case then convert targetArr[i] to upper case </span>\n            <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/[A-Z]/</span>.test(sourceArr[i])) {\n                targetArr[i] = targetArr[i].toUpperCase();\n            }\n            <span class="hljs-comment">// if sourceArr[i] is not upper case then convert targetArr[i] to lower case</span>\n            <span class="hljs-keyword">else</span> targetArr[i] = targetArr[i].toLowerCase();\n        } \n        <span class="hljs-comment">// join modified targetArr to string and return</span>\n        <span class="hljs-keyword">return</span> (targetArr.join(<span class="hljs-string">""</span>));\n    }\n    \n    \n    <span class="hljs-comment">// replace "before" with "after" with "before"-casing </span>\n    <span class="hljs-keyword">return</span> str.replace(before, applyCasing(before, after));\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on program.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @coded9 @aganita for your help with Algorithm: Search and Replace</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Seek and Destroy",order:5,body:'<h1>Explanation:</h1>\n<p>This problem is a bit tricky because you have to familiarize yourself with Arguments, as you will have to work with two <strong>or more</strong> but on the script you only see two. Many people hardcode this program for three arguments. You will remove any number from the first argument that is the same as any other other arguments.</p>\n<h2>Hint: 1</h2>\n<p>You need to work with <code>arguments</code> as if it was a regular array. The best way is to convert it into one.</p>\n<h2>Hint: 2</h2>\n<p>You need to filter, this also means you need to create a callback function, one that checks if the element is on the <code>indexOf()</code></p>\n<h2>Hint: 3</h2>\n<p>To convert <code>arguments</code> into an array use this code <code>var args = Array.prototype.slice.call(arguments);</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">destroyer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n  args.splice(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>);\n  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">element</span>) </span>{\n    <span class="hljs-keyword">return</span> args.indexOf(element) === -<span class="hljs-number">1</span>;\n  });\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The first line will turn the <code>arguments</code> variable into a full array instead of the limited array it currently is.</li>\n<li>Next I remove the first argument since I don’t need, since I only want the other arguments passed besides the first which is the array we are going to compare against.</li>\n<li>Then use the <code>filter()</code> to filter out the elements that are on the array and keep the ones that are not.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 for your help with Algorithm: Seek and Destroy</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Slasher Flick",order:5,body:'<h1>Problem Explanation:</h1>\n<p>Return the remaining elements of an array after chopping off n elements from the head.</p>\n<p>For example: <code>slasher([1, 2, 3], 2);</code> must return [3]</p>\n<h2>Analysis:</h2>\n<p>We need only the remaining part of an array, so we can just remove what we don’t.</p>\n<h2>Understanding slicing:</h2>\n<p><code>.slice()</code> allows to get only what you want from an array.</p>\n<h2>Understanding the splice:</h2>\n<p>If you want the <strong>tail</strong> of a snake remove the head first. The <code>.splice()</code> method changes the content of an array by removing existing elements and/or adding new elements. This can be handy. Get an array, remove the first part and return the remaining.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">slasher</span>(<span class="hljs-params">arr, howMany</span>) </span>{\n  <span class="hljs-comment">// remove the head</span>\n  arr.splice(<span class="hljs-number">0</span>,howMany);\n  <span class="hljs-comment">//return the remaining or the tail  \\__/(**)-&lt;</span>\n  <span class="hljs-keyword">return</span> arr;\n}\nslasher([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-number">2</span>);\n</code></pre>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">slasher</span>(<span class="hljs-params">arr, howMany</span>) </span>{\n\n  <span class="hljs-comment">//Return string after the amount chopped off.</span>\n  <span class="hljs-keyword">return</span> arr.slice(howMany);\n\n}\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @clint74 @Rafase282 @M-Bowe for your help with Algorithm: Slasher Flick</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n<pre><code>           ,,,         ,,,\n          <span class="hljs-comment">;"   ^;     ;\'   ",</span>\n          <span class="hljs-comment">;    s$$$$$$$s     ;</span>\n          ,  ss$$$$$$$$$$s  ,\'\n          <span class="hljs-comment">;s$$$$$$$$$$$$$$$</span>\n          $$$$$$$$$$$$$$$$$$\n         $$$$P<span class="hljs-string">""</span>Y$$$Y<span class="hljs-string">""</span>W$$$$$      -{ Happy Camping! }\n         $$$$  p<span class="hljs-string">"$$$"</span>q  $$$$$\n         $$$$  .$$$$$.  $$$$\n          $$DcaU$$$$$$$$$$\n            <span class="hljs-string">"Y$$$"</span>*<span class="hljs-string">"$$$Y"</span>\n                <span class="hljs-string">"$b.$$"</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Algorithm Smallest Common Multiple",order:5,body:'<h1>Explanation:</h1>\n<p>This particular problem can be confusing because most people look for the smallest common multiple of the two number but forget the keyword <strong>range.</strong> This means that if you get <code>[1,5]</code> then you have to check for the smallest common multiple for all these numbers [1,2,3,4,5] that is evenly divisible by all of them.</p>\n<h2>Hint: 1</h2>\n<p>Create an array with all the numbers that are missing from the original array to make it easier to check when having to check for even division.</p>\n<h2>Hint: 2</h2>\n<p>You can use modulo <code>%</code> to check if the reminder is 0, which means it is evenly divisible.</p>\n<h2>Hint: 3</h2>\n<p>If you sort the array from greater to lowest then you can check for the first two numbers as it is more likely to the the smallest common multiple than the lower numbers.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Sort array from greater to lowest</span>\n  <span class="hljs-comment">// This line of code was from Adam Doyle (http://github.com/Adoyle2014)</span>\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">return</span> b - a;\n  });\n\n  <span class="hljs-comment">// Create new array and add all values from greater to smaller from the original array.</span>\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = arr[<span class="hljs-number">0</span>]; i &gt;= arr[<span class="hljs-number">1</span>]; i--) {\n    newArr.push(i);\n  }\n\n  <span class="hljs-comment">// Variables needed declared outside the loops.</span>\n  <span class="hljs-keyword">var</span> quot = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> loop = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">var</span> n;\n\n  <span class="hljs-comment">// run code while n is not the same as the array length.</span>\n  <span class="hljs-keyword">do</span> {\n    quot = newArr[<span class="hljs-number">0</span>] * loop * newArr[<span class="hljs-number">1</span>];\n    <span class="hljs-keyword">for</span> (n = <span class="hljs-number">2</span>; n &lt; newArr.length; n++) {\n      <span class="hljs-keyword">if</span> (quot % newArr[n] !== <span class="hljs-number">0</span>) {\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n\n    loop++;\n  } <span class="hljs-keyword">while</span> (n !== newArr.length);\n\n  <span class="hljs-keyword">return</span> quot;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Because the possibility of the smallest common denominator being among the two biggest numbers, it makes sense to check those first, so sort the array.</li>\n<li>Create a new array to sore all the numbers.</li>\n<li>Use a descending for loop to add the numbers from the biggest to the smallest in the new array.</li>\n<li>Declare the variables for the quotient, the number of loops and the variable that we will use in a for loop on another scope, this will allow us access outside the loop.</li>\n<li>Use a do while loop to check what we need while <strong>n</strong> is not the same length as the new array.</li>\n<li>In the <strong>do</strong> part, we are going to multiply the very first number, times the number of loops, times the second number.</li>\n<li>The loop part will allows us to increase the number beyond the greatest number we have without having to change the algorithm.</li>\n<li>We enter a for loop that will go from n being 2 and going up by one while it is smaller than the array with all the numbers.</li>\n<li>If the quotient is not even then stop the loop. If it is even then it check for the next elements in the array until it is not even or we find our answer.</li>\n<li>Outside the loop, increase the value of loop.</li>\n<li>At the end of the loop return the quotient.</li>\n</ul>\n<p>If the array only has two elements then the for loop never gets used and the return value is the product of said numbers. Otherwise, from the third element and until n is the same and the array length check if the remainder of the quotient and the third value of the array is not 0, if it is not 0 then stop loop increases and then we start over. If the remainder was 0 then keep checking until the end of the array.</p>\n<h1>Alternate solution:</h1>\n<p>Note: The solution above requires over 2,000 loops to calculate the test case smallestCommons([1,13]), and over 4 million loops to calculate smallestCommons([1,25]). The alternate code below evaluates smallestCommons([1,13]) in around 20 loops and smallestCommons([1,25]) in 40, by using a more efficient algorithm.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">for</span>(i = <span class="hljs-built_in">Math</span>.max(...arr); i &gt;= <span class="hljs-built_in">Math</span>.min(...arr); i--) arr.push(i);\n  \n  <span class="hljs-keyword">return</span> arr.slice(<span class="hljs-number">2</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>)</span>{\n    <span class="hljs-keyword">var</span> a = x, b = y, t = <span class="hljs-number">0</span>;    \n    <span class="hljs-keyword">while</span>(a % b){a = a % b; t = a; a = b; b = t;}\n    <span class="hljs-keyword">return</span> x / b * y;\n  });\n}\n\n</code></pre>\n<p>If you have trouble understanding the .reduce() method, you can compare it to this code, which essentially does the same thing:</p>\n<pre><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span><span class="hljs-params">(arr)</span> {</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-built_in">i</span> = Math.max(...arr); <span class="hljs-built_in">i</span> &gt;= Math.min(...arr); <span class="hljs-built_in">i</span>--) arr.push(<span class="hljs-built_in">i</span>);\n  \n  var <span class="hljs-built_in">lcm</span> = arr<span class="hljs-matrix">[<span class="hljs-number">2</span>]</span>, a = <span class="hljs-number">0</span>, b = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>;\n  \n  <span class="hljs-keyword">for</span> (<span class="hljs-built_in">i</span> = <span class="hljs-number">3</span>; <span class="hljs-built_in">i</span> &lt; arr.<span class="hljs-built_in">length</span>; <span class="hljs-built_in">i</span>++)<span class="hljs-cell">{\n    a = lcm, b = arr[i];  \n    while(a % b){a = a % b; t = a; a = b; b = t;}</span>\n    <span class="hljs-built_in">lcm</span> = <span class="hljs-built_in">lcm</span> / b * arr<span class="hljs-matrix">[i]</span>;\n  }\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">lcm</span>;\n}\n</code></pre>\n<p>This code is based on the <a href="https://en.wikipedia.org/wiki/Euclidean_algorithm">Euclidean algorithm</a> for finding smallest common multiples.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @Adoyle2014 for your help with Algorithm: Smallest Common Multiple</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Sorted Union",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>The program has to return a new array of unique values from two original arrays in the order they show up. So there is not sorting required, and no duplicates.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Since you have no idea how many parameters were passed, it would be best to loop through the <code>arguments</code> before looping through the arrays.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>I used loops, you can use something else like map, reduce or others if you want.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will have to check if the current value is already on the array to be returned for every value.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params">arr1, arr2, arr3</span>) </span>{\n  <span class="hljs-comment">// Creates an empty array to store our final result.</span>\n  <span class="hljs-keyword">var</span> finalArray = [];\n\n  <span class="hljs-comment">// Loop through the arguments object to truly made the program work with two or more arrays</span>\n  <span class="hljs-comment">// instead of 3.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">arguments</span>.length; i++) {\n    <span class="hljs-keyword">var</span> arrayArguments = <span class="hljs-built_in">arguments</span>[i];\n\n    <span class="hljs-comment">// Loops through the array at hand</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; arrayArguments.length; j++) {\n      <span class="hljs-keyword">var</span> indexValue = arrayArguments[j];\n\n      <span class="hljs-comment">// Checks if the value is already on the final array.</span>\n      <span class="hljs-keyword">if</span> (finalArray.indexOf(indexValue) &lt; <span class="hljs-number">0</span>) {\n        finalArray.push(indexValue);\n      }\n    }\n  }\n\n  <span class="hljs-keyword">return</span> finalArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Check comments in code.</li>\n</ul>\n<h4>Second Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> concatArr = [];\n  <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">while</span> (<span class="hljs-built_in">arguments</span>[i]){\n    concatArr = concatArr.concat(<span class="hljs-built_in">arguments</span>[i]); i++;\n  }\n  uniqueArray = concatArr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item, pos</span>) </span>{\n    <span class="hljs-keyword">return</span> concatArr.indexOf(item) == pos;\n  }); \n  <span class="hljs-keyword">return</span> uniqueArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Number of arguments can change dynamically so we don’t need to bother providing our func with args at all</li>\n<li>we use a while loop to concatanate all the arguments into one Array called <code>concatArr</code></li>\n<li>we use <code>filter</code> to remove the duplicate elements by checking the index of each element and removing same elements with different positions</li>\n<li>ordering will be preserved as we didn’t mess with it</li>\n</ul>\n<h4>Third Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params">arr1, arr2, arr3</span>) </span>{\n <span class="hljs-keyword">var</span> newArr;\n <span class="hljs-comment">//Convert the arguments object into an array</span>\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n  <span class="hljs-comment">//Use reduce function to flatten the array</span>\n  newArr = args.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arrA,arrB</span>)</span>{\n  <span class="hljs-comment">//Apply filter to remove the duplicate elements in the array</span>\n    <span class="hljs-keyword">return</span> arrA.concat(arrB.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)</span>{\n      <span class="hljs-keyword">return</span> arrA.indexOf(i) === -<span class="hljs-number">1</span>;\n    }));\n  });\n\n   <span class="hljs-keyword">return</span> newArr;                    \n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang @coded9 for your help with Algorithm: Sorted Union</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Spinal Tap Case",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Convert the given string to an all lowercase sentence joined by dashes.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Create a regex to for all white spaces and underscores.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will also have to make everything lowercase.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The tricky part is getting the regex part to work, once you do that then just turn the uppercase to lowercase and replace spaces with underscores using <code>replace()</code></li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">spinalCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create a variable for the white space and underscores.</span>\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/\\s+|_+/g</span>;\n\n  <span class="hljs-comment">// Replace low-upper case to low-space-uppercase</span>\n  str = str.replace(<span class="hljs-regexp">/([a-z])([A-Z])/g</span>, <span class="hljs-string">\'$1 $2\'</span>);\n\n  <span class="hljs-comment">// Replace space and underscore with -</span>\n  <span class="hljs-keyword">return</span> str.replace(regex, <span class="hljs-string">\'-\'</span>).toLowerCase();\n}\n</code></pre>\n<h4>Second solution</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">spinalCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Replace low-upper case to low-space-uppercase</span>\n  str = str.replace(<span class="hljs-regexp">/([a-z])([A-Z])/g</span>, <span class="hljs-string">\'$1 $2\'</span>);\n  <span class="hljs-comment">// Split on whitespace and underscores and join with dash</span>\n  <span class="hljs-keyword">return</span> str.toLowerCase().split(<span class="hljs-regexp">/(?:_| )+/</span>) .join(<span class="hljs-string">\'-\'</span>);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<h4>First and Second solutions</h4>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @anuragaryan for your help with Algorithm: Spinal Tap Case</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Steamroller",order:5,body:'<h1>Explanation:</h1>\n<p>This problem seems simple but you need to make sure to flatten any array, regardless of the level which is what adds a bit of difficulty to the problem.</p>\n<h2>Hint: 1</h2>\n<p>You need to check if an element is an array or not.</p>\n<h2>Hint: 2</h2>\n<p>If you are dealing with an array, then you need flatten it by getting the value inside of the array. This means if you have [[4]] then instead of returning [4] you need to return 4. If you get [[[4]]] then the same, you want the 4. You can access it with arr[index1][index2] to go a level deeper.</p>\n<h2>Hint: 3</h2>\n<p>You will definitely need recursion or another way to go beyond two level arrays to make the code flexible and not hard-coded to the answers needed. Have fun!</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">steamroller</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> flattenedArray = [];\n\n  <span class="hljs-comment">// Create function that adds an element if it is not an array.</span>\n  <span class="hljs-comment">// If it is an array, then loops through it and uses recursion on that array.</span>\n  <span class="hljs-keyword">var</span> flatten = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arg</span>) </span>{\n    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">Array</span>.isArray(arg)) {\n      flattenedArray.push(arg);\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> arg) {\n        flatten(arg[a]);\n      }\n    }\n  };\n\n  <span class="hljs-comment">// Call the function for each element in the array</span>\n  arr.forEach(flatten);\n  <span class="hljs-keyword">return</span> flattenedArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a new variable to keep flattened arrays.</li>\n<li>Create a function that will add non array elements to the new variable, and for the ones that are array it loops through them to get the element.</li>\n<li>It does that by using recursion, if the element is an array then call the function again with a layer of array deeper to check if it is an array or not. if it is not then push that non-array element to the variable that gets returned. Otherwise, keep going deeper.</li>\n<li>Invoke the function, the first time you will always pass it an array, so it always fall in to the isArray branch</li>\n<li>Return the flattened array.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">steamroller</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">flat, toFlatten</span>) </span>{\n    <span class="hljs-keyword">return</span> flat.concat(<span class="hljs-built_in">Array</span>.isArray(toFlatten) ? steamroller(toFlatten) : toFlatten);\n  }, []);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Use reduce to concatenate each element into the last element</li>\n<li>If the new element is an Array itself call the function recursively to flatten it before merging it with the rest of result</li>\n<li>Pass an empty array to reduce as initial value to make sure even the first element will be processed</li>\n<li>Credit goes to <a href="http://stackoverflow.com/a/15030117/1075499">http://stackoverflow.com/a/15030117/1075499</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang for your help with Algorithm: Steamroller</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Style Guide",order:5,body:'<p><em>work in progress</em></p>\n<h1>Algorithm Style Guide</h1>\n<p>Writing Algorithm challenges is a great way to exercise your own problem solving and testing abilities. It is a simple three step process.</p>\n<ol>\n<li>Fill out the <a href="http://www.freecodecamp.com/algorithm-challenge-generator">generator</a> form and test your challenge.</li>\n<li>Once you have confirmed a working Algorithm challenge in the generator, copy and paste the fields into the <a href="http://www.freecodecamp.com/algorithm-json-generator">JSON generator.</a></li>\n<li>Copy the JSON, fork the freecodecamp repository, and submit a pull request with your addition to the challenge .json file.</li>\n</ol>\n<h2>Name</h2>\n<p>Name your challenge</p>\n<h2>Difficulty</h2>\n<p>Attempt to rate difficulty compared against existing Algorithm challenges.</p>\n<p><em>TODO: add basic quantifiers for each difficulty level</em></p>\n<h2>Description</h2>\n<p>Separate paragraphs with a line break. Only the first paragraph is visible prior to a user clicking the “More information” button.</p>\n<p>All necessary information must be included in the first paragraph. Write this first paragraph as succinct as possible. Subsequent paragraphs should offer hints or details if needed.</p>\n<p>If your subject matter warrants deeper understanding, you may link to Wikipedia.</p>\n<h2>Challenge Seed</h2>\n<p>This is important.</p>\n<h2><s>Challenge Entry Point</s> (deprecated)</h2>\n<p><em>Leave this field blank. It will soon be removed from the generator.</em></p>\n<h2>Tests</h2>\n<p>These tests are what bring your challenge to life. Without them, we cannot confirm the accuracy of a user’s submitted answer. Choose your tests wisely.</p>\n<p>Algorithm tests are written using the <a href="http://chaijs.com/">Chai.js</a> assertion library. Please use the <code>should</code> and <code>expect</code> syntax for end user readability. As an example of what not do to, many of the original Algorithm challenges are written with <code>assert</code> syntax and many of the test cases are difficult to read.</p>\n<p>If your Algorithm question has a lot of edge cases, you will need to write many tests for full coverage. If you find yourself writing more tests than you desire, you may consider simplifying the requirements of your Algorithm challenge. For difficulty level 1 through 3, you will generally only need 2 to 4 tests.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @brandenbyers @Rafase282 for your help with the Algorithm Style Guide</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Sum All Numbers in a Range",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You need to create a program that will take an array of two numbers who are not necessarily in order, and then add not just those numbers but any numbers in between. For example, [3,1] will be the same as <code>1+2+3</code> and not just <code>3+1</code></li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Use <code>Math.max()</code> to find the maximum value of two numbers.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Use <code>Math.min()</code> to find the minimum value of two numbers.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Remember to that you must add all the numbers in between so this would require a way to get those numbers.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAll</span>(<span class="hljs-params">arr</span>) </span>{\n    <span class="hljs-keyword">var</span> max = <span class="hljs-built_in">Math</span>.max(arr[<span class="hljs-number">0</span>], arr[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">var</span> min = <span class="hljs-built_in">Math</span>.min(arr[<span class="hljs-number">0</span>], arr[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=min; i &lt;= max; i++){\n        temp += i;\n    }\n  <span class="hljs-keyword">return</span>(temp);\n}\n\nsumAll([<span class="hljs-number">1</span>, <span class="hljs-number">4</span>]);\n</code></pre>\n<h2>Code Explanation:</h2>\n<ul>\n<li>First create a variable to store the max number between two.</li>\n<li>The same as before for the Smallest number.</li>\n<li>We create a temporary variable to add the numbers.</li>\n</ul>\n<p>Since the numbers might not be always in order, using <code>max()</code> and <code>min()</code> will help organize.</p>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAll</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Buckle up everything to one!</span>\n\n  <span class="hljs-comment">// Using ES6 arrow function (one-liner)</span>\n  <span class="hljs-keyword">var</span> sortedArr = arr.sort((a,b) =&gt; a-b);\n  <span class="hljs-keyword">var</span> firstNum = arr[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">var</span> lastNum = arr[<span class="hljs-number">1</span>];\n  <span class="hljs-comment">// Using Arithmetic Progression summing formula</span>\n\n  <span class="hljs-keyword">var</span> sum = (lastNum - firstNum + <span class="hljs-number">1</span>) * (firstNum + lastNum) / <span class="hljs-number">2</span>;\n  <span class="hljs-keyword">return</span> sum;\n}\n</code></pre>\n<h2>Code Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAll</span>(<span class="hljs-params">arr</span>) </span>{\n    <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-built_in">Math</span>.min(...arr); i &lt;= <span class="hljs-built_in">Math</span>.max(...arr); i++){\n        sum += i;\n    }\n  <span class="hljs-keyword">return</span> sum;\n}\n\nsumAll([<span class="hljs-number">1</span>, <span class="hljs-number">4</span>]);\n</code></pre>\n<h2>Code Explanation:</h2>\n<ul>\n<li>Creating a variable sum to store the sum of the elements.</li>\n<li>Starting iteration of the loop from min element of given array and stopping when it reaches the max element.</li>\n<li>Using a spread operator (…arr) allows passing the actual array to the function instead of one-by-one elements.</li>\n</ul>\n<h2>References &amp; Details:</h2>\n<ul>\n<li><a href="https://en.wikipedia.org/wiki/Arithmetic_progression#Sum">Arithmetic Progression summing formula</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">ES6 arrow function</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">Spread Operator</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max">Using Spread Operator in Math.max()</a></li>\n</ul>\n<p>The line <code>var sortedArr = arr.sort((a,b) =&gt; a-b);</code> is probably what will have you more confused. This would be the same as creating a function that returns <code>a-b</code> for the <code>sort()</code> which is the standard way to sort numbers from smallest to largest. Instead using arrow or fat arrow function, we are able to do all that in one single line thus allowing us to write less.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @abhisekp for your help with Algorithm: Sum All Numbers in a Range</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Sum All Odd Fibonacci Numbers",order:5,body:'<h1>Explanation:</h1>\n<p>You will need to gather all the <strong>Fibonacci</strong> numbers and then check for the odd ones. Once you get the odd ones then you will add them all. The last number should be the number given as a parameter if it actually happens to be an off Fibonacci number.</p>\n<h2>Hint: 1</h2>\n<p>To get the next number of the series, you need to add the current one to the previous and that will give you the next one.</p>\n<h2>Hint: 2</h2>\n<p>To check if a number is even all you have to check is if that number % 2 == 0.</p>\n<h2>Hint: 3</h2>\n<p>As you get the next odd one, don’t forget to add it to a global variable that can be returned at the end. <code>result += currNumber;</code> Will do the trick.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution #1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumFibs</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">var</span> prevNumber = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">var</span> currNumber = <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">var</span> result = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">while</span> (currNumber &lt;= num) {\n        <span class="hljs-keyword">if</span> (currNumber % <span class="hljs-number">2</span> !== <span class="hljs-number">0</span>) {\n            result += currNumber;\n        }\n\n        currNumber += prevNumber;\n        prevNumber = currNumber - prevNumber;\n    }\n\n    <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable to keep record of the current and previous numbers along with the result that will be returned.</li>\n<li>Use a while loop to make sure we do not go over the number given as parameter.</li>\n<li>We use the modulo operand to check if the current number is odd or even. If even add it to the result.</li>\n<li>Complete the Fibonacci circle by rotating getting the next number and swapping values after.</li>\n<li>Return the result.</li>\n</ul>\n<h2>Code Solution #2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumFibs</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-comment">// create an array of fib numbers till num</span>\n  <span class="hljs-keyword">var</span> arrFib = [<span class="hljs-number">1</span>];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;=num;) {\n      arrFib.push(i);\n      i = arrFib[arrFib.length - <span class="hljs-number">1</span>] + arrFib[arrFib.length - <span class="hljs-number">2</span>];\n  }\n  \n  <span class="hljs-comment">// return the sum of odd numbers from the array</span>\n  <span class="hljs-keyword">var</span> res = arrFib.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">prev, curr</span>) </span>{ \n      <span class="hljs-keyword">if</span> (curr%<span class="hljs-number">2</span> !== <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> prev + curr;\n      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> prev;\n    });\n  \n  <span class="hljs-keyword">return</span> res;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>See comments</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @d3ddd for your help with Algorithm: Sum All Odd Fibonacci Numbers</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Sum All Primes",order:5,body:'<h1>Explanation:</h1>\n<p>The explanation for this problem is very simple. You will generate a list of prime numbers up to the number you are given as a parameter. Then you need to add them all up and return that value. The tricky part is on generating the list of prime numbers. I suggest you find a code or a good math algorithm that you can turn into code.</p>\n<h2>Hint: 1</h2>\n<p>Generate a list of all the numbers up to and including the one you got as a parameter. This will be needed to determine which numbers are prime or not.</p>\n<h2>Hint: 2</h2>\n<p>Check this <a href="http://stackoverflow.com/questions/11966520/how-to-find-prime-numbers-between-0-100">link</a> if you prefer to find a solution for finding primes, or try learning and implementing your own <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes">Sieve of Eratosthenes</a></p>\n<h2>Hint: 3</h2>\n<p>This problem is hard if you have to create your own code to check for primes, so don’t feel bad if you had to use someone’s code for that bit. Either way, you are most likely using array, so once you generate an array of primes, then just add them all up and return the number you get.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumPrimes</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">var</span> res = <span class="hljs-number">0</span>;\n\n  <span class="hljs-comment">// FUnction to get the primes up to max in an array</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPrimes</span>(<span class="hljs-params">max</span>) </span>{\n    <span class="hljs-keyword">var</span> sieve = [];\n    <span class="hljs-keyword">var</span> i;\n    <span class="hljs-keyword">var</span> j;\n    <span class="hljs-keyword">var</span> primes = [];\n    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= max; ++i) {\n      <span class="hljs-keyword">if</span> (!sieve[i]) {\n        <span class="hljs-comment">// i has not been marked -- it is prime</span>\n        primes.push(i);\n        <span class="hljs-keyword">for</span> (j = i &lt;&lt; <span class="hljs-number">1</span>; j &lt;= max; j += i) {\n          sieve[j] = <span class="hljs-literal">true</span>;\n        }\n      }\n    }\n\n    <span class="hljs-keyword">return</span> primes;\n  }\n\n  <span class="hljs-comment">// Add the primes</span>\n  <span class="hljs-keyword">var</span> primes = getPrimes(num);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>; p &lt; primes.length; p++) {\n    res += primes[p];\n  }\n\n  <span class="hljs-keyword">return</span> res;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a function that generates the numbers from 1 to <strong>num</strong> and check if they are prime along the way.</li>\n<li>Declare the variables that will be needed.</li>\n<li>Start with 2, if it has not been marked and added to the sieve array then it is a prime and we add it to the prime array.</li>\n<li>Add the others to the sieve array.</li>\n<li>Return the primes</li>\n<li>Loop through the returned array and add all the elements to then return the final value.</li>\n</ul>\n<h2>Recursive Solution:</h2>\n<pre><code class="language-JS"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumPrimes</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-comment">// function to check if the number presented is prime</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPrime</span>(<span class="hljs-params">number</span>)</span>{\n      <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= number; i++){\n          <span class="hljs-keyword">if</span>(number % i === <span class="hljs-number">0</span> &amp;&amp; number!= i){\n          <span class="hljs-comment">// return true if it is divisable by any number that is not itself. </span>\n             <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n          }\n       }\n       <span class="hljs-comment">// if it passes the for loops conditions it is a prime</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n  <span class="hljs-comment">// 1 is not a prime, so return nothing, also stops the recusrive calls.</span>\n  <span class="hljs-keyword">if</span> (num === <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n  <span class="hljs-comment">// Check if your number is not prime</span>\n  <span class="hljs-keyword">if</span>(isPrime(num) === <span class="hljs-literal">false</span>){\n  <span class="hljs-comment">// for non primes check the next number down from your maximum number, do not add anything to your answer</span>\n    <span class="hljs-keyword">return</span> sumPrimes(num - <span class="hljs-number">1</span>);\n  }\n  \n  <span class="hljs-comment">// Check if your number is prime</span>\n  <span class="hljs-keyword">if</span>(isPrime(num) === <span class="hljs-literal">true</span>){\n  <span class="hljs-comment">// for primes add that number to the next number in the sequence through a recursive call to our sumPrimes function.</span>\n    <span class="hljs-keyword">return</span> num + sumPrimes(num - <span class="hljs-number">1</span>);\n  }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @shadowfool for your help with Algorithm: Sum All Primes</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Symmetric Difference",order:5,body:'<h1>Problem Explanation:</h1>\n<p>Symmetric Difference is the difference between <strong>two</strong> sets.</p>\n<p>So in the Symmetric Difference Algorithm you would work through the arrays of numbers something like this -</p>\n<p><code>sym(A, B, C)</code> Translates to <code>sym(sym(A,B),C)</code></p>\n<p>Or in plain English - First find the Symmetric Difference of Set A and Set B. Then find the Symmetric Difference of this new set and Set C.</p>\n<p>So -</p>\n<p><code>sym([1, 2, 5], [2, 3, 5], [3, 4, 5])</code></p>\n<p>would equal</p>\n<p><code>[1,4,5]</code></p>\n<p>Here’s a nice video tutorial (with an awful fake British accent!) -</p>\n<p><a href="https://www.youtube.com/watch?v=PxffSUQRkG4">YouTube - Symmetric Difference</a></p>\n<h2>Hint: 1</h2>\n<p>The arguments object is not an Array. It is similar to an Array, but does not have any Array properties except length. For example, it does not have the pop method. However it can be converted to a real Array:</p>\n<p><code>var args = Array.prototype.slice.call(arguments);</code></p>\n<h2>Hint: 2</h2>\n<p>Write a function that returns the symmetric difference of array1 and array2.</p>\n<p><code>yourFunction([1, 2, 3], [2, 4, 6])</code> must return <code>[1, 3, 4, 6]</code></p>\n<h2>Hint: 3</h2>\n<p>Use <code>Array.prototype.reduce</code> along with yourFunction to repeat the process on multiple arguments</p>\n<p>Something a bit strange about the definition of symmetric difference is that if one identical item occurs in three different sets, it is a member of the symmetric difference.  An example is easier to explain:</p>\n<pre><code>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>]\nb = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>]\nc = [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]\n\nsym(a, b) = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]\nsym([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>], c) = [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]\n</code></pre>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sym</span>(<span class="hljs-params"></span>) </span>{\n\n  <span class="hljs-comment">// Convert the argument object into a proper array</span>\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n\n  <span class="hljs-comment">// Return the symmetric difference of 2 arrays</span>\n  <span class="hljs-keyword">var</span> getDiff = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n\n    <span class="hljs-comment">// Returns items in arr1 that don\'t exist in arr2</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filterFunction</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n      <span class="hljs-keyword">return</span> arr1.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n        <span class="hljs-keyword">return</span> arr2.indexOf(item) === -<span class="hljs-number">1</span>;\n      });\n    }\n\n    <span class="hljs-comment">// Run filter function on each array against the other</span>\n    <span class="hljs-keyword">return</span> filterFunction(arr1, arr2)\n      .concat(filterFunction(arr2, arr1));\n  };\n\n  <span class="hljs-comment">// Reduce all arguments getting the difference of them</span>\n  <span class="hljs-keyword">return</span> args.reduce(getDiff, []);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Related Links</h1>\n<ul>\n<li><a href="https://en.wikipedia.org/wiki/Symmetric_difference">Symmetric Difference</a></li>\n<li><a href="http://devdocs.io/javascript/global_objects/array/reduce">Array.reduce()</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph @jjmax75 for your help with Algorithm: Symmetric Difference</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Algorithm Title Case a Sentence",order:5,body:'<h1>Explanation:</h1>\n<p>We have to return a sentence with camel case. This means that the first letter will always be in uppercase and the rest lowercase.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>You should start by splitting the string into an array of words.</li>\n<li>Split the sentence.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You should make the word lowercase before making the first letter uppercase.</li>\n<li>Use replace method on each word to capitalize the first letter of each word.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to create a new string with pieces of the previous one and at the end merge everything into a single string again.</li>\n<li>In replace method , give first argument as the position of the first letter using charAt. For second argument write a function to return the capitalized letter as the replacement.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-built_in">String</span>.prototype.replaceAt = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index, character</span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.substr(<span class="hljs-number">0</span>, index) + character + <span class="hljs-keyword">this</span>.substr(index+character.length);\n};\n\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-keyword">var</span> newTitle = str.split(<span class="hljs-string">\' \'</span>);\n    <span class="hljs-keyword">var</span> updatedTitle = [];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> st <span class="hljs-keyword">in</span> newTitle) {\n        updatedTitle[st] = newTitle[st].toLowerCase().replaceAt(<span class="hljs-number">0</span>, newTitle[st].charAt(<span class="hljs-number">0</span>).toUpperCase());\n    }\n    <span class="hljs-keyword">return</span> updatedTitle.join(<span class="hljs-string">\' \'</span>);\n}\n</code></pre>\n<p>Second Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> newstr=str.toLowerCase().split(<span class="hljs-string">" "</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;newstr.length;i++){\n  <span class="hljs-keyword">var</span> f=newstr[i].charAt(<span class="hljs-number">0</span>);\n newstr[i]=newstr[i].replace(newstr[i].charAt(<span class="hljs-number">0</span>),<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">replace</span>(<span class="hljs-params">f</span>)</span>{\n   <span class="hljs-keyword">return</span> f.toUpperCase();\n });\n\n  }\n  <span class="hljs-built_in">console</span>.log(newstr);\n  <span class="hljs-keyword">return</span> newstr.join(<span class="hljs-string">" "</span>);\n}\n\ntitleCase(<span class="hljs-string">"hello world"</span>);\n</code></pre>\n<p>Third Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  str = str.toLowerCase().split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> str) {\n    str[i] = str[i].replace(str[i].charAt(<span class="hljs-number">0</span>), str[i].charAt(<span class="hljs-number">0</span>).toUpperCase());\n  };\n  <span class="hljs-keyword">return</span> str.join(<span class="hljs-string">\' \'</span>);\n}\n\ntitleCase(<span class="hljs-string">"I\'m a little tea pot"</span>, <span class="hljs-string">""</span>);\n</code></pre>\n<p>Minimal Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/\\w\\S*/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>)</span>{\n    <span class="hljs-keyword">return</span> word.charAt(<span class="hljs-number">0</span>).toUpperCase()+word.substr(<span class="hljs-number">1</span>).toLowerCase();}); \n}\n\ntitleCase(<span class="hljs-string">"I\'m a little tea pot"</span>, <span class="hljs-string">""</span>);\n</code></pre>\n<p>Minimaler Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">s</span>) </span>{<span class="hljs-keyword">return</span> s.toLowerCase().replace(<span class="hljs-regexp">/^[a-z]|\\s[a-z]/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m</span>)</span>{<span class="hljs-keyword">return</span> m.toUpperCase()})}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>We are modifying the <code>replaceAt</code> function using prototype to facilitate the use of the program.</p>\n<p>Split the string by whitespaces, and create a variable to track the updated title. Then we use a loop to turn turn the first character of the word to uppercase and the rest to lowercase. by creating concatenated string composed of the whole word in lowercase with the first character replaced by it’s uppercase.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @PoojaKumar @Hallaathrad for your help with Algorithm: Title Case a Sentence</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Truncate a String",order:5,body:'<h1>Explanation:</h1>\n<p>We need to reduce the length of the string or <strong>truncate</strong> it if it is longer than the given maximum lengths specified and add <code>...</code> to the end. If it is not that long then we keep it as is.</p>\n<h2>Hint: 1</h2>\n<p>Strings are immutable in JavaScript so we will need a new variable to store the truncated string.</p>\n<h2>Hint: 2</h2>\n<p>You will need to use slice and specify where to start and where to stop.</p>\n<h2>Hint: 3</h2>\n<p>Do not forget that when we truncate the word, we also must count the length added by <code>...</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">truncate</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">if</span> (str.length &lt;= num)\n    <span class="hljs-keyword">return</span> str;\n  \n  <span class="hljs-keyword">if</span> (num &lt;= <span class="hljs-number">3</span>)\n    <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num) + <span class="hljs-string">"..."</span>;\n  \n  <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num-<span class="hljs-number">3</span>) + <span class="hljs-string">"..."</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>First we need an if-statement to test if the length of the full string passed in as the first argument already fits within the size limit passed in as the second argument. If so we can just return the string that was passed in.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (str.length &lt;= num)\n  <span class="hljs-keyword">return</span> str;\n</code></pre>\n<p>Then we need to check if the num fits into our special case, where the desired length is less than or equal to three. In this case we will return the string trimmed to our target length, followed by <code>&quot;...&quot;</code>. We don’t need to worry about the <code>&quot;...&quot;</code> being counted against the length of our output string in this case.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &lt;= <span class="hljs-number">3</span>)\n  <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num) + <span class="hljs-string">"..."</span>;\n</code></pre>\n<p>Finally, we write the return for what happens when neither of the previous if-statements have been true. This call to <code>substr()</code> gives us a string that is 3 less than the target length specified by <code>num</code>, which is done so that we have room to add on the <code>&quot;...&quot;</code> and fit within that target.</p>\n<pre><code class="language-js"><span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num-<span class="hljs-number">3</span>) + <span class="hljs-string">"..."</span>;\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 @richyvk @ltegman for your help with Algorithm: Truncate a String</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Validate US Telephone Numbers",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>The task is not that hard to understand, implementing it is the hardest part. You have a to validate an US phone number. This means there is a certain amount of numbers required, while you don’t need to put the country code, you will still need the area code and use one of the few formats allowed.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>There is no way around it, you will need to brush up your regular expressions skills.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Try using a site like <a href="http://regexpal.com/">http://regexpal.com/</a> to test the regex live while you create it.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Start by trying to get it to validate each format from the example, each one should take a new line, once you get to select them all, then add examples that should not be selected and make sure they are not selected.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">telephoneCheck</span>(<span class="hljs-params">str</span>) </span>{\n    \n   <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/^(1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/</span>;\n  \n   <span class="hljs-keyword">return</span> regex.test(str);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li><code>^</code> denotes the beginning of the string <code>(1\\s?)?</code> checks allows for a “1” or a &quot;1 &quot; at the beginning.</li>\n<li><code>\\d{n}</code> checks for exactly n number of digits so  <code>(\\(\\d{3}\\)|\\d{3})</code> checks for three digits that are allowed to be between parenthesis.</li>\n<li><code>[\\s\\-]?</code> checks for spaces or dashes between the groups of digits.</li>\n<li><code>$</code> denotes the end of the string. In this case the beginning and end of the string are used in the regex to prevent it from matching any longer string that might contain a valid phone number (eg. “s 555 555 5555 a”).</li>\n<li>Lastly we use <code>regex.test(str)</code> to test if the string adheres to the regular expression and return <code>true</code> or <code>false</code>.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">telephoneCheck</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Comprehensive regex from @dting </span>\n  <span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})$/</span>;\n\n  <span class="hljs-keyword">return</span> re.test(str);\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>This is an example of a very comprehensive and robust solution to validating US phone numbers client side. In such cases it might be much better and easier to implement this library <a href="https://github.com/googlei18n/libphonenumber">libphonenumber.</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph @dting @jhalls @crisvdkooij for your help with Algorithm: Validate US Telephone Numbers</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Where art thou",order:5,body:'<p><img src="http://i.imgur.com/IUY2p6Y.jpg" alt=""></p>\n<h1>Problem Explanation</h1>\n<p>Write an algorithm that will take an <code>array</code> for the first argument and return an <code>array</code> with all the  <code>object</code>s that matches all the properties and values in the <code>Object</code> passed as second parameter.</p>\n<h2>Hint: 1</h2>\n<p>You may use <code>for</code> loop or the <code>Array.prototype.filter</code> method.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+for">http://devdocs.io/#q=js+for</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+filter">http://devdocs.io/#q=js+Array+filter</a></li>\n</ul>\n<h2>Hint: 2</h2>\n<p>Try to use <code>Object.prototype.hasOwnProperty</code> method to know if the property name exists in an object (as its own property).</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+Object+hasOwnProperty">http://devdocs.io/#q=js+Object+hasOwnProperty</a></li>\n</ul>\n<h2>Hint: 3</h2>\n<p>Check equivalence of <code>Object</code> in <code>collection</code> with <code>Object</code> passed as second parameter to <code>where</code> function.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>First</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; srcKeys.length; i++) {\n      <span class="hljs-comment">// check if obj in collection doesn\'t have the key</span>\n      <span class="hljs-comment">// or if it does have the key,</span>\n      <span class="hljs-comment">// then check if the property value doesn\'t match the value in source</span>\n      <span class="hljs-keyword">if</span>(!obj.hasOwnProperty(srcKeys[i]) || obj[srcKeys[i]] !== source[srcKeys[i]]) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  });\n}\n</code></pre>\n<h3>Second</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-comment">// return a Boolean value for `filter` method</span>\n    <span class="hljs-keyword">return</span> srcKeys.every(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">key</span>) </span>{\n      <span class="hljs-comment">// reduce to Boolean value to be returned for `every` method</span>\n      <span class="hljs-keyword">return</span> obj.hasOwnProperty(key) &amp;&amp; obj[key] === source[key];\n    });\n  });\n}\n</code></pre>\n<h3>Third</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-comment">// return a Boolean value for filter callback using reduce method</span>\n    <span class="hljs-keyword">return</span> srcKeys.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, key</span>) </span>{\n      <span class="hljs-comment">// reduce to Boolean value to be returned by reduce method</span>\n      <span class="hljs-keyword">return</span> obj.hasOwnProperty(key) &amp;&amp; obj[key] === source[key];\n    }, <span class="hljs-literal">false</span>);\n  });\n}\n</code></pre>\n<h3>Fourth</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n<span class="hljs-comment">//Array for storing the matched objects</span>\n  <span class="hljs-keyword">var</span> arr = [];\n  <span class="hljs-comment">//For maintaining the number of key-value matches</span>\n  <span class="hljs-keyword">var</span> count ;\n  collection.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">collObj</span>) </span>{ \n  <span class="hljs-comment">//Initialize to zero for each object in collection</span>\n     count = <span class="hljs-number">0</span> ; \n     <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> source){\n     <span class="hljs-comment">//Check whether the key exists and the key-value is matched</span>\n        <span class="hljs-keyword">if</span>( collObj.hasOwnProperty(prop) &amp;&amp; collObj[prop] === source[prop])\n        <span class="hljs-comment">//Increase the count if matched</span>\n        count++; \n       }\n     <span class="hljs-comment">//Check whether all key-value pairs in source are matched</span>\n     <span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-built_in">Object</span>.keys(source).length){ \n        arr.push(collObj);\n      }\n    \n    });\n    <span class="hljs-keyword">return</span> arr;\n}\n</code></pre>\n<h2>Code Explanation:</h2>\n<blockquote>\n<p>Please read the comments in the source code.</p>\n</blockquote>\n<p>Check this <a href="http://repl.it/BFZQ/19">http://repl.it/BFZQ/19</a> for pretty debugging and code explanation</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @abhisekp @dting @coded9 for your help with Algorithm: Where art Thou</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Where do I belong",order:5,body:'<h1>Explanation:</h1>\n<p>This can be a tricky problem to understand. You need to find where in the array a number should be inserted by order, and return the index where it should go.</p>\n<h2>Hint: 1</h2>\n<p>The first thing to do is sort the array from lower to bigger, just to make the code easier. This is where sort comes in, it needs a callback function so you have to create it.</p>\n<h2>Hint: 2</h2>\n<p>Once the array is sorted, then just check for the first number that is bigger and return the index.</p>\n<h2>Hint: 3</h2>\n<p>If there is no index for that number then you will have to deal with that case too.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">arr, num</span>) </span>{\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">return</span> a - b;\n  });\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (arr[a] &gt;= num)\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(a);\n  }\n\n  <span class="hljs-keyword">return</span> arr.length;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First I sort the array using <code>.sort(callbackFuntion)</code> to sort it by lowest to highest, from left to right.</li>\n<li>Then I use a for loop to compare the items in the array starting from the smallest one. When an item on the array is greater than the number we are comparing against, then we return the index as an integer.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">arr, num</span>) </span>{\n  arr.push(num);\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>)\n           </span>{<span class="hljs-keyword">return</span> a-b;}\n          );\n  <span class="hljs-keyword">return</span> arr.indexOf(num);\n }\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First insert the number into the array using the <code>Array.push()</code> method.</li>\n<li>Then use the numerical sort method to sort the elements of the array. in the end just return the index value of the number that was push earlier using the <code>Array.indexOf()</code> method.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <strong><code>Thanks @Rafase282 and @rahul1992 for your help with Algorithm: Where do I belong</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Algorithm Wiki Template",order:5,body:'<p><strong>Foundational Agile Principles:</strong></p>\n<p><strong><em>Individuals and interactions</em></strong> over processes and tools</p>\n<p>**_Working software _**over comprehensive</p>\n<p><em><strong>Customer collaboration</strong></em> over contract negotiation</p>\n<p><em>**Responding to change **</em> over following a plan</p>\n<h2>User-Stories</h2>\n<p>User stories help us tie the needs of our users directly to features we implement in a\nconversational format. They <strong>always</strong> follow this syntax: <em>“As a User/Stakeholder , I need/want to be able to Do Something”</em>. This can result in some awkward stories for the “obvious” features like <em>“As a user, I need to be able to trust that my credit card information is secure.”</em>, but it is imperative that ALL features tie back to a story in order to allow us to effectively break the work down into manageable pieces.</p>\n<h2>Sprints</h2>\n<p>A “Sprint” is a short (1-3 weeks) development cycle during which a number of stories or subtasks are targeted for completion by the end of the sprint. The idea behind “Sprinting” is to allow us to <strong>deliver</strong> a story to the project champion for feedback/approval. This iterative workflow ensures we get continuous buy-in from the project champion and we are delivering functionality that both works, and is valuable.</p>\n<h2>SCRUM</h2>\n<p>At a basic level, SCRUM helps us stay focused and informed about what the status is on each assigned task as well as break down communication barriers. In many professional settings the work day begins with a “Daily Scrum”.  We will be following a weekly scrum to align with our sprints.  A common scrum failure is to attempt to problem solve during a scrum. Troubleshooting and brainstorming should always be done as a separate task from SCRUM.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js">code here\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Explain your code here</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @username1 @username2 @yourusername for your help with Algorithm: Name of the Algorithm</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n<h2>Here you can add any other information that is helpful or related.</h2>\n<ul>\n<li>Right here.</li>\n</ul>\n<h3>Important notes about this template.</h3>\n<ul>\n<li>This template can also be used for regular pages.</li>\n<li>The author part has been removed. This is a collaboration page, while people can see who contributed by checking the revision, using the code for the credits will also benefit the contributors and your name will be there, so there is no longer any need to add your picture or links.</li>\n<li>If you have suggestions or comments about this template, feel free to contact <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"August 2015 Improvements",order:5,body:'<h2>Sunday’s Improvements</h2>\n<ul>\n<li>replaced our getting-started videos with a simple 10-minute process (using GIFs instead of videos)</li>\n<li>doubled the number of our HTML5 and Bootstrap challenges</li>\n<li>replaced Codecademy’s JavaScript and jQuery challenges with our own challenges</li>\n<li>added our own Object-oriented Programming and Functional Programming challenges</li>\n<li>added two new Front End Project front end challenges (Personal Portfolio and Simon game), and moved our Front End Projects to much earlier in our curriculum</li>\n<li>completely replaced our Field Guide with a searchable, and easily-editable open-source wiki</li>\n<li>made it so your Algorithm code is stored in your browser, so if you leave the page, your code will be there when you come back</li>\n<li>simplified our portfolio pages. You can now click a single button to mirror your Free Code Camp profile with your GitHub profile. Algorithm solutions are no longer shown here, but they’ll eventually be accessible through our API.</li>\n<li>fixed some issues with Brownie Points and Streaks</li>\n<li>improved our Camper News page by removing the (mostly unused) comments and adding one-click upvoting</li>\n<li>added a Creative Commons license to literally all of our images and text</li>\n<li>thanks to Loopback, everything is now an API, and we will soon publish cool ways to interact with Free Code Camp’s (non-sensitive) data</li>\n</ul>\n<h2>FAQ</h2>\n<h3>The challenge I was most recently doing disappeared.</h3>\n<p>You can just keep going. If you have time to go back and try our new challenges, they should be a quick review for you. Otherwise, keep moving forward.</p>\n<h3>Why are you deploying all these improvements at once?</h3>\n<p>We’ve been working on some of the features for months on our Staging branch. Most of them were held up by a single task: our transition to <a href="http://loopback.io/">Loopback</a>. @BerkeleyTrue started working on this back in March.</p>\n<h3>Was deploying everything at once necessary?</h3>\n<p>Probably not. Going forward, we will deploy new code several times a day (as we did prior to the Loopback feature). We plan to start using a <a href="https://en.wikipedia.org/wiki/Continuous_integration">continuous integration</a> and other agile best practices as we reduce our <a href="https://en.wikipedia.org/wiki/Technical_debt">technical debt</a>.</p>\n'
}},function(e,n){e.exports={title:"August Live Stream",order:5,body:'<h3>Free Code Camp’s [August Live Stream] (<a href="https://youtu.be/UhoxoYrJ6Qs">https://youtu.be/UhoxoYrJ6Qs</a>) was the largest yet.</h3>\n<h2>The agenda included:</h2>\n<ul>\n<li>Opening words from Michael</li>\n<li>New front end challenges [3:00] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=3m">https://youtu.be/UhoxoYrJ6Qs?t=3m</a>)</li>\n<li>Newly configured full-stack challenges</li>\n<li>New Nonprofit Projects [12:32] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=12m32s">https://youtu.be/UhoxoYrJ6Qs?t=12m32s</a>)</li>\n<li>Wiki [22:49] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=22m49s">https://youtu.be/UhoxoYrJ6Qs?t=22m49s</a>)</li>\n<li>New chat rooms [29:40] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=29m40s">https://youtu.be/UhoxoYrJ6Qs?t=29m40s</a>)</li>\n<li>New Live Streams [35:34] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=35m34s">https://youtu.be/UhoxoYrJ6Qs?t=35m34s</a>)</li>\n<li>New Internet Radio Station DJ’d by campers [36:30] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=36m30s">https://youtu.be/UhoxoYrJ6Qs?t=36m30s</a>)</li>\n<li>FCC Bot [39:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=39m24s">https://youtu.be/UhoxoYrJ6Qs?t=39m24s</a>)</li>\n<li>Matt Yamamoto Front End Project Demo [54:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=54m24s">https://youtu.be/UhoxoYrJ6Qs?t=54m24s</a>)</li>\n<li>Closing from Quincy [1:04:15] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s">https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s</a>)</li>\n<li>[Pull Request After Party with Quincy] (<a href="https://youtu.be/r0lCJ_TFYlI">https://youtu.be/r0lCJ_TFYlI</a>)</li>\n</ul>\n<p><a href="http://www.youtube.com/watch?feature=player_embedded&v=UhoxoYrJ6Qs\n" target="_blank">&lt;img src=&quot;https://www.evernote.com/l/AnvmsUWWNeJFNbfm7fDa7SRLmnbn7jafRL4B/image.png&quot;\nalt=“Screen shot from our twitch feed on August 1 2015” width=“560” height=&quot;315&quot;border=“10” /&gt;</a></p>\n'}},function(e,n){e.exports={title:"Back End Project Resources",order:5,body:'<p>The curriculum lead-up to the first Back End Project is not very comprehensive.  Here are a number of common resources which other campers have found helpful.</p>\n<h1>Getting Started with Back End Projects</h1>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects">https://freecodecamp.com/wiki/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects</a> - Lots of helpful tips and tricks for the Yeoman Angular Fullstack setup</li>\n<li><a href="https://github.com/DaftMonk/generator-angular-fullstack#generators">https://github.com/DaftMonk/generator-angular-fullstack#generators</a> - Generator used by Yeoman, you can find syntax and what files it creates</li>\n</ul>\n<h1>APIs</h1>\n<ul>\n<li>API for Charting the stock market: <a href="https://www.quandl.com/help/api">https://www.quandl.com/help/api</a></li>\n</ul>\n<h1>MEAN Stack Tutorials &amp; Videos</h1>\n<ul>\n<li>\n<p>5 Part Series on setting up a MEAN stack</p>\n<p><a href="https://www.youtube.com/watch?v=kHV7gOHvNdk">https://www.youtube.com/watch?v=kHV7gOHvNdk</a></p>\n</li>\n<li>\n<p>A MEAN tutorial that creates a simple Twitter clone</p>\n<p><a href="https://channel9.msdn.com/Series/MEAN-Stack-Jump-Start">https://channel9.msdn.com/Series/MEAN-Stack-Jump-Start</a></p>\n</li>\n<li>\n<p>Clementine is a stripped down MEAN stack, great for learning the fundamentals.</p>\n<p><a href="https://johnstonbl01.github.io/clementinejs/tutorials/tutorial-beginner.html">https://johnstonbl01.github.io/clementinejs/tutorials/tutorial-beginner.html</a></p>\n</li>\n<li>\n<p>Authentication with Passport for the MEAN stack:</p>\n<p><a href="https://vickev.com/#!/article/authentication-in-single-page-applications-node-js-passportjs-angularjs">https://vickev.com/#!/article/authentication-in-single-page-applications-node-js-passportjs-angularjs</a></p>\n</li>\n<li>\n<p>An amazing list of resources for learning the MEAN stack:</p>\n<p><a href="https://github.com/ericdouglas/MEAN-Learning">https://github.com/ericdouglas/MEAN-Learning</a></p>\n</li>\n</ul>\n<h1>Scotch IO Tutorials</h1>\n<ul>\n<li><a href="https://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application">https://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application</a></li>\n<li><a href="https://scotch.io/tutorials/node-and-angular-to-do-app-application-organization-and-structure">https://scotch.io/tutorials/node-and-angular-to-do-app-application-organization-and-structure</a></li>\n</ul>\n<h1>Node/Express</h1>\n<ul>\n<li><a href="http://stackoverflow.com/a/16512303/1420506">Online Debugging for Node.js/Express</a></li>\n</ul>\n<h1>Cloud 9 Tricks</h1>\n<h2>Speed up browser reloads</h2>\n<ol>\n<li>Open gruntfile.js and edit both instances of <code>livereload: true</code> to <code>livereload: false</code>.</li>\n<li>Open server/config/express.js and comment out the line <code>app.use(require(\'connect-livereload\')());</code></li>\n</ol>\n'}},function(e,n){e.exports={title:"Bonus SocketIO",order:5,body:'<p>If you’ve gotten to the Stock Charting Back End Project you may have noticed that the bonus criteria is to have your stock list live update across clients. This can be accomplished with SocketIO, but that’s not all SocketIO can do. Remember earlier, I mentioned that when using <em>$http.post</em> you had to update your local array with the database’s version of the item you were posting? SocketIO keeps a user’s browser environment synced with your database in realtime. This has two practical upshots:</p>\n<ol>\n<li>You no longer have to manually update your local data with database data; it is all managed automatically</li>\n<li>You can push database changes live to users on different machines all at the same time</li>\n</ol>\n<p>Even better, if you just include SocketIO when prompted during the yeoman angular-fullstack setup, there is absolutely no work involved to include it. It works out of the box, has a working demo on the <strong>main/</strong> route, and you can learn how to use it yourself by simply looking at how they include it in <strong>main.controller.js</strong> (so I won’t go any further into detail).</p>\n<p><a href="https://freecodecamp.com/wiki/isLoggedInAsync()">PREVIOUS</a>\n<a href="https://freecodecamp.com/wiki/Epilogue">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Challenge Access Array Data with Indexes",order:5,body:'<h1>Access Array Data with Indexes</h1>\n<p>We can access the data inside arrays using indexes.</p>\n<p>Array indexes are written in the same bracket notation that strings use, except that instead of specifying a character, they are specifying an entry in the array.</p>\n<p>For example:</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3];\narray<span class="hljs-keyword">[</span>0]; //equals 1\nvar data = array<span class="hljs-keyword">[</span>1];\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Access Multi Dimensional Arrays With Indexes",order:5,body:'<h1>Access Multi-Dimensional Arrays With Indexes</h1>\n<p>One way to think of a <code>multi-dimensional</code> array, is as an array of arrays. When you use brackets to access your array, the first set of bracket refers to the entries in the outer-most array, and each subsequent level of brackets refers to the next level of entries inside.</p>\n<h2>Example</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = [\n    [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],\n    [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>],\n    [<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>],\n    [[<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>], <span class="hljs-number">13</span>, <span class="hljs-number">14</span>]\n];\narr[<span class="hljs-number">0</span>]; <span class="hljs-comment">// equals [1,2,3]</span>\narr[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>]; <span class="hljs-comment">// equals 6</span>\narr[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]; <span class="hljs-comment">// equals 11</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Accessing Nested Arrays In Json",order:5,body:'<p>#Challenge: Accessing Nested Arrays in JSON</p>\n<p>As we have seen in earlier examples, JSON objects can contain both nested objects and nested arrays. Similar to accessing nested objects, Array bracket notation can be chained to access nested arrays.</p>\n<p>Here is an example of how to access a nested array:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourPets = { \n  <span class="hljs-string">"cats"</span>: [\n    <span class="hljs-string">"Meowzer"</span>,\n    <span class="hljs-string">"Fluffy"</span>,\n    <span class="hljs-string">"Kit-Cat"</span>\n  ],\n  <span class="hljs-string">"dogs"</span>: [\n    <span class="hljs-string">"Spot"</span>,\n    <span class="hljs-string">"Bowser"</span>,\n    <span class="hljs-string">"Frankie"</span>\n  ]\n};\nourPets.cats[<span class="hljs-number">1</span>]; <span class="hljs-comment">// "Fluffy"</span>\nourPets.dogs[<span class="hljs-number">0</span>]; <span class="hljs-comment">// "Spot"</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Accessing Nested Objects In Json",order:5,body:'<p>#Challenge: Accessing Nested Objects in JSON</p>\n<p>The properties and sub-properties of JSON objects can be accessed by chaining together the dot or bracket notation.</p>\n<p>Here is a nested JSON Object:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourStorage = {\n  <span class="hljs-string">"desk"</span>: {\n    <span class="hljs-string">"drawer"</span>: <span class="hljs-string">"stapler"</span>\n  },\n  <span class="hljs-string">"cabinet"</span>: {\n    <span class="hljs-string">"top drawer"</span>: { \n      <span class="hljs-string">"folder1"</span>: <span class="hljs-string">"a file"</span>,\n      <span class="hljs-string">"folder2"</span>: <span class="hljs-string">"secrets"</span>\n    },\n    <span class="hljs-string">"bottom drawer"</span>: <span class="hljs-string">"soda"</span>\n  }\n}\nourStorage.cabinet[<span class="hljs-string">"top drawer"</span>].folder2;  <span class="hljs-comment">// "secrets"</span>\nourStorage.desk.drawer; <span class="hljs-comment">// "stap</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Accessing Objects Properties With Bracket Notation",order:5,body:'<p>#Challenge: Accessing Objects Properties with Bracket Notation</p>\n<p>The second way to access the properties of an object is bracket notation (<code>[]</code>). If the property of the object you are trying to access has a space in it, you will need to use bracket notation.</p>\n<p>Here is a sample of using bracket notation to read an object property:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myObj = {\n  <span class="hljs-string">"Space Name"</span>: <span class="hljs-string">"Kirk"</span>,\n  <span class="hljs-string">"More Space"</span>: <span class="hljs-string">"Spock"</span>\n};\nmyObj[<span class="hljs-string">"Space Name"</span>]; <span class="hljs-comment">// Kirk</span>\nmyObj[<span class="hljs-string">\'More Space\'</span>]; <span class="hljs-comment">// Spock</span>\n</code></pre>\n<p>Note that property names with spaces in them must be in quotes (single or double).</p>\n'}},function(e,n){e.exports={title:"Challenge Accessing Objects Properties With The Dot Operator",order:5,body:'<p>#Challenge: Accessing Objects Properties with the Dot Operator</p>\n<p>There are two ways to access the properties of an object: the dot operator (<code>.</code>) and bracket notation (<code>[]</code>), similar to an array.</p>\n<p>The dot operator is what you use when you know the name of the property you’re trying to access ahead of time.</p>\n<p>Here is a sample of using the dot operator (<code>.</code>) to read an object property:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myObj = {\n  prop1: <span class="hljs-string">"val1"</span>,\n  prop2: <span class="hljs-string">"val2"</span>\n};\nmyObj.prop1; <span class="hljs-comment">// val1</span>\nmyObj.prop2; <span class="hljs-comment">// val2</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Accessing Objects Properties With Variables",order:5,body:'<p>#Challenge: Accessing Objects Properties with Variables</p>\n<p>Another use of bracket notation on objects is to use a variable to access a property. This can be very useful for iterating through lists of the object properties or for doing the lookup.</p>\n<p>Here is an example of using a variable to access a property:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> someProp = <span class="hljs-string">"propName"</span>;\n<span class="hljs-keyword">var</span> myObj = {\n  propName: <span class="hljs-string">"Some Value"</span>\n}\n</code></pre>\n<p>myObj[someProp]; // &quot;Some Value&quot;\nNote that we do not use quotes around the variable name when using it to access the property because we are using the value of the variable, not the name</p>\n'}},function(e,n){e.exports={title:"Challenge Add Alt Text to an Image for Accessibility",order:5,body:"<p><code>alt</code> attributes, also known as alt text, are what browsers will display if they fail to load the image. alt attributes are also important for blind or visually impaired users to understand what an image portrays. And search engines also look at alt attributes.</p>\n<p>In short, every image should have an alt attribute!</p>\n<p>You can add an alt attribute right in the img element like this: <code>&lt;img src=&quot;www.your-image-source.com/your-image.jpg&quot; alt=&quot;your alt text&quot;/&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Borders Around your Elements",order:5,body:"<p>CSS borders have attributes like <code>style</code>, <code>color</code> and <code>width</code>.</p>\n<p>For example, if we wanted to create a red, 5 pixel border around an HTML element, we could use this class: <code>&lt;style&gt; .thin-red-border { border-color: red; border-width: 5px; border-style: solid; } &lt;/style&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Different Margins to Each Side of an Element",order:5,body:"<p>CSS allows you to control the margin of an element on all four sides with <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Different Padding to Each Side of an Element",order:5,body:'<p>CSS allows you to control the padding of an element on all four sides with <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-left</code> attributes.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-top</span>:<span class="hljs-value"> <span class="hljs-number">40px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-right</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-left</span>:<span class="hljs-value"> <span class="hljs-number">40px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Add Elements within your Bootstrap Wells",order:5,body:"<h1>Add Elements within your Bootstrap Wells</h1>\n<p>Once you have gone deep enough in <code>divs</code> you can start adding your Bootstrap buttons.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Font Awesome Icons to all of our Buttons",order:5,body:"<h1>Add Font Awesome Icons to all of our Buttons</h1>\n<p><code>&lt;i class=&quot;fa fa-trash&quot;&gt;&lt;/i&gt;</code> Will add a trash can icon.</p>\n<p><code>&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt;</code> Will add an info icon.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Font Awesome Icons to our Buttons",order:5,body:"<h1>Add Font Awesome Icons to our Buttons</h1>\n<p>Font Awesome is a convenient library of icons. These icons are vector graphics, stored in the .svg file format. These icons are treated just like fonts. You can specify their size using pixels, and they will assume the font size of their parent HTML elements.</p>\n<p><code>&lt;i class=&quot;fa fa-thumbs-up&quot;&gt;&lt;button class=&quot;btn btn-block btn-primary&quot;&gt;Like&lt;/i&gt;&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Add ID Attributes to Bootstrap Elements",order:5,body:"<h1>Add ID Attributes to Bootstrap Elements</h1>\n<p>Recall that in addition to class attributes, you can give each of your elements an id attribute.</p>\n<p>Each id should be unique to a specific element. Remember that you can give an element an id like this: <code>&lt;div class=&quot;well&quot; id=&quot;center-well&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Add Images to your Website",order:5,body:"<p>You can add images to your website by using the <code>img</code> element, and point to an specific image’s URL using the <code>src</code> attribute.</p>\n<p>An example of this would be <code>&lt;img src=&quot;www.your-image-source.com/your-image.jpg&quot;&gt;</code>. Note that in most cases, img elements are self-closing.</p>\n"}},function(e,n){e.exports={title:"Challenge Add New Properties to a JavaScript Object",order:5,body:"<h1>Add New Properties to a JavaScript Object</h1>\n<p>You can add new properties to existing JavaScript objects the same way you would modify them. Here is how: <code>myDog.bark = &quot;woof-woof&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Add Placeholder Text to a Text Field",order:5,body:"<p>Your placeholder text is what appears in your text input before your user has inputed anything.</p>\n<p>You can create placeholder text like so: <code>&lt;input type=&quot;text&quot; placeholder=&quot;this is placeholder text&quot;&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Add Rounded Corners with a Border Radius",order:5,body:'<p>To make round corners it is all about <code>border-radius</code> and pixels.</p>\n<p>You can specify a border-radius with pixels. This will affect how rounded the corners are.</p>\n<pre><code><span class="hljs-class">.thick-green-border</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">border-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-width</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-style</span>:<span class="hljs-value"> solid</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Add Two Numbers with JavaScript",order:5,body:"<h1>Add Two Numbers with JavaScript</h1>\n<p>JavaScript uses the <code>+</code> symbol for addition. It can also be used instead of <code>parseInt()</code> but that is beyond this.</p>\n<p><code>var sum = 10 + 10;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Add a Negative Margin to an Element",order:5,body:"<p>An element’s <code>margin</code> controls the amount of space between an element’s border and surrounding elements. If you set an element’s margin to a <strong>negative value</strong>, the element will grow <strong>larger</strong>.</p>\n"}},function(e,n){e.exports={title:"Challenge Add a Submit Button to a Form",order:5,body:'<p>You will need to create a <code>button</code> element. Here’s an example submit button: <code>&lt;button type=&quot;submit&quot;&gt;this button submits the form&lt;/button&gt;</code>.</p>\n<pre><code>&lt;<span class="hljs-tag">form</span> action=<span class="hljs-string">"/submit-cat-photo"</span>&gt;\n  &lt;<span class="hljs-tag">input</span> type=<span class="hljs-string">"text"</span> placeholder=<span class="hljs-string">"cat photo URL"</span>&gt;\n  &lt;<span class="hljs-tag">button</span> type=<span class="hljs-string">"submit"</span>&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Add your JavaScript Slot Machine Slots",order:5,body:'<h1>Add your JavaScript Slot Machine Slots</h1>\n<p>For this part we should notify if they same number is returned three times or return <code>null</code> otherwise.</p>\n<pre><code><span class="hljs-keyword">if</span>(slotOne !== slotTwo || slotTwo !== slotThree){\n      <span class="hljs-keyword">return</span> (<span class="hljs-literal">null</span>);\n    }\n</code></pre>\n<p>If slot one and two are different, or slot two and three are not the same, then return <code>null</code>.</p>\n'}},function(e,n){e.exports={title:"Challenge Adding A Default Option In Switch Statements",order:5,body:'<p>#Challenge: Adding a default option in Switch statements</p>\n<p>In a <code>switch</code> statement you may not be able to specify all possible values as <code>case</code> statements. Instead, you can add the <code>default</code> statement which will be executed if no matching <code>case</code> statements are found. Think of it like the final <code>else</code> statement in an <code>if/else</code> chain.</p>\n<p>A <code>default</code> statement should be the last case.</p>\n<pre><code class="language-js"><span class="hljs-keyword">switch</span> (num) {\n  <span class="hljs-keyword">case</span> value1:\n    statement1\n    <span class="hljs-keyword">break</span>;\n  <span class="hljs-keyword">case</span> value2:\n    statement2;\n    <span class="hljs-keyword">break</span>;\n...\n  <span class="hljs-keyword">default</span>:\n    defaultStatement;\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Adjust the Margin of an Element",order:5,body:'<p>An element’s <code>margin</code> controls the amount of space between an element’s <code>border</code> and surrounding elements.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Adjusting the Padding of an Element",order:5,body:'<p>HTML elements are essentially little rectangles. Three important attributes control the space that surrounds each HTML element: <code>padding</code>, <code>margin</code>, and <code>border</code>. An element’s padding controls the amount of space between the element and its border.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Appending Variables to Strings",order:5,body:'<h1>Appending Variables to Strings</h1>\n<p>Just as we can build a string over multiple lines out of string literals, we can also append variables to a string using the plus equals <code>+=</code> operator.</p>\n<h2>Example</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> anAdjective = <span class="hljs-string">"awesome!"</span>;\n<span class="hljs-keyword">var</span> ourStr = <span class="hljs-string">"Free Code Camp is "</span>;\nourStr += anAdjective;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Apply the Default Bootstrap Button Style",order:5,body:'<h1>Apply the Default Bootstrap Button Style</h1>\n<p>Bootstrap has a button class called <code>btn-default</code></p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container-fluid"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">h3</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"text-primary text-center"</span>&gt;</span>jQuery Playground<span class="hljs-tag">&lt;/<span class="hljs-title">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"well"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"well"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Assignment With A Returned Value",order:5,body:'<p>#Challenge: Assignment with a Returned Value</p>\n<p>If you’ll recall from our discussion of Storing Values with the Equal Operator, everything to the right of the equal sign is resolved before the value is assigned. This means we can take the return value of a function and assign it to a variable.</p>\n<p>Assume we have pre-defined a function <code>sum</code> which adds two numbers together, then:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourSum = sum(<span class="hljs-number">5</span>, <span class="hljs-number">12</span>);\n</code></pre>\n<p>will call <code>sum</code> function, which returns a value of <code>17</code> and assigns it to <code>ourSum</code> variable.</p>\n'}},function(e,n){e.exports={title:"Challenge Assignment with Divided by Equals",order:5,body:"<h1>Assignment with Divided by Equals</h1>\n<p>The <code>/= operator</code> divides a variable by another number.</p>\n<p><code>myVar = myVar / 5;</code></p>\n<p>Will divide <code>myVar</code> by <code>5</code>. This can be rewritten as:</p>\n<p><code>myVar /= 5;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Assignment with Minus Equals",order:5,body:"<h1>Assignment with Minus Equals</h1>\n<p>Like the <code>+= operator</code>, <code>-=</code> subtracts a number from a variable.</p>\n<p><code>myVar = myVar - 5;</code></p>\n<p>will subtract <code>5</code> from <code>myVar</code>. This can be rewritten as:</p>\n<p><code>myVar -= 5;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Assignment with Plus Equals",order:5,body:'<h1>Assignment with Plus Equals</h1>\n<p>Everything to the right of the equals sign is evaluated first, so we can say <code>myVar = myVar + 5;</code> to add <code>5</code> to <code>myVar</code>. Since this is such a common pattern, there are operators which do both a mathematical operation and assignment in one step.</p>\n<p>One such operator is the <code>+= operator</code>.</p>\n<p><code>myVar += 5;</code> will add 5 to myVar instead of using any of the follwoing:</p>\n<pre><code class="language-js">myVar = <span class="hljs-number">5</span> + myVar;\nmyVar = myvar + <span class="hljs-number">5</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Assignment with Times Equals",order:5,body:'<h1>Author</h1>\n<p><img src="https://avatars0.githubusercontent.com/Rafase282?&amp;s=128" alt="@Rafase282"></p>\n<p>Submitted by Rafase282</p>\n<p><a href="https://github.com/Rafase282">Github</a> | <a href="http://www.freecodecamp.com/rafase282">FreeCodeCamp</a> | <a href="http://codepen.io/Rafase282/">CodePen</a> | <a href="https://www.linkedin.com/in/rafase282">LinkedIn</a> | <a href="https://rafase282.wordpress.com/">Blog/Site</a> | <a href="mailto:rafase282@gmail.com">E-Mail</a></p>\n<h1>Assignment with Times Equals</h1>\n<p>The <code>*= operator</code> multiplies a variable by a number.</p>\n<p><code>myVar = myVar * 5;</code></p>\n<p>will multiply <code>myVar</code> by <code>5</code>. This can be rewritten as:</p>\n<p><code>myVar *= 5;</code></p>\n'}},function(e,n){e.exports={title:"Challenge Bring your JavaScript Slot Machine to Life",order:5,body:'<h1>Bring your JavaScript Slot Machine to Life</h1>\n<p>Let’s use the jQuery selector <code>$(&quot;.slot&quot;)</code> to select all of the slots.</p>\n<p>Once they are all selected, we can use bracket notation to access each individual slot:</p>\n<pre><code><span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">0</span>]).html(slotOne);\n<span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">1</span>]).html(slotTwo);\n<span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">2</span>]).html(slotThree);\n</code></pre>\n'
}},function(e,n){e.exports={title:"Challenge Build JavaScript Objects",order:5,body:'<h1>Build JavaScript Objects</h1>\n<p>Objects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through what are called properties.</p>\n<p>Here’s a sample object:</p>\n<pre><code>var cat = {\n <span class="hljs-string">"name"</span>: <span class="hljs-string">"Whiskers"</span>,\n <span class="hljs-string">"legs"</span>: <span class="hljs-number">4</span>,\n <span class="hljs-string">"tails"</span>: <span class="hljs-number">1</span>,\n <span class="hljs-string">"enemies"</span>: [<span class="hljs-string">"Water"</span>, <span class="hljs-string">"Dogs"</span>]\n};\n</code></pre>\n<p>Objects are useful for storing data in a structured way, and can represents real world objects, like a cats.</p>\n'}},function(e,n){e.exports={title:"Challenge Call out Optional Actions with Button Info",order:5,body:"<h1>Call out Optional Actions with Button Info</h1>\n<p>Bootstrap comes with several pre-defined colors for buttons. The <code>btn-info</code> class is used to call attention to optional actions that the user can take. Note that these buttons still need the <code>btn</code> and<code>btn-block</code> classes.</p>\n<p><code>&lt;button class= &quot;btn btn-block btn-info&quot;&gt;Info&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Center Text with Bootstrap",order:5,body:"<h1>Center Text with Bootstrap</h1>\n<p>Now that we’re using Bootstrap, we can center our heading elements to make them look better. All we need to do is add the class text-center to our h1 and h2 elements.</p>\n<p>Remember that you can add several classes to the same element by separating each of them with a space, like this: <code>&lt;h2 class=&quot;text-red text-center&quot;&gt;your text&lt;/h2&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Chaining If Else Statements",order:5,body:'<p>#Challenge: Chaining If Else Statements</p>\n<p><code>if/else</code> statements can be chained together for complex logic. Here is <code>pseudocode</code> of multiple chained <code>if</code> / <code>else if</code> statements:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span>(condition1) {\n  statement1\n} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (condition2) {\n  statement2\n} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (condition3) {\n  statement3\n. . .\n} <span class="hljs-keyword">else</span> {\n  statementN\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Change Text Inside an Element Using jQuery",order:5,body:"<h1>Change Text Inside an Element Using jQuery</h1>\n<p>Using jQuery, you can change the text between the start and end tags of an element. You can even change HTML markup.</p>\n<p>jQuery has a function called <code>.html()</code> that lets you add HTML tags and text within an element. Any content previously within the element will be completely replaced with the content you provide using this function.</p>\n<p>Here’s how you would rewrite and italicize the text of our heading:</p>\n<p><code>$(&quot;h3&quot;).html(&quot;&lt;i&gt;jQuery Funhouse&lt;/i&gt;&quot;);</code></p>\n<p>jQuery also has a similar function called <code>.text()</code> that only alters text without adding tags. So when using <code>.html()</code> please remember that you will be editing the whole markup and not just the text.</p>\n"}},function(e,n){e.exports={title:"Challenge Change Text with Click Events",order:5,body:"<h1>Change Text with Click Events</h1>\n<p>When a click event happens, we can use Ajax to update an HTML element with the following code <code>$(&quot;.message&quot;).html(&quot;Here is the message&quot;);</code></p>\n<p>This tells jQuery to use the class <code>message</code> as the selector and to that, change the HTML to have the string provide, we can also ass custom html elements wrapped in quotation marks.</p>\n"}},function(e,n){e.exports={title:"Challenge Change the CSS of an Element Using jQuery",order:5,body:'<h1>Change the CSS of an Element Using jQuery</h1>\n<p>We can also change the CSS of an HTML element directly with jQuery.</p>\n<p>Query has a function called <code>.css()</code> that allows you to change the CSS of an element.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"#target1"</span>).css(<span class="hljs-string">"color"</span>, <span class="hljs-string">"red"</span>);\n\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Change the Color of Text",order:5,body:"<p>CSS allows us to change  many styles. To change the color of an element we use <code>color</code>.</p>\n<p>Here’s how you would set your h2 element’s text color to blue: <code>&lt;h2 style=&quot;color: blue&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Change the Font Size of an Element",order:5,body:'<p>Font size is controlled by the <code>font-size</code> CSS attribute, like this: <code>h1 { font-size: 30px; }</code>.</p>\n<p>px is a unit that stands for <a href="https://en.wikipedia.org/wiki/Pixel">pixels</a></p>\n<p>Although this Challenge requires the use of px, there are <a href="http://www.w3.org/Style/Examples/007/units.en.html">other units of size measurements used</a></p>\n'}},function(e,n){e.exports={title:"Challenge Check Radio Buttons and Checkboxes by Default",order:5,body:"<p>You can set a checkbox or radio button to be checked by default using the checked attribute.</p>\n<p>To do this, just add the word “checked” to the inside of an input element. For example, <code>&lt;input type=&quot;radio&quot; name=&quot;test-name&quot; checked&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Check the Length Property of a String Variable",order:5,body:"<h1>Check the Length Property of a String Variable</h1>\n<p>Data structures have properties. For example, strings have a property called <code>.length</code> that will tell you how many characters are in the string.</p>\n<p><code>lastNameLength = lastName.length;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Clone an Element Using jQuery",order:5,body:"<h1>Clone an Element Using jQuery</h1>\n<p>jQuery has a function called<code>clone()</code> that makes a copy of an element.</p>\n<p>For example, if we wanted to copy target2 from our left-well to our right-well, we would use <code>$(&quot;#target2&quot;).clone().appendTo(&quot;#right-well&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Comment out HTML",order:5,body:'<p>Commenting is a way that you can leave comments within your code without affecting the code itself.</p>\n<p>It is also a convenient way to make code inactive without having to delete it entirely.</p>\n<p>You can start a comment with <code>&lt;!-- and end a comment with --&gt;</code>.</p>\n<pre><code><span class="hljs-comment">&lt;!--\n&lt;h1&gt;Hello World&lt;/h1&gt;\n\n&lt;h2&gt;CatPhotoApp&lt;/h2&gt;\n\n&lt;p&gt;Hello Paragraph&lt;/p&gt;\n--&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comment your JavaScript Code",order:5,body:"<h1>Comment your JavaScript Code</h1>\n<p>Comments are a great way to leave notes to yourself and to other people who will later need to figure out what it does. Any code in it will be ignored.</p>\n<p>Let’s take a look at the two ways you can write comments in JavaScript.</p>\n<ul>\n<li>The double-slash comment will comment out the remainder of the text on the current line:</li>\n</ul>\n<p><code>// This is a comment.</code></p>\n<ul>\n<li>The slash-star-star-slash comment will comment out everything between the <code>/*</code> and the <code>*/</code> characters:</li>\n</ul>\n<p><code>/* This is also a comment */</code></p>\n"}},function(e,n){e.exports={title:"Challenge Comparison With The Equality Operator",order:5,body:'<p>##Challenge: Comparison with the Equality Operator</p>\n<p>There are many <code>Comparison Operators</code> in JavaScript. All of these operators return a boolean <code>true</code> or <code>false</code> value.</p>\n<p>The most basic operator is the equality operator <code>==</code>. The equality operator compares two values and returns <code>true</code> if they’re equivalent or <code>false</code> if they are not. Note that equality is different from assignment (=), which assigns the value at the right of the operator to a variable in the left.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">equalityTest</span>(<span class="hljs-params">myVal</span>) </span>{\n  <span class="hljs-keyword">if</span> (myVal == <span class="hljs-number">10</span>) {\n     <span class="hljs-keyword">return</span> <span class="hljs-string">"Equal"</span>;\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Not Equal"</span>;\n}\n</code></pre>\n<p>If <code>myVal</code> is equal to <code>10</code>, the function will return “Equal”. If it is not, the function will return “Not Equal”.</p>\n<p>The equality operator will do its best to convert values for comparison, for example:</p>\n<pre><code class="language-js">   <span class="hljs-number">1</span>   ==  <span class="hljs-number">1</span>        <span class="hljs-comment">// true</span>\n  <span class="hljs-string">"1"</span>  ==  <span class="hljs-number">1</span>        <span class="hljs-comment">// true</span>\n   <span class="hljs-number">1</span>   == <span class="hljs-string">\'1\'</span>       <span class="hljs-comment">// true</span>\n   <span class="hljs-number">0</span>   == <span class="hljs-literal">false</span>     <span class="hljs-comment">// true</span>\n   <span class="hljs-number">0</span>   == <span class="hljs-literal">null</span>      <span class="hljs-comment">// false</span>\n   <span class="hljs-number">0</span>   == <span class="hljs-literal">undefined</span> <span class="hljs-comment">// false</span>\n <span class="hljs-literal">null</span>  == <span class="hljs-literal">undefined</span> <span class="hljs-comment">// true</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Greater Than Equal To Operator",order:5,body:'<p>#Challenge: Comparison with the Greater Than Equal To Operator</p>\n<p>The greater than equal to operator (<code>&gt;=</code>) compares the values of two numbers. If the number to the left is greater than or equal to the number to the right, it returns <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>Like the equality operator, greater than equal to operator will convert data types while comparing.</p>\n<p>##Examples</p>\n<pre><code class="language-js"> <span class="hljs-number">6</span>  &gt;=  <span class="hljs-number">6</span>  <span class="hljs-comment">// true</span>\n <span class="hljs-number">7</span>  &gt;= <span class="hljs-string">\'3\'</span> <span class="hljs-comment">// true</span>\n <span class="hljs-number">2</span>  &gt;=  <span class="hljs-number">3</span>  <span class="hljs-comment">// false</span>\n<span class="hljs-string">\'7\'</span> &gt;=  <span class="hljs-number">9</span>  <span class="hljs-comment">// false</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Greater Than Operator",order:5,body:'<p>#Challenge: Comparison with the Greater Than Operator</p>\n<p>The greater than operator (<code>&gt;</code>) compares the values of two numbers. If the number to the left is greater than the number to the right, it returns <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>Like the equality operator, greater than operator will convert data types of values while comparing.</p>\n<p>##Examples</p>\n<pre><code class="language-js"> <span class="hljs-number">5</span> &gt; <span class="hljs-number">3</span>   <span class="hljs-comment">// true</span>\n <span class="hljs-number">7</span> &gt; <span class="hljs-string">\'3\'</span> <span class="hljs-comment">// true</span>\n <span class="hljs-number">2</span> &gt; <span class="hljs-number">3</span>   <span class="hljs-comment">// false</span>\n<span class="hljs-string">\'1\'</span> &gt; <span class="hljs-number">9</span>  <span class="hljs-comment">// false</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Inequality Operator",order:5,body:'<p>#Challenge: Comparison with the Inequality Operator</p>\n<p>The inequality operator (<code>!=</code>) is the opposite of the equality operator. It means “Not Equal” and returns <code>false</code> where equality would return <code>true</code> and vice versa. Like the equality operator, the inequality operator will convert data types of values while comparing.</p>\n<p>##Examples</p>\n<pre><code class="language-js"><span class="hljs-number">1</span> != <span class="hljs-number">2</span>      <span class="hljs-comment">// true</span>\n<span class="hljs-number">1</span> != <span class="hljs-string">"1"</span>    <span class="hljs-comment">// false</span>\n<span class="hljs-number">1</span> != <span class="hljs-string">\'1\'</span>    <span class="hljs-comment">// false</span>\n<span class="hljs-number">1</span> != <span class="hljs-literal">true</span>   <span class="hljs-comment">// false</span>\n<span class="hljs-number">0</span> != <span class="hljs-literal">false</span>  <span class="hljs-comment">// false</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Less Than Equal To Operator",order:5,body:'<p>#Challenge: Comparison with the Less Than Equal To Operator</p>\n<p>The less than equal to operator (<code>&lt;=</code>) compares the values of two numbers. If the number to the left is less than or equal the number to the right, it returns <code>true</code>. If the number on the left is greater than the number on the right, it returns <code>false</code>. Like the equality operator, <code>less than equal to</code> converts data types.</p>\n<p>##Examples</p>\n<pre><code class="language-js">  <span class="hljs-number">4</span> &lt;= <span class="hljs-number">5</span>  <span class="hljs-comment">// true</span>\n<span class="hljs-string">\'7\'</span> &lt;= <span class="hljs-number">7</span>  <span class="hljs-comment">// true</span>\n  <span class="hljs-number">5</span> &lt;= <span class="hljs-number">5</span>  <span class="hljs-comment">// true</span>\n  <span class="hljs-number">3</span> &lt;= <span class="hljs-number">2</span>  <span class="hljs-comment">// false</span>\n<span class="hljs-string">\'8\'</span> &lt;= <span class="hljs-number">4</span>  <span class="hljs-comment">// false</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Less Than Operator",order:5,body:'<p>#Challenge: Comparison with the Less Than Operator</p>\n<p>The less than operator (<code>&lt;</code>) compares the values of two numbers. If the number to the left is less than the number to the right, it returns <code>true</code>. Otherwise, it returns <code>false</code>. Like the equality operator, less than operator converts data types while comparing.</p>\n<p>##Examples</p>\n<pre><code class="language-js">  <span class="hljs-number">2</span> &lt; <span class="hljs-number">5</span>  <span class="hljs-comment">// true</span>\n<span class="hljs-string">\'3\'</span> &lt; <span class="hljs-number">7</span>  <span class="hljs-comment">// true</span>\n  <span class="hljs-number">5</span> &lt; <span class="hljs-number">5</span>  <span class="hljs-comment">// false</span>\n  <span class="hljs-number">3</span> &lt; <span class="hljs-number">2</span>  <span class="hljs-comment">// false</span>\n<span class="hljs-string">\'8\'</span> &lt; <span class="hljs-number">4</span>  <span class="hljs-comment">// false</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Strict Equality Operator",order:5,body:'<p>#Challenge: Comparison with the Strict Equality Operator</p>\n<p>Strict equality (<code>===</code>) is the counterpart to the equality operator (<code>==</code>). Unlike the equality operator, strict equality tests both the <code>type</code> and <code>value</code> of the compared elements.</p>\n<p>##Examples</p>\n<pre><code class="language-js"><span class="hljs-number">3</span> === <span class="hljs-number">3</span>   <span class="hljs-comment">// true</span>\n<span class="hljs-number">3</span> === <span class="hljs-string">\'3\'</span> <span class="hljs-comment">// false</span>\n</code></pre>\n<p><em>In the second example, <code>3</code> is a <code>Number</code> type and <code>\'3\'</code> is a <code>String</code> type.</em></p>\n'}},function(e,n){e.exports={title:"Challenge Comparison With The Strict Inequality Operator",order:5,body:'<p>#Challenge: Comparison with the Strict Inequality Operator</p>\n<p>The strict inequality operator (<code>!==</code>) is the opposite of the strict equality operator. It means “Strictly Not Equal” and returns <code>false</code> where strict equality would return <code>true</code> and vice versa. Strict inequality will not convert data types.</p>\n<p>##Examples</p>\n<pre><code class="language-js"><span class="hljs-number">3</span> !== <span class="hljs-number">3</span>   <span class="hljs-comment">// false</span>\n<span class="hljs-number">3</span> !== <span class="hljs-string">\'3\'</span> <span class="hljs-comment">// true</span>\n<span class="hljs-number">4</span> !== <span class="hljs-number">3</span>   <span class="hljs-comment">// true</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparisons With The Logical And Operator",order:5,body:'<p>#Challenge: Comparisons with the Logical And Operator</p>\n<p>Sometimes you will need to test more than one thing at a time. The <code>logical and</code> operator (<code>&amp;&amp;</code>) returns <code>true</code> if and only if the <code>operands</code> to the left and right of it are true.</p>\n<p>The same effect could be achieved by nesting an if statement inside another if:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">5</span>) {\n  <span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">10</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Yes"</span>;\n  }\n}\n<span class="hljs-keyword">return</span> <span class="hljs-string">"No"</span>;\n</code></pre>\n<p>will only return “Yes” if <code>num</code> is between <code>6</code> and <code>9</code> (6 and 9 included). The same logic can be written as:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">5</span> &amp;&amp; num &lt; <span class="hljs-number">10</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Yes"</span>;\n}\n<span class="hljs-keyword">return</span> <span class="hljs-string">"No"</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Comparisons With The Logical Or Operator",order:5,body:'<p>#Challenge: Comparisons with the Logical Or Operator</p>\n<p>The <code>logical or</code> operator (<code>||</code>) returns <code>true</code> if either of the <code>operands</code> is <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>The pattern below should look familiar from prior Challenges:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">10</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"No"</span>;\n}\n<span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">5</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"No"</span>;\n}\n<span class="hljs-keyword">return</span> <span class="hljs-string">"Yes"</span>;\n</code></pre>\n<p>will return “Yes” only if <code>num</code> is between <code>5</code> and <code>10</code> (5 and 10 included). The same logic can be written as:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">10</span> || num &lt; <span class="hljs-number">5</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"No"</span>;\n}\n<span class="hljs-keyword">return</span> <span class="hljs-string">"Yes"</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Concatenate Strings with .concat",order:5,body:"<p><code>.concat()</code> can be used to merge the contents of two arrays into one.</p>\n<p><code>array = array.concat(otherArray);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Concatenating Strings with Plus Operator",order:5,body:"<h1>Concatenating Strings with Plus Operator</h1>\n<p>In JavaScript, when the <code>+</code> operator is used with a String value, it is called the <code>concatenation</code> operator. You can build a new string out of other strings by concatenating them together.</p>\n<h2>Example</h2>\n<p><code>'My name is Alan,' + ' I concatenate.'</code></p>\n<h2>Note</h2>\n<p>Watch out for spaces. Concatenation does not add spaces between concatenated strings, so you’ll need to add them yourself.</p>\n"}},function(e,n){e.exports={title:"Challenge Concatenating Strings with the Plus Equals Operator",order:5,body:'<h1>Concatenating Strings with the Plus Equals Operator</h1>\n<p>We can use the <code>+=</code> operator to concatenate a string onto the end of an existing string variable. This can be very helpful to break a long string over several lines.</p>\n<h2>Note</h2>\n<p>Watch out for spaces. Concatenation does not add spaces between concatenated strings, so you’ll need to add them yourself.</p>\n<h2>Example</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourStr = <span class="hljs-string">"I come first. "</span>;\nourStr += <span class="hljs-string">"I come second."</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Condense arrays with reduce",order:5,body:'<p>Reduce can be useful for condensing an array of numbers into one value.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>4,5,6,7,8];\nvar singleVal = 0;\n// Only change code below this line.\n\nvar singleVal =<span class="hljs-function"> array.reduce(</span>function(previousVal, currentVal<span class="hljs-function">)</span>{\n\n <span class="hljs-instruction"> return </span>previousVal+currentVal;\n\n}<span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Construct JavaScript Objects with Functions",order:5,body:'<h2>Construct JavaScript Objects with Functions</h2>\n<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\n<pre><code><span class="hljs-comment">// Let\'s add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.</span>\n<span class="hljs-keyword">var</span> Car = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  <span class="hljs-keyword">this</span>.wheels = <span class="hljs-number">4</span>;\n  <span class="hljs-keyword">this</span>.engines = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">this</span>.seats = <span class="hljs-number">1</span>;\n};\n\n<span class="hljs-keyword">var</span> myCar = <span class="hljs-keyword">new</span> Car();\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Constructing Strings with Variables",order:5,body:'<h1>Constructing Strings with Variables</h1>\n<p>Sometimes you will need to build a string, <a href="https://en.wikipedia.org/wiki/Mad_Libs">Mad Libs</a> style. By using the concatenation operator <code>+</code>, you can insert one or more variables into a string you’re building.</p>\n<h2>Example</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourName = <span class="hljs-string">"Free Code Camp"</span>;\n<span class="hljs-keyword">var</span> ourStr = <span class="hljs-string">"Hello, our name is "</span> + ourName + <span class="hljs-string">", how are you?"</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Convert JSON Data to HTML",order:5,body:'<h1>Convert JSON Data to HTML</h1>\n<p>Once you know how to get data from the JSON call then is time to learn how to iterate through it. We can use the .map() method to loop through our data and modify our HTML elements.</p>\n<p>Here is a code that does that:</p>\n<pre><code class="language-js"><span class="hljs-comment">// calling map on the json variable and using a custom callback function.</span>\njson.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n\n  <span class="hljs-comment">// Adding each object keys</span>\n  <span class="hljs-keyword">var</span> keys = <span class="hljs-built_in">Object</span>.keys(val);\n  <span class="hljs-comment">// Generating new html</span>\n  html += <span class="hljs-string">"&lt;div class = \'cat\'&gt;"</span>;\n  <span class="hljs-comment">// Adding the custom html to each key</span>\n  keys.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n\n    html += <span class="hljs-string">"&lt;b&gt;"</span> + key + <span class="hljs-string">"&lt;/b&gt;: "</span> + val[key] + <span class="hljs-string">"&lt;br&gt;"</span>;\n\n  });\n\n  html += <span class="hljs-string">"&lt;/div&gt;&lt;br&gt;"</span>;\n\n});\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Count Backwards With a For Loop",order:5,body:'<h1>Count Backwards With a For Loop</h1>\n<p>A for loop can also count backwards, so long as we can define the right conditions.</p>\n<p>In order to count backwards by twos, we’ll need to change our <code>initialization</code>, <code>condition</code>, and <code>final-expression</code>.</p>\n<p>We’ll start at <code>i = 10</code> and loop while <code>i &gt; 0</code>. We’ll decrement <code>i</code> by <code>2</code> each loop with <code>i -= 2</code>.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourArray = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">10</span>; i &gt; <span class="hljs-number">0</span>; i -= <span class="hljs-number">2</span>) {\n\n  ourArray.push(i);\n\n}\n</code></pre>\n<p>ourArray will now contain <code>[10,8,6,4,2]</code></p>\n'}},function(e,n){e.exports={title:"Challenge Create Bootstrap Wells",order:5,body:'<h1>Create Bootstrap Wells</h1>\n<p>Bootstrap has a class called <code>well</code> that can create a visual sense of depth for your columns.</p>\n<p>Nest one div element with the class well within each of your <code>col-xs-6 div</code> elements.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n  &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n      &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span>&gt;\n\n\n\n      &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n      &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span>&gt;\n\n\n\n      &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Create Decimal Numbers with JavaScript",order:5,body:"<h1>Create Decimal Numbers with JavaScript</h1>\n<p>JavaScript number variables can have decimals. <code>var myDecimal = 2.8;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Create a Block Element Bootstrap Button",order:5,body:"<h1>Create a Block Element Bootstrap Button</h1>\n<p>Normally, your button elements are only as wide as the text that they contain. By making them block elements, your button will stretch to fill your page’s entire horizontal space. Note that these buttons still need the <code>btn</code> class.</p>\n<p><code>&lt;button class=&quot;btn btn-block&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Create a Bootstrap Button",order:5,body:"<h1>Create a Bootstrap Button</h1>\n<p>Bootstrap has its own styles for button elements, which look much better than the plain HTML ones.</p>\n<p><code>&lt;button type=&quot;submit&quot; class=&quot;btn&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Create a Bootstrap Headline",order:5,body:"<h1>Create a Bootstrap Headline</h1>\n<p><code>&lt;h3 class=&quot;text-primary text-center&quot;&gt; jQuery Playground &lt;/h3&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Create a Bootstrap Row",order:5,body:"<h1>Create a Bootstrap Row</h1>\n<p>Create a div element with the class row. <code>&lt;div class=&quot;row&quot;&gt;&lt;/div&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Create a Bulleted Unordered List",order:5,body:'<p>HTML has a special element for creating unordered lists, or bullet point-style lists.</p>\n<p>Unordered lists start with a <code>&lt;ul&gt;</code> element. Then they contain some number of <code>&lt;li&gt;</code> elements.</p>\n<p>For example:</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>milk<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>cheese<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>\n</code></pre>\n<p>would create a bullet point-style list of “milk” and “cheese”.</p>\n'}},function(e,n){e.exports={title:"Challenge Create a Class to Target with jQuery Selectors",order:5,body:"<h1>Create a Class to Target with jQuery Selectors</h1>\n<p>Not every class needs to have corresponding CSS. Sometimes we create classes just for the purpose of selecting these elements more easily using jQuery.</p>\n<p>For this we use the <code>target</code> class on the <code>button</code> elements.</p>\n"}},function(e,n){e.exports={title:"Challenge Create a Custom Heading",order:5,body:'<h1>Create a Custom Heading</h1>\n<p>Using <code>div</code> and the custom grid layout we can create our own heading.</p>\n<pre><code>&lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"row"</span>&gt;\n   &lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"col-xs-8"</span>&gt;\n     &lt;<span class="hljs-tag">h2</span> class=<span class="hljs-string">"text-primary text-center"</span>&gt;CatPhotoApp&lt;/h2&gt;\n   &lt;/div&gt;\n   &lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"col-xs-4"</span>&gt;\n     &lt;<span class="hljs-tag">a</span> href=<span class="hljs-string">"#"</span>&gt;&lt;<span class="hljs-tag">img</span> class=<span class="hljs-string">"img-responsive thick-green-border"</span> src=<span class="hljs-string">"https://bit.ly/fcc-relaxing-cat"</span>&gt;&lt;/a&gt;\n   &lt;/div&gt;\n</code></pre>\n'
}},function(e,n){e.exports={title:"Challenge Create a Form Element",order:5,body:"<p>You can build web forms that actually submit data to a server using nothing more than pure HTML. You can do this by specifying an action on your <code>form</code> element.</p>\n<p>For example: <code>&lt;form action=&quot;/url-where-you-want-to-submit-form-data&quot;&gt;&lt;/form&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Create a JavaScript Slot Machine",order:5,body:'<h1>Create a JavaScript Slot Machine</h1>\n<p>For this we have to generate three random numbers using the formula they give us and not the general one. <code>Math.floor(Math.random() * (3 - 1 + 1)) + 1;</code></p>\n<pre><code>slotOne = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\nslotTwo = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\nslotThree = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Create a Set of Checkboxes",order:5,body:"<p>Checkboxes are a type of input.</p>\n<ul>\n<li>Each of your checkboxes should be nested within its own label element.</li>\n<li>All related checkbox inputs should have the same name attribute.</li>\n</ul>\n<p>Here’s an example of a checkbox: <code>&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;personality&quot;&gt; Loving&lt;/label&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Create a Set of Radio Buttons",order:5,body:"<p>You can use radio buttons for questions where you want the user to only give you one answer.</p>\n<p>Radio buttons are a type of input. They should all be nested in their own label element. Furthermore, all related radio buttons should have the same name attribute.</p>\n<p>Here’s an example of a radio button: <code>&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;indoor-outdoor&quot;&gt; Indoor&lt;/label&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Create a Text Field",order:5,body:"<p>Text inputs are a convenient way to get input from your user.</p>\n<p>You can create one like this: <code>&lt;input type=&quot;text&quot;&gt;</code>. Note that input elements are self-closing.</p>\n"}},function(e,n){e.exports={title:"Challenge Create an Ordered List",order:5,body:'<p>HTML has a special element for creating ordered lists, or numbered-style lists.</p>\n<p>Ordered lists start with a <code>&lt;ol&gt;</code> element. Then they contain some number of <code>&lt;li&gt;</code> elements.</p>\n<p>For example:</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>hydrogen<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>helium<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>\n</code></pre>\n<p>would create a numbered list of “hydrogen” and “helium”.</p>\n'}},function(e,n){e.exports={title:"Challenge Declare JavaScript Objects as Variables",order:5,body:'<h2>Declare JavaScript Objects as Variables</h2>\n<p>This has a simple format. You declare your variable and have it equal to an object in the form <code>{ key: value}</code></p>\n<pre><code>var car = {\n  <span class="hljs-string">"wheels"</span>:<span class="hljs-number">4</span>,\n  <span class="hljs-string">"engines"</span>:<span class="hljs-number">1</span>,\n  <span class="hljs-string">"seats"</span>:<span class="hljs-number">5</span>\n};\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Declare JavaScript Variables",order:5,body:"<h1>Declare JavaScript Variables</h1>\n<p>When we store data in a data structure, we call it a variable. JavaScript variables are written in <code>camel case</code>. An example of camel case is: <code>camelCase</code>.</p>\n<p>You can declare a variable this way <code>var myName = &quot;Rafael&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Declare String Variables",order:5,body:"<h1>Declare String Variables</h1>\n<p>A String variable. It is nothing more than a “string” of characters. JavaScript strings are always wrapped in quotes.</p>\n<p><code>var myFirstName = 'Rafael';</code></p>\n"}},function(e,n){e.exports={title:"Challenge Decrement a Number with Javascript",order:5,body:"<h1>Decrement a Number with Javascript</h1>\n<p>You can easily decrement or decrease a variable by <code>1</code> with the <code>--</code> operator.</p>\n<p><code>i--;</code></p>\n<p>is the equivalent of</p>\n<p><code>i = i - 1;</code></p>\n<p><strong>Note:</strong> The entire line becomes <code>i--;</code>, eliminating the need for the equal sign.</p>\n"}},function(e,n){e.exports={title:"Challenge Delete HTML Elements",order:5,body:"<p>Deleting elements is very simple. All you have to do is remove everything from the opening to the closing of the element and it will be removed. No extra code is needed.</p>\n"}},function(e,n){e.exports={title:"Challenge Delete Properties from a JavaScript Object",order:5,body:'<h1>Delete Properties from a JavaScript Object</h1>\n<p>We can also delete properties from objects like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">delete</span> ourDog.bark;\n</code></pre>\n<p>The <strong>delete operator</strong> removes a property from an object.</p>\n<h3>Syntax</h3>\n<p><code>delete expression</code> where expression should evaluate to a property reference, e.g.:</p>\n<pre><code class="language-js"><span class="hljs-keyword">delete</span> object.property\n<span class="hljs-keyword">delete</span> object[<span class="hljs-string">\'property\'</span>]\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>object</strong>  The name of an object, or an expression evaluating to an object.</p>\n<p><strong>property</strong>   The property to delete.</p>\n<h3>Return value</h3>\n<p>Throws in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode">strict</a> mode if the property is an own non-configurable property (returns false in non-strict). Returns true in all other cases.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete">Read more</a></p>\n'}},function(e,n){e.exports={title:"Challenge Delete your jQuery Functions",order:5,body:"<h1>Delete your jQuery Functions</h1>\n<p>To delete the functions it is just as any other piece of code that you want to remove, select it and delete with the keyboard.</p>\n"}},function(e,n){e.exports={title:"Challenge Disable an Element Using jQuery",order:5,body:"<h1>Disable an Element Using jQuery</h1>\n<p>You can also change the non-CSS properties of HTML elements with jQuery. For example, you can disable buttons.</p>\n<p>When you disable a button, it will become grayed-out and can no longer be clicked.</p>\n<p>jQuery has a function called <code>.prop()</code> that allows you to adjust the properties of elements.</p>\n<p>Here’s how you would disable all buttons: <code>$('#button').prop('disabled', true);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Ditch Custom CSS for Bootstrap",order:5,body:'<h1>Ditch Custom CSS for Bootstrap</h1>\n<p>We can clean up our code and make our Cat Photo App look more conventional by using Bootstrap’s built-in styles instead of the custom styles we created earlier.</p>\n<p>All you need to know is the built in <a href="http://getbootstrap.com/css/">classes</a>.</p>\n'}},function(e,n){e.exports={title:"Challenge Divide One Number by Another with JavaScript",order:5,body:"<h1>Divide One Number by Another with JavaScript</h1>\n<p>JavaScript uses use the <code>/</code> symbol for division. <code>var quotient = 66 / 33;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Escape Sequences in Strings",order:5,body:"<h1>Escape Sequences in Strings</h1>\n<p>Quotes are not the only characters that can be escaped inside a string. Here is a table of common escape sequences:</p>\n<table>\n<thead>\n<tr>\n<th><strong>Code</strong></th>\n<th><strong>Output</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>’</td>\n<td>single quote</td>\n</tr>\n<tr>\n<td>&quot;</td>\n<td>double quote</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>backslash</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>new line</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>carriage return</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>tab</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>backspace</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>form feed</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note that the backslash itself must be escaped in order to display as a backslash.</em></p>\n"}},function(e,n){e.exports={title:"Challenge Escaping Literal Quotes in Strings",order:5,body:"<h1>Escaping Literal Quotes in Strings</h1>\n<p>In JavaScript, you can escape a quote from considering it as an end of string quote by placing a backslash <code>\\</code> in front of the quote.</p>\n<p><code>&quot;Alan said, \\&quot;Peter is learning JavaScript\\&quot;.&quot;</code></p>\n<p>This signals JavaScript that the following quote is not the end of the string, but should instead appear inside the string.</p>\n<p>However another option is to alternate quotation marks if possible.  <code>'Alan said, &quot;Peter is learning JavaScript&quot;'</code> this would also work.</p>\n"}},function(e,n){e.exports={title:"Challenge Fill in the Blank with Placeholder Text",order:5,body:'<p>Web developers traditionally use <strong>lorem ipsum</strong> text as placeholder text. It’s called lorem ipsum text because those are the first two words of a famous passage by Cicero of Ancient Rome.</p>\n<p><strong>lorem ipsum</strong> text has been used as placeholder text by typesetters since the 16th century, and this tradition continues on the web.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Filter Arrays with filter",order:5,body:'<p>Filter is a useful method that can filter out values that don’t match a certain criteria.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5,6,7,8,9,10];\n  // Only change code below this line.<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.filter(</span>function(val<span class="hljs-function">)</span> {\n <span class="hljs-instruction"> return </span>val &lt;= 5;\n}<span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Find Numbers with Regular Expressions",order:5,body:"<h1>Find Numbers with Regular Expressions</h1>\n<p>We can use special selectors in Regular Expressions to select a particular type of value.</p>\n<p>One such selector is the digit selector <code>\\d</code> which is used to grab the numbers in a string.</p>\n<p>It is used like this: <code>/\\d+/g</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Find White Space with Regular Expressions",order:5,body:"<h1>Find White Space with Regular Expressions</h1>\n<p>We can also use selectors like<code>\\s</code> to find spaces in a string.</p>\n<p>It is used like this:</p>\n<p><code>/\\s+/g</code></p>\n"}},function(e,n){e.exports={title:"Challenge Find the Length of a String",order:5,body:"<h1>Find the Length of a String</h1>\n<p>You can find the <em>length</em> of a String value by writing <code>.length</code> after the string variable or string literal.</p>\n<p><code>&quot;Alan Peter&quot;.length; // 10</code></p>\n<p>For example, if we created a variable <code>var firstName = &quot;Charles&quot;</code>, we could find out how long the string “Charles” is by using the <code>firstName.length</code> property.</p>\n"}},function(e,n){e.exports={title:"Challenge Finding a Remainder in Javascript",order:5,body:'<h1>Finding a Remainder in Javascript</h1>\n<p>The <em>remainder operator</em> <code>%</code> gives the remainder of the division of two numbers.</p>\n<h2>Example</h2>\n<pre><code><span class="hljs-number">5</span> % <span class="hljs-number">2</span> = <span class="hljs-number">1</span> because\nMath.<span class="hljs-built_in">floor</span>(<span class="hljs-number">5</span> / <span class="hljs-number">2</span>) = <span class="hljs-number">2</span> (Quotient)\n<span class="hljs-number">2</span> * <span class="hljs-number">2</span> = <span class="hljs-number">4</span>\n<span class="hljs-number">5</span> - <span class="hljs-number">4</span> = <span class="hljs-number">1</span> (Remainder)\n</code></pre>\n<h2>Usage</h2>\n<p>In mathematics, a number can be checked even or odd by checking the remainder of the division of the number by 2.</p>\n<pre><code><span class="hljs-number">17</span> % <span class="hljs-number">2</span> = <span class="hljs-number">1</span> (<span class="hljs-number">17</span> is Odd)\n<span class="hljs-number">48</span> % <span class="hljs-number">2</span> = <span class="hljs-number">0</span> (<span class="hljs-number">48</span> is Even)\n</code></pre>\n<p><strong>Note</strong> Do not confuse it with <em>modulus</em> <code>%</code> does not work well with negative numbers.</p>\n'}},function(e,n){e.exports={title:"Challenge Generate Random Fractions with JavaScript",order:5,body:"<h1>Generate Random Fractions with JavaScript</h1>\n<p>JavaScript has a <code>Math.random()</code> function that generates a random decimal number.</p>\n"}},function(e,n){e.exports={title:"Challenge Generate Random Whole Numbers with JavaScript",order:5,body:"<p>It’s great that we can create random decimal numbers, but it’s even more useful if we lot more useful to generate a random whole number.</p>\n<p>To achieve this we can multiply the random number by ten and use the <code>Math.floor()</code> to convert the decimal number to a whole number</p>\n<p><code>Math.floor(Math.random()*10)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Generate Random Whole Numbers within a Range",order:5,body:'<h1>Generate Random Whole Numbers within a Range</h1>\n<blockquote>\n<p>We can use a certain mathematical expression to get a random number between two numbers.</p>\n</blockquote>\n<p><code>Math.floor(Math.random() * (max - min + 1)) + min</code></p>\n<p><strong>See Also:</strong> :scroll: <a href="https://freecodecamp.com/wiki/Challenge-Generate-Random-Whole-Numbers-within-a-Range#explanation"><strong>Explanation</strong></a> | <a href="https://stackoverflow.com/questions/1527803/generating-random-numbers-in-javascript-in-a-specific-range/1527820#1527820">Explanation in SO</a></p>\n<h2>Explanation</h2>\n<blockquote>\n<p><code>Math.random()</code> creates a floating point number between <code>0</code> (inclusive) and <code>1</code> (exclusive)</p>\n</blockquote>\n<p><strong>Q:</strong> Create a random <strong>whole</strong> number between <code>2</code> (inclusive, min) and <code>6</code> (inclusive, max) i.e. create a random <em>whole</em> number between <code>min</code> (<em>inclusive</em>) and max (<em>inclusive</em>)</p>\n<p><strong>A:</strong> <code>Math.floor(Math.random() * (6 - 2 + 1)) + 2</code></p>\n<p>Let’s write <code>Math.random() * max</code> which creates a floating point number between <code>0</code> (inclusive) and <code>max</code> (<em>exclusive</em>).</p>\n<p>E.g. <code>Math.random() * 6</code> generates a random floating point number between <code>0</code> (inclusive) and <code>6</code> (<em>exclusive</em>).</p>\n<hr>\n<p>But we need to generate a whole number between <code>0</code> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>) first. So we do a trick :wink:.</p>\n<p>What if we create a number between <code>0</code> and <code>max + 1</code>. That way, we also include the <code>max</code> number. And then apply the <code>Math.floor</code> method on the result to get a whole number between <strong><code>0</code></strong> (<em>inclusive</em>, min) and <code>max</code> (<em>inclusive</em>).</p>\n<p>We can write it as <code>Math.floor(Math.random() * (max + 1))</code>.</p>\n<p>E.g. <code>Math.floor(Math.random() * (6 + 1))</code> generates a random floating point number between <strong><code>0</code></strong> (<em>inclusive</em>, min) and <strong><code>6</code></strong> (<em>inclusive</em>, max).</p>\n<p><strong><code>0 1 2 3 4 5 6</code></strong></p>\n<blockquote>\n<p>The <code>Math.random() * (6 + 1)</code> part generates a floating point number between <code>0</code> (<em>inclusive</em>) and <code>7</code> (<em>exclusive</em>).</p>\n</blockquote>\n<p><strong><code>0..1..2..3..4..5..6..</code></strong></p>\n<hr>\n<p>But that doesn’t solve our given question yet :disappointed:. We need to generate a random whole number between <strong><code>min</code></strong> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>). So we need another trick :wink:.</p>\n<p>What if we write <code>Math.floor(Math.random() * ((max + 1) - min))</code> that will generate a whole number between <code>0</code> and <code>(max + 1) - min</code>.</p>\n<p>E.g. <code>Math.floor(Math.random() * ((6 + 1) - 2))</code> <strong>=</strong> <code>Math.floor(Math.random() * 5)</code> that will generate a whole number between <code>0</code> (inclusive) and <code>4</code> (inclusive).</p>\n<p><strong><code>0 1 2 3 4</code></strong></p>\n<hr>\n<p>But still the question is unsolved :disappointed:. We need the random number between <code>min</code> (<strong>inclusive</strong>) and <code>max</code> (<strong>inclusive</strong>).</p>\n<p>So we simply write <code>Math.floor(Math.random() * ((max + 1) - min)) + min</code> :stuck_out_tongue_winking_eye:.</p>\n<p>E.g. <code>Math.floor(Math.random() * ((6 + 1) - 2)) + 2</code> <strong>=</strong> <code>Math.floor(Math.random() * 5) + 2</code></p>\n<p><strong><code>2 3 4 5 6</code></strong></p>\n<p><strong>Now this answers our given question. <code>Math.floor(Math.random() * (max - min + 1) + min</code> correctly generates a random number between <code>min</code> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>) i.e. it generates a random whole number between <code>2</code> (inclusive) and <code>6</code> (inclusive).</strong> :smiley:</p>\n'}},function(e,n){e.exports={title:"Challenge Get Geo location Data",order:5,body:'<h2>Get Geo-location Data</h2>\n<p>Every browser has a built in navigator that can give us this information.</p>\n<p>The navigator will get our user’s current longitude and latitude.</p>\n<p>You will see a prompt to allow or block this site from knowing your current location. The challenge can be completed either way, as long as the code is correct.</p>\n<p>By selecting allow you will see the text on the output phone change to your latitude and longitude</p>\n<p>Here’s some code that does this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (navigator.geolocation) {\n\n  navigator.geolocation.getCurrentPosition(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">position</span>) </span>{\n\n    $(<span class="hljs-string">"#data"</span>).html(<span class="hljs-string">"latitude: "</span> + position.coords.latitude + <span class="hljs-string">"&lt;br&gt;longitude: "</span> + position.coords.longitude);\n\n  });\n\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Get JSON with the jQuery getJSON Method",order:5,body:'<h1>Get JSON with the jQuery getJSON Method</h1>\n<p>Application Programming Interfaces - are tools that computers use to communicate with one another.</p>\n<p>Most web APIs transfer data in a format called JSON. JSON stands for JavaScript Object Notation. JSON is nothing more than object properties and their current values, sandwiched between a <code>{</code> and a <code>}</code>.</p>\n<p>These properties and their values are often referred to as “key-value pairs”.</p>\n<p>Here is a sample of what it looks like.</p>\n<pre><code class="language-js">$.getJSON(<span class="hljs-string">"/json/cats.json"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">json</span>) </span>{\n\n   $(<span class="hljs-string">".message"</span>).html(<span class="hljs-built_in">JSON</span>.stringify(json));\n\n });\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Give Each Element a Unique ID",order:5,body:"<h1>Give Each Element a Unique ID</h1>\n<p>We will also want to be able to use jQuery to target each button by its unique id. So we add an unique id to each button.</p>\n"}},function(e,n){e.exports={title:"Challenge Give a Background Color to a Div Element",order:5,body:"<p>You can set an element’s background color with the <code>background-color</code> attribute.</p>\n<p>For example, if you wanted an element’s background color to be green, you’d use <code>.green-background { background-color: green; }</code> within your <code>style</code> element.</p>\n"}},function(e,n){e.exports={title:"Challenge Give your JavaScript Slot Machine some stylish images",order:5,body:"<h1>Give your JavaScript Slot Machine some stylish images</h1>\n<p>We’ve already set up the images for you in an array called images. We can use different indexes to grab each of these.</p>\n<p>Here’s how we would set the first slot to show a different image depending on which number its random number generates:</p>\n<p><code>$($('.slot')[0]).html('&lt;img src = &quot;' + images[slotOne-1] + '&quot;&gt;');</code></p>\n"}},function(e,n){e.exports={title:"Challenge Global Scope And Functions",order:5,body:"<p>#Challenge: Global Scope and Functions</p>\n<p>In JavaScript, <code>scope</code> refers to the visibility of variables. Variables which are defined outside of a function block have <code>Global</code> scope. This means, they can be seen everywhere in your JavaScript code.</p>\n<p>Variables which are used without the <code>var</code> keyword are automatically created in the <code>global</code> scope. This can create unintended consequences elsewhere in your code or when running a function again. You should always declare your variables with <code>var</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Global Vs Local Scope In Functions",order:5,body:'<p>#Challenge: Global vs Local Scope in Functions</p>\n<p>It is possible to have both <code>local</code> and <code>global</code> variables with the same name. When you do this, the local variable takes precedence over the <code>global</code> variable.</p>\n<p>In this example:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> someVar = <span class="hljs-string">"Hat"</span>;\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFun</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> someVar = <span class="hljs-string">"Head"</span>;\n  <span class="hljs-keyword">return</span> someVar;\n}\n</code></pre>\n<p>The function <code>myFun</code> will return <code>&quot;Head&quot;</code> because the <code>local</code> version of the variable is present.</p>\n'}},function(e,n){e.exports={title:"Challenge Headline with the h2 Element",order:5,body:'<p>You can create different levels of Heading elements by using <strong>h1, h2, h3, h4, h5, h6</strong> which will result on different sizes.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge House our page within a Bootstrap Container Fluid Div",order:5,body:'<h1>House our page within a Bootstrap Container Fluid Div</h1>\n<p>To make the content responsive, we use the <code>container-fluid</code> class.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n&lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Import a Google Font",order:5,body:"<p>To import a font from Google or any other site, this is the format that you should follow: <code>&lt;link href=&quot;http://fonts.googleapis.com/css?family=Lobster&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</code></p>\n<p>Once imported, it can then be used in the font-family property</p>\n"}},function(e,n){e.exports={title:"Challenge Increment a Number with Javascript",order:5,body:"<h1>Increment a Number with Javascript</h1>\n<p>You can easily increment or add <code>1</code> to a variable with the <code>++</code> operator.</p>\n<p><code>i++;</code></p>\n<p>is the equivalent of</p>\n<p><code>i = i + 1;</code></p>\n<p><strong>Note</strong> The entire line becomes <code>i++;</code>, eliminating the need for the equal sign.</p>\n"}},function(e,n){e.exports={title:"Challenge Inform with the Paragraph Element",order:5,body:'<p><code>p</code> elements are the preferred element for normal-sized paragraph text on websites. P is short for “paragraph”.</p>\n<p>You can create a p element like so: <code>&lt;p&gt;I\'m a p tag!&lt;/p&gt;</code>.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Hello Paragraph<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Inherit Styles from the Body Element",order:5,body:'<p>The <code>body</code> element can be styled just like any other.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace\n  </span></span></span>}\n\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Initializing Variables with the Equal Operator",order:5,body:"<h1>Initializing Variables with the Equal Operator</h1>\n<p>In most cases you will see a variable being declared and given an initial value all at the same time. This allows you to use it right away with a proper value.</p>\n<p><code>var myVar = 0;</code></p>\n<p>Creates a new variable called <code>myVar</code> and assigns it an initial value of <code>0</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Introducing Else If Statements",order:5,body:'<p>#Challenge: Introducing Else If Statements</p>\n<p>If you have multiple conditions that need to be addressed, you can chain <code>if</code> statements together with <code>else if</code> statements.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">15</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Bigger than 15"</span>;\n} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">5</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Smaller than 5"</span>;\n} <span class="hljs-keyword">else</span> {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Between 5 and 15"</span>;\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Introducing Else Statements",order:5,body:'<p>#Challenge: Introducing Else Statements</p>\n<p>When a condition for an <code>if</code> statement is true, the block of code following it is executed. What about when that condition is false? Normally nothing would happen. With an <code>else</code> statement, an alternate block of code can be executed.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">10</span>) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Bigger than 10"</span>;\n} <span class="hljs-keyword">else</span> {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"10 or Less"</span>;\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Introducing Javascript Object Notation Json",order:5,body:'<p>#Challenge: Introducing JavaScript Object Notation JSON</p>\n<p>JavaScript Object Notation or <code>JSON</code> uses the format of JavaScript Objects to store data. JSON is flexible because it allows for <code>Data Structures</code> with arbitrary combinations of <code>strings</code>, <code>numbers</code>, <code>booleans</code>, <code>arrays</code>, and <code>objects</code>.</p>\n<p>Here is an example of a JSON object:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourMusic = [\n  {\n    <span class="hljs-string">"artist"</span>: <span class="hljs-string">"Daft Punk"</span>,\n    <span class="hljs-string">"title"</span>: <span class="hljs-string">"Homework"</span>,\n    <span class="hljs-string">"release_year"</span>: <span class="hljs-number">1997</span>,\n    <span class="hljs-string">"formats"</span>: [ \n      <span class="hljs-string">"CD"</span>, \n      <span class="hljs-string">"Cassette"</span>, \n      <span class="hljs-string">"LP"</span> ],\n    <span class="hljs-string">"gold"</span>: <span class="hljs-literal">true</span>\n  }\n];\n</code></pre>\n<p>This is an array of objects and the object has various pieces of <code>metadata</code> about an album. It also has a nested <code>formats</code> array. Additional album records could be added to the top level array.</p>\n'}},function(e,n){e.exports={title:"Challenge Invert Regular Expression Matches with JavaScript",order:5,body:"<h1>Invert Regular Expression Matches with JavaScript</h1>\n<p>Use<code>/\\S/gi</code>; to match everything that isn’t a space in the string.</p>\n<p>You can invert any match by using the uppercase version of the selector <code>\\s</code> versus <code>\\S</code> for example.</p>\n"}},function(e,n){e.exports={title:"Challenge Iterate Odd Numbers With a For Loop",order:5,body:'<h1>Iterate Odd Numbers With a For Loop</h1>\n<p>For loops don’t have to iterate one at a time. By changing our <code>final-expression</code>, we can count by even numbers.</p>\n<p>We’ll start at <code>i = 0</code> and loop while <code>i &lt; 10</code>. We’ll increment <code>i</code> by 2 each loop with <code>i += 2</code>.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourArray = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i += <span class="hljs-number">2</span>) {\n\n  ourArray.push(i);\n\n}\n</code></pre>\n<p>ourArray will now contain <code>[0,2,4,6,8]</code></p>\n'
}},function(e,n){e.exports={title:"Challenge Iterate Through An Array With A For Loop",order:5,body:'<p>#Challenge: Iterate Through an Array with a For Loop</p>\n<p>A common task in Javascript is to iterate through the contents of an array. One way to do that is with a <code>for</code> loop. This code will output each element of the array <code>arr</code> to the console:</p>\n<pre><code class="language-js">    <span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i &lt; arr.length; i++) {\n       <span class="hljs-built_in">console</span>.log(arr[i]);\n    }\n</code></pre>\n<p>Remember that Arrays have zero-based numbering, which means the last index of the array is length - 1. Our <code>condition</code> for this loop is i &lt; arr.length, which stops when i is at length - 1.</p>\n'}},function(e,n){e.exports={title:"Challenge Iterate over Arrays with map",order:5,body:'<p>Using <em>map</em> is the best way to iterate through an array or object. Map uses a function to pretty much do whatever you want it to do. It will pass each value to the callback function.</p>\n<pre><code>//Use map to<span class="hljs-instruction"> add </span>three to each value in the<span class="hljs-instruction"> array\n</span>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.map(</span>function(val<span class="hljs-function">)</span>{\n <span class="hljs-instruction"> return </span>val + 3;\n}<span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Iterate with JavaScript For Loops",order:5,body:'<h1>Iterate with JavaScript For Loops</h1>\n<p>The most common type of JavaScript loop is called a <code>for loop</code> because it runs <code>for</code> a specific number of times.</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> ourArray</span> = [];\n<span class="hljs-keyword">for</span>(<span class="hljs-variable"><span class="hljs-keyword">var</span> i</span> = <span class="hljs-number">0</span>; i <span class="hljs-type">&lt; 5; i++) {\n  ourArray.push(i);\n}\n</span></code></pre>\n<p>ourArray will now contain [0,1,2,3,4]</p>\n<h2>More about for loops</h2>\n<pre><code><span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) {  <span class="hljs-comment">// There are 3 parts here</span>\n</code></pre>\n<p>There are three parts to for loop.  They are separated by semicolons.</p>\n<ol>\n<li>\n<p>The initialization: <code>var i = 0;</code> - This code runs only once at the start of the loop. It’s usually used to declare the counter variable (with <code>var</code>) and initialize the counter (in this case it is set to 0).</p>\n</li>\n<li>\n<p>The condition: <code>i &lt; 5;</code> - The loop will run as long as this is <code>true</code>. That means that as soon as <code>i</code> is equal to 5, the loop will stop looping.  Note that the inside of the loop will never see <code>i</code> as 5 because it will stop before then.  If this condition is initially <code>false</code>, the loop will never execute.</p>\n</li>\n<li>\n<p>The increment: <code>i++</code> - This code is run at the end of each loop. It’s usually a simple increment (<code>++</code> operator), but can really be any mathematical transformation. It is used to move the counter (<code>i</code>) forward (or backwards, or whatever.</p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"Challenge Iterate with JavaScript While Loops",order:5,body:'<h1>Iterate with JavaScript While Loops</h1>\n<p>Another type of JavaScript loop is called a <code>while loop</code> because it runs <code>while</code> something is true, and stops once that something is no longer true.</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> ourArray</span> = [];\n<span class="hljs-variable"><span class="hljs-keyword">var</span> i</span> = <span class="hljs-number">0</span>;\n<span class="hljs-keyword">while</span>(i <span class="hljs-type">&lt; 5) {\n  ourArray.push(i);\n  i++;\n}\n</span></code></pre>\n'}},function(e,n){e.exports={title:"Challenge Join Strings with .join",order:5,body:"<p>We can use the <code>.join()</code> method to join each element in an array into a string separated by whatever delimiter you provide as an argument to the join operation.</p>\n<p><code>var joinMe = joinMe.join(&quot; &quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Label Bootstrap Buttons",order:5,body:'<h1>Label Bootstrap Buttons</h1>\n<p>Just like we labeled our <a href="https://freecodecamp.com/wiki/Challenge-Label-Bootstrap-Wells">wells</a>, we want to label our buttons.</p>\n'}},function(e,n){e.exports={title:"Challenge Label Bootstrap Wells",order:5,body:"<h1>Label Bootstrap Wells</h1>\n<p>You can add labels to the wells by using the headers <code>&lt;h4&gt;</code> above the well divs.</p>\n"}},function(e,n){e.exports={title:"Challenge Learn how Script Tags and Document Ready Work",order:5,body:'<h1>Learn how Script Tags and Document Ready Work</h1>\n<p>For some reason FCC likes to introduce <code>jQuery</code> before JavaScript itself.</p>\n<p>To add JS to your HTML, you need a <code>script</code> tag.  Your browser will run any JavaScript inside a script element, including jQuery.</p>\n<p>Inside your script element, add this code: <code>$(document).ready(function() {</code> to your script. Then close it on the following line (still inside your script element) with: <code>});</code></p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript"> $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n\n});</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Line up Form Elements Responsively with Bootstrap",order:5,body:'<h1>Line up Form Elements Responsively with Bootstrap</h1>\n<p>We line up the form elements the same way we do with others, using divs.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-7"</span>&gt;&lt;input type=<span class="hljs-string">"text"</span> <span class="hljs-type">class</span>=<span class="hljs-string">"form-control"</span> placeholder=<span class="hljs-string">"cat photo URL"</span> required&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=col-xs-<span class="hljs-number">5</span>&gt;&lt;button type=<span class="hljs-string">"submit"</span> <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-primary"</span>&gt;&lt;i <span class="hljs-type">class</span>=<span class="hljs-string">"fa fa-paper-plane"</span>&gt;&lt;/i&gt; Submit&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Link to External Pages with Anchor Elements",order:5,body:"<p><code>a</code> elements, also known as anchor elements, are used to link to content outside of the current page.</p>\n<p>Here’s an example: <code>&lt;p&gt;Here's a &lt;a href=&quot;http://freecodecamp.com&quot;&gt; link to Free Code Camp&lt;/a&gt; for you to follow.&lt;/p&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Local Scope And Functions",order:5,body:'<p>#Challenge: Local Scope and Functions</p>\n<p>Variables which are declared within a function, as well as the function parameters have local scope. That means, they are only visible within that function.</p>\n<p>Here is a function <code>myTest</code> with a local variable called <code>loc</code>.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myTest</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> loc = <span class="hljs-string">"foo"</span>;\n  <span class="hljs-built_in">console</span>.log(loc);\n}\nmyTest(); <span class="hljs-comment">// "foo"</span>\n<span class="hljs-built_in">console</span>.log(loc); <span class="hljs-comment">// "undefined"</span>\n</code></pre>\n<p><code>loc</code> is not defined outside of the function.</p>\n'}},function(e,n){e.exports={title:"Challenge Make Circular Images with a Border Radius",order:5,body:'<p>You can also use percentage to <code>border-radius</code> to make things round.</p>\n<pre><code><span class="hljs-class">.thick-green-border</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">border-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-width</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-style</span>:<span class="hljs-value"> solid</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">50%</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Make Dead Links using the Hash Symbol",order:5,body:"<p>Replace your a element’s <code>href</code> attribute with a <code>#</code>, also known as a hash symbol, to turn it into a dead link. Sometimes you want to add a elements to your website before you know where they will link.</p>\n<p>This is also handy when you’re changing the behavior of a link using jQuery, which we’ll learn about later.</p>\n"}},function(e,n){e.exports={title:"Challenge Make Images Mobile Responsive",order:5,body:"<h1>Make Images Mobile Responsive</h1>\n<p>When using Bootstrap, if you want an image to be responsive, all you have to do is add the class <code>img-responsive</code> to it. <code>&lt;img class=&quot;img-responsive&quot; src=&quot;http://bit.ly/fcc-running-cats&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Make Instances of Objects with a Constructor Function",order:5,body:'<p>A function that creates objects is called a <em>constructor</em>, my favorite way of creating objects when you have to create more than one of the same object. You can also edit the second object to add more properties if needed. This is called creating <em>instances</em> of an object.</p>\n<p>Each new instance of this object inherits all the properties and methods of your original object.</p>\n<pre><code>var Car =<span class="hljs-function"> function(</span><span class="hljs-function">)</span> {\n   this.wheels = 4;\n};\n\n// New<span class="hljs-instruction"> instance </span>of Car object.\nvar myCar =<span class="hljs-instruction"> new </span>Car(<span class="hljs-function">)</span>;\n\n//Add the property <span class="hljs-string">"engines"</span> to myCar,<span class="hljs-instruction"> and </span>make it a number.\nmyCar.engines = 1;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Make Object Properties Private",order:5,body:'<p>Objects have their own attributes, called <em>properties</em>, and their own functions, called <em>methods</em>.</p>\n<p>You can use the <code>this</code> keyword to reference <em>public properties and methods</em> of the current objects. However, when You need to create private ones so they are not accessible from the outside of the object you just remove the keyword <code>this</code> from the object property or method declaration and declare it with <code>var</code> so that it is private outside its scope.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Bike = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> speed = <span class="hljs-number">100</span>; <span class="hljs-comment">// private</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUnit</span>(<span class="hljs-params">value</span>) </span>{ <span class="hljs-comment">// private</span>\n    <span class="hljs-keyword">return</span> value + <span class="hljs-string">"KM/H"</span>;\n  }\n\n  <span class="hljs-keyword">this</span>.getSpeed = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{  <span class="hljs-comment">// public</span>\n    <span class="hljs-keyword">return</span> addUnit(speed);\n  };\n\n};\n</code></pre>\n<p>Another example:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Cake = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n\n  <span class="hljs-keyword">var</span> loot = <span class="hljs-number">2</span>;\n  <span class="hljs-comment">// Getter to know how much loot you have</span>\n  <span class="hljs-keyword">this</span>.getLoot = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> loot;\n  };\n\n  <span class="hljs-comment">// Setter to change the ammount of loot</span>\n  <span class="hljs-keyword">this</span>.setLoot = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>)</span>{\n    loot = num;\n  };\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Make Unique Objects by Passing Parameters to our Constructor",order:5,body:'<h1>Make Unique Objects by Passing Parameters to our Constructor</h1>\n<p>When you have a constructor but don’t want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Car = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">wheels, seats, engines</span>) </span>{\n\n  <span class="hljs-keyword">this</span>.wheels = wheels;\n\n  <span class="hljs-keyword">this</span>.seats = seats;\n\n  <span class="hljs-keyword">this</span>.engines = engines;\n\n};\n</code></pre>\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\n<p>This will result in:</p>\n<pre><code class="language-js">{\n\n  wheels: <span class="hljs-number">6</span>,\n\n  seats: <span class="hljs-number">3</span>,\n\n  engines: <span class="hljs-number">1</span>\n\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Manipulate Arrays With pop()",order:5,body:"<h1>Manipulate Arrays With pop()</h1>\n<p>Another way to change the data in an array is with the <code>.pop()</code> function.</p>\n<p><code>.pop()</code> is used to “pop” a value off of the end of an array. We can retrieve this value by performing <code>pop()</code> in a variable declaration.</p>\n<p>Any type of variable can be “popped” off of an array.</p>\n"}},function(e,n){e.exports={title:"Challenge Manipulate Arrays With push()",order:5,body:"<h1>Manipulate Arrays With push()</h1>\n<p>Not only can you <code>pop()</code> data off of the end of an array, you can also <code>push()</code> data onto the end of an array.</p>\n<p><code>myArray.push([&quot;dog&quot;, 3]);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Manipulate Arrays With shift()",order:5,body:"<h1>Manipulate Arrays With shift()</h1>\n<p><code>shift()</code> removes the first element unlike <code>pop()</code> which removes the last.</p>\n"}},function(e,n){e.exports={title:"Challenge Manipulate Arrays With unshift()",order:5,body:"<h1>Manipulate Arrays With unshift()</h1>\n<p><code>myArray.unshift('Paul');</code> Basically you call <code>unshift</code> and pass what was deleted.</p>\n"}},function(e,n){e.exports={title:"Challenge Manipulate JavaScript Objects",order:5,body:"<h1>Manipulate JavaScript Objects</h1>\n<p>We can add properties to objects like this:</p>\n<p><code>myObject.myProperty = &quot;myValue&quot;;</code></p>\n<p>We can also delete them like this:</p>\n<p><code>delete(myObject.myProperty);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Modify Array Data With Indexes",order:5,body:'<h1>Modify Array Data With Indexes</h1>\n<p>We can also modify the data stored in arrays by using indexes.</p>\n<p>For example:</p>\n<pre><code>var ourArray = [<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>];\nourArray[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>; <span class="hljs-comment">// equals [1,2,1]</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Multiple Identical Options In Switch Statements",order:5,body:'<p>#Challenge: Multiple Identical Options in Switch Statements</p>\n<p>If the <code>break</code> statement is ommitted from a <code>switch</code> statement’s <code>case</code>, the following <code>case</code> statement(s) are executed until a <code>break</code> is encountered. If you have multiple inputs with the same output, you can represent them in a <code>switch</code> statement like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">switch</span>(val) {\n  <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:\n  <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n  <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:\n    result = <span class="hljs-string">"1, 2, or 3"</span>;\n    <span class="hljs-keyword">break</span>;\n  <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:\n    result = <span class="hljs-string">"4 alone"</span>;\n}\n</code></pre>\n<p>Cases for 1, 2, and 3 will all produce the same result.</p>\n'}},function(e,n){e.exports={title:"Challenge Multiply Two Numbers with JavaScript",order:5,body:"<h1>Multiply Two Numbers with JavaScript</h1>\n<p>JavaScript uses use the <code>*</code> symbol for multiplication.</p>\n<p><code>var product = 8 * 10;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Nest Many Elements within a Single Div Element",order:5,body:'<p>The <code>div</code> element, also known as a division element, is a general purpose container for other elements.</p>\n<p>The div element is probably the most commonly used HTML element of all. It’s useful for passing the CSS of its own class declarations down to all the elements that it contains.</p>\n<p>Just like any other non-self-closing element, you can open a <code>div</code> element with <code>&lt;div&gt;</code> and close it on another line with <code>&lt;/div&gt;</code>.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">div</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Things cats love:<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">ul</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>cat nip<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>laser pointers<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>lasagna<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n <span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Top 3 things cats hate:<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>flea treatment<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>thunder<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>other cats<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n <span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Nest an Anchor Element within a Paragraph",order:5,body:"<p>Nesting is simple, just add one element inside another: <code>&lt;p&gt; click here for &lt;a href=&quot;http://www.catphotoapp.com&quot;&gt;cat photos&lt;/a&gt;&lt;/p&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Nest one Array within Another Array",order:5,body:"<h1>Nest one Array within Another Array</h1>\n<p>You can nest arrays within other arrays, like this:<code>[[&quot;Bulls&quot;, 43]]</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Nesting For Loops",order:5,body:'<p>#Challenge: Nesting For Loops</p>\n<p>If you have a multi-dimensional array, you can use the same logic as the prior Challenge to loop through both the array and any sub-arrays. Here is an example:</p>\n<pre><code class="language-js">    <span class="hljs-keyword">var</span> arr = [\n      [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]\n    ];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i &lt; arr.length; i++) {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>; j &lt; arr[i].length; j++) {\n        <span class="hljs-built_in">console</span>.log(arr[i][j]);\n      }\n    }\n</code></pre>\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\n'}},function(e,n){e.exports={title:"Challenge Override All Other Styles by using Important",order:5,body:"<p>In many situations, you will use CSS libraries. These may accidentally override your own CSS. So when you absolutely need to be sure that an element has specific CSS, you can use !important.</p>\n<p>An example of how to do this is: <code>color: red !important;</code> This will make sure that we use the wanted property regardless of other overrides.</p>\n"}},function(e,n){e.exports={title:"Challenge Override Class Declarations by Styling ID Attributes",order:5,body:'<p>We can use <code>id</code> to override  styling too. <code>id</code> should have a higher priority than <code>class</code>, so its rules apply if a conflict occurs.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n  }</span>\n  <span class="hljs-class">.pink-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> pink</span></span>;\n  }</span>\n  <span class="hljs-class">.blue-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> blue</span></span>;\n  }</span>\n  <span class="hljs-id">#orange-text</span><span class="hljs-rules">{<span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value">orange</span></span>;}</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"pink-text blue-text"</span> <span class="hljs-attribute">id</span>=<span class="hljs-value">"orange-text"</span>&gt;</span>Hello World!<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Override Class Declarations with Inline Styles",order:5,body:"<p>Remember, in line styles look like this: <code>&lt;h1 style=&quot;color: green&quot;&gt;</code> They will override everything else that was changing the text color of h1.</p>\n"}},function(e,n){e.exports={title:"Challenge Override Styles in Subsequent CSS",order:5,body:"<p>Your classes will override the body’s CSS, if we add a new class that changes the same property, the last one will be the one applied.</p>\n"}},function(e,n){e.exports={title:"Challenge Passing Values To Functions With Arguments",order:5,body:'<p>#Challenge: Passing Values to Functions with Arguments</p>\n<p><code>Parameters</code> are variables that act as placeholders for the values that are to be input to a function when it is called. When a function is defined, it is typically defined along with one or more parameters. The actual values that are input (or “<em>passed</em>”) into a function when it is called are known as <code>arguments</code>.</p>\n<p>Here is a function with two parameters, <code>param1</code> and <code>param2</code>:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testFun</span>(<span class="hljs-params">param1, param2</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(param1, param2);\n}\n</code></pre>\n<p>Then we can call testFun:</p>\n<p><code>testFun(&quot;Hello&quot;, &quot;World&quot;);</code></p>\n<p>We have passed two arguments, <code>&quot;Hello&quot;</code> and <code>&quot;World&quot;</code>. Inside the function, <code>param1</code> will equal “Hello” and <code>param2</code> will equal “World”. Note that you could call <code>testFun</code> again with different arguments and the parameters would take on the value of the new arguments.</p>\n'}},function(e,n){e.exports={title:"Challenge Perform Arithmetic Operations on Decimals with JavaScript",order:5,body:"<h1>Perform Arithmetic Operations on Decimals with JavaScript</h1>\n<p>In JavaScript, you can perform calculations with decimal numbers, just like whole numbers.</p>\n<p><code>var quotient = 4.4 / 2.0; // equals 2.2</code></p>\n"}},function(e,n){e.exports={title:"Challenge Prefilter JSON",order:5,body:'<h1>Prefilter JSON</h1>\n<p>The <strong>filter()</strong> method creates a new array with all elements that pass the test implemented by the provided function.</p>\n<p>So when you don’t want to work with all the elements from the array then you can use filter.</p>\n<p>Let’s filter out the cat who’s “id” key has a value of 1.</p>\n<p>Here’s the code to do this:</p>\n<pre><code class="language-js">\njson = json.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n\n  <span class="hljs-keyword">return</span>(val.id !== <span class="hljs-number">1</span>);\n\n});\n</code></pre>\n<p>More about filter:</p>\n'}},function(e,n){e.exports={title:"Challenge Prioritize One Style Over Another",order:5,body:'<p>Classes to individual elements take priority over general styles.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n  }</span>\n  <span class="hljs-class">.pink-text</span><span class="hljs-rules">{<span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> pink</span></span>;}</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"pink-text"</span>&gt;</span>Hello World!<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n<p>This makes for a pink h1 instead of a green one.</p>\n'}},function(e,n){e.exports={title:"Challenge Quoting Strings with Single Quotes",order:5,body:"<h1>Quoting Strings with Single Quotes</h1>\n<p>String values in JavaScript may be written with single or double quotes, so long as you start and end with the same type of quote. Unlike some languages, single and double quotes are functionally identical in Javascript.</p>\n<p><code>&quot;This string has \\&quot;double quotes\\&quot; in it&quot;</code></p>\n<p>The value in using one or the other has to do with the need to escape quotes of the same type. If you have a string with many double quotes, this can be difficult to read and write. Instead, use single quotes:</p>\n<p><code>'This string has &quot;double quotes&quot; in it. And &quot;probably&quot; lots of them.'</code></p>\n"}},function(e,n){e.exports={title:"Challenge Remove Classes from an element with jQuery",order:5,body:"<h1>Remove Classes from an element with jQuery</h1>\n<p>The same way we can add classes using jQuery, we an also remove them with <code>removeClass()</code>.</p>\n<p><code>$(&quot;button&quot;).removeClass(&quot;btn-default&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Remove an Element Using jQuery",order:5,body:"<h1>Remove an Element Using jQuery</h1>\n<p>jQuery has a function called <code>.remove()</code> that will remove an HTML element entirely. <code>$(&quot;#target4&quot;).remove();</code></p>\n"}},function(e,n){e.exports={title:"Challenge Render Images from Data Sources",order:5,body:"<h1>Render Images from Data Sources</h1>\n<p>Obtaining image links from JSON objects has been explained already. However, how do you present that image as an actual image requires a bit of ingenuity, yet it is simple even if you don’t figure it out yourself. You have to generate html using the variable to complete the link like this: <code>html += &quot;&lt;img src = '&quot; + val.imageLink + &quot;'&gt;&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Replacing If Else Chains With Switch",order:5,body:'<p>#Challenge: Replacing If Else Chains with Switch</p>\n<p>If you have many options to choose from, a <code>switch</code> statement can be easier to write than many chained <code>if/if</code> else statements. The following:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span>(val === <span class="hljs-number">1</span>) {\n  answer = <span class="hljs-string">"a"</span>;\n} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val === <span class="hljs-number">2</span>) {\n  answer = <span class="hljs-string">"b"</span>;\n} <span class="hljs-keyword">else</span> {\n  answer = <span class="hljs-string">"c"</span>;\n}\n</code></pre>\n<p>can be replaced with:</p>\n<pre><code class="language-js"><span class="hljs-keyword">switch</span> (val) {\n  <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:\n    answer = <span class="hljs-string">"a"</span>;\n    <span class="hljs-keyword">break</span>;\n  <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n    answer = <span class="hljs-string">"b"</span>;\n    <span class="hljs-keyword">break</span>;\n  <span class="hljs-keyword">default</span>:\n    answer = <span class="hljs-string">"c"</span>;\n}\n</code></pre>\n'
}},function(e,n){e.exports={title:"Challenge Responsively Style Checkboxes",order:5,body:"<h1>Responsively Style Checkboxes</h1>\n<p>You can use Bootstrap’s <code>col-xs-*</code> classes on form elements, too! This way, our checkboxes will be evenly spread out across the page, regardless of how wide the screen resolution is.</p>\n<p>Nest all your checkboxes in a <code>&lt;div class=&quot;row&quot;&gt;</code> element. Then nest each of them in a <code>&lt;div class=&quot;col-xs-4&quot;&gt;</code> element.</p>\n"}},function(e,n){e.exports={title:"Challenge Responsively Style Radio Buttons",order:5,body:'<h1>Responsively Style Radio Buttons</h1>\n<p>You can use Bootstrap’s <code>col-xs-*</code> classes on <code>form</code> elements. That will make radio buttons evenly spread out across the page regardless of how wide the screen might be.</p>\n<p>Nest all of your radio buttons within a <code>&lt;div class=&quot;row&quot;&gt;</code> element. Then nest each of them within a <code>&lt;div class=&quot;col-xs-6&quot;&gt;</code> element.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">form</span> <span class="hljs-attribute">action</span>=<span class="hljs-value">"/submit-cat-photo"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"radio"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"indoor-outdoor"</span>&gt;</span> Indoor<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"radio"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"indoor-outdoor"</span>&gt;</span> Outdoor<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Loving<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Lazy<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Crazy<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"text"</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-value">"cat photo URL"</span> <span class="hljs-attribute">required</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"submit"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">form</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Return A Value From A Function With Return",order:5,body:'<p>#Challenge: Return a Value from a Function with Return</p>\n<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\n<p>##Example</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">plusThree</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> num + <span class="hljs-number">3</span>;\n}\n<span class="hljs-keyword">var</span> answer = plusThree(<span class="hljs-number">5</span>); <span class="hljs-comment">// 8</span>\n</code></pre>\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\n<p>A <code>return</code> statement will also end the execution of it’s parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>\n'}},function(e,n){e.exports={title:"Challenge Return Early Pattern For Functions",order:5,body:'<p>#Challenge: Return Early Pattern for Functions</p>\n<p>When a <code>return</code> statement is reached, the execution of the current function stops and control returns to the calling location.</p>\n<p>##Example</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFun</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"Hello"</span>);\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"World"</span>;\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"byebye"</span>)\n}\nmyFun();\n</code></pre>\n<p>The above outputs “Hello” to the console, returns “World”, but <code>&quot;byebye&quot;</code> is never output, because the function exits at the <code>return</code> statement.</p>\n'}},function(e,n){e.exports={title:"Challenge Returning Boolean Values From Functions",order:5,body:'<p>#Challenge: Returning Boolean Values from Functions</p>\n<p>You may recall from Comparison with the Equality Operator that all comparison operators return a boolean <code>true</code> or <code>false</code> value.</p>\n<p>A common <code>anti-pattern</code> is to use an <code>if/else</code> statement to do a comparison and then return <code>true/false</code>:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEqual</span>(<span class="hljs-params">a,b</span>) </span>{\n  <span class="hljs-keyword">if</span>(a === b) {\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n}\n</code></pre>\n<p>Since <code>===</code> returns <code>true</code> or <code>false</code>, we can simply return the result of the comparison:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEqual</span>(<span class="hljs-params">a,b</span>) </span>{\n  <span class="hljs-keyword">return</span> a === b;\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Reverse Arrays with reverse",order:5,body:'<p>You can use the .reverse() function to reverse the contents of an array.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5,6,7];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.reverse(</span><span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Save your Code Revisions Forever with Git",order:5,body:'<p>For the Git Challenges you just have to follow the instructions closely. From how to create your <a href="http://c9.io/">c9</a> account to completing the tutorial.</p>\n<p>For that you will need <code>git-it</code> to go to the challenges, and <code>git-it verify</code> to check that you completed it correctly. For detailed instructions read them here: <a href="http://jlord.us/git-it/index.html">http://jlord.us/git-it/index.html</a></p>\n<p>After you learn how to use git, here are other resources to help you learn more about git:</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Creating-a-New-Github-Issue">Creating a New Github Issue</a></li>\n<li><a href="https://freecodecamp.com/wiki/Git-Blame">Git Blame</a></li>\n<li><a href="https://freecodecamp.com/wiki/git-merge">Git Merge</a></li>\n<li><a href="https://freecodecamp.com/wiki/git-rebase">Git Rebase</a></li>\n<li><a href="https://freecodecamp.com/wiki/Git-Resources">Other Git Resources</a></li>\n<li><a href="https://freecodecamp.com/wiki/Writing-great-git-commit-message">Writing Great Git Commit Messages</a></li>\n<li><a href="https://freecodecamp.com/wiki/Using-Github-Pages-for-your-front-end-development-projects">Using GitHub Pages for your front end dev projects</a></li>\n<li><a href="https://freecodecamp.com/wiki/Searching-for-Your-Issue-on-Github">Search your issue on GitHub</a></li>\n<li><a href="https://freecodecamp.com/wiki/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work">How Issue Mods Work</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Challenge Say Hello to HTML Elements",order:5,body:"<p>HTML elements are written with a starting tag, an ending tag, and the content in between:</p>\n<ul>\n<li><code>&lt;tagname&gt;content&lt;/tagname&gt;</code></li>\n</ul>\n<p>The HTML element is everything from the start tag to the end tag:</p>\n<ul>\n<li><code>&lt;p&gt;My first HTML paragraph.&lt;/p&gt;</code></li>\n</ul>\n<p>Opening tags look like this: <code>&lt;h1&gt;</code>, and closing tags look like this: <code>&lt;/h1&gt;</code></p>\n<ul>\n<li>Note that the only difference between opening tags and closing tags, is that closing tags have a slash after their opening angle bracket. The slash in the closing tag is very important because it indicates that the tag is the end of the element.</li>\n</ul>\n"}},function(e,n){e.exports={title:"Challenge Selecting From Many Options With Switch Statements",order:5,body:'<p>#Challenge: Selecting from many options with Switch Statements</p>\n<p>If you have many options to choose from, use a <code>switch</code> statement. A <code>switch</code> statement tests a value and can have many <code>case</code> statements which defines various possible values. Statements are executed from the first matched <code>case</code> value until a <code>break</code> is encountered.</p>\n<p>Here is a <code>pseudocode</code> example:</p>\n<pre><code class="language-js"><span class="hljs-keyword">switch</span> (num) {\n  <span class="hljs-keyword">case</span> value1:\n    statement1;\n    <span class="hljs-keyword">break</span>;\n  <span class="hljs-keyword">case</span> value2:\n    statement2;\n    <span class="hljs-keyword">break</span>;\n...\n  <span class="hljs-keyword">case</span> valueN:\n    statementN;\n    <span class="hljs-keyword">break</span>;\n}\n</code></pre>\n<p><code>case</code> values are tested with strict equality (<code>===</code>). The <code>break</code> tells JavaScript to stop executing statements. If the <code>break</code> is omitted, the next statement will be executed.</p>\n'}},function(e,n){e.exports={title:"Challenge Set the Font Family of an Element",order:5,body:'<p>Font family is controlled by the <code>font-family</code> CSS attribute, like this <code>h1 {font-family: Sans-serif;}</code></p>\n<p>It allows you to pick a font to display to the user.</p>\n<p>More font-family examples can be viewed at <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-family">MDN</a></p>\n<p><strong><em>Note</em></strong>: Keep in mind that different computers and browsers will have different fonts enabled.\nCommonly available fonts are called <em>Web Safe</em></p>\n<pre><code> <span class="hljs-tag">p</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">font-size</span>:<span class="hljs-value"> <span class="hljs-number">16px</span></span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace</span></span>;\n  }</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Set the ID of an Element",order:5,body:'<p>In addition to classes, each HTML element can also have an <code>id</code> attribute.</p>\n<p>There are several benefits to using id attributes, and you’ll learn more about them once you start using jQuery.</p>\n<p><code>id</code> attributes should be unique. Browsers won’t enforce this, but it is a widely agreed upon best practice. So please don’t give more than one element the same id attribute.</p>\n<p>Here’s an example of how you give your h2 element the id of cat-photo-app: <h2 id="cat-photo-app"></p>\n'}},function(e,n){e.exports={title:"Challenge Sift through Text with Regular Expressions",order:5,body:"<h1>Sift through Text with Regular Expressions</h1>\n<p><code>Regular expressions</code> are used to find certain words or patterns inside of strings.</p>\n<p>Regular expressions are usually surrounded by <code>/</code> symbols.</p>\n<p>For example, if we wanted to find the number of times the word the occurred in the string The dog chased the cat, we could use the following regular expression: <code>/the+/gi</code></p>\n<p>Let’s break this down a bit:</p>\n<p>the is the pattern we want to match.</p>\n<ul>\n<li><code>+</code> means we want to find one or more occurrences of this pattern.</li>\n<li><code>g</code> means that we want to search the entire string for this pattern.</li>\n<li><code>i</code> means that we want to ignore the case (uppercase or lowercase) when searching for the pattern.</li>\n</ul>\n"}},function(e,n){e.exports={title:"Challenge Size your Images",order:5,body:"<p>CSS has an attribute called <code>width</code> that controls an element’s width. Just like with fonts, we’ll use <code>px</code> (pixels) to specify the image’s width.</p>\n<p>For example, if we wanted to create a CSS class called larger-image that gave HTML elements a width of 500 pixels, we’d use: <code>&lt;style&gt; .larger-image { width: 500px; } &lt;/style&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Sort Arrays with sort",order:5,body:'<p>You can use the method sort to easily sort the values in the array alphabetically or numerically</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,3,2];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.sort(</span><span class="hljs-function">)</span>;\n</code></pre>\n<p>This will return <code>[1, 2, 3]</code></p>\n'}},function(e,n){e.exports={title:"Challenge Specify How Fonts Should Degrade",order:5,body:"<p>There are several default fonts that are available in all browsers. These include <code>Monospace</code>, <code>Serif</code> and <code>Sans-Serif</code>.</p>\n<p>For example, if you wanted an element to use the <code>Helvetica</code> font, but also degrade to the <code>Sans-Serif</code> font when <code>Helvetica</code> wasn’t available, you could use this CSS style: <code>p { font-family: Helvetica, Sans-Serif; }</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Split Strings with split",order:5,body:"<p>You can use the <code>.split()</code> method to split a string into an array.</p>\n<p>split uses the argument you give to to split the string.</p>\n<p><code>array = string.split(' ');</code></p>\n"}},function(e,n){e.exports={title:"Challenge Split your Bootstrap Row",order:5,body:'<h1>Split your Bootstrap Row</h1>\n<p>Create two <code>div</code> elements within your row, both with the class <code>col-xs-6</code>.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n  &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt; &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Store Multiple Values in one Variable using JavaScript Arrays",order:5,body:"<h1>Store Multiple Values in one Variable using JavaScript Arrays</h1>\n<p>With JavaScript array variables, we can store several pieces of data in one place.</p>\n<p>You start an array declaration with an opening bracket, end it with a closing bracket, and put a comma between each entry, like this: <code>var sandwich = [&quot;peanut butter&quot;, &quot;jelly&quot;, &quot;bread&quot;]</code>.</p>\n<p><code>myArray = [2,'j'];</code></p>\n"}},function(e,n){e.exports={title:"Challenge Storing Values with the Equal Operator",order:5,body:'<h1>Storing Values with the Equal Operator</h1>\n<p>In Javascript, you can store a value in a variable with the assignment or equal (=) operator.</p>\n<p><code>myVariable = 5;</code></p>\n<p>Assignment always goes from right to left. Everything to the right of the = operator is resolved before the value is assigned to the variable to the left of the operator.</p>\n<pre><code class="language-js">myVar = <span class="hljs-number">5</span>;\n\nmyNum = myVar;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Style Multiple Elements with a CSS Class",order:5,body:'<p>You can attach classes to HTML elements by using <code>class=&quot;your-class-here&quot;</code> within the relevant element’s opening tag.</p>\n<p>CSS selectors require a period at the beginning like this: <code>.blue-text { color: blue; }</code>, but that class declaration in the HTML doesn’t use a period, like this: <code>&lt;h2 class=&quot;blue-text&quot;&gt;CatPhotoApp&lt;h2&gt;</code>.</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-class">.red-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> red</span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"red-text"</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"red-text"</span>&gt;</span>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Style Text Inputs as Form Controls",order:5,body:"<h1>Style Text Inputs as Form Controls</h1>\n<p>You can add the <code>fa-paper-plane</code> Font Awesome icon by adding <code>&lt;i class=&quot;fa fa-paper-plane&quot;&gt;&lt;/i&gt;</code> within your submit button element.</p>\n<p><code>&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&lt;i class=&quot;fa fa-paper-plane&quot;&gt;Submit&lt;/i&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Style the HTML Body Element",order:5,body:"<p>Every HTML page has the <code>body</code> element. and it is like the main page.</p>\n"}},function(e,n){e.exports={title:"Challenge Subtract One Number from Another with JavaScript",order:5,body:"<h1>Subtract One Number from Another with JavaScript</h1>\n<p>We can also subtract one number from another.</p>\n<p>JavaScript uses use the - symbol for subtraction. <code>var difference = 45 - 33;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target Elements by Class Using jQuery",order:5,body:"<h1>Target Elements by Class Using jQuery</h1>\n<p>Just as we did before, we can also target elements by classes.</p>\n<p><code>$(&quot;.well&quot;).addClass(&quot;animated shake&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target Elements by ID Using jQuery",order:5,body:"<h1>Target Elements by ID Using jQuery</h1>\n<p>You can also target elements by their id attributes. Note that, just like with CSS declarations, you type a # before the id’s name.</p>\n<p><code>$(&quot;#target3&quot;).addClass(&quot;animated fadeOut&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target Even Numbered Elements Using jQuery",order:5,body:"<h1>Target Even Numbered Elements Using jQuery</h1>\n<p>You can also target all the even-numbered elements.</p>\n<p>Here’s how you would target all the <code>odd-numbered</code> elements with class target and give them classes: <code>$('.target:odd').addClass('animated shake');</code></p>\n<p>This will shake all the even ones: <code>$('.target:even').addClass(&quot;shake&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target HTML Elements with Selectors Using jQuery",order:5,body:'<h1>Target HTML Elements with Selectors Using jQuery</h1>\n<p>After we have created our <code>document ready function</code> we can now have code that will run after the page loads. This will assure that your code does not run before the HTML is rendered to avoid bugs.</p>\n<p>jQuery often selects an HTML element with a selector, then does something to that element.</p>\n<p>The following code will make the buttons have a bouncy animation on page load.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"button"</span>).addClass(<span class="hljs-string">"animated bounce"</span>);\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Target a Specific Child of an Element Using jQuery",order:5,body:"<h1>Target a Specific Child of an Element Using jQuery</h1>\n<p>jQuery uses CSS Selectors to target elements. <code>target:nth-child(n)</code> css selector allows you to select all the nth element with the target class or element type.</p>\n<p>Here’s how you would give the third element in each well bounce: <code>$(&quot;.target:nth-child(3)&quot;).addClass(&quot;animated bounce&quot;);</code></p>\n<p><code>$(&quot;.btn:nth-child(2)&quot;).addClass(&quot;animated bounce&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target the Children of an Element Using jQuery",order:5,body:"<h1>Target the Children of an Element Using jQuery</h1>\n<p>Many HTML elements have children elements from which they inherit properties.</p>\n<p>jQuery has a function called <code>children()</code> that allows you to access the children of whichever element you’ve selected.</p>\n<p>Here’s an example of how you would use the <code>children()</code> function: <code>$(&quot;#left-well&quot;).children().css(&quot;color&quot;, &quot;blue&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target the Parent of an Element Using jQuery",order:5,body:"<h1>Target the Parent of an Element Using jQuery</h1>\n<p>Every HTML elements has a parent element from which it inherits properties.</p>\n<p>For example, your jQuery Playground <code>h3</code> element has the parent element of<code>&lt;div class=&quot;container-fluid&quot;&gt;</code>, which itself has the parent body.</p>\n<p>jQuery has a function called <code>parent()</code> that allows you to access the parent of whichever element you’ve selected.</p>\n<p>Here’s an example of how you would use the <code>parent()</code> function: <code>$(&quot;#left-well&quot;).parent().css(&quot;background-color&quot;, &quot;blue&quot;)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Target the same element with multiple jQuery Selectors",order:5,body:'<h1>Target the same element with multiple jQuery Selectors</h1>\n<p>The multiple jQuery selectors are:</p>\n<ol>\n<li>By type: <code>$(&quot;button&quot;)</code></li>\n<li>By class: <code>$(&quot;.btn&quot;)</code></li>\n<li>By id: <code>$(&quot;#target1&quot;)</code></li>\n</ol>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"button"</span>).addClass(<span class="hljs-string">"animated"</span>);\n    $(<span class="hljs-string">".btn"</span>).addClass(<span class="hljs-string">"shake"</span>);\n    $(<span class="hljs-string">"#target1"</span>).addClass(<span class="hljs-string">"btn-primary"</span>);\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Taste the Bootstrap Button Color Rainbow",order:5,body:"<h1>Taste the Bootstrap Button Color Rainbow</h1>\n<p>The <code>btn-primary</code> class is the main color you’ll use in your app. It is useful for highlighting actions you want your user to take. Note that this button will still need the <code>btn</code> and <code>btn-block</code> classes.</p>\n<p><code>&lt;button class=&quot;btn btn-block btn-primary&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Testing Objects For Properties",order:5,body:'<p>#Challenge: Testing Objects for Properties</p>\n<p>Sometimes it is useful to check if the property of a given object exists or not. We can use the .hasOwnProperty([propname]) method of objects to determine if that object has the given property name. .hasOwnProperty() returns true or false if the property is found or not.</p>\n<p>##Example</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myObj = {\n  top: <span class="hljs-string">"hat"</span>,\n  bottom: <span class="hljs-string">"pants"</span>\n};\nmyObj.hasOwnProperty(<span class="hljs-string">"top"</span>);    <span class="hljs-comment">// true</span>\nmyObj.hasOwnProperty(<span class="hljs-string">"middle"</span>); \n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Trigger Click Events with jQuery",order:5,body:'<h1>Trigger Click Events with jQuery</h1>\n<p>APIs - or Application Programming Interfaces - are tools that computers use to communicate with one another.</p>\n<p><code>$(document).ready()</code> This function makes it so all code inside of it only runs once our page loads.</p>\n<p>Inside that you can add any function or code, for this particular Challenge you need to add a click handler:</p>\n<pre><code class="language-js">$(<span class="hljs-string">"#getMessage"</span>).on(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-comment">//Custom code here</span>\n});\n</code></pre>\n<p>This will create a function so when the element with id <code>getMessage</code> is clicked, the custom function will be run.</p>\n'}},function(e,n){e.exports={title:"Challenge Turn an Image into a Link",order:5,body:"<p>Creating images that link to things is essential and one of the most used things in Web Dev. Nest your image within an <code>a</code> element. Here’s an example: <code>&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://bit.ly/fcc-running-cats&quot;/&gt;&lt;/a&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Uncomment HTML",order:5,body:"<p>Comments allow code to be ignored. In the HTML language, comments are done by wrapping the code you wish to ignore with <!-- and -->\n<code>&lt;!-- This text would not show up as it is a comment --&gt;</code></p>\n<p>You can easily uncomment by just removing the comment elements.</p>\n<p><strong><em>Note:</em></strong> Be careful when uncommenting HTML to remove both the beginning and end portions of the comment!</p>\n<p><strong><em>Note:</em></strong> Comments might be done differently in other languages such as JavaScript, but the general concept of removing whatever marks a comment applies.</p>\n"}},function(e,n){e.exports={title:"Challenge Understand Boolean Values",order:5,body:"<h1>Understand Boolean Values</h1>\n<p>Booleans can only hold the value of either true or false. They are basically little on-off switches.</p>\n"}},function(e,n){e.exports={title:"Challenge Understand String Immutability",order:5,body:'<h1>Understand String Immutability</h1>\n<p>In Javascript, String values are <code>immutable</code>, which means that they cannot be altered once created.</p>\n<h2>Example</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myStr = <span class="hljs-string">"Bob"</span>;\nmyStr[<span class="hljs-number">0</span>] = <span class="hljs-string">"J"</span>;\n</code></pre>\n<p>Would not work, the only way would be:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myStr = <span class="hljs-string">"Bob"</span>;\nmyStr = <span class="hljs-string">"Job"</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Understanding Case Sensitivity in Variables",order:5,body:'<h1>Understanding Case Sensitivity in Variables</h1>\n<p>In JavaScript all variables and function names are case sensitive. This means that capitalization matters.</p>\n<p><code>MYVAR</code> is not the same as <code>MyVar</code> nor <code>myvar</code>. It is possible to have multiple distinct variables with the same name but different casing. It is strongly recommended that for the sake of clarity, you do not use this language feature.</p>\n<h2>Best Practice</h2>\n<p>Write variable names in Javascript in <code>camelCase</code>. In <code>camelCase</code>, <code>multi-word</code> variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.</p>\n<h2>Examples:</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> someVariable;\n<span class="hljs-keyword">var</span> anotherVariableName;\n<span class="hljs-keyword">var</span> thisVariableNameIsTooLong;\n</code></pre>\n'
}},function(e,n){e.exports={title:"Challenge Understanding Uninitialized Variables",order:5,body:"<h1>Understanding Uninitialized Variables</h1>\n<p>When JavaScript variables are declared, they have an initial value of <code>undefined</code>. If you do a mathematical operation on an undefined variable your result will be <code>NaN</code> which means “Not a Number”. If you concatenate a string with an undefined variable, you will get a literal string of “undefined”.</p>\n<p>Basically this means that before you do any operations with them you <strong>must</strong> assign an initial value at some point.</p>\n"}},function(e,n){e.exports={title:"Challenge Updating Object Properties",order:5,body:'<p>#Challenge: Updating Object Properties</p>\n<p>After you’ve created a JavaScript object, you can update its properties at any time just like you would update any other variable. You can use either dot or bracket notation to update.</p>\n<p>For example, let’s look at <code>ourDog</code>:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourDog = {\n  <span class="hljs-string">"name"</span>: <span class="hljs-string">"Camper"</span>,\n  <span class="hljs-string">"legs"</span>: <span class="hljs-number">4</span>,\n  <span class="hljs-string">"tails"</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-string">"friends"</span>: [<span class="hljs-string">"everything!"</span>]\n};\n</code></pre>\n<p>Since he’s a particularly happy dog, let’s change his name to “Happy Camper”. Here’s how we update his object’s name property:</p>\n<p><code>ourDog.name = &quot;Happy Camper&quot;;</code> or</p>\n<p><code>ourDog[&quot;name&quot;] = &quot;Happy Camper&quot;;</code></p>\n<p>Now when we evaluate <code>ourDog.name</code>, instead of getting “Camper”, we’ll get his new name, “Happy Camper”.</p>\n'}},function(e,n){e.exports={title:"Challenge Use Abbreviated Hex Code",order:5,body:'<p>red, which is <code>#FF0000</code> in hex code, can be shortened to <code>#F00</code>. That is, one digit for red, one digit for green, one digit for blue.</p>\n<p>This reduces the total number of possible colors to around 4,000. But browsers will interpret <code>#FF0000</code> and <code>#F00</code> as exactly the same color.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#F00</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Bracket Notation to Find the First Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the First Character in a String</h1>\n<p>Bracket notation is a way to get a character at a specific index within a string.</p>\n<p>Computers don’t start counting at <code>1</code> like humans do. They start at <code>0</code>. <code>firstLetterOfLastName = lastName[0];</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Bracket Notation to Find the Last Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Last Character in a String</h1>\n<p>In order to get the last letter of a string, you can subtract one from the string’s length.</p>\n<p>For example, if <code>var firstName = &quot;Charles&quot;</code>, you can get the value of the last letter of the string by using <code>firstName[firstName.length - 1]</code>.</p>\n<p><code>var lastLetterOfLastName = lastName[lastName.length -1];</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Bracket Notation to Find the Nth Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Nth Character in a String</h1>\n<p>You can also use bracket notation to get the character at other positions within a string.</p>\n<p>Remember that computers start counting at <code>0</code>, so the first character is actually the zeroth character.</p>\n<p><code>var thirdLetterOfLastName = lastName[2];</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Bracket Notation to Find the Nth to Last Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Nth-to-Last Character in a String</h1>\n<p>You can get the value of the third-to-last letter of the <code>var firstName = &quot;Charles&quot;</code> string by using <code>firstName[firstName.length - 3]</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Use CSS Selectors to Style Elements",order:5,body:"<p>Instead of giving style attributes one by one, we can do this to multiple elements at the same time.</p>\n<p>You can create a style element like this: <code>&lt;style&gt;&lt;/style&gt;</code>.</p>\n<p>Inside that style element, you can create a CSS selector for any HTML Elements. For example, if you wanted all h2 elements to be red, your style element would look like this: <code>&lt;style&gt;h2 {color: red;}&lt;/style&gt;</code>.</p>\n<p>Note that it’s important to have both opening and closing curly braces <code>({</code> and <code>})</code> around each element’s style. You also need to make sure your element’s style is between the opening and closing style tags. Finally, be sure to add the semicolon to the end of each of your element’s styles.</p>\n"}},function(e,n){e.exports={title:"Challenge Use Clockwise Notation to Specify the Margin of an Element",order:5,body:'<p>Instead of specifying an element’s<code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes, you can specify them all in one line, like this: <code>margin: 10px 20px 10px 20px;</code>.</p>\n<p>These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific margin instructions.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">40px</span> <span class="hljs-number">20px</span> <span class="hljs-number">20px</span> <span class="hljs-number">40px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Clockwise Notation to Specify the Padding of an Element",order:5,body:'<p>Instead of specifying an element’s <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-lef</code>t attributes, you can specify them all in one line, like this: <code>padding: 10px 20px 10px 20px;</code>.</p>\n<p>These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific padding instructions.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">40px</span> <span class="hljs-number">20px</span> <span class="hljs-number">20px</span> <span class="hljs-number">40px</span>\n</span></span></span>}\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Comments to Clarify Code",order:5,body:'<h1>Use Comments to Clarify Code</h1>\n<p>When we start using jQuery, we will modify HTML elements without needing to actually change them in HTML.</p>\n<p>This is a great way to make websites with a particular structure. Remember that you can start a comment with <code>&lt;!-- and end a comment with --&gt;</code></p>\n<pre><code>&lt;!<span class="hljs-comment">--You shouldn\'t need to modify code below this line --&gt;</span>\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n   &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n     &lt;h4&gt;<span class="hljs-comment">#left-well&lt;/h4&gt;</span>\n     &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"left-well"</span>&gt;\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target1"</span>&gt;<span class="hljs-comment">#target1&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target2"</span>&gt;<span class="hljs-comment">#target2&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target3"</span>&gt;<span class="hljs-comment">#target3&lt;/button&gt;</span>\n     &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n     &lt;h4&gt;<span class="hljs-comment">#right-well&lt;/h4&gt;</span>\n     &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"right-well"</span>&gt;\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target4"</span>&gt;<span class="hljs-comment">#target4&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target5"</span>&gt;<span class="hljs-comment">#target5&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target6"</span>&gt;<span class="hljs-comment">#target6&lt;/button&gt;</span>\n     &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;/<span class="hljs-keyword">div</span>&gt;\n &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Conditional Logic with If Else Statements",order:5,body:'<p>#Challenge: Use Conditional Logic with If Statements</p>\n<p>We can use <code>if</code> statements in JavaScript to execute code only if the specified condition is met.</p>\n<p>Each <code>if</code> statement requires a <code>boolean</code> condition to evaluate. If the boolean evaluates to <code>true</code>, the statements inside the curly braces will execute. Otherwise, if it evaluates to <code>false</code>, the code will not execute.</p>\n<p>##Example</p>\n<pre><code class="language-js">\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params">myVal</span>) </span>{\n  <span class="hljs-keyword">if</span> (myVal &gt; <span class="hljs-number">10</span>) {\n     <span class="hljs-keyword">return</span> <span class="hljs-string">"Greater Than"</span>;\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-string">"Not Greater Than"</span>;\n}\n</code></pre>\n<p>If <code>myVal</code> is greater than <code>10</code>, the function will return <code>&quot;Greater Than&quot;</code>. If it is not, the function will return <code>&quot;Not Greater Than&quot;</code>. Both <code>return</code> statements will never get executed because as soon as the first one is encountered, the execution exits the function and returns control to where the function was called.</p>\n'}},function(e,n){e.exports={title:"Challenge Use HTML5 to Require a Field",order:5,body:'<p>You can require specific form fields so that your user will not be able to submit your form until he or she has filled them out.</p>\n<p>For example, if you wanted to make a text input field required, you can just add the word required within your input element, you would use: <code>&lt;input type=&quot;text&quot; required&gt;</code>.</p>\n<pre><code>&lt;<span class="hljs-tag">form</span> action=<span class="hljs-string">"/submit-cat-photo"</span>&gt;\n  &lt;<span class="hljs-tag">input</span> type=<span class="hljs-string">"text"</span> placeholder=<span class="hljs-string">"cat photo URL"</span> required&gt;\n  &lt;<span class="hljs-tag">button</span> type=<span class="hljs-string">"submit"</span>&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Hex Code for Specific Colors",order:5,body:"<p>With CSS, we use 6 hexadecimal number to represent colors. For example, <code>#000000</code> is the lowest possible value, and it represents the color black.</p>\n<p>This is the same as <code>#RRGGBB</code> which can also be simplified to <code>#RGB</code>.</p>\n"}},function(e,n){e.exports={title:"Challenge Use Hex Code for Specific Shades of Gray",order:5,body:"<p>We can also create other shades of gray by evenly mixing all three colors. We can go very close to true black. <code>background-color: #111111;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Hex Code to Color Elements Blue",order:5,body:'<p>Just as with <a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Red">red</a> and the others.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#0000FF</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Hex Code to Color Elements Gray",order:5,body:"<p>We can also create different shades of gray by evenly mixing all three colors. <code>background-color: #808080;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Hex Code to Color Elements Green",order:5,body:'<p>Just as with <a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Red">red</a> and the others.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#00FF00</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use Hex Code to Color Elements Red",order:5,body:"<p>Hex code follows the red-green-blue, or rgb format. The first two digits of hex code represent the amount of red in the color. The third and fourth digit represent the amount of green. The fifth and sixth represent the amount of blue.</p>\n<p>So to get the absolute brightest red, you would just use <code>F</code> for the first and second digits (the highest possible value) and <code>0</code> for the third, fourth, fifth and sixth digits (the lowest possible value).</p>\n"}},function(e,n){e.exports={title:"Challenge Use Hex Code to Color Elements White",order:5,body:"<p><code>0</code> is the lowest number in hex code, and represents a complete absence of color. <code>F</code> is the highest number in hex code, and it represents the maximum possible brightness.</p>\n"}},function(e,n){e.exports={title:"Challenge Use Hex Code to Mix Colors",order:5,body:'<p>Orange is pure red, mixed with some green, and no blue.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#FFA500</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use RGB to Color Elements Blue",order:5,body:"<p>The RGB value blue: <code>rgb(0, 0, 255)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB to Color Elements Gray",order:5,body:"<p>RGB value for gray: <code>rgb(128, 128, 128)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB to Color Elements Green",order:5,body:"<p>The rgb value green: <code>rgb(0, 255, 0)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB to Color Elements Red",order:5,body:"<p><code>background-color: rgb(255, 0, 0)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB to Color Elements White",order:5,body:"<p><code>background-color: rgb(255,255,255)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB to Mix Colors",order:5,body:"<p>RGB value orange: <code>rgb(255, 165, 0)</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use RGB values to Color Elements",order:5,body:"<p>Another way you can represent colors in CSS is by using <code>rgb</code> values.</p>\n<p>RGB values look like this: <code>rgb(0, 0, 0)</code> for black and <code>rgb(255, 255, 255)</code> for white.</p>\n<p>Instead of using six hexadecimal digits like you do with hex code, with rbg you specify the brightness of each color with a number between 0 and 255. <code>background-color: rgb(0,0,0);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use Responsive Design with Bootstrap Fluid Containers",order:5,body:"<h1>Use Responsive Design with Bootstrap Fluid Containers</h1>\n<p>Bootstrap will figure out how wide your screen is and respond by resizing your HTML elements - hence the name Responsive Design.</p>\n<p>With responsive design, there is no need to design a mobile version of your website. It will look good on devices with screens of any width.</p>\n<p>You can add Bootstrap to any app just by including it with <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css&quot;/&gt;</code> at the top of your HTML.</p>\n"}},function(e,n){e.exports={title:"Challenge Use Spans for Inline Elements",order:5,body:"<h1>Use Spans for Inline Elements</h1>\n<p>You can use use spans to create inline elements. By using the span element, you can put several elements together, and even style different parts of the same element differently.</p>\n<p><code>&lt;p&gt;&lt;span class = &quot;text-danger&quot;&gt;Things cats love:&lt;/span&gt;&lt;/p&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use a CSS Class to Style an Element",order:5,body:"<p>Classes are reusable styles that can be added to HTML elements. You can apply a class to an HTML element like this: <code>&lt;h2 class=&quot;blue-text&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>.</p>\n<p>Note that in your CSS style element, classes should start with a period. In your HTML elements’ class declarations, classes shouldn’t start with a period.</p>\n"}},function(e,n){e.exports={title:"Challenge Use an ID Attribute to Style an Element",order:5,body:"<p>One cool thing about <code>id</code> attributes is that, like classes, you can style them using CSS.</p>\n<p>Here’s an example of how you can take your element with the <code>id</code> attribute of cat-photo-element and give it the background color of green.</p>\n<p>In your style element: <code>#cat-photo-element { background-color: green; }</code></p>\n<p>Note that inside your style element, you always reference classes by putting a <code>.</code> in front of their names. You always reference ids by putting a <code>#</code> in front of their names.</p>\n"}},function(e,n){e.exports={title:"Challenge Use appendTo to Move Elements with jQuery",order:5,body:"<h1>Use appendTo to Move Elements with jQuery</h1>\n<p>jQuery has a function called <code>appendTo()</code> that allows you to select HTML elements and append them to another element.</p>\n<p>For example, if we wanted to move target4 from our right well to our left well, we would use <code>$(&quot;#target4&quot;).appendTo(&quot;#left-well&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use jQuery to Modify the Entire Page",order:5,body:"<h1>Use jQuery to Modify the Entire Page</h1>\n<p>jQuery can target the body element as well.</p>\n<p>Here’s how we would make the entire body fade out: <code>$('body').addClass('animated fadeOut');</code></p>\n"}},function(e,n){e.exports={title:"Challenge Use the Bootstrap Grid to Put Elements Side By Side",order:5,body:'<h1>Use the Bootstrap Grid to Put Elements Side By Side</h1>\n<p>Bootstrap uses a responsive grid system that makes it easier to put elements into rows and tell each element’s relative width.</p>\n<p><img src="https://www.evernote.com/shard/s116/sh/f0944d97-08b8-4615-8273-a327bf41fb05/de1a3acbceef89ae/deep/0/" alt="Bootstrap 12 column grid layout"></p>\n<p>Note that in this illustration, the <code>col-md-_</code> class is being used. Here, md means medium, and _ is a number specifying how many columns wide the element should be. In this case, the column width of an element on a medium-sized screen, such as a laptop, is being specified.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-primary"</span>&gt;Like&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-info"</span>&gt;Info&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-danger"</span>&gt;Delete&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Use the Javascript Console",order:5,body:"<p>Both Chrome and Firefox have excellent JavaScript consoles, also known as DevTools, for debugging your JavaScript.</p>\n<p>You can find Developer tools in your Chrome’s menu or Web Console in FireFox’s menu. If you’re using a different browser, or a mobile phone, we strongly recommend switching to desktop Firefox or Chrome.</p>\n<p>You can also use <a href=\"https://repl.it/\">https://repl.it/</a> to run code online.</p>\n<p>This is how you print to the console: <code>console.log('Hello world!')</code></p>\n"}},function(e,n){e.exports={title:"Challenge Using Objects For Lookups",order:5,body:'<p>#Challenge: Using Objects for Lookups</p>\n<p>Objects can be thought of as a key/value storage, like a dictionary. If you have tabular data, you can use an object to “lookup” values rather than a <code>switch</code> statement or an <code>if/else</code> chain. This is most useful when you know that your input data is limited to a certain range.</p>\n<p>Here is an example of a simple reverse alphabet lookup:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> alpha = {\n  <span class="hljs-number">1</span>:<span class="hljs-string">"Z"</span>,\n  <span class="hljs-number">2</span>:<span class="hljs-string">"Y"</span>,\n  <span class="hljs-number">3</span>:<span class="hljs-string">"X"</span>,\n  <span class="hljs-number">4</span>:<span class="hljs-string">"W"</span>,\n  ...\n  <span class="hljs-number">24</span>:<span class="hljs-string">"C"</span>,\n  <span class="hljs-number">25</span>:<span class="hljs-string">"B"</span>,\n  <span class="hljs-number">26</span>:<span class="hljs-string">"A"</span>\n};\nalpha[<span class="hljs-number">2</span>]; <span class="hljs-comment">// "Y"</span>\nalpha[<span class="hljs-number">24</span>]; <span class="hljs-comment">// "C"</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Using typeof",order:5,body:'<p>You can use <code>typeof</code> to check the <code>data structure</code>, or type, of a variable.</p>\n<p>Note that in JavaScript, arrays are technically a type of object.</p>\n<pre><code class="language-js"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>(<span class="hljs-string">""</span>));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>(<span class="hljs-number">0</span>));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>([]));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>({}));\n</code></pre>\n'}},function(e,n){e.exports={title:"Challenge Warn your Users of a Dangerous Action",order:5,body:"<h1>Warn your Users of a Dangerous Action</h1>\n<p>The <code>btn-danger</code> class is the button color you’ll use to notify users that the button performs a destructive action, such as deleting a cat photo. Note that these buttons still need the <code>btn</code> and <code>btn-block</code> classes.</p>\n<p><code>&lt;button class=&quot;btn btn-block btn-danger&quot;&gt;Delete&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Challenge Write Reusable JavaScript with Functions",order:5,body:'<h1>Write Reusable JavaScript with Functions</h1>\n<p>In JavaScript, we can divide up our code into reusable parts called functions.</p>\n<p>Here’s an example of a function:</p>\n<pre><code class="language-js">\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">functionName</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"Hello World"</span>);\n}\n</code></pre>\n<p>You can <code>call</code> or <code>invoke</code> this function by using its name followed by parentheses, like this:</p>\n<p><code>functionName();</code></p>\n<p>Each time the function is called it will print out the message “Hello World” on the dev console. All of the code between the curly braces will be executed every time the function is called.</p>\n<p>Here is another example:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">otherFunctionName</span> (<span class="hljs-params">a, b</span>) </span>{\n	<span class="hljs-keyword">return</span>(a + b);\n}\n</code></pre>\n<p>We can <code>call</code> or <code>invoke</code> our function like this:</p>\n<p><code>otherFunctionName(1,2);</code></p>\n<p>and it will run and return its return value to us.</p>\n'}},function(e,n){e.exports={title:"Checkpoint Counting Cards",order:5,body:'<h1>Checkpoint: Counting Cards</h1>\n<p><strong><em>About Blackjack</em></strong></p>\n<p>In the casino game Blackjack, a player can gain an advantage over the house by keeping track of the relative number of high and low cards remaining in the deck. This is called <a href="https://en.wikipedia.org/wiki/Card_counting" title="Wikipedia entry on Card Counting">Card Counting</a>.</p>\n<p>Having more high cards remaining in the deck favors the player. Each card is assigned a value according to the table below. When the count is positive, the player should bet high. When the count is zero or negative, the player should bet low.</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th style="text-align:center">Cards</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+1</td>\n<td style="text-align:center">2, 3, 4, 5, 6</td>\n</tr>\n<tr>\n<td>0</td>\n<td style="text-align:center">7, 8, 9</td>\n</tr>\n<tr>\n<td>-1</td>\n<td style="text-align:center">10, ‘J’, ‘Q’, ‘K’,‘A’</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em>Instructions</em></strong></p>\n<p>You will write a card counting function. It will receive a <strong>card</strong> parameter and increment or decrement the global <strong>count</strong> variable according to the card’s value (see table). The function will then return the current count and the string <strong>“Bet”</strong> if the count is positive, or <strong>“Hold”</strong> if the count is zero or negative.</p>\n<p><strong>Example Output:</strong></p>\n<ul>\n<li>-3 Hold</li>\n<li>5 Bet</li>\n</ul>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/selecting-from-many-options-with-switch-statements">Challenge: Selecting from many options with Switch Statements</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/chaining-if-else-statements">Challenge: Chaining If Else Statements</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/increment-a-number-with-javascript">Challenge: Increment a Number with Javascript</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Only change code above this line</code></li>\n<li>Take note that you are editing the inside of the <code>cc</code> function</li>\n<li>Use what you’ve learned to check the value of each <code>card</code> parameter passed into the function</li>\n<li>Keep a running count of that number</li>\n<li>If the final count is 1 or greater, return <strong># Hold</strong></li>\n<li>If the final count is 0 or less, return <strong># Bet</strong></li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Use a <code>switch</code> (or <code>else if</code>) statement to count the value of each card.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Add/subtract the value of each card to variable <code>count</code>. If the card is worth 0, don’t do anything!</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>After you’ve counted the cards, use an <code>if</code> statement to check the value of <code>count</code>. Also, make sure your return has a space between the number and the string.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code><span class="hljs-function">function <span class="hljs-title">cc</span><span class="hljs-params">(card)</span> </span>{\n  <span class="hljs-comment">// Only change code below this line</span>\n  <span class="hljs-keyword">switch</span>(card){\n    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:\n      count++;\n      <span class="hljs-keyword">break</span>;\n    <span class="hljs-keyword">case</span> <span class="hljs-number">10</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-string">"J"</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-string">"Q"</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-string">"K"</span>:\n    <span class="hljs-keyword">case</span> <span class="hljs-string">"A"</span>:\n      count--;\n      <span class="hljs-keyword">break</span>;\n  }\n  <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> count + <span class="hljs-string">" Bet"</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> count + <span class="hljs-string">" Hold"</span>;\n  }\n  <span class="hljs-comment">// Only change code above this line</span>\n}\n\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Checks the value of each card via a <code>switch</code> statement</li>\n<li>The variable <code>count</code>:\n<ul>\n<li>Increases by 1 if the card is a 2, 3, 4, 5, or 6</li>\n<li>Since 7, 8, and 9 aren’t worth anything, we ignore those cards in our <code>switch</code> statement.</li>\n<li>Decreases by 1 if the card is a 10, ‘J’, ‘Q’, ‘K’, or ‘A’</li>\n</ul>\n</li>\n<li>Checks the value of <code>count</code> and returns the appropriate response</li>\n</ul>\n<p><strong><em>Example Run</em></strong></p>\n<ul>\n<li><code>cc(2);</code> runs</li>\n<li>The <code>switch</code> statement hits <code>case 2</code>, jumps down and adds 1 to the variable <code>count</code></li>\n<li>The <code>switch</code> statement then hits the <code>break</code> and <code>cc(3);</code> runs</li>\n<li>This cycle continues until the final call is made, <code>cc(\'A\');</code></li>\n<li>After the <code>switch</code> statement, the <code>if</code> statement checks <code>count</code>, which is now 0</li>\n<li>This then drops down to the <code>else</code> statement, which will return <strong>0 Hold</strong></li>\n</ul>\n<p><strong><em>Note</em></strong>\nAs mentioned earlier, the <code>switch</code> statement could have also been an <code>else if</code> statement</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @leftynaut for your help with Checkpoint: Counting Cards</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Checkpoint Golf Code",order:5,body:'<h1>Details</h1>\n<p>We will now use our knowledge about else if statements and comparison with equality, less and greater operators.</p>\n<p>In the game of golf each hole has a par for the average number of strokes needed to sink the ball. Depending on how far above or below par your strokes are, there is a different nickname.</p>\n<p>Your function will be passed a par and strokes. Return strings according to this table (based on order of priority - top (highest) to bottom (lowest)):</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Strokes</th>\n<th style="text-align:left">Return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">1</td>\n<td style="text-align:left">“Hole-in-one!”</td>\n</tr>\n<tr>\n<td style="text-align:left">&lt;= par - 2</td>\n<td style="text-align:left">“Eagle”</td>\n</tr>\n<tr>\n<td style="text-align:left">par - 1</td>\n<td style="text-align:left">“Birdie”</td>\n</tr>\n<tr>\n<td style="text-align:left">par</td>\n<td style="text-align:left">“Par”</td>\n</tr>\n<tr>\n<td style="text-align:left">par + 1</td>\n<td style="text-align:left">“Bogey”</td>\n</tr>\n<tr>\n<td style="text-align:left">par + 2</td>\n<td style="text-align:left">“Double Bogey”</td>\n</tr>\n<tr>\n<td style="text-align:left">&gt;= par + 3</td>\n<td style="text-align:left">“Go Home!”</td>\n</tr>\n</tbody>\n</table>\n<p>par and strokes will always be numeric and positive.</p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/chaining-if-else-statements">Challenge: Chaining If Else Statements</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/comparison-with-the-greater-than-equal-to-operator">Challenge: Comparison with the Greater Than Equal To Operator</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/comparison-with-the-less-than-equal-to-operator">Challenge: Comparison with the Less Than Equal To Operator</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>// Only change code below this line</code> and above <code>// Only change code above this line</code></li>\n<li>Take note that you are editing the inside of the <code>golfScore</code> function.</li>\n<li>You will have to make the function return exactly the same string as shown shown on table, depending on the value of the parameters <code>par</code> and <code>strokes</code> that are passed in to your function.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li><code>+number -number</code> can be used to increase or decrease a parameter in your condition.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You can chain else if statements to return different values in different scenarios.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Control the flow of your function based on the tables order of priority - top (highest) to bottom (lowest) to return matching string values.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">golfScore</span>(<span class="hljs-params">par, strokes</span>) </span>{\n  <span class="hljs-comment">// Only change code below this line</span>\n  <span class="hljs-keyword">if</span> (strokes == <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Hole-in-one!"</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strokes &lt;= par -<span class="hljs-number">2</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Eagle"</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strokes == par -<span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Birdie"</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strokes == par) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Par"</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strokes == par +<span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Bogey"</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strokes == par +<span class="hljs-number">2</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Double Bogey"</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"Go Home!"</span>;\n  }\n  <span class="hljs-comment">// Only change code above this line</span>\n}\n<span class="hljs-comment">// Change these values to test</span>\ngolfScore(<span class="hljs-number">5</span>, <span class="hljs-number">4</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Comparing the <code>parameters</code> stroke and par value to return appropriated string value.</li>\n<li>Using else if statement for flow control</li>\n<li>else will return string “Go home!” to every condition where strokes are equal to par +3 or higher</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @osterbergmarcus for your help with Checkpoint: Golf Code</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Checkpoint Profile Lookup",order:5,body:'<h1>Checkpoint: Profile Lookup</h1>\n<p><strong><em>Instructions</em></strong></p>\n<p>We have an array of objects representing different people in our contacts lists.</p>\n<p>A <strong>lookUp</strong> function that takes <strong>firstName</strong> and a property (<strong>prop</strong>) as arguments has been pre-written for you.</p>\n<p>The function should check if <strong>firstName</strong> is an actual contact’s <strong>firstName</strong> and the given property (<strong>prop</strong>) is a property of that contact.</p>\n<p>If both are true, then return the “value” of that property.</p>\n<p>If <strong>firstName</strong> does not correspond to any contacts then return <strong>“No such contact”</strong></p>\n<p>If <strong>prop</strong> does not correspond to any valid properties then return <strong>“No such property”</strong></p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/accessing-objects-properties-with-bracket-notation">Challenge: Accessing Objects Properties with Bracket Notation</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/iterate-with-javascript-for-loops">Challenge: Iterate with JavaScript For Loops</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Only change code above this line</code></li>\n<li>Take note that you are editing the inside of the <code>lookUp</code> function\n<ul>\n<li>This function includes two parameters, <code>firstName</code> and <code>prop</code></li>\n</ul>\n</li>\n<li>The function should check look through the <code>contact</code> list for the given <code>firstName</code> parameter\n<ul>\n<li>If there is a match found, the function should then look for the given <code>prop</code> parameter</li>\n<li>If both <code>firstName</code> and the associated <code>prop</code> are found, you should return the value of the <code>prop</code></li>\n<li>If <code>firstName</code> is found and no associated <code>prop</code> is found, you should return <code>&quot;No such property&quot;</code></li>\n<li>If <code>firstName</code> isn’t found anywhere, you should return <code>&quot;No such contact&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Use a <strong>for loop</strong> to cycle through the <code>contact</code> list</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Use a nested <code>if</code> statement to first check if the <code>firstName</code> matches, and then checks if the <code>prop</code> matches</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Leave your <code>return &quot;No such contact&quot;</code> out of the <code>for loop</code> as a final catch-all</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code><span class="hljs-keyword">for</span> (var x = <span class="hljs-number">0</span>; x &lt; contacts.<span class="hljs-property">length</span>; x++){\n    <span class="hljs-keyword">if</span> (contacts[x].firstName === firstName) {\n        <span class="hljs-keyword">if</span> (contacts[x][<span class="hljs-keyword">prop</span>]) {\n<span class="hljs-command">            return</span> contacts[x][<span class="hljs-keyword">prop</span>];\n        } <span class="hljs-keyword">else</span> {\n<span class="hljs-command">            return</span> <span class="hljs-string">"No such property"</span>;\n        }\n    }\n}\n<span class="hljs-command">return</span> <span class="hljs-string">"No such contact"</span>;\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The <strong>for loop</strong> runs, starting at the first object in the <code>contacts</code> list</li>\n<li>If the <code>firstName</code> parameter passed into the function matches the value of the <code>&quot;firstName&quot;</code> key in the first object, the <code>if</code> statement passes</li>\n<li>Then, if the <code>prop</code> parameter passed into the function is present in that object, the value of the <code>prop</code> is returned\n<ul>\n<li>If the second <code>if</code> statement fails, <code>&quot;No such property&quot;</code> is returned</li>\n</ul>\n</li>\n<li>If the first <code>if</code> statement fails, the <strong>for loop</strong> continues on to the next object in the <code>contact</code> list</li>\n<li>If the <code>firstName</code> parameter isn’t matched by the final <code>contact</code> object, the <strong>for loop</strong> exits and <code>&quot;No such contact&quot;</code> is returned</li>\n</ul>\n<p><strong><em>Example Run</em></strong></p>\n<ul>\n<li><code>lookUp(&quot;Akira&quot;,&quot;likes&quot;);</code> runs</li>\n<li><code>&quot;Akira&quot;</code> is matched to the <code>&quot;firstName&quot;</code> key in the first object, so the <code>if</code> statement returns true</li>\n<li><code>&quot;likes&quot;</code> is found within the first object, so the second <code>if</code> statement returns true</li>\n<li>The value of <code>&quot;likes&quot;</code> is returned - <code>&quot;Pizza&quot;, &quot;Coding&quot;, &quot;Brownie Points&quot;</code></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @leftynaut for your help with Checkpoint: Profile Lookup</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Checkpoint Record Collection",order:5,body:'<h1>Checkpoint: Record Collection</h1>\n<p><strong><em>Instructions</em></strong></p>\n<p>You are given a JSON object representing (a small part of) your record collection. Each album is identified by a unique id number and has several properties. Not all albums have complete information.</p>\n<p>Write a function which takes an <strong>id</strong>, a property (<strong>prop</strong>), and a <strong>value</strong>.</p>\n<p>For the given <strong>id</strong> in <strong>collection</strong>:</p>\n<p>If <strong>value</strong> is non-blank (<strong>value !== “”</strong>), then update or set the <strong>value</strong> for the <strong>prop</strong>.</p>\n<p>If the <strong>prop</strong> is <strong>“tracks”</strong> and <strong>value</strong> is non-blank, push the <strong>value</strong> onto the end of the <strong>tracks</strong> array.</p>\n<p>If <strong>value</strong> is blank, delete that <strong>prop</strong>.</p>\n<p>Always return the entire collection object.</p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/accessing-objects-properties-with-bracket-notation">Challenge: Accessing Objects Properties with Bracket Notation</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/add-new-properties-to-a-javascript-object">Challenge: Add New Properties to a JavaScript Object</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/delete-properties-from-a-javascript-object">Challenge: Delete Properties from a JavaScript Object</a></li>\n<li>[Challenge: Accessing Nested Objects in JSON] (<a href="http://www.freecodecamp.com/challenges/accessing-nested-objects-in-json">http://www.freecodecamp.com/challenges/accessing-nested-objects-in-json</a>)</li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Alter values below to test your code</code></li>\n<li>Take note that you are editing the inside of the <code>update</code> function</li>\n<li>For the given <code>id</code> parameter, which is associated to the <code>collection</code> object:\n<ul>\n<li>If the <code>value</code> parameter isn’t an empty string, update (or set) the <code>value</code> parameter for the <code>prop</code> parameter</li>\n<li>If the <code>prop</code> parameter is equal to <code>&quot;tracks&quot;</code> and the <code>value</code> isn’t an empty string, push the <code>value</code> onto the end of the <code>tracks</code> array</li>\n<li>If <code>value</code> is an empty string, delete that <code>prop</code> from the object</li>\n</ul>\n</li>\n<li>Finally, return the <code>collection</code> object</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Use an <code>else if</code> statement to check the needed steps.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>The second step listed in the instructions should be first in your <code>else if</code> statement.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>To access the value of a key in this object, you will use <code>collection[id][prop]</code></li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code>function update(<span class="hljs-property">id</span>, <span class="hljs-keyword">prop</span>, value) {\n  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">prop</span> === <span class="hljs-string">"tracks"</span> &amp;&amp; value !== <span class="hljs-string">""</span>) {\n    collection[<span class="hljs-property">id</span>][<span class="hljs-keyword">prop</span>].push(value);\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value !== <span class="hljs-string">""</span>){\n    collection[<span class="hljs-property">id</span>][<span class="hljs-keyword">prop</span>] = value;\n  } <span class="hljs-keyword">else</span> {\n    delete collection[<span class="hljs-property">id</span>][<span class="hljs-keyword">prop</span>];\n  }\n<span class="hljs-command">\n  return</span> collection;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First checks if <code>prop</code> is equal to <code>tracks</code> AND if <code>value</code> isn’t a blank string. If both tests pass, <code>value</code> is pushed into the <code>tracks</code> array.</li>\n<li>If that first check doesn’t pass, it next checks only if <code>value</code> isn’t a blank string. If that test passes, either a new key (<code>prop</code>) and value (<code>value</code>) are added to the object, or an existing key is updated if the <code>prop</code> already exists.</li>\n<li>If both these checks fail (meaning <code>value</code> must be an empty string), then the key (<code>prop</code>) is removed from the object.</li>\n</ul>\n<p><strong><em>Example Run</em></strong></p>\n<ul>\n<li><code>update(5439, &quot;artist&quot;, &quot;ABBA&quot;);</code> runs</li>\n<li><code>prop</code> is equal to “artist”, not “tracks”, so the first part of the <code>else if</code> statement fails</li>\n<li><code>value</code> is not a blank string, so the second part of the else if statement passes</li>\n<li><code>artist: &quot;ABBA&quot;</code> is added to the <code>5439</code> <code>id</code></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @leftynaut for your help with Checkpoint: Record Collection</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Checkpoint Shopping List",order:5,body:'<h1>Instructions</h1>\n<p>Create a shopping list in the variable <code>myList</code>. The list should be a multi-dimensional array containing several sub-arrays.</p>\n<p>The first element in each sub-array should contain a string with the name of the item. The second element should be a number representing the quantity.</p>\n<p><code>[&quot;Chocolate Bar&quot;, 15]</code></p>\n<p>There should be at least 5 sub-arrays in the list.</p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Link</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/nest-one-array-within-another-array">Challenge: Nest one Array within Another Array</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li><code>myList</code> should be an array.</li>\n<li>The first elements in each of your sub-arrays must all be strings.</li>\n<li>The second elements in each of your sub-arrays must all be numbers.</li>\n<li>You must have at least 5 items in your list.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>A multi-dimensional array would have the following outline <code>[[]]</code></li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Each sub-array should be separated by <code>,</code> as would any item in an array.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Don’t forget the <code>;</code> at the end of your declaration.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myList = [[<span class="hljs-string">"Canned Beans"</span>, <span class="hljs-number">3</span>],[<span class="hljs-string">"Milk Galon"</span>, <span class="hljs-number">1</span>],[<span class="hljs-string">"Cereal"</span>, <span class="hljs-number">2</span>],[<span class="hljs-string">"Toilet Paper"</span>, <span class="hljs-number">12</span>],[<span class="hljs-string">"Sack of Rice"</span>, <span class="hljs-number">1</span>]];\n\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Created an array that has five arrays inside composed of a string and an integer in that order.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 for your help with Checkpoint: Shopping List</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Checkpoint Stand In Line",order:5,body:'<h1>Checkpoint: Stand In Line</h1>\n<p><strong><em>About queues</em></strong></p>\n<p>In Computer Science a <strong>queue</strong> is an abstract <em>Data Structure</em> where items are kept in order. New items can be added at the back of the queue and old items are taken off from the front of the <em>queue</em>.</p>\n<p><strong><em>Instructions</em></strong></p>\n<p>Write a function queue which takes an “array” and an “item” as arguments.</p>\n<p>Add the item onto the end of the array, then remove the first element of the array.</p>\n<p>The queue function should return the element that was removed.</p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="http://www.freecodecamp.com/challenges/manipulate-arrays-with-push">Challenge: Manipulate Arrays With push()</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/manipulate-arrays-with-shift">Challenge: Manipulate Arrays With shift()</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/passing-values-to-functions-with-arguments">Challenge: Passing Values to Functions with Arguments</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>//Your Code here</code> and up to <code>//Change this line</code></li>\n<li>Take note that you are editing the inside of the queue function</li>\n<li>Use an array function you learned to add the <code>item</code> to the end of the array <code>arr</code></li>\n<li>Use an array function you learned to remove the first element from array <code>arr</code></li>\n<li>Return the element removed</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li><code>push</code> adds an item to the end of an array.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li><code>shift</code> removes the first element of an array. It also gives that element back to you.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The function queue uses <code>arr</code> and <code>item</code>. Those are what the tests will use to pass the arrays and elements they will test with and allows the function to be reusable. Do not hardcode any of the tests inside the function.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">queue</span>(<span class="hljs-params">arr, item</span>) </span>{\n  <span class="hljs-comment">// Your code here</span>\n  arr.push(item);\n  <span class="hljs-keyword">var</span> removed = arr.shift();\n  <span class="hljs-keyword">return</span> removed;  <span class="hljs-comment">// Change this line</span>\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Pushes item at the end of arr</li>\n<li>Calls shift on arr to get the first item and stores it in removed</li>\n<li>Returns removed</li>\n</ul>\n<p><strong><em>Example Run</em></strong></p>\n<ul>\n<li>Test <code>queue([2], 1);</code> runs</li>\n<li>The <code>queue</code> function is called. <code>arr</code> becomes [2]. <code>item</code> becomes 1.</li>\n<li><code>arr.push(item);</code> Pushes 1 to [2]. So <code>arr</code> is now [2,1]</li>\n<li><code>var removed = arr.shift();</code> Removes the first element. So <code>arr</code> is now [1]. 2 has been removed and is stored in <code>removed</code></li>\n<li><code>return removed;</code> 2 is returned</li>\n</ul>\n<p><strong><em>Note</em></strong>\nYou don’t actually need to store it in a variable if you return it directly!</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">queue</span>(<span class="hljs-params">arr, item</span>) </span>{\n  <span class="hljs-comment">// Your code here</span>\n  arr.push(item);\n  <span class="hljs-keyword">return</span> arr.shift();  <span class="hljs-comment">// Change this line</span>\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @CaroleAnneHannon for your help with Checkpoint: Stand in Line</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Checkpoint Word Blanks",order:5,body:'<h1>Details</h1>\n<p>We will now use our knowledge of strings to build a “Mad Libs” style word game we’re calling “Word Blanks”. You will create an (optionally humorous) “Fill in the Blanks” style sentence.</p>\n<h2>Instructions</h2>\n<p>You will need to use string operators to build a new string, result, using the provided variables: <code>myNoun</code>, <code>myAdjective</code>, <code>myVerb</code>, and <code>myAdverb</code>.</p>\n<p>You will also need to provide additional strings, which will not change, in between the provided words.</p>\n<p>Remember to use <a href="http://freecodecamp.com/wiki/How-to-get-help-when-you-get-stuck"> Read-Search-Ask</a> if you get stuck. Try to pair program. Write your own code.</p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="https://en.wikipedia.org/wiki/Mad_Libs">Mad Libs</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/constructing-strings-with-variables">Challenge: Constructing Strings with Variables</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/concatenating-strings-with-plus-operator">Challenge: Concatenating Strings with Plus Operator</a></li>\n<li><a href="http://www.freecodecamp.com/challenges/concatenating-strings-with-the-plus-equals-operator">Challenge: Concatenating Strings with the Plus Equals Operator</a></li>\n</ul>\n<h2>Problem Explanation:</h2>\n<ul>\n<li>Change the code below <code>//Your Code here</code> and up to <code>//Change this line</code>.</li>\n<li>Take note that you are editing the inside of the <code>wordBlanks</code> function.</li>\n<li>You will have basically create a sentence with the provided variables and strings you will make.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li><code>+</code> can be used for <em>concatenating</em> with strings.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Just as you can chain strings by concatenating, you can asign them to an existing variable instead of a new one.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li><code>+=</code> will allow you use an existing variable, a string in this case. Remember to add your own <strong>non-letters</strong> in between each variable.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">wordBlanks</span>(<span class="hljs-params">myNoun, myAdjective, myVerb, myAdverb</span>) </span>{\n    <span class="hljs-keyword">var</span> result = <span class="hljs-string">""</span>;\n    <span class="hljs-comment">// Your code below this line</span>\n    result+= <span class="hljs-string">"My "</span>+myAdjective+<span class="hljs-string">" "</span>+myNoun+<span class="hljs-string">" "</span>+myVerb+<span class="hljs-string">" very "</span>+myAdverb+<span class="hljs-string">"."</span>;\n\n    <span class="hljs-comment">// Your code above this line</span>\n  <span class="hljs-keyword">return</span> result;\n}\n\n<span class="hljs-comment">// Change the words here to test your function</span>\nwordBlanks(<span class="hljs-string">"dog"</span>, <span class="hljs-string">"big"</span>, <span class="hljs-string">"ran"</span>, <span class="hljs-string">"quickly"</span>);\n</code></pre>\n<p><strong>Example Run</strong></p>\n<ul>\n<li>Test <code>wordBlanks(&quot;dog&quot;, &quot;big&quot;, &quot;ran&quot;, &quot;quickly&quot;);</code> runs.</li>\n<li>Variable <code>result</code> is declared with an empty string <code>&quot;&quot;</code>.</li>\n<li><code>result</code> will be changed with a new string composed of the concatenated strings “dog”, “big”, “ran”, “quickly” through the variables <code>myNoun</code>, <code>myAdjective</code>, <code>myVerb</code>, <code>myAdverb</code> respectively; the order is changed and whitespace added.</li>\n<li><code>result</code> is returned.</li>\n</ul>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Use <code>result</code> to concatenate the given variables separated by whitespace and added strings to forma full sentence.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 for your help with Checkpoint: Word Blanks</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Coding Help",order:5,body:'<h1>Coding Help</h1>\n<p>I started this list while doing Algorithms, noticing a few things that were common issues / questions but I think most of them are going to be useful to people coding in general. If you’ve got some tips to help people code I’d love to hear them.</p>\n<ol>\n<li>\n<p>If you don’t know where to start, write some pseudocode. Plan out the logic you’re trying to implement in your native language before you try to put it into code.</p>\n</li>\n<li>\n<p>Comment your code! Can’t stress that one enough, if you get lost or take a break then come back you need to know what your code is trying to do. It will also reinforce what the code means to you, and help other people understand what your code does if you get stuck and ask for help. If you’ve got a any other tips for campers I’d love to see them!</p>\n</li>\n<li>\n<p>Use the chrome javascript debugger console in conjunction with something like netbeans IDE or sublime text to write your code. Both are free to download. <br />\nThe free code camp window is great but you can get a lot more feedback on your code’s behaviour by using chrome’s JS debugger and a bunch of <strong>console.log(myVariableGoesHere);</strong> <br />\n<a href="https://developer.chrome.com/devtools/docs/console">https://developer.chrome.com/devtools/docs/console</a> <br />\n<a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a> <br />\n<a href="https://netbeans.org/downloads/">https://netbeans.org/downloads/</a></p>\n</li>\n<li>\n<p>Posting your code in gitter is as simple as adding a line consisting of only</p>\n</li>\n</ol>\n<blockquote>\n<p>```</p>\n<p>Then your code on the next lines, followed by a final</p>\n<p>```</p>\n</blockquote>\n<ol start="5">\n<li>Ask for help in gitter! I can personally relate to staring at a problem for hours, then seeing the solution as soon as I try to explain it to someone, or having someone say something like “typo on line 6” as soon as they see it.</li>\n</ol>\n'}},function(e,n){e.exports={title:"Contributions Guide   with Typo Demo",order:5,body:'<h1>Detailed Guide to Contributions.</h1>\n<p>===================================\nGuide first posted at <a href="https://natacseanc.wordpress.com/2015/09/07/beginners-guide-to-easy-contributions-to-free-code-camp/">Sean Campbell’s Blog</a></p>\n<p>The first 2 steps are <em>setting up</em> the environment.</p>\n<h3>Step 1: Fork, Clone, Upstream Setup</h3>\n<p>First - fork the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp">Free Code Camp repo</a> to your GitHub account. Done by clicking the fork button at the top right of the page. You see a little animated image of the \'forking\'. From there move to terminal. Running the commands below will create a copy of the Free Code Camp repo you just forked.</p>\n<pre><code class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/[USERNAME]/freecodecamp <span class="hljs-comment"># put in your [USERNAME]</span>\n<span class="hljs-built_in">cd</span> freecodecamp\ngit remote add upstream https://github.com/FreeCodeCamp/FreeCodeCamp\n</code></pre>\n<p>The first line clones the repo to your local machine; making a directory called <code>freecodecamp</code> in the current folder you are in. Then move inside that folder with <code>cd freecodecamp</code>. The last line adds the original Free Code Camp repo as a remote upstream. This allows you to pull in the changes that are made to the main project to keep you local copy up to date. This is done by running…</p>\n<pre><code class="language-bash">git fetch upstream\n</code></pre>\n<p>If there were changes then run the commands below to merge; if nothing happens then skip these 2 commands.</p>\n<pre><code class="language-bash">git checkout staging <span class="hljs-comment"># make sure I am on staging branch</span>\ngit merge upstream/staging <span class="hljs-comment"># merge the changing to my local machine</span>\n</code></pre>\n<p>Your local <code>staging</code> branch is up to date with the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp">Free Code Camp repo</a> now.</p>\n<h3>Step 2: Follow <a href="http://README.md">README.md</a> Instructions for more Setup.</h3>\n<p>This guide stresses importance of reading the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp#contributing">README.md</a> on contributing. Please have <a href="http://eslint.org/docs/user-guide/integrations.html">ESlinter</a> running, as the warning are there to help you.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href="http://www.mongodb.org/downloads">MongoDB</a></li>\n<li><a href="http://nodejs.org">Node.js</a></li>\n<li><a href="http://eslint.org/docs/user-guide/integrations.html">ESlinter</a></li>\n</ul>\n<p>These commands are straight from the FCC directions on the <a href="http://README.md">README.md</a></p>\n<pre><code class="language-bash"><span class="hljs-comment"># Install NPM dependencies</span>\nnpm install\n\n<span class="hljs-comment"># Install bower globally</span>\nnpm install -g bower\n\n<span class="hljs-comment"># Install Bower dependencies</span>\nbower install\n\n<span class="hljs-comment"># Install Gulp globally</span>\nnpm install -g gulp\n\n<span class="hljs-comment"># Create a .env file</span>\ntouch .env\n</code></pre>\n<p>What goes in the .env file?? Well first if you do not have a <a href="https://mandrill.com/signup/?_ga=1.36983655.693747097.1440924471">Mandrill account</a> you will need to set one up.\nMandrill is an email service that is beyond the scope of this guide. A quick note; this file will not be included when pushing to GitHub as it will be listed in the <code>.gitignore</code> file.</p>\n<h4>.env file contents</h4>\n<pre><code><span class="hljs-constant">\nMONGOHQ_URL</span>=\'mongodb:<span class="hljs-comment">//localhost:27017/freecodecamp\' // do not change</span>\n<span class="hljs-constant">\nFACEBOOK_ID</span>=stuff\n<span class="hljs-constant">FACEBOOK_SECRET</span>=stuff\n<span class="hljs-constant">\nGITHUB_ID</span>=stuff\n<span class="hljs-constant">GITHUB_SECRET</span>=stuff\n<span class="hljs-constant">\nGOOGLE_ID</span>=stuff\n<span class="hljs-constant">GOOGLE_SECRET</span>=stuff\n<span class="hljs-constant">\nLINKEDIN_ID</span>=stuff\n<span class="hljs-constant">LINKEDIN_SECRET</span>=stuff\n<span class="hljs-constant">\nMANDRILL_PASSWORD</span>=stuff <span class="hljs-comment">// Your mandrill password</span>\n<span class="hljs-constant">MANDRILL_USER</span>=stuff <span class="hljs-comment">// Your mandrill username</span>\n<span class="hljs-constant">\nTRELLO_KEY</span>=stuff\n<span class="hljs-constant">TRELLO_SECRET</span>=stuff\n<span class="hljs-constant">\nTWITTER_KEY</span>=stuff\n<span class="hljs-constant">TWITTER_SECRET</span>=stuff\n<span class="hljs-constant">TWITTER_TOKEN</span>=stuff\n<span class="hljs-constant">TWITTER_TOKEN_SECRET</span>=stuff\n<span class="hljs-constant">\nBLOGGER_KEY</span>=stuff\n<span class="hljs-constant">\nSESSION_SECRET</span>=secretstuff <span class="hljs-comment">// any word you like in small case I believe.</span>\n<span class="hljs-constant">COOKIE_SECRET</span>=\'this is a secret\'\n<span class="hljs-constant">\nPEER</span>=stuff\n<span class="hljs-constant">DEBUG</span>=<span class="hljs-literal">true</span>\n\n</code></pre>\n<h3>Setup is complete - next - the workflow of contributions</h3>\n<p>=============================================================</p>\n<h1>Start of issue fixing</h1>\n<h3>Part 3: Start MongoDB</h3>\n<p>Open up two terminal windows, one to run the mongodb:</p>\n<pre><code class="language-bash">mongod\n</code></pre>\n<p>Then minimize this terminal and move to the other which will be the one to complete the workflow.</p>\n<pre><code class="language-bash"><span class="hljs-comment"># run mongodb</span>\nmongo\n\n<span class="hljs-comment"># switch to the free code camp database</span>\nuse freecodecamp\n\n<span class="hljs-comment"># exit mongo</span>\npress Crtl + d\n</code></pre>\n<h3>Step 4: Finding Issue in the Code Base</h3>\n<p>The issue on GitHub will look something like this.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/issue1.png"><img class="alignnone wp-image-161" src="https://natacseanc.files.wordpress.com/2015/09/issue1.png?w=300" alt="issue" width="456" height="205" /></a></p>\n<p>To find out what file the challenge will be in go to the FCC Map to find out which section the challenge is a part of; the example is <a href="http://freecodecamp.com/challenges/learn-how-script-tags-and-document-ready-work">Learn how Script Tags and Document Ready Work</a> and it is a part of the jQuery section.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/section.png"><img class="alignnone size-medium wp-image-164" src="https://natacseanc.files.wordpress.com/2015/09/section.png?w=300" alt="section" width="300" height="262" /></a></p>\n<p>The actual data for each challenge is located in the <code>seed/challenges/</code> directory. In this folder there are <code>.json</code> files. Each file is named for the section of challenges. So for this demo you need to be in the <code>jQuery.json</code> file.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/files.png"><img src="https://natacseanc.files.wordpress.com/2015/09/files.png?w=287" alt="files" width="287" height="300" class="alignnone size-medium wp-image-171" /></a></p>\n<p>The file itself is of an object that has a <code>challenges</code> attribute which is a list of challenge objects. These have key/value pairs of the title, description, test, and other info that is needed for the other code to build the actual challenge.<a href="https://natacseanc.files.wordpress.com/2015/09/json1.png"><img class="alignnone size-large wp-image-159" src="https://natacseanc.files.wordpress.com/2015/09/json1.png?w=809" alt="JSON" width="809" height="665" /></a></p>\n<p>To fix a simple typo in the test output you should do a search for the challenge then navigate to the <code>&quot;test&quot;:</code> key to find the error. The test is explained in the next part. Any text wrapped in the <code>&lt;code&gt;</code> tags will appear in the red text that you see in the challenge description or test output.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/codetag.png"><img class="alignnone size-full wp-image-140" src="https://natacseanc.files.wordpress.com/2015/09/codetag.png" alt="codeTag" width="384" height="206" /></a></p>\n<h3>Step 5: Making the Change</h3>\n<p>Go to your terminal and run the command below to make sure that nothing has changed to the main code base</p>\n<pre><code class="language-bash">git fetch upstream\n</code></pre>\n<p>If there was a change then merge in like Step 1. Create a branch that explains the change ie <code>fix/typo-jquery-test</code>. Include a brief description of the changes you have made. Include <code>closes #1337</code> for each issue that this pull request intends to close.</p>\n<pre><code class="language-bash"><span class="hljs-comment"># create and move to branch</span>\ngit checkout -b fix/typo-jquery-challange-test\n</code></pre>\n<p>Open the <code>jQuery.json</code> file; the issue that you is that there is parenthesis in the test output that should not be there. Each test has two parts to the <code>assert()</code> method. The first is the test(s), the second part which is separated by a comma is the output description. Please note this picture shows after the change has been made.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/test.png"><img class="alignnone size-full wp-image-131" src="https://natacseanc.files.wordpress.com/2015/09/test.png" alt="test" width="809" height="18" /></a></p>\n<p>The test is the <code>editor.match(/\\\\.parent\\\\(\\\\)\\\\.css/g)</code>, where the description section is <code>\'You should use the &lt;code&gt;.parent()&lt;/code&gt; function to modify this element.\'</code>. The issue is that in the description section there are actual <code>(</code> and <code>)</code>. Meaning the code used to be.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/testbad.png"><img class="alignnone size-full wp-image-130" src="https://natacseanc.files.wordpress.com/2015/09/testbad.png" alt="testbad" width="809" height="17" /></a></p>\n<p>This causes the strange outputs that occur in the tests. By using the right <a href="http://character-code.com/">character code</a> you will be able to replace the parenthesis and the period. At this point save the file but do <strong>not</strong> stage or commit anything with Git yet; you <strong>will want</strong> to run the app locally and see if the changes worked!</p>\n<h3>Step 6: Run Free Code Camp App Locally</h3>\n<p>Mental check that part 3 was done if not do it now. Then:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># Seed database with the challenges</span>\nnode seed/\n\n<span class="hljs-comment"># start the application</span>\ngulp\n</code></pre>\n<p>The gulp command will take a second or too then there will be a IP address that I right click and open in my browser. Now I will navigate to that challenge to verify the changes were what I expected. This is the purple local URL:</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/ipadress.png"><img class="alignnone size-full wp-image-137" src="https://natacseanc.files.wordpress.com/2015/09/ipadress.png" alt="ipadress" width="674" height="100" /></a></p>\n<h3>Step 7: Creating Pull Request</h3>\n<p>After making changes and verification of you work run:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># check status for piece of mind to see unstaged changes</span>\ngit status\n\n<span class="hljs-comment">#check if anything changed in upstream</span>\ngit fetch upstream\n<span class="hljs-comment"># ASSUMING no changes I can proceed.</span>\n<span class="hljs-comment"># if there are changes see Appendix A about stash.</span>\n<span class="hljs-comment"># DO NOT continue if there are changes as you may create conflicts</span>\n\n<span class="hljs-comment"># stage the file</span>\ngit add [FILENAME]\n\n<span class="hljs-comment"># commit changes</span>\ngit commit\n</code></pre>\n<p>You can have <a href="https://help.github.com/articles/associating-text-editors-with-git/">Git open up Sublime when you want to commit a message.</a>. This allows and encourages meaningful commit messages. Make a title on the first line then go into more detail on new lines. So for this demo the message would be something like:</p>\n<pre><code>fix typo on [CHALLENGE]\n\nthere were unnecessary parenthesis <span class="hljs-keyword">in</span> the test outputs\ncloses <span class="hljs-hexcolor">#133</span>7\n</code></pre>\n<p>You are able to auto <a href="https://help.github.com/articles/closing-issues-via-commit-messages/">close the issue when the PR is merged into the code base</a>. Save and close the commit message file; brings you back to the terminal</p>\n<pre><code class="language-bash">git push -u origin fix/typo-jquery-test\n<span class="hljs-comment"># where the part after origin is what ever you called the local branch</span>\n</code></pre>\n<p>Now the changes are on both you local machine and you GitHub account. Opening up a browser you can navigate to the forked copy on your GitHub account. There will be a green button just above the listing of files on the right that read Compare &amp; Pull Request.</p>\n<img class="alignnone size-full wp-image-139" src="https://natacseanc.files.wordpress.com/2015/09/compare.png" alt="compare" width="500" height="203" />\n<p>Clicking this takes you to the screen where you can review the changes once again and finalize the commit message. Then wait for the code to be merged in or possibly some tips on how to improve the changes.</p>\n<img class="alignnone size-full wp-image-132" src="https://natacseanc.files.wordpress.com/2015/09/pr.png" alt="pr" width="600" height="489" />\n<p>Guide written by: <a href="https://github.com/natac13">@natac13</a> on Twitter <a href="https://twitter.com/?lang=en">@natac1311</a></p>\n<h3>Appendix A: Stash</h3>\n<p>Short explanation on what happens if during the time you were making changes there were some merged into the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp"><code>upstream</code></a>. Meaning your local copy is not up to date. This puts you right <strong>before</strong> adding any files to be <em>staged</em> or <em>committed</em>. So:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># check changes to upstream</span>\ngit fetch upstream\n<span class="hljs-comment"># changes have happened</span>\n\n<span class="hljs-comment"># stash your changes</span>\ngit stash\n\n<span class="hljs-comment"># merge upstream into the working branch</span>\ngit merge upstream/staging\n\n<span class="hljs-comment"># reapply you changes</span>\ngit stash apply\n</code></pre>\n<p>You are now back up to date with your changes ready to be staged and committed. <a href="https://git-scm.com/book/en/v1/Git-Tools-Stashing">Git docs on stash</a>.</p>\n'}},function(e,n){e.exports={title:"Creating a New Github Issue",order:5,body:'<p>Before submitting an issue try <a href="https://freecodecamp.com/wiki/Searching-for-Your-Issue-on-Github">Searching for Your Issue on Github</a></p>\n<p>Crafting a good issue will make it much easier for the dev team to replicate and resolve your problem. Follow these steps to do it right:</p>\n<ol>\n<li>Go to FreeCodeCamp’s <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/issues">Github Issues</a> page and click on <code>New Issue</code>.</li>\n</ol>\n<ul>\n<li><strong>Have a useful title</strong></li>\n<li>Write a meaningful title that describes the issue. Some good examples are <code>Logging in from the News and Field Guide pages doesn\'t redirect properly (using e-mail)</code> and <code>Typo: &quot;for&quot; instead of &quot;while&quot; loop</code>; bad examples include <code>A bug, HELP!!!11</code> and <code>I found this bug in a Challenge</code>.</li>\n<li>Keep the title relatively short, the description is for further information. One example is to shorten long Challenge names, so instead of writing <code>Test case bug in \'Challenge: Check Radio Buttons and Checkboxes by Default\'</code>, you might want to write <code>Test case bug in \'Radio Buttons\' Challenge</code>.</li>\n<li>In the body, <strong>provide a link</strong> to the page on which you encountered this issue.</li>\n<li><strong>Describe the problem</strong> and <strong>provide steps</strong> so that a developer can try to replicate the issue.  Include your operating system and browser version.</li>\n<li>When referencing other issues or pull requests, simply write #issue/pr-number.</li>\n<li>Paste in any relevant code using proper <a href="https://freecodecamp.com/wiki/code-formatting">Code Formatting</a></li>\n<li><strong>Take a screenshot</strong> of the issue and include it in the post.</li>\n<li>Click <code>Submit New Issue</code> and you are done! You will be automatically subscribed to notifications for any updates or future comments.</li>\n</ul>\n'}},function(e,n){e.exports={title:"Develop Back End Project locally and run on c9.io",order:5,body:"<p>If you like me develop Back End Project locally and want it run on c9, this may help you.</p>\n<ol>\n<li>push your project to github</li>\n<li>create a new workspace in c9 and set ‘Clone from Git or Mercurial URL (optional)’ with your github repository URL. After submit your create page, c9 will clone your project for you.</li>\n<li>run <code>echo &quot;export NODE_PATH=$NODE_PATH:/home/ubuntu/.nvm/v0.10.35/lib/node_modules&quot; &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</code> in your c9 terminal window</li>\n<li>run <code>bower install &amp;&amp; sudo npm install</code></li>\n<li>run <code>mkdir data &amp;&amp; echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest &quot;$@&quot;' &gt; mongod &amp;&amp; chmod a+x mongod &amp;&amp; ./mongod</code></li>\n<li>run <code>grunt serve</code> in another terminal window</li>\n</ol>\n"}},function(e,n){e.exports={title:"Disable Code Auto Run",order:5,body:"<p>By default, the Free Code Camp site automatically loads and runs your last recorded solution.  If you have accidentally created an infinite loop or other irrecoverable error or simply don’t trust the code, you can disable code auto-run by putting the following in your URL:<br>\n<code>run=disabled</code></p>\n<h4>Example:</h4>\n<p>URL: <code>http://www.freecodecamp.com/challenges/Algorithm-meet-Algorithm#?solution=function%20meetBonfire(argument)</code></p>\n<p>No-Run URL: <code>http://www.freecodecamp.com/challenges/Algorithm-meet-Algorithm#?run=disabled&amp;solution=function%20meetBonfire(argument)</code></p>\n"}},function(e,n){e.exports={title:"Free Code Camp Front End Development Certificate",order:5,body:'<h3>Here’s how to earn our verified Front End Development Certificate:</h3>\n<p><img src="http://i.imgur.com/UrU2ki8.png" alt="An image of a sample Front End Development Certificate"></p>\n<ol>\n<li>Complete all of our current Basic Algorithms</li>\n<li>Complete all of our current Basic Front End Projects</li>\n<li>Complete all of our current Intermediate Algorithms</li>\n<li>Complete all of our current Intermediate Front End Projects</li>\n</ol>\n<p>Once you’ve completed all of the above, you can complete our “Claim your Front End Development Certificate” challenge, which will require you to sign our Academic Honesty Pledge. Then we will instantly issue your verified certificate, which will become accessible from your portfolio page.</p>\n'}},function(e,n){e.exports={title:"Free Code Camp Full Stack Development Certificate",order:5,body:'<p>In order to participate in our nonprofit projects, you first need to earn our Full Stack Development Certificate. This certificate signifies that you’ve completed the first 800 hours of our curriculum.</p>\n<p><img src="http://i.imgur.com/Dlv4qSZ.png" alt="An image of a sample Front End Development Certificate"></p>\n<h3>Here’s how to earn our verified Full Stack Development Certificate:</h3>\n<ol>\n<li>Complete all our current Algorithm Challenges</li>\n<li>Complete all our current Front End Project Challenges</li>\n<li>Complete all our current Back End Project Challenges</li>\n</ol>\n<p>Once you’ve completed all of the above, you can complete our “Claim your Full Stack Development Certificate” challenge, which will require you to sign our Academic Honesty Pledge. Then we will instantly issue your verified certificate, which will become accessible from your portfolio page.</p>\n'}},function(e,n){e.exports={title:"Front End Project Use the Twitchtv JSON API",order:5,body:'<p>If you’re trying to tackle this challenge with jQuery’s <code>$.getJSON()</code> method, chances are you’ll get an error message concerning Cross-Origin Resource Sharing (CORS).</p>\n<p>The easiest way to resolve this is to use jQuery’s JSONP capabilities. From the Twitch API’s <a href="https://github.com/justintv/Twitch-API#json-p">readme page</a>:</p>\n<blockquote>\n<p>All API methods support JSON-P by providing a callback parameter with the request.</p>\n</blockquote>\n<p>Also the <a href="http://api.jquery.com/jQuery.getJSON/">jQuery documentation</a> states:</p>\n<blockquote>\n<p>If the URL includes the string “callback=?” (or similar, as defined by the server-side API), the request is treated as JSONP instead.</p>\n</blockquote>\n<p>Here’s an example call to fetch Free Code Camp’s Twitch channel data:</p>\n<pre><code class="language-js">$.getJSON(<span class="hljs-string">\'https://api.twitch.tv/kraken/streams/freecodecamp?callback=?\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(data);\n});\n</code></pre>\n<p>JSONP is considered insecure <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing#CORS_vs_JSONP">according to Wikipedia</a>, but should be sufficient for our purposes. For a detailed discussion on Twitch’s CORS restriction, please read <a href="https://github.com/justintv/Twitch-API/issues/133">issue #133</a> on the Twitch-API repository.</p>\n'}},function(e,n){e.exports={title:"Frontend file structure",order:5,body:'<p>First things first: All your user-facing files and angular files are in <strong>/client/app/</strong></p>\n<ol>\n<li><strong>app.js</strong>: defines your app and includes some basic app-wide functions, you probably don’t really need to mess with it unless you’re trying to add more dependencies to your app. We’re not gonna worry about that right now.</li>\n<li><strong>app.css</strong>: an app-wide stylesheet, you can put styles here if you want but I’d recommend you put them in <strong>main/main.css</strong>, as these styles are also app-wide.</li>\n<li><strong>main/</strong>: this folder contains what the user sees first when they load up your site. <strong>main.html</strong> is the page template, <strong>main.js</strong> routes the user to <strong>main.html</strong> when the user goes to the top level directory of your website–that is, <a href="#">http://yourapp.wherever.itis/</a> with no <a href="#">/other/url/hierarchy</a>. You’ll also learn soon that you can define your app’s <a href="#">/url/heirarchy/fairly/arbitrarily</a>. You won’t really need to edit <strong>main.js</strong> or <strong>main.controller.spec.js</strong>, so let’s not worry about those right now. If you look through the <strong>main.html</strong> file you’ll see it uses <em>ng-repeat</em> to show <em>things</em> in <em>awesomeThings</em>. Where does it get <em>awesomeThings</em>?</li>\n<li><strong>main/main.controller.js</strong>: all of the javascript functions you want to use to interact directly with the user go here! You’ll put functions here to interact with your API, refresh views for your user, etc. Here, <em>awesomeThings</em> are pulled from your database and added to the local scope so your HTML view can display them! How cool! We’ll get to adding custom objects to your database in a minute.</li>\n</ol>\n<p>Great! Now you know how to interact with the user! But what if you want your app to have another page that does something else? Maybe <strong>main.html</strong> shows the home page, but you want a page that shows a form to add a poll? maybe <a href="#">http://yourapp.wherever.itis/newpage</a>? This is where the yeoman generator comes in handy.</p>\n<p><a href="https://freecodecamp.com/wiki/Guide-to-Back-End-Projects-Table-of-Contents">PREVIOUS</a> <a href="https://freecodecamp.com/wiki/Creating-a-new-route">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Guide to Back End Projects Table of Contents",order:5,body:'<h1>Table of contents</h1>\n<ul>\n<li>\n<p>Part 1: Frontend</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Frontend-file-structure">Frontend file structure</a></li>\n<li><a href="https://freecodecamp.com/wiki/Creating-a-new-route">Creating a new route</a></li>\n<li><a href="https://freecodecamp.com/wiki/Creating-a-new-directive">Creating a new directive</a></li>\n<li><a href="https://freecodecamp.com/wiki/Grunt">Grunt</a></li>\n</ul>\n</li>\n<li>\n<p>Part 2: Backend</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Backend-file-structure">Backend file structure</a></li>\n<li><a href="https://freecodecamp.com/wiki/Creating-a-new-API-endpoint">Creating a new API endpoint</a></li>\n<li><a href="https://freecodecamp.com/wiki/Fixing-exports.update">Fixing exports.update</a></li>\n</ul>\n</li>\n<li>\n<p>Part 3: Interfacing Between Frontend &amp; Backend</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Accessing-the-database-from-your-frontend">Accessing the database from your frontend</a></li>\n<li><a href="https://freecodecamp.com/wiki/Seed-data">Seed Data</a></li>\n<li><a href="https://freecodecamp.com/wiki/Quick-tip-keep-data-in-sync">Quick tip: keep data in sync</a></li>\n</ul>\n</li>\n<li>\n<p>Part 4: Dynamic URLs using $routeParams, more useful APIs</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Dynamic-URLs-using-$routeParams">Dynamic URLS using $routeParams</a></li>\n<li><a href="https://freecodecamp.com/wiki/More-useful-APIs">More Useful APIs</a></li>\n</ul>\n</li>\n<li>\n<p>Part 5: Auth, isLoggedInAsync()</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Get-info-about-the-current-user">Get info about the current user</a></li>\n<li><a href="https://freecodecamp.com/wiki/Restrict-a-page-to-authenticated-users">Restrict a page to authenticated users</a></li>\n<li><a href="https://freecodecamp.com/wiki/isLoggedInAsync()">isLoggedInAsync()</a></li>\n</ul>\n</li>\n<li>\n<p><a href="https://freecodecamp.com/wiki/Bonus-SocketIO">Bonus: SocketIO</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.com/wiki/Epilogue">Epilogue</a></p>\n</li>\n</ul>\n<h1>Legend</h1>\n<p><strong>/bolded/names/with.extensions</strong> are directories and files in the project file structure<br><a href="#">highlighted.items/are/hypothetical</a> URLs that allow access to different pages in your app<br><em>italicizedItems</em> are function and object names within your code</p>\n<p><a href="https://freecodecamp.com/wiki/Intro-to-Yeoman-Angular-Fullstack-Back-End-Projects">PREVIOUS</a> <a href="https://freecodecamp.com/wiki/Frontend-file-structure">NEXT</a></p>\n'}},function(e,n){e.exports={title:"How Free Code Camp works",order:5,body:'<p>Free Code Camp offers you a free, self-paced, browser-based program that takes about 1,600 hours to complete.</p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Challenges.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<h2>how it works</h2>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Algorithms.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p>![An image of a table showing the different segments of Free Code Camp](<a href="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Front">https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Front</a> End Projects.jpg)</p>\n<p>![An image of a table showing the different segments of Free Code Camp](<a href="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Back">https://s3.amazonaws.com/freecodecamp/curriculum-diagram-Back</a> End Projects.jpg)</p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-nonprofit-projects.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-full.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n'}},function(e,n){e.exports={title:"How To Contribute To The Wiki",order:5,body:'<h1>How To Contribute To The Wiki</h1>\n<p>This is a step-by-step guide, aimed at people new to Git, which covers how to use GitHub Desktop as well as the Git command line</p>\n<p>As such there might be 2 sets of directions: GitHub Desktop first, then command line version</p>\n<p>GitHub Desktop is a GUI interface, but there are benefits to learning the command line way too (speed, shortcuts, more powerful commands, and being able to talk to people who are old school). It might be beneficial to you to try the Command Line way after you get more comfortable with GitHub</p>\n<p>##Table Of Contents</p>\n<ul>\n<li><a href="#initial-one-time-setup">Initial: One Time Setup</a>\n<ul>\n<li><a href="#cloning">Cloning</a></li>\n</ul>\n</li>\n<li><a href="#part-1-choose-what-to-work-on">Part 1: Choose What To Work On</a></li>\n<li><a href="#part-2-making-a-new-branch">Part 2: Making A New Branch</a></li>\n<li><a href="#part-3-getting-ready-to-edit">Part 3: Getting Ready To Edit</a></li>\n<li><a href="#part-4-commit-to-your-branch">Part 4: Commit To Your Branch</a></li>\n<li><a href="#part-5-pull-request-to-fcc-wiki-repo">Part 5: Pull Request To FCC Wiki Repo</a></li>\n<li><a href="#markdown-editing-and-viewing-tools">Markdown Editing And Viewing Tools</a></li>\n</ul>\n<hr>\n<hr>\n<h2>Initial: One Time Setup</h2>\n<ul>\n<li>Have a GitHub Account</li>\n<li>Get Git on your computer\n<ul>\n<li><a href="https://desktop.github.com/">GitHub Desktop</a>. Also comes with Git Shell (a command line interface)</li>\n<li>Other Git clients like Git Bash</li>\n</ul>\n</li>\n<li>Go to the <a href="https://github.com/FreeCodeCamp/wiki">Wiki Repo</a>\n<ul>\n<li><strong>CAREFUL:The Wiki is stored at a different repo than the main FCC site</strong></li>\n<li>The above link is where you need to go</li>\n</ul>\n</li>\n<li>Click on <strong>Fork</strong> if you don’t already have a Fork\n<ul>\n<li>This will recreate the Wiki Repo under your username</li>\n<li>This will also automatically create the same branches that the FCC wiki Repo has. Thus you will now have a master <strong>branch</strong> as well</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Vocabulary</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Repository</td>\n<td>A data structure to manage a project or set of files and the changes it receives</td>\n</tr>\n<tr>\n<td>Repo</td>\n<td>A shorter way to say Repository</td>\n</tr>\n<tr>\n<td>Branch</td>\n<td>A pointer to a version of a repo as of when the branch was last created/updated from that repo</td>\n</tr>\n</tbody>\n</table>\n<h3>Cloning</h3>\n<p><em>The following image is a reference to both sets of directions</em></p>\n<p><img src="../images/How-To-Contribute-To-The-Wiki/Grabbing-The-Git-URL.png" alt="Grabbing the Git URL"></p>\n<h4>Github Desktop Directions</h4>\n<p>On <strong><em>your</em></strong> forked repository page, click the button that looks like a screen with an arrow (the reference image above has it as the red marker). This will open GitHub Desktop to clone it automatically</p>\n<p>If it doesn’t do it automatically, you can:</p>\n<ul>\n<li>Open GitHub Desktop yourself</li>\n<li>Click on the Arrow on the top</li>\n<li>Select Clone</li>\n<li>Pick the fork your wish to clone</li>\n<li>Click on “Clone wiki”</li>\n<li>Select where to clone it into</li>\n</ul>\n<p><img src="../images/How-To-Contribute-To-The-Wiki/GitHub-Desktop-Cloning.PNG" alt="GitHub Desktop Cloning"></p>\n<h4>Command Line Directions</h4>\n<p><code>git clone &lt;REMOTEURL&gt;</code></p>\n<p>example: <code>git clone https://github.com/yourusernamehere/wiki.git</code></p>\n<p>You can grab the repository URL on your fork. The image above shows a button that will copy it to your clipboard</p>\n<table>\n<thead>\n<tr>\n<th>Vocabulary</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Fork</td>\n<td>A repository made from another repository</td>\n</tr>\n<tr>\n<td>Clone</td>\n<td>A local instance made from a repository</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<hr>\n<h2>Part 1: Choose What To Work On</h2>\n<p>Feel free to look at the <a href="https://github.com/FreeCodeCamp/wiki/issues">issues</a> on the Wiki’s repo</p>\n<p>Additionally you can contact <a href="https://gitter.im/Rafase282">@Rafase282</a> or ask in the <a href="https://gitter.im/FreeCodeCamp/Wiki">Wiki Chat</a></p>\n<p>Lastly you could just make a change you feel is needed without coordinating with anyone - typo fixes for example</p>\n<hr>\n<hr>\n<h2>Part 2: Making A New Branch</h2>\n<p>You should make a new branch and not work on master.</p>\n<ul>\n<li>Branches should be named after what the change you are performing.</li>\n<li>This makes it easier for the person reviewing the pull request later on to have an idea what is worked on.\n-Not using master also makes it easier to start over if you accidentally mess up your branch. Otherwise, you will either have to do a force reset back to a point in time which you know was in sync with the FCC wiki master, or you will have to delete and recreate your fork!</li>\n</ul>\n<p><strong>GitHub Desktop Directions</strong></p>\n<p><img src="../images/How-To-Contribute-To-The-Wiki/GitHub-Desktop-NewBranch.PNG" alt="GitHub Desktop New Branch"></p>\n<ul>\n<li>Click on the Fork icon and it’ll show you a tiny form to create a branch</li>\n<li>Make sure your From Branch is FreeCodeCamp/master (or upstream/master if you have one)</li>\n<li>This will ensure your new branch is off the current version of FCC wiki’s master</li>\n</ul>\n<p><strong>Command Line Directions</strong></p>\n<p><strong><em>Setting up an upstream</em></strong></p>\n<p><code>git remote add upstream &lt;REMOTEURL&gt;</code></p>\n<p>example: <code>git remote add upstream https://github.com/FreeCodeCamp/wiki.git</code></p>\n<ul>\n<li><strong><em>Why use upstream?</em></strong>\n<ul>\n<li>More than likely you already have a connection called FreeCodeCamp (which you can check by doing <code>git remote -v</code>), so why make a new one called upstream that will go to the same place?</li>\n<li>It’s a good habit. When you eventually work on multiple repos at the same time, you might not always remember what each one was originally called (since it’s based on the username of the original repo owner). Making a new connection for each called “upstream” means you only have to remember one name</li>\n<li>Technically it could be anything, but upstream is used by convention</li>\n</ul>\n</li>\n</ul>\n<p><strong><em>Setting up the new branch</em></strong></p>\n<p><code>git checkout -b &lt;local branch name&gt; &lt;remote&gt;/&lt;remote branch name&gt;</code></p>\n<p>example: <code>git checkout -b mybranchname upstream/master</code></p>\n<p>Making your new branch off of the upstream’s master will ensure it is made off the latest version of the FCC wiki</p>\n<table>\n<thead>\n<tr>\n<th>Vocabulary</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Upstream</td>\n<td>a common name for the repo that one created a branch/fork from</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<hr>\n<h2>Part 3: Getting Ready To Edit</h2>\n<p>Get to your directory on your local machine</p>\n<p><em>Github Desktop note</em></p>\n<p><em>You can right click and use &quot;Open in Explorer&quot;</em>\n<em>Also if you cut your directory into another location, GitHub desktop will then no longer be able to find it and ask you the new location. This makes it very easy to move to a different location</em></p>\n<p><strong>Understanding how the wiki works</strong></p>\n<p>All of the files for the wiki are .md files. These are <strong>markdown</strong> files. They use <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">markdown language</a> for the formatting of the files.</p>\n<ul>\n<li>The Algorithm pages begin with Algorithm</li>\n<li>The Challenges pages begin with Challenge</li>\n<li>The JavaScript references pages begin with js</li>\n<li>The Front End Project pages begin with Front End Project</li>\n<li>The Back End Project pages begin with Back End Project</li>\n<li>There are no spaces in the file names. use - instead</li>\n<li>Files should be Title Cased (the first letter of each word should be capitalized)</li>\n</ul>\n<p>Simply edit the file on your machine, or make a new one.</p>\n<hr>\n<hr>\n<h2>Part 4: Commit To Your Branch</h2>\n<p>Now that you’ve made your change, you have to <em>commit</em> and <em>push</em>.</p>\n<p><strong>GitHub Desktop Directions</strong>\n<img src="../images/How-To-Contribute-To-The-Wiki/Commit-Changes-To-Your-Branch.PNG" alt="Commit Changes To Your Branch"></p>\n<ul>\n<li>Go to GitHub Desktop</li>\n<li>Click on the branch (even if you’re on it. This will guarantee it’ll refresh)</li>\n<li>If it’s on History, click on Changes tab (top)</li>\n<li>You should be able to:\n<ul>\n<li>see which files are changed</li>\n<li>see what the differences are (if any. New files will obviously not have differences)</li>\n<li>check/uncheck files to include in the commit</li>\n</ul>\n</li>\n<li>Write a summary (required)\n<ul>\n<li>the summary should reflect what is being edited</li>\n<li>If you are doing a specific issue, do NOT add the issue number to the Summary</li>\n</ul>\n</li>\n<li>Write a description (optional)\n<ul>\n<li>more details about what is being edited</li>\n<li>If doing a specific issue, append to the end of the commit message <code>closes #1337</code>. This tells GitHub to close that issue if the PR is merged</li>\n</ul>\n</li>\n<li>Click on Commit\n<ul>\n<li>Commit will only put it on your local</li>\n</ul>\n</li>\n<li>Click on Sync\n<ul>\n<li>This will “push” it to the online version of your branch</li>\n</ul>\n</li>\n</ul>\n<p><strong>Command Line Directions</strong></p>\n<ul>\n<li>add files to be committed:\n<ul>\n<li><code>git add &lt;filename&gt;</code>\n<ul>\n<li>Adds a specific file</li>\n<li>example: <code>git add myfile.txt</code></li>\n</ul>\n</li>\n<li><code>git add -A</code>\n-Adds everything that’s changed</li>\n<li><code>git add filestring*</code>\n<ul>\n<li>adds everything starting with filestring</li>\n<li>example <code>git add Algorithm*</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>commmit:\n<ul>\n<li>git commit -m “Short Description of Change”\n<ul>\n<li>the message should reflect what is being edited</li>\n<li>If doing a specific issue, append to the end of the commit message <code>closes #1337</code>. This tells GitHub to close that issue if the PR is merged</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>push:\n-<code>git push &lt;REMOTENAME&gt; &lt;REMOTEBRANCH&gt;</code>\n<ul>\n<li>example <code>git push origin wikiguide</code></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Vocabulary</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Commit</td>\n<td>changes made to a repository</td>\n</tr>\n<tr>\n<td>Push</td>\n<td>Applies a commit from your local to the remote version of your branch</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<hr>\n<h2>Part 5: Pull Request To FCC Wiki Repo</h2>\n<p><strong>GitHub Desktop Directions</strong>\n<img src="../images/How-To-Contribute-To-The-Wiki/GitHub-Desktop-Pull-Request.PNG" alt="Commit Changes To Your Branch"></p>\n<ul>\n<li>Click on the Pull Request Icon/Test</li>\n<li>Select FreeCodeCamp/master (or upstream/master if you have it set up)</li>\n<li>Write a title and description</li>\n<li>Check to see if the pull request can be automatically merged\n<ul>\n<li>If not, try to find out why not</li>\n</ul>\n</li>\n<li>Send pull request\n<ul>\n<li>If it fails, sometimes trying again works</li>\n</ul>\n</li>\n</ul>\n<p><strong>Website Directions</strong></p>\n<ul>\n<li>Make sure you are on the branch you wish to submit a PR from</li>\n<li>Click on Compare &amp; Pull Request</li>\n<li>Review the form</li>\n<li>Click “Create pull request”</li>\n</ul>\n<p><img src="../images/How-To-Contribute-To-The-Wiki/GitHub-PR.PNG" alt="Commit Changes To Your Branch"></p>\n<table>\n<thead>\n<tr>\n<th>Vocabulary</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Pull Request</td>\n<td>A request to another repo to take in changes</td>\n</tr>\n<tr>\n<td>PR</td>\n<td>Short way of saying Pull Request</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<hr>\n<h2>Markdown Editing And Viewing Tools</h2>\n<p>###Atom: Markdown Live Preview###</p>\n<p>A plugin for the Atom editor, targeted for GitHub.</p>\n<p>###Chrome extension: Markdown preview plus###</p>\n<p>A viewing extension. If you set up .md files to automatically open in Chrome, it makes viewing them really easy</p>\n<p>Use the Github theme to have a better feel of the end result</p>\n<p><img src="../images/How-To-Contribute-To-The-Wiki/Markdown-Preview-Plus.PNG" alt="Markdown preview plus"></p>\n<hr>\n<hr>\n<hr>\n'
}},function(e,n){e.exports={title:"How To Create A Pull Request for Free Code Camp",order:5,body:'<h1>Overview</h1>\n<h3>What is a Pull Request?</h3>\n<p>A pull request (PR) is a method of submitting proposed changes to the Free Code Camp Repo (or any Repo, for that matter).  You will make changes to copies of the files which make up Free Code Camp in a personal fork, then apply to have them accepted by Free Code Camp proper.</p>\n<h3>Need Help?</h3>\n<p>Free Code Camp Issue Mods and staff are on hand to assist with Pull Request related issues on our <a href="https://gitter.im/FreeCodeCamp/HelpContributors">Help Contributors Chat Room</a></p>\n<h3>Methods</h3>\n<p>There are two methods of creating a Pull for Free Code Camp:</p>\n<ol>\n<li>Editing files via the GitHub Interface</li>\n<li>Editing files on a local clone</li>\n</ol>\n<h1>Important: ALWAYS EDIT ON A BRANCH</h1>\n<p>Take away only one thing from this document, it should be this:  Never, EVER make edits to the <code>staging</code> branch.  ALWAYS make a new branch BEFORE you edit files.  This is critical, because if your PR is not accepted, your copy of <code>staging</code> will be forever sullied and the only way to fix it is to delete your fork and re-fork.</p>\n<h1>Editing via your Local Fork (Recommended)</h1>\n<p>This is the recommended method.  Read about <a href="https://freecodecamp.com/wiki/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp">How to Setup and Maintain a Local Instance of Free Code Camp</a>.</p>\n<ol>\n<li>Perform the maintenance step of rebasing <code>staging</code></li>\n<li>Ensure you are on the <code>staging</code> branch using <code>git status</code>:</li>\n</ol>\n<pre><code>$ git status\n<span class="hljs-keyword">On</span> branch staging\nYour branch <span class="hljs-keyword">is</span> up-<span class="hljs-keyword">to</span>-<span class="hljs-built_in">date</span> <span class="hljs-keyword">with</span> <span class="hljs-comment">\'origin/staging\'.</span>\n\n<span class="hljs-literal">nothing</span> <span class="hljs-keyword">to</span> commit, working directory clean\n</code></pre>\n<ol start="3">\n<li>If you are not on staging or your working directory is not clean, resolve any outstanding files/commits and checkout staging\n<code>git checkout staging</code></li>\n<li>Create a branch off of <code>staging</code> with git:\n<code>git checkout -B branch/name-here</code>\nNote: Branch naming is important.\nUse a name like <code>fix/short-fix-description</code> or <code>feature/short-feature-description</code>\nReview the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Contribution Guidelines</a> for more detail.</li>\n<li>Edit your file(s) locally with the editor of your choice</li>\n<li>Check your <code>git status</code> to see unstaged files.</li>\n<li>Add your edited files:\n<code>git add path/to/filename.ext</code>\nYou can also do:\n<code>git add .</code>\nto add all unstaged files.  Take care, though, because you can accidentially add files you don’t want added.  Review your <code>git status</code> first.</li>\n<li>Commit your edits:\n<code>git commit -m &quot;Brief Description of Commit&quot;</code></li>\n<li><a href="https://freecodecamp.com/wiki/git-rebase#squashing-multiple-commits-into-one">Squash your commits</a>, if there are more than one.</li>\n<li>Push your commits to your GitHub Fork:\n<code>git push -u origin branch/name-here</code></li>\n<li>Go to <a href="https://freecodecamp.com/wiki/How-To-Create-A-Pull-Request-for-Free-Code-Camp#common-steps">Common Steps</a></li>\n</ol>\n<h1>Editing via the GitHub Interface</h1>\n<p><strong>Note:</strong> Editing via the GitHub Interface is not recommended, since it is not possible to update your fork via GitHub’s interface without deleting and recreating your fork.</p>\n<ol>\n<li>Create a Fork of the FCC Repo</li>\n<li><a href="https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/">Create a branch</a> within your fork.\nNote: Branch naming is important.\nUse a name like <code>fix/short-fix-description</code> or <code>feature/short-feature-description</code>\nReview the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Contribution Guidelines</a> for more detail.</li>\n<li>Edit the file and commit the changes.</li>\n<li>Continue to <a href="https://freecodecamp.com/wiki/How-To-Create-A-Pull-Request-for-Free-Code-Camp#common-steps">Common Steps</a></li>\n</ol>\n<h1>Common Steps</h1>\n<ol>\n<li>Once the edits have been committed, you will be prompted to create a pull request on your fork’s Github Page.</li>\n<li>By default, all pull requests should be against the FCC main repo, <code>staging</code> branch.</li>\n<li>Make a clear title for your PR which succinctly indicates what is being fixed.  Do not add the issue number in the title.\nExamples:\n<code>Add Test Cases to Algorithm Drop It</code>\n<code>Correct typo in Challenge Size Your Images</code></li>\n<li>In the body of your PR include a more detailed summary of the changes you made and why.</li>\n<li>Indicate if you have tested on a local copy of the site or not.</li>\n<li>If your PR is due to an issue, you can <a href="https://help.github.com/articles/closing-issues-via-commit-messages/">reference and close that issue</a> automatically by adding a keyword like <code>Closes #xxxx</code>, where <code>xxxx</code> is the issue number.</li>\n</ol>\n<h1>Next Steps</h1>\n<h3>If Changes are Requested</h3>\n<p>Don’t worry, many PRs, especially first PRs, require correction or updating.  If you have used the GitHub interface to create your PR, you will need to close your PR, create a new branch, and re-submit.  This is because you cannot squash your commits via the GitHub interface.</p>\n<p>If you have a local copy of the repo, you can make the requested changes and amend your commit with:\n<code>git commit --amend</code>\nThis will update your existing commit.  When you push it to your fork you will need to do a force push to overwrite your old commit:\n<code>git push --force</code></p>\n<p>Be sure to post in the PR conversation that you have made the requested changes.</p>\n<h3>If your PR is accepted</h3>\n<p>Once your PR is accepted, you may delete the branch you created to submit it.  This keeps your working fork clean.  You can do this with a press of a button on the GitHub PR interface.\nYou can delete the local copy of the branch with:\n<code>git branch -D branch/to-delete-name</code></p>\n<h3>If your PR is rejected</h3>\n<p>Don’t despair!  You should receive solid feedback from the Issue Moderators as to why it was rejected and what is needed.  Please, keep contributing.</p>\n'}},function(e,n){e.exports={title:"How to clear specific values from your browser's local storage",order:5,body:'<p>Removing specific values from your browser’s local storage will solve many problems related to the browser crashing or freezing on FreeCodeCamp.</p>\n<p>This solves, as example, a common problem with browser hanging out in a challenge’s page after saving a response with an infinite loop.</p>\n<p>When this happens, you must delete the value in <code>localStorage</code> storing that response.</p>\n<p>In Chrome:</p>\n<ul>\n<li>On <strong><a href="http://freecodecamp.com">freecodecamp.com</a></strong>, open your developer tools.\n<ul>\n<li>More tools &gt; Developer tools (or <code>Ctrl</code> + <code>Shift</code> + <code>I</code> (Windows), <code>Cmd</code> + <code>Opt</code> + <code>I</code> (Mac))</li>\n</ul>\n</li>\n<li>Navigate to the <code>Resources</code> tab</li>\n<li>Expand the <code>Local Storage</code> item in the left pane</li>\n<li>Select <code>http://www.freecodecamp.com</code></li>\n<li>Find the challenge you wish to delete data in the right pane\n<img src="http://i.imgur.com/O57tcuN.png" alt="Finding a key in localStorage Chrome Developer Tools"></li>\n<li>Right click the desired challenge and select <code>Delete</code></li>\n</ul>\n<p>In Firefox:</p>\n<ul>\n<li>On <strong><a href="http://freecodecamp.com">freecodecamp.com</a></strong>, open your web console with\n<ul>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>K</code></li>\n</ul>\n</li>\n<li>From there, using directly the console:\n<ul>\n<li>Type <code>console.log(localStorage);</code> and hit <code>Enter</code>.</li>\n<li>Click in <code>Storage</code> link.\n<img src="http://i.imgur.com/AsflWtv.png" alt="Print the localStorage Object from web console and show the Storage"></li>\n<li>The <strong>Storage</strong> panel will appear at right.</li>\n<li>Filter the results to find the Algorithm, Front End Project or Challenge causing the problem.</li>\n<li>When located, mouse over it and click the <code>x</code> at right.\n<img src="http://i.imgur.com/3URr4jQ.png" alt="Click the x for deleting the value entry."></li>\n<li>Once removed, check if the problem was solved. Refresh or close and open the browser if necessary.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Note:</strong> This can also be done with the <a href="https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector">Storage Inspector</a>, but seems like Firefox hangs out when there are so many values.</p>\n'}},function(e,n){e.exports={title:"How to get the MEAN stack running locally on OSX",order:5,body:'<h1>Requirements</h1>\n<p>To install MongoDB, you should have Mac OS X 10.6 (Snow Leopard) or above. To find out which version of OS X you own, click the  icon in the top left corner of your screen and select <code>About This Mac</code>.</p>\n<p>:warning: <strong>WARNING:</strong> do a Time Machine backup before carrying out any of the following steps!</p>\n<h1>Step 1: installing MongoDB</h1>\n<p>The easiest way to install MongoDB on OS X is using <a href="http://brew.sh/">HomeBrew</a>. If you haven’t used HomeBrew before, simply execute the following command in a Terminal window:</p>\n<pre><code class="language-sh">ruby <span class="hljs-operator">-e</span> <span class="hljs-string">"<span class="hljs-variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span>\n</code></pre>\n<p>After HomeBrew is successfully installed, follow up with this command:</p>\n<pre><code class="language-sh">brew update &amp;&amp; brew install mongodb\n</code></pre>\n<p>HomeBrew will automatically install all the dependencies for you.</p>\n<h1>Step 2: installing Node.js</h1>\n<p>Again, we’ll let HomeBrew do the heavy lifting:</p>\n<pre><code class="language-sh">brew install node\n</code></pre>\n<p>The npm executable is already included in the Node.js package.</p>\n<p>Before continuing, let’s make sure Node.js modules can be found by others (:warning: <strong>CAUTION</strong>: it’s best to copy and paste these commands, as you’d lose the original contents of your <code>.bashrc</code> file if you typed <code>&gt;</code> in place of <code>&gt;&gt;</code>):</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">\'export NODE_PATH="./node_modules:/usr/local/lib/node_modules"\'</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="hljs-built_in">source</span> ~/.bashrc\n</code></pre>\n<p>To check if the configuration is in effect, execute:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$NODE_PATH</span>\n</code></pre>\n<p>You should see <code>./node_modules:/usr/local/lib/node_modules</code> printed out below your command.</p>\n<p>If you use a different shell than Bash, simply replace <code>~/.bashrc</code> with your shell configuration file.</p>\n<h1>Step 3: installing fullstack tools</h1>\n<pre><code class="language-sh">npm install -g express yo grunt grunt-cli generator-angular-fullstack bower\n</code></pre>\n<h1>Step 4: generating a fullstack app</h1>\n<p>Make a directory for your Back End Project projects. Assuming your desktop is your de facto workspace:</p>\n<pre><code class="language-sh">mkdir ~/Desktop/Back End Projects &amp;&amp; <span class="hljs-built_in">cd</span> ~/Desktop/Back End Projects\n</code></pre>\n<p>Now that all the preparations are in place, it’s time for the main event:</p>\n<pre><code class="language-sh">yo angular-fullstack\n</code></pre>\n<p>Answer the questions according to checklist items #13-23 of <a href="http://www.freecodecamp.com/challenges/get-set-for-our-back-end-development-projects">Challenge: Get Set for Back End Projects</a>. Consult #24-27 if you run into errors. This will download ~350MB worth of files into your current directory.</p>\n<p>Before going any further, we need to fix a <a href="https://github.com/clnhll/guidetobasejumps#fixing-exportsupdate">known issue</a> in some generated files:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">"sed -i \'\' -e \'s/_.merge/_.extend/\' server/api/*/*.controller.js"</span> &gt; \\\nfix-exports-update.sh &amp;&amp; chmod +x fix-exports-update.sh &amp;&amp; \\\n./fix-exports-update.sh\n</code></pre>\n<p>You need to run <code>./fix-exports-update.sh</code> every time you generate a new API endpoint (until they fix this upstream, that is).</p>\n<h1>Step 5: initialising local Git repository</h1>\n<p>Tell Git not to track your database:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">"data"</span> &gt;&gt; .gitignore\n</code></pre>\n<p>Turn the directory in which your application is located into a Git repository by running the following commands:</p>\n<pre><code class="language-sh">git init &amp;&amp; git add . &amp;&amp; git commit -am <span class="hljs-string">\'initial commit\'</span>\n</code></pre>\n<h1>Step 6: starting MongoDB</h1>\n<p>To start MongoDB for the first time in your app’s directory, run the following commands in your terminal:</p>\n<pre><code class="language-sh">mkdir data &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">\'mongod --config /usr/local/etc/mongod.conf --dbpath=data --rest "$@" --httpinterface\'</span> &gt; mongod.sh &amp;&amp; chmod a+x mongod.sh &amp;&amp; ./mongod.sh\n</code></pre>\n<p>From this point on you can simply start MongoDB by executing <code>./mongod.sh</code>. A few things to note:</p>\n<ul>\n<li>The <code>.conf</code> file directs <code>mongod</code> to write messages to a log file instead of stdout. To view the log, run the following in a separate Terminal tab: <code>less /usr/local/var/log/mongodb/mongo.log</code>.</li>\n<li>Since we’re not on Cloud9, we don’t need the <code>--nojournal</code> option. Journaling lets you recover the database in case of a <code>mongod</code> crash.</li>\n<li>You have to make a clean database for each project. If you copied the <code>data</code> directory over from an earlier project, <code>mongod</code> will fail to start. If that’s the case, just <code>rm -rf data &amp;&amp; mkdir data &amp;&amp; ./mongod.sh</code>.</li>\n</ul>\n<h1>Step 7: starting Grunt</h1>\n<p>Open a new Terminal tab by pressing <code>⌘T</code>, and run the following command:</p>\n<pre><code class="language-sh">grunt serve\n</code></pre>\n<p>Grunt should automatically open your new Angular site’s index page as soon as it finishes starting up.</p>\n<p>Now you should be able to follow the rest of the Challenge instructions to push to GitHub and Heroku. Just ignore the part about SSH key (#33-36) and replace <code>~/workspace</code> with your app directory’s path.</p>\n<hr>\n<h2>Footnote</h2>\n<p>The above steps were tested under the following configuration:</p>\n<ul>\n<li>OS X 10.10.5</li>\n<li>zsh 5.0.8 (x86_64-apple-darwin14.3.0)</li>\n<li>node v0.12.7</li>\n<li>npm 2.11.3</li>\n</ul>\n'}},function(e,n){e.exports={title:"How to install Screenhero",order:5,body:'<p><a href="http://links.screenhero.com/e/c/eyJlbWFpbF9pZCI6Ik1qQTNNem9XQkNJQ1pBQUNjd0FYQVZrVEdnRkxNamtfX0JWZEdGVEpSZkVCWlRwbFpXRTBNamM0WVMxaE56SmlMVEV4WlRRdE9HUXpZUzFpWXpVNE1HRTJNalkxTldNNk1UUTJNVEEyQUE9PSIsInBvc2l0aW9uIjowLCJocmVmIjoiaHR0cDovL2RsLnNjcmVlbmhlcm8uY29tL3NtYXJ0ZG93bmxvYWQvZklYQU1UUUJBTEtQQkhQTC9TY3JlZW5oZXJvLnppcD9zb3VyY2U9d2ViIn0=">Download for Mac</a></p>\n<p><a href="http://links.screenhero.com/e/c/eyJlbWFpbF9pZCI6Ik1qQTNNem9XQkNJQ1pBQUNjd0FYQVZrVEdnRkxNamtfX0JWZEdGVEpSZkVCWlRwbFpXRTBNamM0WVMxaE56SmlMVEV4WlRRdE9HUXpZUzFpWXpVNE1HRTJNalkxTldNNk1UUTJNVEEyQUE9PSIsInBvc2l0aW9uIjoxLCJocmVmIjoiaHR0cDovL2RsLnNjcmVlbmhlcm8uY29tL3NtYXJ0ZG93bmxvYWQvZklYQU1UUUJBTEtQQkhQTC9TY3JlZW5oZXJvLXNldHVwLmV4ZSJ9">Download for Windows</a></p>\n<p>You’ll use Screenhero to pair program on the Algorithms and Front End Project challenges.</p>\n<p>Here are other alternatives to Screenhero as suggested by our fellow campers:</p>\n<ul>\n<li>TeamViewer (also works for Linux)</li>\n<li>Skype + ScreenLeap</li>\n<li><a href="http://Codeshare.io">Codeshare.io</a></li>\n<li><a href="http://Kobra.io">Kobra.io</a></li>\n<li>Google Hangouts</li>\n<li>jsbin</li>\n<li>Cloud 9</li>\n<li><a href="http://Appear.in">Appear.in</a></li>\n<li><a href="http://tmate.io">tmate</a> + some communication tool, e.g, Google Hangouts, Skype, <a href="http://appear.in">appear.in</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"How to start when you are stuck (I)",order:5,body:'<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></strong></p>\n<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n<p>You are a camper just like me, you get to an exercise and you get stuck … just like anyone else. You have no idea how to start, you stare at your editor and you think you must have a problem, surely you are not developer material … well you’re wrong!  Perhaps you are just like me? I’m a visual person, I like a drawing better than a text. Everytime the same problem put down in a schema makes more sense to me than if you gave me a text. So … what do I do when I have problems solving/understanding an exercise? I start to draw. After I have my drawing in place if I need more to translate it to code I can also write it in pseudocode. After that transposing it to code should not be very hard.</p>\n<h3>So what are this flowcharts (the drawings) and pseudocode?</h3>\n<p>During my first semester in college, we had a course about introduction to algorithms. This is where we first learned about this stuff. We learned that a good algorithm and good logical programing is developed using flowcharts and pseudocode.</p>\n<p>A <strong>flowchart</strong> represents your program flow from top to bottom. Each command is represented on this. Depending on the nature of the command there are different shapes you can use. A few of them that I mostly use (you can google more on this, google is your friend when you know what to google for) are:</p>\n<p><img src="http://biancamihai.github.io/img/flowchart-theory.png" alt=""></p>\n<p>More information about this you can find here <a href="https://en.wikipedia.org/wiki/Flowchart">https://en.wikipedia.org/wiki/Flowchart</a>.</p>\n<p><strong>Pseudocode</strong> is an informal language that helps developers write algorithms. It is a text-based design tool and it uses a human readable language. It’s a structured english text that describes an algorithm.</p>\n<p>Every Algorithm in Free Code Camp curriculum can be solved using pseudocode and after that translated using javascript in a functional javascript code.</p>\n<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></strong></p>\n'}},function(e,n){e.exports={title:"How to start when you are stuck (II)",order:5,body:'<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(I)">How to start when you are stuck (I)</a></strong></p>\n<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n<p>Let’s try an example. If we take a look at one of the Free Code Camp exercices, and let’s choose a more simple one: <a href="http://www.freecodecamp.com/challenges/Algorithm-find-the-longest-word-in-a-string">find the longest word in a string</a>. We can start and draw a flowchart for it and write a first solution in pseudocode.</p>\n<p><img src="http://biancamihai.github.io/img/Algorithm-1.png" alt=""></p>\n<p>So what does Free Code Camp want from us with this problem? Well it wants as to create a function that gets a string as a parameter and returns an integer. This integer should represent the length of the longest word in this string. Usually you can solve a problem on Free Code Camp by just looking at the <strong>More information</strong> text. In this case Free code camp is giving us some very good tips:</p>\n<pre><code>Return the length of the longest word in the provided sentence.\nYour response should be a number.\nRemember to use RSAP if you get stuck. Try to pair program. Write your own code.\nHere are some helpful links: String.split(), String.length\n</code></pre>\n<p>If we take a look at the Free Code Camp suggestions we’ll see that String.split() can be used to split a string into an array and String.length gives us the length of a string. This helps us think of an algorithm. What if we split the string into an array, we loop through it and using the length attribute we find out the length of the longest word. Hmm, doesn’t seem very complicated but how to start this? Well … take a look at the image below.</p>\n<p><img src="http://biancamihai.github.io/img/flowchart.png" alt=""></p>\n<p>If we follow the schema AND/OR the pseudocode, writing the function that gives us the length of the longest word in a string shouldn’t be very hard now … in any language … not just in javascript.</p>\n<p><img src="http://biancamihai.github.io/img/Algorithm-2.png" alt=""></p>\n<p>Now that we have this first working version, we can try and rewrite it using a for loop. Or we can take a look at forEach and if we really want to go wild we can rewrite this using the functional programming way. So let’s challenge ourselves to write a “one line” solution for the problem.</p>\n<p>Searching through the MDN documentation you’ll find out that you can use the max function on arrays and that there is a map function that helps us change the current array. Hmm … that should should help us … right? Yes! the idea remains the same, you get a string, split it into an array and you return an integer but here is how:</p>\n<p><img src="http://biancamihai.github.io/img/Algorithm-3.png" alt=""></p>\n<p><strong><a href="https://freecodecamp.com/wiki/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n'}},function(e,n){e.exports={title:"How you can help to stimulate your city's Campsite on Facebook",order:5,body:"<h2>A great way to stimulate your Campsite is by asking questions.</h2>\n<p><strong>You can ask questions like</strong></p>\n<ul>\n<li>What is everyone working on this week?</li>\n<li>How did you approach a specific Challenge, Algorithm, Front End Project, Back End Project?</li>\n<li>Would anyone be interested in meeting up to pair program together this week?</li>\n<li>Did everyone hear about “insert recent announcement”</li>\n<li>What are some parts of free code camp you’d like to give additional focus to?</li>\n</ul>\n<p><strong>You can also provide useful links for other members to relevant resources that you find helpful.</strong></p>\n"}},function(e,n){e.exports={title:"Intro to Yeoman Angular Fullstack Back End Projects",order:5,body:'<blockquote>\n<p>Hey FreeCodeCampers! This guide is here to help you navigate creating your first Back End Project. When I encountered the first Back End Project, I had no idea what was going on and spent weeks learning all of these things myself. Everything here is stuff I wish I had known coming into the Back End Projects. Oh and by the way, if you have a question that isn’t answered by this guide, that’s an issue, and you should report it as an issue to this repository! –<a href="http://twitter.com/clnhll">@clnhll</a></p>\n</blockquote>\n<p>Yeoman is a tool that allows you to generate barebones apps based on different software stacks using “generator” packages made by developers who want to make your life easier. These packages streamline your time developing and deploying websites using your platform of choice. We’re using a full-stack MEAN (MongoDB, ExpressJS, AngularJS, NodeJS) generator called generator-angular-fullstack by DaftMonk (<a href="https://github.com/DaftMonk/generator-angular-fullstack">https://github.com/DaftMonk/generator-angular-fullstack</a>).</p>\n<p>Once you’ve completed the Challenge: Get Set for Back End Projects, use this guide to navigate the base structure of your new app and learn how to interact with the database as well as the user.</p>\n<p><a href="https://freecodecamp.com/wiki/Guide-to-Back-End-Projects-Table-of-Contents">NEXT</a></p>\n<p>Sourced from (<a href="https://github.com/clnhll/guidetobasejumps">https://github.com/clnhll/guidetobasejumps</a>) with permission.</p>\n'}},function(e,n){e.exports={title:"List of Free Code Camp city based Campsites",order:5,body:'<p>If your city isn’t listed here, you should [[create a Campsite for your city|How-to-create-a-Campsite-for-your-city]].</p>\n<p><a href="https://www.google.com/maps/d/u/0/embed?mid=zH0hxoM17_fk.kDBMlxfk0BZ8"><img src="google-campsites-map.png" alt="Google Map of Campsites"></a></p>\n<p><a href="https://www.google.com/maps/d/edit?mid=zH0hxoM17_fk.kDBMlxfk0BZ8">Edit Map</a></p>\n<ul>\n<li>Afghanistan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kabul/">Kabul</a></li>\n</ul>\n</li>\n<li>Albania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tirana/">Tirana</a></li>\n</ul>\n</li>\n<li>Algeria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Algiers/">Algiers</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mansoura/">Mansoura</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oran/">Oran</a></li>\n</ul>\n</li>\n<li>Angola\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.luanda/">Luanda</a></li>\n</ul>\n</li>\n<li>Argentina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bariloche/">Bariloche</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buenos.aires/">Buenos Aires</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cordoba/">Cordoba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.la.plata/">La Plata</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rosario/">Rosario</a></li>\n</ul>\n</li>\n<li>Armenia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.armenia/">Yerevan</a></li>\n</ul>\n</li>\n<li>Australia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.adelaide/">Adelaide</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bellingham/">Bellingham</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brisbane/">Brisbane</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.canberra/">Canberra</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Gold.Coast/">Gold Coast</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hobart/">Hobart</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ipswich.qld/">Ipswich</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.maitland.au/">Maitland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Melbourne/">Melbourne</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perth/">Perth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sydney.au/">Sydney</a></li>\n</ul>\n</li>\n<li>Austria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vienna.austria/">Vienna</a></li>\n</ul>\n</li>\n<li>Azerbaijan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baku/">Baku</a></li>\n</ul>\n</li>\n<li>Bangladesh\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ctg/">Chittagong</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dhaka/">Dhaka</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rangpur/">Rangpur</a></li>\n</ul>\n</li>\n<li>Belarus\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brest/">Brest</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gomel/">Gomel</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Minsk/">Minsk</a></li>\n</ul>\n</li>\n<li>Belgium\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.antwerp/">Antwerp</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brussels/">Brussels</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gent/">Gent</a></li>\n</ul>\n</li>\n<li>Belize\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belize.city/">Belize City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belize/">Belize</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Louisville">Louisville</a></li>\n</ul>\n</li>\n<li>Benin\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cotonou/">Cotonou</a></li>\n</ul>\n</li>\n<li>Bermuda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.george/">Saint George</a></li>\n</ul>\n</li>\n<li>Bolivia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Sucre/">Sucre</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.La.Paz/">La Paz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.SC/">Santa Cruz</a></li>\n</ul>\n</li>\n<li>Bosnia and Herzegovina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.banja.luka/">Banja Luka</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bijeljina/">Bijeljina</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mostar/">Mostar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sarajevo">Sarajevo</a></li>\n</ul>\n</li>\n<li>Brazil\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.americana/">Americana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.apucarana.parana/">Apucarana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.aracaju/">Aracaju</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bc/">Balneario Camboriu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belem/">Belem</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belo.horizonte/">Belo Horizonte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.blumenau/">Blumenau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boa.vista/">Boa Vista</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brasilia/">Brasilia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.campinas/">Campinas</a></li>\n<li><a href="https://www.facebook.com/groups/768732203272622/">Campo Grande</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caxias.do.sul/">Caxias do Sul</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chapeco/">Chapeco</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.curitiba/">Curitiba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.florianopolis/">Florianopolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.group.fortaleza/">Fortaleza</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goiania/">Goiania</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guaratingueta/">Guaratingueta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guarapuava/">Guarapuava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.itajuba/">Itajuba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.paulo.jacarei/">Jacarei</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.joao.pessoa/">Joao Pessoa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.joinville/">Joinville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.londrina/">Londrina</a></li>\n<li><a href="https://www.facebook.com/groups/1683221241966841/">Lucas do Rio Verde</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mogidascruzes/">Mogi das Cruzes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.natal">Natal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.olinda/">Olinda</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.porto.alegre.rs/">Porto Alegre</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.recife">Recife</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rio.de.janeiro/">Rio de Janeiro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salvador/">Salvador</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.carlos">Sao Carlos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.joao.da.boa.vista/">Sao Joao da Boa Vista</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.paulo/">Sao Paulo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sorocaba.sp/">Sorocaba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.teresina.piaui/">Teresina</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.uberlandia/">Uberlandia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vitoria.e.regiao.metropolitana.es/">Vitória</a></li>\n</ul>\n</li>\n<li>Brunei\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brunei.darussalam/">Bandar Seri Begawan</a></li>\n</ul>\n</li>\n<li>Bulgaria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sofia/">Sofia</a></li>\n</ul>\n</li>\n<li>Cambodia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.phnompenh.cambodia/">Phnom Penh</a></li>\n</ul>\n</li>\n<li>Cameroon\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yaounde">Yaounde</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.douala/">Douala</a></li>\n</ul>\n</li>\n<li>Canada\n<ul>\n<li>Alberta\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.calgary/">Calgary</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.edmonton/">Edmonton</a></li>\n</ul>\n</li>\n<li>British Columbia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.abbotsford/">Abbotsford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fort.st.john/">Fort St. John</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hazelton.britishcolumbia/">Hazelton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kelowna/">Kelowna</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nelson.bc/">Nelson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.westminster/">New Westminster</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surrey/">Surrey</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vancouver.bc.canada/">Vancouver</a></li>\n</ul>\n</li>\n<li>Manitoba\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.winnipeg/">Winnipeg</a></li>\n</ul>\n</li>\n<li>New Brunswick\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Fredericton/">Fredericton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Moncton/">Moncton</a></li>\n</ul>\n</li>\n<li>New Foundland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.st.johns/">St. John’s</a></li>\n</ul>\n</li>\n<li>Nova Scotia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.halifax/">Halifax</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sydney.ns/">Sydney</a></li>\n</ul>\n</li>\n<li>Ontario\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Barrie.Ontario/">Barrie</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Cambridge.ON.Canada/">Cambridge</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamilton/">Hamilton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kingston.ontario/">Kingston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.london.on/">London</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sauga">Mississauga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.bay/">North Bay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.york/">North York</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ottawa/">Ottawa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.owen.sound">Owen Sound</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.to/">Toronto</a></li>\n</ul>\n</li>\n<li>Prince Edward Island\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charlottetown/">Charlottetown</a></li>\n</ul>\n</li>\n<li>Saskatchewan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moosejaw/">Moose Jaw</a></li>\n</ul>\n</li>\n<li>Québec\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montreal/">Montreal</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Chile\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santiago/">Santiago</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valparaiso/">Valparaiso</a></li>\n</ul>\n</li>\n<li>China\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.beijing/">Beijing</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.changsha/">Changsha</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chengdu/">Chengdu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chongqing/">Chongqing</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guangzhou/">Guangzhou</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hangzhou/">Hangzhou</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kunming/">Kunming</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Linyi/">Linyi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nanjing/">Nanjing</a></li>\n<li><a href="https://www.facebook.com/groups/963661723712718/">Shanghai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.shenzhen/">Shenzhen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.suzhou/">Suzhou</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tianjin/">Tianjin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wuhan/">Wuhan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.xian/">Xi’an</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zhengzhou/">Zhengzhou</a></li>\n</ul>\n</li>\n<li>Colombia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.barranquilla.co/">Barranquilla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bogota/">Bogota</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bucaramanga/">Bucaramanga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cali/">Cali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Medellin.col/">Medellin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pasto/">Pasto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.popayan/">Popayan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quibdo/">Quibdo</a></li>\n</ul>\n</li>\n<li>Costa Rica\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.jose.costa.rica/">San Jose</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.costa.rica.san.pedro/">San Pedro</a></li>\n</ul>\n</li>\n<li>Croatia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.karlovac/">Karlovac</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zagreb/">Zagreb</a></li>\n</ul>\n</li>\n<li>Cuba\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.havana/">Havana</a></li>\n</ul>\n</li>\n<li>Cyprus\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.limassol/">Limassol</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nicosia/">Nicosia</a></li>\n</ul>\n</li>\n<li>Czech Republic\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brno/">Brno</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ostrava/">Ostrava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.prague/">Prague</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.znojmo/">Znojmo</a></li>\n</ul>\n</li>\n<li>Denmark\n<ul>\n<li><a href="https://www.facebook.com/groups/FreeCodeCampAarhus">Aarhus</a></li>\n<li><a href="https://www.facebook.com/groups/fre.code.camp.copemhagen/">Copenhagen</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Holstebro/">Hostelbro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.odense/">Odense</a></li>\n</ul>\n</li>\n<li>Dominican Republic\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dr/">Santo Domingo</a></li>\n</ul>\n</li>\n<li>Ecuador\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cuenca/">Cuenca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quito/">Quito</a></li>\n</ul>\n</li>\n<li>Egypt\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almansoura/">Al-Mansoura</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.alex/">Alexandria</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cairo/">Cairo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tanta/">Tanta</a></li>\n</ul>\n</li>\n<li>England\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bedford/">Bedford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.birmingham.uk/">Birmingham</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brighton/">Brighton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bristol.uk/">Bristol</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bury.St.Edmunds/">Bury St Edmunds</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cambridge/">Cambridge</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coventry/">Coventry</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.derby/">Derby</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.exeter.uk/">Exeter</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hove">Hove</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kent/">Kent</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kingston.upon.hull/">Kingston upon Hull</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leeds/">Leeds</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.liverpool/">Liverpool</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.london/">London</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manchester/">Manchester</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milton.keynes/">Milton Keynes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.norfolk/">Norfolk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reading/">Reading</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salisbury/">Salisbury</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sheffield/">Sheffield</a></li>\n<li><a href="https://www.facebook.com/groups/FCC.Southampton/">Southampton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stoke.on.trent/">Stoke-on-Trent</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sunderland.uk/">Sunderland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.warrington/">Warrington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.worcester/">Worcester</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.york/">York</a></li>\n</ul>\n</li>\n<li>Estonia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tallinn/">Tallinn</a></li>\n</ul>\n</li>\n<li>Ethiopia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.addis.abeba/">Addis Ababa</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Nazareth.Israel/">Nazareth</a></li>\n</ul>\n</li>\n<li>Fiji\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.suva/">Suva</a></li>\n</ul>\n</li>\n<li>Finland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.helsinki/">Helsinki</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jyvaskyla/">Jyväskylä</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lappeenranta/">Lappeenranta</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Tampere/">Tampere</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.turku/">Turku</a></li>\n</ul>\n</li>\n<li>France\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.city.Bordeaux/">Bordeaux</a></li>\n<li><a href="https://www.facebook.com/groups/509612812554265/">Dax</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.grenoble/">Grenoble</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lille/">Lille</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lyon/">Lyon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.macon/">Macon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montpellier/">Montpellier</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nantes/">Nantes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.paris/">Paris</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.poitiers/">Poitiers</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toulouse/">Toulouse</a></li>\n</ul>\n</li>\n<li>Georgia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tbilisi/">Tbilisi</a></li>\n</ul>\n</li>\n<li>Germany\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berlin/">Berlin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bodensee/">Bodensee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.braunschweig/">Braunschweig</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chemnitz/">Chemnitz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.flensburg.germany/">Flensburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frankfurt.main/">Frankfurt</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goettingen/">Göttingen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.halle.saale/">Halle</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamburg/">Hamburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamm/">Hamm</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.koblenz/">Koblenz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.koeln/">Koeln</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leipzig/">Leipzig</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.munich/">Munich</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stuttgart/">Stuttgart</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wuerzburg/">Wuerzburg</a></li>\n</ul>\n</li>\n<li>Ghana\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.accra/">Accra</a></li>\n</ul>\n</li>\n<li>Greece\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.alexandroupolis">Alexandroupolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.athens.greece/">Athens</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.preveza/">Preveza</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.thessaloniki/">Thessaloniki</a></li>\n</ul>\n</li>\n<li>Guatemala\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guatemala/">Guatemala City</a></li>\n</ul>\n</li>\n<li>Haiti\n<ul>\n<li><a href="https://www.facebook.com/groups/1123827534318839/">Port-au-Prince</a></li>\n</ul>\n</li>\n<li>Honduras\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Honduras/">Tegucigalpa</a></li>\n</ul>\n</li>\n<li>Hong Kong\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hk/">Hong Kong</a></li>\n</ul>\n</li>\n<li>Hungary\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.budapest/">Budapest</a></li>\n</ul>\n</li>\n<li>Iceland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reykjavik/">Reykjavik</a></li>\n</ul>\n</li>\n<li>India\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ahmedabad/">Ahmedabad</a></li>\n<li><a href="https://www.facebook.com/groups/1622011571406263/">Aligarh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.allahabad/">Allahabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.itanagar.arunachalpradesh/">Arunachalpradesh</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampauranagabad/">Aurangabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bapatla/">Bapatla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bengaluru/">Bengaluru</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhubaneswar/">Bhubaneswar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bikaner/">Bikaner</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhopal/">Bhopal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chandigarh/">Chandigarh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chennai/">Chennai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coimbatore">Coimbatore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dehradun/">Dehra Dun</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.delhi/">Delhi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dharwad/">Dharwad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.faridabad/">Faridabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goa/">Goa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gujarat/">Gujarat</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guntur/">Guntur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gurgaon/">Gurgaon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guwahati/">Guwahati</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Gwalior/">Gwalior</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hyderabad/">Hyderabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Indore/">Indore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.itanagar.arunachalpradesh/">Itanagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jaipur/">Jaipur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jalgaon/">Jalgaon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jamnagar.guj.in/">Jamnagar</a></li>\n<li><a href="https://www.facebook.com/groups/1542888942704307">Kochi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kolkata/">Kolkata</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kozhikode/">Kozhikode</a></li>\n<li><a href="https://www.facebook.com/groups/1647602228815736/">Lucknow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ludhiana.punjab/">Ludhiana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mangalore/">Mangalore</a></li>\n<li><a href="https://www.facebook.com/groups/frre.code.camp.mumbai/">Mumbai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mysore/">Mysore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.nashik/">Nashik</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.noida/">Noida</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.patiala/">Patiala</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pondicherry/">Pondicherry</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pune/">Pune</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.raipur/">Raipur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ranchi/">Ranchi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rajkot/">Rajkot</a></li>\n<li><a href="https://www.facebook.com/groups/542330719257663/">Roorke</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salem/">Salem</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.shillong/">Shillong</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.shimla/">Shimla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sialkot/">Sialkot</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.siliguri/">Siliguri</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.srinagar/">Srinagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surat">Surat</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tirupathi/">Tirupathi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tirupur/">Tirupur</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecamp.trivandrum/">Trivandrum</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vadodara/">Vadodara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.varanasi/">Varanasi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.veraval.gujarat/">Veraval</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.vijayawada/">Vijayawada</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vizag/">Vizag</a></li>\n</ul>\n</li>\n<li>Indonesia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bali/">Bali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bandung/">Bandung</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jakarta/">Jakarta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kediri/">Kediri</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bandar.lampung/">Lampung</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manado/">Manado</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.medan/">Medan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nusajaya.malaysia//">Nusajaya</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ponorogo">Ponorogo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sidoarjo/">Sidoarjo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.solo/">Solo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surabaya/">Surabaya</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yogyakarta/">Yogyakarta</a></li>\n</ul>\n</li>\n<li>Iran\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.isfahan/">Isfahan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tehran/">Tehran</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mashhad/">Masshad</a></li>\n</ul>\n</li>\n<li>Iraq\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baghdad/">Baghdad</a></li>\n</ul>\n</li>\n<li>Ireland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cork.ireland/">Cork</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dublin/">Dublin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.waterford/">Waterford</a></li>\n</ul>\n</li>\n<li>Israel\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Haifa/">Haifa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jerusalem/">Jerusalem</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tel.Aviv/">Tel Aviv</a></li>\n</ul>\n</li>\n<li>Italy\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cagliari/">Cagliari</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.camerino">Camerino</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.catania/">Catania</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.firenze/">Firenze</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lecce/">Lecce</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milan/">Milan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.napoli">Napoli</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.palermo/">Palermo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pavia">Pavia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perugia.it/">Perugia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.roma/">Roma</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.torino/">Torino</a></li>\n</ul>\n</li>\n<li>Jamaica\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kingston.jamaica/">Kingston</a></li>\n</ul>\n</li>\n<li>Japan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sasebo/">Sasebo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tokyo/">Tokyo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tsukuba/">Tsukuba</a></li>\n</ul>\n</li>\n<li>Jordan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.amman/">Amman</a></li>\n</ul>\n</li>\n<li>Kazakhstan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.astana/">Astana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kulsary/">Kulsary</a></li>\n</ul>\n</li>\n<li>Kenya\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Kisumu/">Kisumu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nairobi/">Nairobi</a></li>\n</ul>\n</li>\n<li>Kosovo\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ferizaj/">Ferizaj</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pristina/">Pristina</a></li>\n</ul>\n</li>\n<li>Kuwait\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kuwait.city/">Kuwait City</a></li>\n</ul>\n</li>\n<li>Kyrgyzstan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bishkek/">Bishkek</a></li>\n</ul>\n</li>\n<li>Latvia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.riga/">Riga</a></li>\n</ul>\n</li>\n<li>Lebanon\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.beirut/">Beirut</a></li>\n</ul>\n</li>\n<li>Lesotho\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.maseru/">Maseru</a></li>\n</ul>\n</li>\n<li>Lithuania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vilnius.lt/">Vilnius</a></li>\n</ul>\n</li>\n<li>Libya\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tripoli.Libya/">Tripoli</a></li>\n</ul>\n</li>\n<li>Luxembourg\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.luxembourg/">Luxembourg</a></li>\n</ul>\n</li>\n<li>Macedonia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.skopje/">Skopje</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.struga/">Struga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.strumica/">Strumica</a></li>\n</ul>\n</li>\n<li>Malaysia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nusajaya.malaysia/">Johor</a></li>\n<li><a href="https://www.facebook.com/groups/Free.code.camp.KK.Sabah/">Kota Kinabalu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.malaysia.kl/">Kuala Lumpur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kuching/">Kuching</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.penang/">Penang</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perlis.malaysia">Perlis</a></li>\n</ul>\n</li>\n<li>Maldives\n<ul>\n<li><a href="https://www.facebook.com/groups/freecodemv/">Male</a></li>\n</ul>\n</li>\n<li>Mexico\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.juarezchi/">Ciudad Juárez</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cd.obregon/">Ciudad Obregón</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coatzacoalcos/">Coatzacoalcos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.culiacan/">Culiacan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.durango/">Durango</a></li>\n<li><a href="https://www.facebook.com/groups/fcc.guadalajara">Guadalajara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guanajuato/">Guanajuato</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Hermosillo/">Hermosillo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lapaz.mx/">La Paz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mexico.df/">Mexico City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.monterrey/">Monterrey</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pueblaMX/">Puebla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.puerto.vallarta/">Puerto Vallarta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.luis.potosi/">San Luis Potosi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santiago.de.queretaro/">Santiago de Querétaro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tapachula/">Tapachula</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tijuana/">Tijuana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tuxtla.gutierrez/">Tuxtla Gutierrez</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zacatecas/">Zacatecas</a></li>\n</ul>\n</li>\n<li>Moldova\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.balti/">Balti</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Chisinau/">Chisinau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tiraspol/">Tiraspol</a></li>\n</ul>\n</li>\n<li>Mongolia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.ulaanbaatar/">Ulaanbaatar</a></li>\n</ul>\n</li>\n<li>Montenegro\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tivat.montenegro/">Tivat</a></li>\n</ul>\n</li>\n<li>Morocco\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.casablanca/">Casablanca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.marrakesh/">Marrakesh</a></li>\n<li><a href="https://www.facebook.com/groups/965419830196366/">Rabat</a></li>\n</ul>\n</li>\n<li>Mozambique\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.maputo/">Maputo</a></li>\n</ul>\n</li>\n<li>Myanmar [Burma]\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mandalay">Mandalay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.meiktila/">Meiktila</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.myanmar/">Yangon</a></li>\n</ul>\n</li>\n<li>Namibia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.windhoek/">Windhoek</a></li>\n</ul>\n</li>\n<li>Nepal\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhaktapur/">Bhaktapur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhimdattanagar/">Bhimdattanagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.biratnagar/">Biratnagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dhangadhi/">Dhangadi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kathmandu/">Kathmandu</a></li>\n</ul>\n</li>\n<li>Netherlands\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almere.netherlands/">Almere</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.amsterdam/">Amsterdam</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.breda/">Breda</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.enschede">Enschede</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.groningen/">Groningen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rotterdam/">Rotterdam</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sittard/">Sittard</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.the.hague/">The Hague</a></li>\n</ul>\n</li>\n<li>New Zealand\n<ul>\n<li><a href="https://www.facebook.com/groups/awesome.code.camp/">Auckland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.christchurch/">Christchurch</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.richmond/">Richmond</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wellington.nz/">Wellington</a></li>\n</ul>\n</li>\n<li>Nicaragua\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.granada/">Granada</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.managua/">Managua</a></li>\n</ul>\n</li>\n<li>Nigeria\n<ul>\n<li><a href="https://www.facebook.com/groups/abuja.free.code.camp/">Abuja</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.calabar/">Calabar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dutse.jigawa/">Dutse</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Ibadan/">Ibadan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kaduna/">Kaduna</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lagos/">Lagos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.port.harcourt/">Port Harcourt</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sokoto/">Sokoto</a></li>\n</ul>\n</li>\n<li>Northern Ireland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belfast.UK/">Belfast</a></li>\n</ul>\n</li>\n<li>Norway\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bergen/">Bergen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kristiansand/">Kristiansand</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trondheim/">Trondheim</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stavanger/">Stavanger</a></li>\n</ul>\n</li>\n<li>Pakistan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bannu/">Bannu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gujrat/">Gujrat City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.islamabad/">Islamabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.karachi/">Karachi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lahore/">Lahore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mianwali/">Mianwali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.multan">Multan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Peshawar/">Peshawar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quetta">Quetta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rawalpindi/">Rawalpindi</a></li>\n<li><a href="https://www.facebook.com/groups/1505677729748974/">Sahiwal</a></li>\n</ul>\n</li>\n<li>Panama\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.panama.city">Panama City</a></li>\n</ul>\n</li>\n<li>Papua New Guinea\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.papua.new.guinea.lae/">Lae</a></li>\n</ul>\n</li>\n<li>Paraguay\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.asuncion/">Asuncion</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.encarnacion/">Encarnacion</a></li>\n</ul>\n</li>\n<li>Peru\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.aichi/">Aichi</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Lima/">Lima</a></li>\n</ul>\n</li>\n<li>Philippines\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.batangas/">Batangas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bicol/">Bicol</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cagayandeoro.city/">Cagayan de Oro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cebu/">Cebu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.davao/">Davao</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.makati/">Makati</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manila/">Manila</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quezon.city/">Quezon City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surigao/">Surigao</a></li>\n</ul>\n</li>\n<li>Poland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bialystok/">Bialystok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bydgoszcz/">Bydgoszcz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trojmiasto/">Gdańsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gdynia/">Gdynia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.the.katowice/">Katowice</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.krakow/">Krakow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lodz/">Lodz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.plock/">Plock</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.poznan/">Poznan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.siedlce/">Siedlce</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trojmiasto/">Sopot</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.szczecin/">Szczecin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.warsaw/">Warsaw</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wroclaw/">Wroclaw</a></li>\n</ul>\n</li>\n<li>Portugal\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.braga/">Braga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lisbon/">Lisbon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.porto/">Porto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.viseu/">Viseu</a></li>\n</ul>\n</li>\n<li>Puerto Rico\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sanjuan.pr/">San Juan</a></li>\n</ul>\n</li>\n<li>Qatar\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.doha/">Doha</a></li>\n</ul>\n</li>\n<li>Romania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bacau.romania/">Bacau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brasov">Brasov</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bucharest/">Bucharest</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buzau/">Buzau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cluj">Cluj-Napoca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.crai0va/">Craiova</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.iasi.romania/">Iasi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oradea/">Oradea</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Pitesti/">Pitesti</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sibiu/">Sibiu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.suceava/">Suceava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.targu.mures/">Targu Mures</a></li>\n<li><a href="https://www.facebook.com/groups/745118002278303/">Tecuci</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.timisoara/">Timisoara</a></li>\n</ul>\n</li>\n<li>Russia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almetyevsk/">Almetyevsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belgorod/">Belgorod</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cheljabinsk/">Cheljabinsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cherepovets/">Cherepovets</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.irkutsk/">Irkutsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kazan/">Kazan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kemerovo/">Kemerovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kosovo/">Kosovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.krasnodar/">Krasnodar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moscow/">Moscow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nizhnevartovsk/">Nizhnevartovsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.omsk/">Omsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orenburg/">Orenburg</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Pavlovo/">Pavlovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.city.perm/">Perm</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rostovondon/">Rostovondon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.petersburg/">Saint Petersburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.samara/">Samara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saratov/">Saratov</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tomsk/">Tomsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tyumen/">Tyumen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ufa/">Ufa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vladivostok/">Vladivostok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.voronezh/">Voronezh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yaroslavl/">Yaroslavl</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yekaterinburg">Yekaterinburg</a></li>\n</ul>\n</li>\n<li>Rwanda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kigali/">Kigali</a></li>\n</ul>\n</li>\n<li>Saint Lucia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.castries/">Castries</a></li>\n</ul>\n</li>\n<li>Salvador\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.salvador/">San Salvador</a></li>\n</ul>\n</li>\n<li>Saudi Arabia\n<ul>\n<li><a href="https://www.facebook.com/groups/freecodecamp.jeddah/">Jeddah</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Riyadh/">Riyadh</a></li>\n<li><a href="https://www.facebook.com/groups/girlscodeksa/">Women only group</a></li>\n</ul>\n</li>\n<li>Scotland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dundee/">Dundee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.edinburgh/">Edinburgh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.glasgow/">Glasgow</a></li>\n</ul>\n</li>\n<li>Serbia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belgrade/">Belgrade</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nis/">Nis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.novi.sad/">Novi Sad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.subotica/">Subotica</a></li>\n</ul>\n</li>\n<li>Seychelles\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.victoria.bc/">Victoria</a></li>\n</ul>\n</li>\n<li>Singapore\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.singapore/">Singapore</a></li>\n</ul>\n</li>\n<li>Slovakia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bratislava/">Bratislava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kosice/">Kosice</a></li>\n</ul>\n</li>\n<li>Slovenia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ljubljana/">Ljubljana</a></li>\n</ul>\n</li>\n<li>South Africa\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cape.town/">Cape Town</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.durban.kwazulu.natal/">Durban</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.johannesburg/">Johannesburg</a></li>\n<li><a href="https://www.facebook.com/groups/150891448624679/">Pretoria</a></li>\n</ul>\n</li>\n<li>South Korea\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.busan/">Busan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.daegu/">Daegu</a></li>\n<li><a href="https://www.facebook.com/groups/GwangjuCodeCano/">Gwangju</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jeonju/">Jeonju</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.seoul/">Seoul</a></li>\n</ul>\n</li>\n<li>Spain\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almeria/">Almeria</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.barcelona/">Barcelona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caceres/">Caceres</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cadiz/">Cadiz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ciudad.real/">Ciudad Real</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gijon/">Gijon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fuengirola/">Fuengirola</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.madrid/">Madrid</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.murcia/">Murcia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salamanca/">Salamanca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santander/">Santander</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sevilla.spain/">Sevilla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tarragona/">Tarragona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vlc/">Valencia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valladolid.spain">Valladolid</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zaragoza/">Zaragoza</a></li>\n</ul>\n</li>\n<li>Sri Lanka\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.batticaloa/">Batticaloa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.colombo/">Colombo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jaffna/">Jaffna</a></li>\n</ul>\n</li>\n<li>Sweden\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goteborg/">Göteborg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stockholm.sweden/">Stockholm</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.malmo/">Malmö</a></li>\n</ul>\n</li>\n<li>Switzerland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.basel/">Basel</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.geneva/">Geneva</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.morges/">Morges</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saas.fee">Saas-Fee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ticino/">Ticino</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zurich/">Zurich</a></li>\n</ul>\n</li>\n<li>Syria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Homs/">Homs</a></li>\n</ul>\n</li>\n<li>Taiwan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kaohsiung/">Kaohsiung</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.taipei/">Taipei</a></li>\n</ul>\n</li>\n<li>Tanzania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dar.es.salaam/">Dar-Es-Salaam</a></li>\n<li>Thailand</li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bangkok/">Bangkok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chiang.mai/">Chiang Mai</a></li>\n</ul>\n</li>\n<li>Trinidad and Tobago\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trinidad.and.tobago/">Port of Spain</a></li>\n</ul>\n</li>\n<li>Tunisia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tunis/">Tunis</a></li>\n</ul>\n</li>\n<li>Turkey\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ankara/">Ankara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.antalya/">Antalya</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.istanbul/">Istanbul</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.izmir">Izmir</a></li>\n</ul>\n</li>\n<li>Uganda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kampala/">Kampala</a></li>\n</ul>\n</li>\n<li>Ukraine\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.alushta/">Alushta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cherkassy/">Cherkassy</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chernivtsi.chernivetska.oblast.u/">Chernivtsi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dnipropetrovsk">Dnipropetrovsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ivano.frankivsk/">Ivano Frankivsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kerch/">Kerch</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kharkiv/">Kharkiv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.khmelnitsky">Khmelnitsky</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kherson/">Kherson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kiev/">Kiev</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kirovohrad/">Kirovohrad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kremenchuk/">Kremenchuk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kryvyi.rih/">Kryvyi Rih</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lutsk/">Lutsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lviv/">Lviv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mykolaiv/">Mykolaiv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.city.odessa.ukraine/">Odessa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Ternopil.Ukraine/">Ternopil</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vinnitsa/">Vinnitsa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zaporozhye/">Zaporozhye</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zhytomyr/">Zhytomyr</a></li>\n</ul>\n</li>\n<li>United Arab Emirates\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.abu.dhabi/">Abu Dhabi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dubai/">Dubai</a></li>\n</ul>\n</li>\n<li>United States\n<ul>\n<li>Ambiguous\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamptonroads/">Hampton Roads</a></li>\n</ul>\n</li>\n<li>Alabama\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oxford.al/">Birmingham</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.enterprise.alabama/">Enterprise</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.huntsville/">Huntsville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montgomery.alabama/">Montgomery</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tuscaloosa/">Tuscaloosa</a></li>\n</ul>\n</li>\n<li>Alaska\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.anchorage/">Anchorage</a></li>\n</ul>\n</li>\n<li>Arizona\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Flagstaff</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.maricopa.arizona/">Maricopa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Phoenix</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Prescott</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Scottsdale</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Sedona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sierra.vista/">Sierra Vista</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Tempe</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tucson/">Tucson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Verde Valley</a></li>\n</ul>\n</li>\n<li>Arkansas\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fayetteville.arkansas/">Fayetteville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jonesboro.ar/">Jonesboro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.little.rock/">Little Rock</a></li>\n</ul>\n</li>\n<li>California\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Alameda</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.arcadia">Arcadia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bakersfield.california/">Bakersfield</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Berkeley</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Covina/">Covina</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.davis/">Davis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.emeryville/">Emeryville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.folsom">Folsom</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fremont/">Fremont</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fresno.ca/">Fresno</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Glendora.California/">Glendora</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Joshua.Tree.Ca/">Joshua Tree</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lake.forest.ca/">Lake Forest</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lindsay/">Lindsay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.los.angeles/">Los Angeles</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Los.Gatos.CA/">Los Gatos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.modesto/">Modesto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moraga.ca/">Moraga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mountain.view/">Mountain View</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.napa/">Napa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nevada.county/">Nevada County</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northridge/">Northridge</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.novato/">Novato</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Oakland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orange.county/">Orange County</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pasadena.ca/">Pasadena</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.riverside.ca/">Riverside</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sacramento/">Sacramento</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salinas.valley/">Salinas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.bernardino/">San Bernardino</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.clemente.CA/">San Clemente</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.diego/">San Diego</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.francisco">San Francisco</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.jose">San Jose</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.SLO/">San Luis Obispo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.barbara/">Santa Barbara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.clarita/">Santa Clarita</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.cruz.california/">Santa Cruz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.rosa/">Santa Rosa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.southlosangeles/">South Los Angeles</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.temecula/">Temecula</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.turlock/">Turlock</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tustin/">Tustin</a></li>\n<li><a href="http://www.facebook.com/groups/Free.Code.Camp.Yreka">Yreka</a></li>\n</ul>\n</li>\n<li>Colorado\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boulder/">Boulder</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampcoloradosprings/">Colorado Springs</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.denver/">Denver</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fort.collins/">Fort Collins</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pueblo/">Pueblo</a></li>\n</ul>\n</li>\n<li>Connecticut\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hartford.connecticut/">Hartford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.haven/">New Haven</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.shelton.ct/">Shelton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stamford/">Stamford</a></li>\n</ul>\n</li>\n<li>Delaware\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lewes/">Lewes</a></li>\n<li><a href="https://www.facebook.com/groups/fcc.wilmington.delaware/">Wilmington</a></li>\n</ul>\n</li>\n<li>District of Columbia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.washington.dc/">Washington, D.C.</a></li>\n</ul>\n</li>\n<li>Florida\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bonita.Springs/">Bonita Springs</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brooksville.florida/">Brooksville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ftlauderdale/">Fort Lauderdale</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gainesville.fla/">Gainesville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jacksonville/">Jacksonville</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Lakeland.Florida/">Lakeland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.miami/">Miami</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.neworleans/">New Orleans</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orlando/">Orlando</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.panama.city.florida/">Panama City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pensacola/">Pensacola</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tallahassee.florida/">Tallahassee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tampa/">Tampa Bay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sarasota.florida/">Sarasota</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wpb/">West Palm Beach</a></li>\n</ul>\n</li>\n<li>Georgia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.acworth.ga/">Acworth</a></li>\n<li><a href="https://www.facebook.com/groups/1672818199656454/">Albany</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.atlanta/">Atlanta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.augusta.ga/">Augusta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbus.georgia/">Columbus</a></li>\n<li><a href="https://www.facebook.com/groups/703656036438040">Macon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.savannah/">Savannah</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.south.atlanta.suburbs/">South Atlanta suburbs</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valdosta/">Valdosta</a></li>\n</ul>\n</li>\n<li>Hawaii\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.honolulu.hawaii/">Honolulu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oahu.hawaii/">Oahu</a></li>\n</ul>\n</li>\n<li>Idaho\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boise">Boise</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.idaho.falls.idaho/">Idaho Falls</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moscow.idaho/">Moscow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pocatello.idaho/">Pocatello</a></li>\n</ul>\n</li>\n<li>Illinois\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bloomington.normal/">Bloomington-Normal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.centralia/">Centralia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.champaign.urbana/">Champaign-Urbana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chicago/">Chicago</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.macomb.il/">Macomb</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Peoria/">Peoria</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Sterling.IL/">Sterling</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quadcities/">Quad Cities</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Peoria/">Washington</a></li>\n</ul>\n</li>\n<li>Indiana\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bloomington.in/">Bloomington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.carmel.indiana/">Carmel</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.evansville.in/">Evansville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fort.wayne.in/">Fort Wayne</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.indianapolis.in/">Indianapolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.south.bend/">South Bend</a></li>\n</ul>\n</li>\n<li>Iowa\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ames.iowa/">Ames</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cedar.rapids/">Cedar Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.des.moines/">Des Moines</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fort.dodge.iowa/">Fort Dodge</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sioux.city/">Sioux City</a></li>\n</ul>\n</li>\n<li>Kansas\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kansascity/">Kansas City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lawrence">Lawrence</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wichita/">Wichita</a></li>\n</ul>\n</li>\n<li>Kentucky\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.BG.kentucky/">Bowling Green</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frankfort.kentucky/">Frankfort</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.louisville/">Louisville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manchester.kentucky/">Manchester</a></li>\n</ul>\n</li>\n<li>Louisiana\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baton.rouge.louisiana/">Baton Rouge</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lafayette/">Lafayette</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leesville.la/">Leesville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mandeville/">Mandeville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.metairie.la/">Metairie</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.morgan.ciry.la/">Morgan City</a></li>\n</ul>\n</li>\n<li>Maine\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.auburn.maine/">Auburn</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.augusta/">Augusta</a></li>\n<li><a href="https://www.facebook.com/groups/435736603276121/">Rockland</a></li>\n</ul>\n</li>\n<li>Maryland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baltimore/">Baltimore</a></li>\n<li><a href="https://www.facebook.com/groups/190253084650546/">Columbia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frederick.md">Frederick</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.germantown.maryland/">Germantown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hagerstown/">Hagerstown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salisbury.maryland/">Salisbury</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.silverspring/">Silver Spring</a></li>\n</ul>\n</li>\n<li>Massachusetts\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boston/">Boston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cape.cod/">Cape Cod</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lexington/">Lexington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northampton.mass/">Northampton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pepperell.ma/">Pepperell</a></li>\n</ul>\n</li>\n<li>Michigan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ann.arbor/">Ann Arbor</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bigrapids/">Big Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.detroit/">Detroit</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fenton.mi/">Fenton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.flint/">Flint</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.grand.rapids/">Grand Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jackson.mi">Jackson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kalamazoo/">Kalamazoo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lansing/">Lansing</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milford.michigan/">Milford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.muskegon/">Muskegon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.university.center/">University Center</a></li>\n</ul>\n</li>\n<li>Minnesota\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cottagegrove/">Coattage Grove</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.duluth/">Duluth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.minneapolis/">Minneapolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.owatonna/">Owatonna</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stcloud/">Saint Cloud</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.paul.mn/">Saint Paul</a></li>\n</ul>\n</li>\n<li>Mississippi\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.central.mississippi/">Central Mississippi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jackson.ms">Jackson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.msgulfcoast/">Mississippi Gulf Coast</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moss.point.mississippi/">Moss Point</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.mississippi/">North Mississippi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.palisadespark/">Palisades Park</a></li>\n<li><a href="https://www.facebook.com/groups/148780962143254/">Tupelo</a></li>\n</ul>\n</li>\n<li>Missouri\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbia.missouri/">Columbia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.independence.mo/">Independence</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.maryville.missouri/">Maryville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.louis/">Saint Louis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.springfield.missouri/">Springfield</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.west.plains.missouri/">West Plains</a></li>\n</ul>\n</li>\n<li>Montana\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bozeman/">Bozeman</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.butte.montana/">Butte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.missoula/">Missoula</a></li>\n</ul>\n</li>\n<li>Nebraska\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lincoln/">Lincoln</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.platte/">North Platte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.omaha/">Omaha</a></li>\n</ul>\n</li>\n<li>Nevada\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.las.vegas.nv/">Las Vegas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reno/">Reno</a></li>\n</ul>\n</li>\n<li>New Hampshire\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lebanon.nh">Lebanon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rochester.new.hampshire/">Rochester</a></li>\n</ul>\n</li>\n<li>New Jersey\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.atlantic.city/">Atlantic City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bordentown/">Bordentown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.clifton.nj/">Clifton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.freehold/">Freehold</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jersey.city.new.jersey/">Jersey City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.brunswick.new.jersey/">New Brunswick</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.newark/">Newark</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oradell/">Oradell</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toms.river/">Toms River</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.west.orange/">West Orange</a></li>\n</ul>\n</li>\n<li>New Mexico\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.albuquerque/">Albuquerque</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.los.alamos.nm/">Los Alamos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lc.nm/">Las Cruces</a></li>\n</ul>\n</li>\n<li>New York\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.albany.ny/">Albany</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.binghamton.ny/">Binghampton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buffalo/">Buffalo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coram.ny/">Coram</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ithaca/">Ithaca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.paltz/">New Paltz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.york.city/">New York City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Rochester.New.York/">Rochester</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.syracuse/">Syracuse</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.queens.ny/">Queens</a></li>\n</ul>\n</li>\n<li>North Carolina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.asheville/">Asheville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charlotte.nc/">Charlotte</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampfayettevilleNC/">Fayetteville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.greenville.nc/">Greenville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hickory.nc">Hickory</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jacksonville.nc/">Jacksonville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.raleigh/">Raleigh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rtp">Research Triangle Park</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wake.forest">Wake Forest</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wilmington.nc/">Wilmington</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Winston.Salem/">Winston Salem</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampgreensboro/">Greensboro</a></li>\n</ul>\n</li>\n<li>North Dakota\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bismarck.north.dakota/">Bismarck</a></li>\n</ul>\n</li>\n<li>Ohio\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.athens.ohio/">Athens</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cincinnati/">Cincinnati</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cleveland/">Cleveland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbus/">Columbus</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dayton.ohio/">Dayton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mansfield/">Mansfield</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toledo/">Toledo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.youngstown/">Youngstown</a></li>\n</ul>\n</li>\n<li>Oklahoma\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oklahoma.city/">Oklahoma City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tulsa/">Tulsa</a></li>\n</ul>\n</li>\n<li>Oregon\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.corvallis/">Corvallis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.eugene/">Eugene</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.medford.oregon/">Medford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.newport.or/">Newport</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.portland/">Portland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.remond.oregon/">Redmond</a></li>\n</ul>\n</li>\n<li>Pennsylvania\n<ul>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Bushkill.PA/">Bushkill</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.harrisburg.pa/">Harrisburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lehighton.pa/">Lehighton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.philadelphia/">Philadelphia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pittsburgh.pa/">Pittsburgh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wilkesbarre/">Wilkes-Barre</a></li>\n</ul>\n</li>\n<li>Rhode Island\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.providence/">Providence</a></li>\n</ul>\n</li>\n<li>South Carolina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Charleston/">Charleston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbia.sc/">Columbia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mt.pleasant/">Mount Pleasant</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.spartanburg/">Spartanburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Greenville/">Greenville</a></li>\n</ul>\n</li>\n<li>South Dakota\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sioux.falls/">Sioux Falls</a></li>\n</ul>\n</li>\n<li>Tennessee\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chattanooga/">Chattanooga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.clarksville.TN/">Clarksville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.knoxville.tn/">Knoxville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Memphis/">Memphis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nashville/">Nashville</a></li>\n</ul>\n</li>\n<li>Texas\n<ul>\n<li><a href="https://www.facebook.com/groups/freecodecampamarillotexas/">Amarillo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.austin/">Austin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bryan.college.station/">Bryan College Station</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dallas/">Dallas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.el.paso">El Paso</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampfortworth/">Fort Worth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.galveston/">Galveston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.houston/">Houston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kerrville/">Kerrville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.killeen.texas/">Killeen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tyler.longview.texas/">Longview</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lubbock/">Lubbock</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mission.texas/">Mission</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.antonio">San Antonio</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tyler.TX/">Tyler</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.waco.tx/">Waco</a></li>\n</ul>\n</li>\n<li>Utah\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lehi/">Lehi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.logan.utah/">Logan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.provo/">Provo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salt.lake.city/">Salt Lake City</a></li>\n</ul>\n</li>\n<li>Vermont\n<ul>\n<li><a href="https://www.facebook.com/groups/1080815058603708/">Burlington</a></li>\n</ul>\n</li>\n<li>Virginia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.arlington.va/">Arlington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charlottesville/">Charlottesville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fairfax/">Fairfax</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.farmville.va/">Farmville </a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.floyd.virginia/">Floyd</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fredericksburg/">Fredericksburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leesburg/">Leesburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.LYH/">Lynchburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manassas/">Manassas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.norfolk">Norfolk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.petersburg.va/">Petersburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.richmond.va/">Richmond</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.virginia.beach/">Virginia Beach</a></li>\n</ul>\n</li>\n<li>Washington\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.anacortes/">Anacortes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bellevue/">Bellevue</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.centralia/">Centralia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.national.harbor/">National Harbor</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.olympia/">Olympia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.port.orchard/">Port Orchard</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.redmond.wa/">Redmond</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.seattle/">Seattle</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.spokane/">Spokane</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tacoma/">Tacoma</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tricitieswa/">Tri-Cities</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yakima.wa/">Yakima</a></li>\n</ul>\n</li>\n<li>West Virginia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charleston.wv">Charleston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.morgantown/">Morgantown</a></li>\n</ul>\n</li>\n<li>Wisconsin\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.appleton/">Appleton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.la.crosse">La Crosse</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.madison.wisconsin/">Madison</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milwaukee/">Milwaukee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rice.lake.wi/">Rice Lake</a></li>\n</ul>\n</li>\n<li>Wyoming\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sheridan/">Sheridan</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Uruguay\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montevideo/">Montevideo</a></li>\n</ul>\n</li>\n<li>Uzbekistan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tashkent/">Tashkent</a></li>\n</ul>\n</li>\n<li>Venezuela\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.barquisimeto/">Barquisimeto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caracas/">Caracas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coro">Coro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guacara/">Guacara</a></li>\n<li><a href="https://www.facebook.com/free.code.camp.maturin/">Maturin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valencia.venezuela/">Valencia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vlp/">Valle de La Pascua</a></li>\n</ul>\n</li>\n<li>Vietnam\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.Da.Nang/">Da Nang</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hanoi/">Hanoi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hochiminhcity/">Ho Chi Minh City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hue/">Hue</a></li>\n</ul>\n</li>\n<li>Wales\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wales.bangor/">Bangor</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cardiff/">Cardiff</a></li>\n</ul>\n</li>\n<li>Zambia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lusaka/">Lukasa</a></li>\n</ul>\n</li>\n<li>Zimbabwe\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.harare/">Harare</a></li>\n</ul>\n</li>\n</ul>\n'
}},function(e,n){e.exports={title:"Map",order:5,body:'<h1>HTML5 and CSS</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Say-Hello-to-HTML-Elements">Challenge: Say Hello to HTML Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Headline-with-the-h2-Element">Challenge: Headline with the h2 Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Inform-with-the-Paragraph-Element">Challenge: Inform with the Paragraph Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor">Challenge: Make Unique Objects by Passing Parameters to our Constructor</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Uncomment-HTML">Challenge: Uncomment HTML</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comment-out-HTML">Challenge: Comment out HTML</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Fill-in-the-Blank-with-Placeholder-Text">Challenge: Fill in the Blank with Placeholder Text</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Delete-HTML-Elements">Challenge: Delete HTML Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Change-the-Color-of-Text">Challenge: Change the Color of Text</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-CSS-Selectors-to-Style-Elements">Challenge: Use CSS Selectors to Style Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-a-CSS-Class-to-Style-an-Element">Challenge: Use a CSS Class to Style an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Style-Multiple-Elements-with-a-CSS-Class">Challenge: Style Multiple Elements with a CSS Class</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Change-the-Font-Size-of-an-Element">Challenge: Change the Font Size of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Set-the-Font-Family-of-an-Element">Challenge: Set the Font Family of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Import-a-Google-Font">Challenge: Import a Google Font</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Specify-How-Fonts-Should-Degrade">Challenge: Specify How Fonts Should Degrade</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Images-to-your-Website">Challenge: Add Images to your Website</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Size-your-Images">Challenge: Size your Images</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Borders-Around-your-Elements">Challenge: Add Borders Around your Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Rounded-Corners-with-a-Border-Radius">Challenge: Add Rounded Corners with a Border Radius</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Circular-Images-with-a-Border-Radius">Challenge: Make Circular Images with a Border Radius</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Link-to-External-Pages-with-Anchor-Elements">Challenge: Link to External Pages with Anchor Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Nest-an-Anchor-Element-within-a-Paragraph">Challenge: Nest an Anchor Element within a Paragraph</a>)</li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Dead-Links-using-the-Hash-Symbol">Challenge: Make Dead Links using the Hash Symbol</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Turn-an-Image-into-a-Link">Challenge: Turn an Image into a Link</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Alt-Text-to-an-Image-for-Accessibility">Challenge: Add Alt Text to an Image for Accessibility</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Bulleted-Unordered-List">Challenge: Create a Bulleted Unordered List</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-an-Ordered-List">Challenge: Create an Ordered List</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Text-Field">Challenge: Create a Text Field</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Placeholder-Text-to-a-Text-Field">Challenge: Add Placeholder Text to a Text Field</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Form-Element">Challenge: Create a Form Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-a-Submit-Button-to-a-Form">Challenge: Add a Submit Button to a Form</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-HTML5-to-Require-a-Field">Challenge: Use HTML5 to Require a Field</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Set-of-Radio-Buttons">Challenge: Create a Set of Radio Buttons</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Set-of-Checkboxes">Challenge: Create a Set of Checkboxes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Check-Radio-Buttons-and-Checkboxes-by-Default">Challenge: Check Radio Buttons and Checkboxes by Default</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Nest-Many-Elements-within-a-Single-Div-Element">Challenge: Nest Many Elements within a Single Div Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Give-a-Background-Color-to-a-Div-Element">Challenge: Give a Background Color to a Div Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Set-the-ID-of-an-Element">Challenge: Set the ID of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-an-ID-Attribute-to-Style-an-Element">Challenge: Use an ID Attribute to Style an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Adjusting-the-Padding-of-an-Element">Challenge: Adjusting the Padding of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Adjust-the-Margin-of-an-Element">Challenge: Adjust the Margin of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-a-Negative-Margin-to-an-Element">Challenge: Add a Negative Margin to an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Different-Padding-to-Each-Side-of-an-Element">Challenge: Add Different Padding to Each Side of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Different-Margins-to-Each-Side-of-an-Element">Challenge: Add Different Margins to Each Side of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element">Challenge: Use Clockwise Notation to Specify the Padding of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element">Challenge: Use Clockwise Notation to Specify the Margin of an Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Style-the-HTML-Body-Element">Challenge: Style the HTML Body Element</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Inherit-Styles-from-the-Body-Element">Challenge: Inherit Styles from the Body Element Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Prioritize-One-Style-Over-Another">Challenge: Prioritize One Style Over Another Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Override-Styles-in-Subsequent-CSS">Challenge: Override Styles in Subsequent CSS Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Override-Class-Declarations-by-Styling-ID-Attributes">Challenge: Override Class Declarations by Styling ID Attributes Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Override-Class-Declarations-with-Inline-Styles">Challenge: Override Class Declarations with Inline Styles Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Override-All-Other-Styles-by-using-Important">Challenge: Override All Other Styles by using Important Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-for-Specific-Colors">Challenge: Use Hex Code for Specific Colors Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-White">Challenge: Use Hex Code to Color Elements White Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Red">Challenge: Use Hex Code to Color Elements Red Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Green">Challenge: Use Hex Code to Color Elements Green Complete</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Blue">Challenge: Use Hex Code to Color Elements Blue</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Mix-Colors">Challenge: Use Hex Code to Mix Colors</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-to-Color-Elements-Gray">Challenge: Use Hex Code to Color Elements Gray</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Hex-Code-for-Specific-Shades-of-Gray">Challenge: Use Hex Code for Specific Shades of Gray</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Abbreviated-Hex-Code">Challenge: Use Abbreviated Hex Code</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-values-to-Color-Elements">Challenge: Use RGB values to Color Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Color-Elements-White">Challenge: Use RGB to Color Elements White</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Color-Elements-Red">Challenge: Use RGB to Color Elements Red</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Color-Elements-Green">Challenge: Use RGB to Color Elements Green</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Color-Elements-Blue">Challenge: Use RGB to Color Elements Blue</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Mix-Colors">Challenge: Use RGB to Mix Colors</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-RGB-to-Color-Elements-Gray">Challenge: Use RGB to Color Elements Gray</a></li>\n</ol>\n<h1>Responsive Design with Bootstrap</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Responsive-Design-with-Bootstrap-Fluid-Containers">Challenge: Use Responsive Design with Bootstrap Fluid Containers</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Images-Mobile-Responsive">Challenge: Make Images Mobile Responsive</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Center-Text-with-Bootstrap">Challenge: Center Text with Bootstrap</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Bootstrap-Button">Challenge: Create a Bootstrap Button</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Block-Element-Bootstrap-Button">Challenge: Create a Block Element Bootstrap Button</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Taste-the-Bootstrap-Button-Color-Rainbow">Challenge: Taste the Bootstrap Button Color Rainbow</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Call-out-Optional-Actions-with-Button-Info">Challenge: Call out Optional Actions with Button Info</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Warn-your-Users-of-a-Dangerous-Action">Challenge: Warn your Users of a Dangerous Action</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side">Challenge: Use the Bootstrap Grid to Put Elements Side By Side</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Ditch-Custom-CSS-for-Bootstrap">Challenge: Ditch Custom CSS for Bootstrap</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Spans-for-Inline-Elements">Challenge: Use Spans for Inline Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Custom-Heading">Challenge: Create a Custom Heading</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Font-Awesome-Icons-to-our-Buttons">Challenge: Add Font Awesome Icons to our Buttons</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Font-Awesome-Icons-to-all-of-our-Buttons">Challenge: Add Font Awesome Icons to all of our Buttons</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Responsively-Style-Radio-Buttons">Challenge: Responsively Style Radio Buttons</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Responsively-Style-Checkboxes">Challenge: Responsively Style Checkboxes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Style-Text-Inputs-as-Form-Controls">Challenge: Style Text Inputs as Form Controls</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Line-up-Form-Elements-Responsively-with-Bootstrap">Challenge: Line up Form Elements Responsively with Bootstrap</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Bootstrap-Headline">Challenge: Create a Bootstrap Headline</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-House-our-page-within-a-Bootstrap-Container-Fluid-Div">Challenge: House our page within a Bootstrap Container Fluid Div</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Bootstrap-Row">Challenge: Create a Bootstrap Row</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Split-your-Bootstrap-Row">Challenge: Split your Bootstrap Row</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-Bootstrap-Wells">Challenge: Create Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Elements-within-your-Bootstrap-Wells">Challenge: Add Elements within your Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Apply-the-Default-Bootstrap-Button-Style">Challenge: Apply the Default Bootstrap Button Style</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-a-Class-to-Target-with-jQuery-Selectors">Challenge: Create a Class to Target with jQuery Selectors</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-ID-Attributes-to-Bootstrap-Elements">Challenge: Add ID Attributes to Bootstrap Elements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Label-Bootstrap-Wells">Challenge: Label Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Give-Each-Element-a-Unique-ID">Challenge: Give Each Element a Unique ID</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Label-Bootstrap-Buttons">Challenge: Label Bootstrap Buttons</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Comments-to-Clarify-Code">Challenge: Use Comments to Clarify Code</a></li>\n</ol>\n<h1>Gear up for Success</h1>\n<ol>\n<li><a href="http://freecodecamp.com/challenges/browse-camper-news">Challenge: Browse Camper News </a></li>\n<li><a href="http://freecodecamp.com/challenges/reference-our-wiki">Challenge: Reference our Wiki </a></li>\n<li><a href="http://freecodecamp.com/challenges/join-our-linkedin-alumni-network">Challenge: Join our LinkedIn Alumni Network </a></li>\n<li><a href="http://freecodecamp.com/challenges/commit-to-a-goal-and-a-nonprofit">Challenge: Commit to a Goal and a Nonprofit</a></li>\n</ol>\n<h1>jQuery</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Learn-how-Script-Tags-and-Document-Ready-Work">Challenge: Learn how Script Tags and Document Ready Work</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-HTML-Elements-with-Selectors-Using-jQuery">Challenge: Target HTML Elements with Selectors Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-Elements-by-Class-Using-jQuery">Challenge: Target Elements by Class Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-Elements-by-ID-Using-jQuery">Challenge: Target Elements by ID Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Delete-your-jQuery-Functions">Challenge: Delete your jQuery Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-the-same-element-with-multiple-jQuery-Selectors">Challenge: Target the same element with multiple jQuery Selectors</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Remove-Classes-from-an-element-with-jQuery">Challenge: Remove Classes from an element with jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Change-the-CSS-of-an-Element-Using-jQuery">Challenge: Change the CSS of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Disable-an-Element-Using-jQuery">Challenge: Disable an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Change-Text-Inside-an-Element-Using-jQuery">Challenge: Change Text Inside an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Remove-an-Element-Using-jQuery">Challenge: Remove an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-appendTo-to-Move-Elements-with-jQuery">Challenge: Use appendTo to Move Elements with jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Clone-an-Element-Using-jQuery">Challenge: Clone an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-the-Parent-of-an-Element-Using-jQuery">Challenge: Target the Parent of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-the-Children-of-an-Element-Using-jQuery">Challenge: Target the Children of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-a-Specific-Child-of-an-Element-Using-jQuery">Challenge: Target a Specific Child of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Target-Even-Numbered-Elements-Using-jQuery">Challenge: Target Even Numbered Elements Using jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-jQuery-to-Modify-the-Entire-Page">Challenge: Use jQuery to Modify the Entire Page</a></li>\n</ol>\n<h1>Basic JavaScript</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comment-your-JavaScript-Code">Challenge: Comment your JavaScript Code</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Understand-Boolean-Values">Challenge: Understand Boolean Values</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Declare-JavaScript-Variables">Challenge: Declare JavaScript Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Storing-Values-with-the-Equal-Operator">Challenge: Storing Values with the Equal Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Initializing-Variables-with-the-Equal-Operator">Challenge: Initializing Variables with the Equal Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Understanding-Uninitialized-Variables">Challenge: Understanding Uninitialized Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Understanding-Case-Sensitivity-in-Variables">Challenge: Understanding Case Sensitivity in Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-Two-Numbers-with-JavaScript">Challenge: Add Two Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Subtract-One-Number-from-Another-with-JavaScript">Challenge: Subtract One Number from Another with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Multiply-Two-Numbers-with-JavaScript">Challenge: Multiply Two Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Divide-One-Number-by-Another-with-JavaScript">Challenge: Divide One Number by Another with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Increment-a-Number-with-Javascript">Challenge: Increment a Number with Javascript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Decrement-a-Number-with-Javascript">Challenge: Decrement a Number with Javascript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Create-Decimal-Numbers-with-JavaScript">Challenge: Create Decimal Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript">Challenge: Multiply Two Decimals with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript">Challenge: Divide one Decimal by Another with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Finding-a-Remainder-in-Javascript">Challenge: Finding a Remainder in Javascript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Assignment-with-Plus-Equals">Challenge: Assignment with Plus Equals</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Assignment-with-Minus-Equals">Challenge: Assignment with Minus Equals</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Assignment-with-Times-Equals">Challenge: Assignment with Times Equals</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Assignment-with-Divided-by-Equals">Challenge: Assignment with Divided by Equals</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Convert-Celsius-to-Fahrenheit">Checkpoint: Convert Celsius to Fahrenheit</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Declare-String-Variables">Challenge: Declare String Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Escaping-Literal-Quotes-in-Strings">Challenge: Escaping Literal Quotes in Strings</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Quoting-Strings-with-Single-Quotes">Challenge: Quoting Strings with Single Quotes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Escape-Sequences-in-Strings">Challenge: Escape Sequences in Strings</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Concatenating-Strings-with-Plus-Operator">Challenge: Concatenating Strings with Plus Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Concatenating-Strings-with-the-Plus-Equals-Operator">Challenge: Concatenating Strings with the Plus Equals Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Constructing-Strings-with-Variables">Challenge: Constructing Strings with Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Appending-Variables-to-Strings">Challenge: Appending Variables to Strings</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Check-the-Length-Property-of-a-String-Variable">Challenge: Find the Length of a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String">Challenge: Use Bracket Notation to Find the First Character in a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Understand-String-Immutability">Challenge: Understand String Immutability</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String">Challenge: Use Bracket Notation to Find the Nth Character in a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String">Challenge: Use Bracket Notation to Find the Last Character in a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String">Challenge: Use Bracket Notation to Find the Nth-to-Last Character in a String</a></li>\n<li>[Checkpoint: Word Blanks](<a href="https://freecodecamp.com/wiki/Checkpoint:">https://freecodecamp.com/wiki/Checkpoint:</a> Word-Blanks)</li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays">Challenge: Store Multiple Values in one Variable using JavaScript Arrays</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Nest-one-Array-within-Another-Array">Challenge: Nest one Array within Another Array</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Access-Array-Data-with-Indexes">Challenge: Access Array Data with Indexes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Modify-Array-Data-With-Indexes">Challenge: Modify Array Data With Indexes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Access-Multi-Dimensional-Arrays-With-Indexes">Challenge: Access Multi-Dimensional Arrays With Indexes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Manipulate-Arrays-With-pop()">Challenge: Manipulate Arrays With pop()</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Manipulate-Arrays-With-push()">Challenge: Manipulate Arrays With push()</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Manipulate-Arrays-With-shift()">Challenge: Manipulate Arrays With shift()</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Manipulate-Arrays-With-unshift()">Challenge: Manipulate Arrays With unshift()</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Shopping-List">Checkpoint: Shopping List</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Write-Reusable-JavaScript-with-Functions">Challenge: Write Reusable JavaScript with Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Passing-Values-To-Functions-With-Arguments">Challenge: Passing Values to Functions with Arguments</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Global-Scope-And-Functions">Challenge: Global Scope and Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Local-Scope-And-Functions">Challenge: Local Scope and Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Global-Vs-Local-Scope-In-Functions">Challenge: Global vs. Local Scope in Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Return-A-Value-From-A-Function-With-Return">Challenge: Return a Value from a Function with Return</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Assignment-With-A-Returned-Value">Challenge: Assignment with a Returned Value</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Stand-in-Line">Checkpoint: Stand in Line</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-Conditional-Logic-with-If-Else-Statements">Challenge: Use Conditional Logic with If-Else Statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Equality-Operator">Challenge: Comparison with the Equality Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Strict-Equality-Operator">Challenge: Comparison with the Strict Equality Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Inequality-Operator">Challenge: Comparison with the Inequality Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Strict-Inequality-Operator">Challenge: Comparison with the Strict Inequality Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Greater-Than-Operator">Challenge: Comparison with the Greater Than Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Greater-Than-Equal-To-Operator">Challenge: Comparison with the Greater Than Equal To Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Less-Than-Operator">Challenge: Comparison with the Less Than Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparison-With-The-Less-Than-Equal-To-Operator">Challenge: Comparison with the Less Than Equal To Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparisons-With-The-Logical-And-Operator">Challenge: Comparisons with the Logical And Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Comparisons-With-The-Logical-Or-Operator">Challenge: Comparisons with the Logical Or Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Introducing-Else-Statements">Challenge: Introducing Else Statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Introducing-Else-If-Statements">Challenge: Introducing Else If Statements</a></li>\n<li>Challenge: Logical Order in If Else Statements</li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Chaining-If-Else-Statements">Challenge: Chaining If Else Statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Golf-Code">Checkpoint: Golf Code</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Selecting-From-Many-Options-With-Switch-Statements">Challenge: Selecting from many options with Switch Statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Adding-A-Default-Option-In-Switch-Statements">Challenge: Adding a default option in Switch statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Multiple-Identical-Options-In-Switch-Statements">Challenge: Multiple Identical Options in Switch Statements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Replacing-If-Else-Chains-With-Switch">Challenge: Replacing If Else Chains with Switch</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Returning-Boolean-Values-From-Functions">Challenge: Returning Boolean Values from Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Return-Early-Pattern-For-Functions">Challenge: Return Early Pattern for Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Counting-Cards">Checkpoint: Counting Cards</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Build-JavaScript-Objects">Challenge: Build JavaScript Objects</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Accessing-Objects-Properties-With-The-Dot-Operator">Challenge: Accessing Objects Properties with the Dot Operator</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Accessing-Objects-Properties-With-Bracket-Notation">Challenge: Accessing Objects Properties with Bracket Notation</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Accessing-Objects-Properties-With-Variables">Challenge: Accessing Objects Properties with Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Manipulate-JavaScript-Objects">Challenge: Updating Object Properties</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Add-New-Properties-to-a-JavaScript-Object">Challenge: Add New Properties to a JavaScript Object</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Delete-Properties-from-a-JavaScript-Object">Challenge: Delete Properties from a JavaScript Object</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Using-Objects-For-Lookups">Challenge: Using Objects for Lookups</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Testing-Objects-For-Properties">Challenge: Testing Objects for Properties</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Introducing-Javascript-Object-Notation-Json">Challenge: Introducing JavaScript Object Notation (JSON)</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Accessing-Nested-Objects-In-Json">Challenge: Accessing Nested Objects in JSON</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Accessing-Nested-Arrays-In-Json">Challenge: Accessing Nested Arrays in JSON</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Record-Collection">Checkpoint: Record Collection</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Iterate-with-JavaScript-For-Loops">Challenge: Iterate with JavaScript For Loops</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Iterate-Odd-Numbers-With-a-For-Loop">Challenge: Iterate Odd Numbers With a For Loop</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Count-Backwards-With-a-For-Loop">Challenge: Count Backwards With a For Loop</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Iterate-Through-An-Array-With-A-For-Loop">Challenge: Iterate Through an Array with a For Loop</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Nesting-For-Loops">Challenge: Nesting For Loops</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Iterate-with-JavaScript-While-Loops">Challenge: Iterate with JavaScript While Loops</a></li>\n<li><a href="https://freecodecamp.com/wiki/Checkpoint-Profile-Lookup">Checkpoint: Profile Lookup</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Generate-Random-Fractions-with-JavaScript">Challenge: Generate Random Fractions with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Generate-Random-Whole-Numbers-with-JavaScript">Challenge: Generate Random Whole Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Generate-Random-Whole-Numbers-within-a-Range">Challenge: Generate Random Whole Numbers within a Range</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Sift-through-Text-with-Regular-Expressions">Challenge: Sift through Text with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Find-Numbers-with-Regular-Expressions">Challenge: Find Numbers with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Find-White-Space-with-Regular-Expressions">Challenge: Find White Space with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Invert-Regular-Expression-Matches-with-JavaScript">Challenge: Invert Regular Expression Matches with JavaScript</a></li>\n</ol>\n<h1>Object Oriented and Functional Programming</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Declare-JavaScript-Objects-as-Variables">Challenge: Declare JavaScript Objects as Variables</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Construct-JavaScript-Objects-with-Functions">Challenge: Construct JavaScript Objects with Functions</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Object-Properties-Private">Challenge: Make Object Properties Private</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Make-Instances-of-Objects-with-a-Constructor-Function">Challenge: Make Instances of Objects with a Constructor Function</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Iterate-over-Arrays-with-map">Challenge: Iterate over Arrays with .map</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Condense-arrays-with-reduce">Challenge: Condense arrays with .reduce</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Filter-Arrays-with-filter">Challenge: Filter Arrays with .filter</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Sort-Arrays-with-sort">Challenge: Sort Arrays with .sort</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Reverse-Arrays-with-reverse">Challenge: Reverse Arrays with .reverse</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Concatenate-Strings-with-.concat">Challenge: Concatenate Strings with .concat</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Split-Strings-with-split">Challenge: Split Strings with .split</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Join-Strings-with-.join">Challenge: Join Strings with .join</a></li>\n</ol>\n<h1>Basic Algorithm Scripting</h1>\n<ol>\n<li><a href="http://www.freecodecamp.com/challenges/get-set-for-our-algorithm-challenges">Algorithm: Get Set for our Algorithm Challenges</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Reverse-a-String">Algorithm: Reverse a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Factorialize-a-Number">Algorithm: Factorialize a Number</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Check-for-Palindromes">Algorithm: Check for Palindromes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-find-the-longest-word-in-a-string">Algorithm: Find the Longest Word in a String</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-title-case-a-sentence">Algorithm: Title Case a Sentence</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-return-largest-numbers-in-arrays">Algorithm: Return Largest Numbers in Arrays</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Confirm-the-Ending">Algorithm: Confirm the Ending</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-repeat-a-string-repeat-a-string">Algorithm: Repeat a string repeat a string</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-truncate-a-string">Algorithm: Truncate a string</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Chunky-Monkey">Algorithm: Chunky Monkey</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-slasher-flick">Algorithm: Slasher Flick</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-mutations">Algorithm: Mutations</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Falsy-Bouncer">Algorithm: Falsy Bouncer</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Seek-and-Destroy">Algorithm: Seek and Destroy</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Where-do-I-belong">Algorithm: Where do I belong</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Caesars-Cipher">Algorithm: Caesar’s Cipher</a></li>\n</ol>\n<h1>Intermediate Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Sum-All-Numbers-in-a-Range">Algorithm: Sum All Numbers in a Range</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Diff-Two-Arrays">Algorithm: Diff Two Arrays</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-roman-numeral-converter">Algorithm: Roman Numeral Converter</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Where-art-thou">Algorithm: Where art thou</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Search-and-Replace">Algorithm: Search and Replace</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Pig-Latin">Algorithm: Pig Latin</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-DNA-Pairing">Algorithm: DNA Pairing</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Missing-letters">Algorithm: Missing letters</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Boo-who">Algorithm: Boo who</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Sorted-Union">Algorithm: Sorted Union</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-convert-HTML-entities">Algorithm: Convert HTML Entities</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Spinal-Tap-Case">Algorithm: Spinal Tap Case</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-sum-all-odd-fibonacci-numbers">Algorithm: Sum All Odd Fibonacci Numbers</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-sum-all-primes">Algorithm: Sum All Primes</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Smallest-Common-Multiple">Algorithm: Smallest Common Multiple</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-finders-keepers">Algorithm: Finders Keepers</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Drop-it">Algorithm: Drop it</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-steamroller">Algorithm: Steamroller</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Binary-Agents">Algorithm: Binary Agents</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Everything-be-True">Algorithm: Everything Be True</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Arguments-Optional">Algorithm: Arguments Optional</a></li>\n</ol>\n<h1>JSON APIs and Ajax</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Trigger-Click-Events-with-jQuery">Challenge: Trigger Click Events with jQuery</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Change-Text-with-Click-Events">Challenge: Change Text with Click Events</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Get-JSON-with-the-jQuery-getJSON-Method">Challenge: Get JSON with the jQuery getJSON Method</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Convert-JSON-Data-to-HTML">Challenge: Convert JSON Data to HTML</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Render-Images-from-Data-Sources">Challenge: Render Images from Data Sources</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Prefilter-JSON">Challenge: Prefilter JSON</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Get-Geo-location-Data">Challenge: Get Geo-location Data</a></li>\n</ol>\n<h1>Upper Intermediate Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-make-a-person">Algorithm: Make a Person</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-map-the-debris">Algorithm: Map the Debris</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-pairwise">Algorithm: Pairwise</a></li>\n</ol>\n<h1>Automated Testing and Debugging</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Use-the-Javascript-Console">Challenge: Use the Javascript Console</a></li>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Using-typeof">Challenge: Using typeof</a></li>\n</ol>\n<h1>Advanced Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Validate-US-Telephone-Numbers">Algorithm: Validate US Telephone Numbers</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Symmetric-Difference">Algorithm: Symmetric Difference</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Exact-Change">Algorithm: Exact Change</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-inventory-update">Algorithm: Inventory Update</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-no-repeats-please">Algorithm: No repeats please</a></li>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Friendly-Date-Ranges">Algorithm: Friendly Date Ranges</a></li>\n</ol>\n<h1>Git</h1>\n<ol>\n<li><a href="https://freecodecamp.com/wiki/Challenge-Save-your-Code-Revisions-Forever-with-Git">Challenge: Save your Code Revisions Forever with Git</a></li>\n</ol>\n<h1>Node.js and Express.js</h1>\n<ol>\n<li>Challenge: Manage Packages with NPM</li>\n<li>Challenge: Start a Node.js Server</li>\n<li>Challenge: Continue working with Node.js Servers</li>\n<li>Challenge: Finish working with Node.js Servers</li>\n<li>Challenge: Build Web Apps with Express.js</li>\n</ol>\n<h1>MongoDB</h1>\n<ol>\n<li>Challenge: Store Data in MongoDB</li>\n</ol>\n'
}},function(e,n){e.exports={title:"October 2015 Improvements",order:5,body:'<p>Our open source community has been hard at work throughout September on some major improvements. We’re going to keep up this tempo, and do a special live stream for our first birthday (October 15, 2015). Here are the improvements we just pushed to production:</p>\n<p>###Certification</p>\n<ul>\n<li>New challenges have appeared called “Claim your Front End Developer Certificate” and “Claim your Full Stack Developer Certificate”.</li>\n<li>We’ve built acceptance of our <a href="https://freecodecamp.com/wiki/Academic-Honesty-Policy">Academic Honesty Policy</a> into these certificate challenges.</li>\n<li>Certificates are issued programmatically once you meet their requirements.</li>\n<li>Certificates are available right from your Code Portfolio, and publicly viewable to all as long as you haven’t hidden your solutions.</li>\n<li>Each certificate has a unique verifiable URL that employers can check. This makes it is impossible to forge our certificates without access to our production servers.</li>\n</ul>\n<p>###Code Portfolios</p>\n<ul>\n<li>All challenges and their solutions now show up on your code portfolio, including Challenges.</li>\n<li>You can hide your solutions from other people.</li>\n</ul>\n<p>###Unauthenticated Campers</p>\n<ul>\n<li>You can complete all of our challenges without being hassled to log in.</li>\n<li>Once you complete a challenge, you will be redirected to the next logical challenge, even if you aren’t logged in.</li>\n</ul>\n<p>###Improved challenges</p>\n<ul>\n<li>@berkeleytrue figured out a way to make all challenge solutions 100% sharable. You can copy a URL directly from your browser and share it with others, and they will be able to run your code against the challenge’s tests. URLs update automatically when you run a challenge’s tests.</li>\n<li>We completely rewrote all Algorithm tests to be as transparent as possible. By popular request, we no longer show the Chai tests themselves - just a message clearly explaining what each test is testing.</li>\n<li>By popular request, we added gif-style challenges, and are replacing our video-style challenges with these. All of our old videos will remain available on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">YouTube channel</a>.</li>\n</ul>\n<p>###Wiki improvements</p>\n<ul>\n<li>@rafase282 has nearly finished creating <a href="https://freecodecamp.com/wiki/Map">notes for every single challenge in Free Code Camp’s curriculum</a>, including hints and solutions.</li>\n<li>@codenonprofit has started creating “portal” style wiki articles that serve as better entry points into our tangle of 400+ articles.</li>\n</ul>\n<p>###Resolved experiments</p>\n<ul>\n<li><a href="http://Plug.dj">Plug.dj</a> shut down, and our <a href="http://plug.dj">plug.dj</a> room with it. Some of our campers are working on building an open source music app to replace it.</li>\n<li>We delisted several low-traffic casual Gitter rooms from our wiki and created a catch-all <a href="https://gitter.im/freecodecamp/casual">Casual chat room</a> for non-coding-related chat.</li>\n<li>We now recommend campers use their Campsite’s Facebook group for chatting instead of their campsite’s Gitter chatroom. Only a few of our Campsite Gitter chatroooms had active synchronous discussions, and about 1/3rd of all conversations consisted of someone saying “hello” and not getting a response. We’ve delisted all our Campsite Gitter rooms from our Campsite directory. Still, we will keep them open for archival purposes, and you can keep using it if you’d like. Here’s a short <a href="http://blog.freecodecamp.com/2015/09/jump-start-your-local-campsite-with-coffee-and-code.html">blog post</a> about how our Campsites are evolving and growing.</li>\n</ul>\n<p>###Other exciting developments</p>\n<ul>\n<li>We just launched our first-ever <a href="https://teespring.com/get-free-code-camp-t-shirt">t-shirt campaign</a> and added a second campaign for <a href="https://teespring.com/free-code-camp-shirt-eu">EU fulfillment</a>.</li>\n<li>We just launched Commit. Rather than going into detail on it here, read <a href="http://blog.freecodecamp.com/2015/10/commit-to-yourself-commit-to-nonprofit.html">@codenonprofit’s blog post</a>.</li>\n<li>We launched <a href="http://freecodecamp.com/labs">Free Code Camp Labs</a> to showcase some unique projects our campers are building.</li>\n<li>We started gathering <a href="http://freecodecamp.com/stories">Stories from campers</a> and putting them all in one place. These are just a fraction of the campers who’ve advanced their careers and gotten coding jobs after learning with Free Code Camp, but it’s a pretty representative sample.</li>\n</ul>\n<p>###Improvements coming in the next few weeks:</p>\n<ul>\n<li>A clickable hint button on each challenge that cycles through a series of increasingly helpful hints.</li>\n<li>Recommended solutions that you can compare your solution with once you complete each challenge.</li>\n<li>We’ll re-record some of our dated-looking gifs.</li>\n<li>We’ll finish the Get Set for Back End Projects with Clementine.js (gif-style challenge)</li>\n<li>We’ll finish the new Get Set for Front End Projects (gif-style challenge)</li>\n<li>We’ll move all Front End Project and Back End Project challenges to gif-style.</li>\n<li>We’ll add a back button to our gif-style challenges.</li>\n<li>We’ll launch our job board.</li>\n<li>We’ll publish several new JSON API and AJAX-related challenges</li>\n<li>We’ll finish a leaderboard creation mechanic designed for teachers to track students and campers to track their friends.</li>\n<li>We’ll finish the Hikes interface (Hikes are Briana Swift’s <a href="https://www.youtube.com/watch?v=q7tlgZg4Q1o&amp;list=PLWKjhJtqVAbmfoj2Th9fvxhHIeqFO7wOy">computer science theory challenges</a>)</li>\n<li>We’ll close the ~30 pull requests that have piled up (thanks, contributors!)</li>\n</ul>\n<p>###And longer term goals we still haven’t forgotten:</p>\n<ul>\n<li>Support for major world languages (<a href="https://trello.com/b/m7zhwXka/fcc-translation">translation is still underway</a>)</li>\n<li>Turning Free Code Camp into a single-page isomorphic app</li>\n<li>Creating a browser-based replacement for Screen Hero / Team Viewer that is well suited to pairing on Free Code Camp.</li>\n<li>React.js curriculum</li>\n<li>D3.js curriculum and data visualization Front End Projects</li>\n</ul>\n<p>##Our codebase is improving quickly. If you see something that looks funky or broken, please click that “bug” button and create a GitHub issue for us. Thanks for your patience and support.</p>\n<p>#Happy coding!</p>\n'}},function(e,n){e.exports={title:"October 2015 Summit Agenda",order:5,body:'<p>Our October 3, 2015 Summit will begin at noon EST on Saturday on <a href="http://twitch.tv/freecodecamp">twitch.tv channel</a> and be available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>During this 1 hour live stream, we’ll:</p>\n<ul>\n<li>launch our free Front End and Full Stack Development Certificate programs</li>\n<li>demo our new, more comprehensive portfolio pages</li>\n<li>demo a new way that all our campers can immediately start helping nonprofits</li>\n<li>talk with camper Blake Johnston, who created the Clementine.js boilerplate that Free Code Camp will use for our full stack Back End Project challenges</li>\n<li>launch our first-ever t-shirt campaign on <a href="http://teespring.com">teespring.com</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Saturday Summit August 2015",order:5,body:'<h3>Free Code Camp’s [August Live Stream] (<a href="https://youtu.be/UhoxoYrJ6Qs">https://youtu.be/UhoxoYrJ6Qs</a>) was the largest yet.</h3>\n<h2>The agenda included:</h2>\n<ul>\n<li>Opening words from Michael</li>\n<li>New front end challenges [3:00] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=3m">https://youtu.be/UhoxoYrJ6Qs?t=3m</a>)</li>\n<li>Newly configured full-stack challenges</li>\n<li>New Nonprofit Projects [12:32] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=12m32s">https://youtu.be/UhoxoYrJ6Qs?t=12m32s</a>)</li>\n<li>Wiki [22:49] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=22m49s">https://youtu.be/UhoxoYrJ6Qs?t=22m49s</a>)</li>\n<li>New chat rooms [29:40] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=29m40s">https://youtu.be/UhoxoYrJ6Qs?t=29m40s</a>)</li>\n<li>New Live Streams [35:34] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=35m34s">https://youtu.be/UhoxoYrJ6Qs?t=35m34s</a>)</li>\n<li>New Internet Radio Station DJ’d by campers [36:30] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=36m30s">https://youtu.be/UhoxoYrJ6Qs?t=36m30s</a>)</li>\n<li>FCC Bot [39:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=39m24s">https://youtu.be/UhoxoYrJ6Qs?t=39m24s</a>)</li>\n<li>Matt Yamamoto Front End Project Demo [54:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=54m24s">https://youtu.be/UhoxoYrJ6Qs?t=54m24s</a>)</li>\n<li>Closing from Quincy [1:04:15] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s">https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s</a>)</li>\n<li>[Pull Request After Party with Quincy] (<a href="https://youtu.be/r0lCJ_TFYlI">https://youtu.be/r0lCJ_TFYlI</a>)</li>\n</ul>\n<p><a href="http://www.youtube.com/watch?feature=player_embedded&v=UhoxoYrJ6Qs\n" target="_blank">&lt;img src=&quot;https://www.evernote.com/l/AnvmsUWWNeJFNbfm7fDa7SRLmnbn7jafRL4B/image.png&quot;\nalt=“Screen shot from our twitch feed on August 1 2015” width=“560” height=&quot;315&quot;border=“10” /&gt;</a></p>\n'}},function(e,n){e.exports={title:"Saturday Summit December 2015",order:5,body:'<p><a href="https://youtu.be/TsIzthxhTHc">Free Code Camp’s December Summit</a></p>\n<p>Here is a summary for those who don’t have time to watch the full 90 minutes:</p>\n<p><strong>–New Curriculum–</strong></p>\n<p>-Nothing will change up to and including the Front End Development Certificate.</p>\n<p>-The old Full Stack Certification will now be the Backend certification. This will include the current backend stuff (including Back End Projects) and will also include 5JSON/API development Back End Projects. Advanced Algorithms will be included here.</p>\n<p>-React.js will replace Angular/js and will be in the Data Visualization Certification as will SASS and D3.js. This certification will include React/SASS projects and D3 projects.</p>\n<p>-Full Stack Development Certification comes AFTER completion of the three other certification AND four non-profit projects.  Two of those will be new projects and two will be maintaining/extending legacy code.</p>\n<p>-Interview Preparation includes interview prep, whiteboard prep, and interviewing other campers, live.</p>\n<p>-Some changes centered around the new curriculum will be live in a few days.</p>\n<p><strong>–Challenges–</strong></p>\n<p>-@SaintPeter is creating ~60 new Javascript Challenges.</p>\n<p>-Also creating new ‘checkpoints’ that will act like mini-Algorithms during the Challenges.  They will be ‘blank page’ challenges that are intended to ease campers in the transition from Challenges to Algorithms.</p>\n<p>-There is a ‘challenge-o-matic’ challenge tool that anyone will be able to use to create challenges and contribute to FCC.</p>\n<p><strong>–Hikes–</strong></p>\n<p>-‘Hikes’ are short videos that cover basic computer science concepts. They will be expanded to any topic that is relevant to programming including math, engineering, etc. The hope is that campers will contribute videos on additional topics that they feel are relevant.</p>\n<p>-One goal of FCC is to make the entire curriculum available offline. @QuincyLarson discussed the idea of having Raspberry Pis loaded up with FCC and distributed.</p>\n<p><strong>–Community Analysis–</strong></p>\n<p>-There is a <a href="https://gitter.im/FreeCodeCamp/DataScience">FCC Data Science Chat</a> on Gitter where some cool analysis about FCC is being posted.</p>\n<p>-<a href="http://www.freecodecamp.com/labs">FCC Labs</a> has some cool apps that you can use to look at some of the data visualization that has been built so far.</p>\n<p><strong>–New FCC Wiki–</strong></p>\n<p>-Wiki was moved to a new repo due to spam.  Campers who want to contribute can make a pull request on <a href="http://www.github.com/freecodecamp/wiki">The Repo</a>.</p>\n<p>-The new wiki itself is available on the <a href="http://beta.freecodecamp.com/wiki">Beta Site</a>.</p>\n<p><strong>–Q&amp;A–</strong></p>\n<p>-There are small tasks that campers can contribute to.  Issues marked as ‘help-wanted’ in the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/issues">Main FCC Repo/Issues</a> are minor issues like typos that anyone can fix. Just do a pull request and make the fixes. Instructions for how to contribute are in the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp">Main FCC Repo</a></p>\n<p><strong>-Why React.js over Angular.js?</strong> It’s simpler to learn and to teach, and ‘more fun’ to write in.  Another reason is that FCC feels that there is a ‘critical mass’ behind React.js, based on lots of big names moving their codebases into React.js. Wordpress, for example, is changing and represents 25% of the internet. Wide adoption of React.js translates to more employment opportunities. Angular.js is much more popular right now, but @QuincyLarson thinks that React.js will overtake Angular.js.  Angular 2 will be coming out soon, and is a complete overhaul from Angular 1; the only thing the same is the name. @SaintPeter added that the new <a href="beta.freecodecamp.com/wiki">Wiki Site</a> is written in React.js and very responsive.</p>\n<p><strong>-Is FCC sufficient to make me a web developer?</strong> @SaintPeter : No.  FCC provides a framework and linear path to guide your learning but won’t provide everything to everyone. Don’t feel like you’re cheating on FCC if you go to other resources to supplement your learning.@QuincyLarson: FCC is pulling ahead of its peers in terms of being exhaustive and we would like FCC to be as comprehensive as possible in the future. That said, of course you should supplement your learning with other sites. One of FCC’s primary focuses are the projects (I assume Front End Projects and Back End Projects?) So use other materials if you need to, but come back to FCC to use that knowledge to work through the projects.</p>\n<p><strong>-Since SASS is being added, is there a chance to add an HTML preprocesser like Jade?</strong> @BerkeleyTrue - Maybe, but it doesn’t seem like it would add much to the curriculum.</p>\n<p><strong>-How many campers have gotten jobs as a direct result of working with FCC?</strong> @BerkeleyTrue - It’s at least a dozen. @QuincyLarson - We can’t keep hard numbers because we don’t do matchmaking, so we rely on people to tell us when they’ve gotten jobs, but it’s at least a hundred. Alot of people get jobs before they finish our curriculum.</p>\n<p><strong>-In light of the new curriculum, what happens to people who already have a Full Stack Developer Certification?</strong> @QuincyLarson - There’s no fair way to deal with the 25 people who have the certification now. He will contact them directly to apologize, but the current Full Stack Developer Certification will be converted to the Back End Developer Certification, after they complete the five new API challenges. Hoping that this is the last time the length of the curriculum changes.</p>\n<p><strong>-Will FCC touch on Node modules like Gulp, Bower, Yeoman, etc?</strong> @SaintPeter - By the time you’re ready to use them, you should know enough to teach yourself. Introducing them early in the program is too overwhelming. /u/quicnylarson - I’d like to see Hike topics on these.</p>\n<p><strong>-How do you see Reddit being used by campers?</strong> @QuincyLarson - Reddit is a place for our community to share ideas and ask questions. The FCC community is spread over many different platforms (e.g. Gitter chat, Facebook, meetups, etc). Reddit is a great way for people to share stories, ask questions, etc., to the ENTIRE community at once.</p>\n<p>As an aside, @QuincyLarson pulled up <a href="http://stackoverflow.com/research/developer-survey-2015">A stackoverflow page</a> and discussed the trend of more and more software developers being self taught and/or coming from non CS fields.</p>\n<p><strong>-Last month, you said that about 200 people had finished the Front End Developer Certificate. Has this changed and at what rate are people earning this certificate?</strong> @BerkeleyTrue - 311. @QuincyLarson - The pace has picked up.  If you have completed that certificate, internet high-five. 913 people have pledged donations to nonprofit organizations.</p>\n<p>As an aside, /u/quicnylarson discussed future plans to expand the number of nonprofit organizations that campers can pledge to for their nonprofit pledge. No specific numbers, just that it will be expanding in the future.</p>\n<p><strong>-How can people hire FCC graduates?</strong> @QuincyLarson - Employers can use the <a href="http://www.freecodecamp.com/jobs">Free Code Camp Job Board</a> to post positions. FCC wants only high quality jobs from high quality employers, so they are currently charging $1000 to post a job on the job board. FCC is still trying to figure out how to market to employers and help them understand what they will get when they hire an FCC graduate.  Only about 5% of people in the U.S. learn to code compared to 100% in China. Already, software developer is the most common job in some U.S. states. Providing coding education to everyone for free is a big and ambitious goal. The job board (and its cost) is just another manifestation of that.</p>\n<p><strong>-If I’m an established developer, can I start work on nonprofit projects immediately?</strong> @QuincyLarson - No. Everyone who works on our nonprofit projects has to earn the Full Stack Development Certification first. Completing the program isn’t just about demonstrating ability, it’s also about demonstrating commitment to the program. It’s important that people who work on the nonprofits are dedicated and have put in the time and effort to get to that point; FCC doesn’t want people quitting half way through a project. @QuincyLarson pointed out that FCC is intentionally difficult and is probably among the most difficult coding resources around. Even people who have experience coding can take hours to complete a Front End Project or Back End Project. This is by design. @SaintPeter - As a reminder, all of the Challenges are optional (for everyone). If you have a coding background, you only have to complete the Algorithms, Front End Projects, and Back End Projects in order to get the certificates.</p>\n'}},function(e,n){e.exports={title:"Saturday Summit October 2015",order:5,body:'<p>Our October 3, 2015 Summit began at noon EST on Saturday on <a href="http://twitch.tv/freecodecamp">twitch.tv channel</a> and be available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>During this 1 hour live stream, we’ll:</p>\n<ul>\n<li>launch our free Front End and Full Stack Development Certificate programs</li>\n<li>demo our new, more comprehensive portfolio pages</li>\n<li>demo a new way that all our campers can immediately start helping nonprofits</li>\n<li>talk with camper Blake Johnston, who created the Clementine.js boilerplate that Free Code Camp will use for our full stack Back End Project challenges</li>\n<li>launch our first-ever t-shirt campaign on <a href="http://teespring.com">teespring.com</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Select Issues for Contributing Using Labels",order:5,body:'<p>In this article you can find labels (see the table below) used to categorize the variety of issues submitted to FCC. The labels range from <strong>bugs</strong> to <strong>questions</strong> to <strong>curriculum requests</strong>. For example, if an issue has a <strong><em>Wiki</em></strong> label, you can create a Wiki article about that issue - after reading the <a href="https://freecodecamp.com/wiki/Wiki-Style-Guide">Wiki Style Guide</a>.</p>\n<p>You can use labels to help you choose which issues to click on, rather than randomly clicking to find one of interest to you. Of course, you can work on and submit PRs for issues without labels. How ever you choose an issue, please be sure to read <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Guidelines for Contributing</a> before submitting any pull requests.</p>\n<p>Check out the table below for the list of FreeCodeCamp issue labels, along with descriptions (work in progress). Thanks @bugron, @ahstro, @benschenker, for compiling this list of labels and descriptions.</p>\n<p>Note: The labels <strong><em>blocked</em></strong>, <strong><em>confirmed</em></strong>, and <strong><em>QA</em></strong> are also tied to <a href="https://waffle.io/freecodecamp/freecodecamp">Waffle</a>, a management system for FCC (GitHub) issues, and are automatically added and removed by it.</p>\n<table>\n<thead>\n<tr>\n<th>Label</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>accessibility</td>\n<td>This is used for issues that don’t necessarily break the site, but make it harder to use (like when tests used to evaluate while you typed would flicker the whole screen). Also, relevant to enabling the site to be usable for those who may have vision impairment or disabilities.</td>\n</tr>\n<tr>\n<td>accounts</td>\n<td>Camper has a problem with his/her FCC account, such as login problems, losing progress, or profile page is missing some solutions.</td>\n</tr>\n<tr>\n<td>beta</td>\n<td>The issue is related to FCC’s beta site.</td>\n</tr>\n<tr>\n<td>bike shedding</td>\n<td>Requests which are trivial or essentially irrelevant to the purposes of the site. In other words issues that have no real consequence yet people insist on spending cycles on them.</td>\n</tr>\n<tr>\n<td>blocked</td>\n<td>When an issue should not be worked on, due to waiting for the creator’s response, more information, or the issue is stale.</td>\n</tr>\n<tr>\n<td>bug</td>\n<td>Confirmed and reproducible bug in FCC’s code and not only, for example, in Internet Explorer.</td>\n</tr>\n<tr>\n<td>chrome</td>\n<td>The issue can only be reproduced in Google Chrome.</td>\n</tr>\n<tr>\n<td>confirmed</td>\n<td>The reported issue has been verified. (It basically says the issue creator has successfully communicated how to replicate the issue, but no one has started working toward a fix).</td>\n</tr>\n<tr>\n<td>curriculum request</td>\n<td>Relates to everything that is requested to be added to current curriculum. The issue requests a new challenge, adding more explanation to a challenge, etc.</td>\n</tr>\n<tr>\n<td>device specific</td>\n<td>The issue presents only for a particular device (smartphone, tablet, desktop, etc).</td>\n</tr>\n<tr>\n<td>Discussing</td>\n<td>The issue is currently on discussion stage.</td>\n</tr>\n<tr>\n<td>duplicate</td>\n<td>The issue is a duplicate of another issue and most likely will be closed.</td>\n</tr>\n<tr>\n<td>easy</td>\n<td>This is used to flag issues that aren’t critical, but should be easy for a camper to fix for their first couple of PRs. Think of these as the camper gateway to becoming a contributor.</td>\n</tr>\n<tr>\n<td>enhancement</td>\n<td>Similar to a Feature Request, but more related to improving existing features rather than adding new ones.</td>\n</tr>\n<tr>\n<td>feature request</td>\n<td>A request to add a feature to FCC. For example, ability to edit or remove Algorithms from campers profile page.</td>\n</tr>\n<tr>\n<td>firefox</td>\n<td>The issue can only be reproduced in Mozilla Firefox.</td>\n</tr>\n<tr>\n<td>help wanted</td>\n<td>Owners or issue moderators need campers’ help to investigate or fix the issue.</td>\n</tr>\n<tr>\n<td>hikes</td>\n<td>The issue is related to Hikes (they are currently not available in curriculum).</td>\n</tr>\n<tr>\n<td>ie/edge</td>\n<td>The issue can only be reproduced in Internet Explorer or Microsoft Edge. FCC officially supports only Google Chrome.</td>\n</tr>\n<tr>\n<td>in progress</td>\n<td>Someone is currently making a fix for the issue.</td>\n</tr>\n<tr>\n<td>must start ASAP</td>\n<td>This issue needs to be reviewed/resolved as soon as possible.</td>\n</tr>\n<tr>\n<td>on the roadmap</td>\n<td>Generally feature requests that are planned to be implemented in future updates and/or will be implemented in near future.</td>\n</tr>\n<tr>\n<td>QA</td>\n<td>(Quality Assurance) When a fix has been submitted and it needs to be reviewed before merging.</td>\n</tr>\n<tr>\n<td>question</td>\n<td>The issue is a question.</td>\n</tr>\n<tr>\n<td>reactify</td>\n<td>Issues related to moving to reactjs.</td>\n</tr>\n<tr>\n<td>resolved</td>\n<td>The issue is resolved/fixed.</td>\n</tr>\n<tr>\n<td>tests</td>\n<td>The issue should be fixed with a test improvement, meaning someone needs to fix asserts.</td>\n</tr>\n<tr>\n<td>todo</td>\n<td>Something that needs to be done in future.</td>\n</tr>\n<tr>\n<td>translation</td>\n<td>This type of issues are either translation requests or issues related to an already implemented translation.</td>\n</tr>\n<tr>\n<td>ux</td>\n<td>(User Experience) Similar to accessibility, but focuses on an issue where campers share their experience or with an issue that leads to a negative user experience. For example, tag is used when something may be too complicated or how to use a feature is difficult to understand.</td>\n</tr>\n<tr>\n<td>wiki</td>\n<td>Relates to FCC’s GitHub Wiki articles. May be a request to create one.</td>\n</tr>\n<tr>\n<td>wontfix</td>\n<td>The issue is not fixable or will not be fixed in near future. An example of could be MS Edge browser support.</td>\n</tr>\n</tbody>\n</table>\n'}},function(e,n){e.exports={title:"Site Improvements August 2015",order:5,body:'<h2>Sunday’s Improvements</h2>\n<ul>\n<li>replaced our getting-started videos with a simple 10-minute process (using GIFs instead of videos)</li>\n<li>doubled the number of our HTML5 and Bootstrap challenges</li>\n<li>replaced Codecademy’s JavaScript and jQuery challenges with our own challenges</li>\n<li>added our own Object-oriented Programming and Functional Programming challenges</li>\n<li>added two new Front End Project front end challenges (Personal Portfolio and Simon game), and moved our Front End Projects to much earlier in our curriculum</li>\n<li>completely replaced our Field Guide with a searchable, and easily-editable open-source wiki</li>\n<li>made it so your Algorithm code is stored in your browser, so if you leave the page, your code will be there when you come back</li>\n<li>simplified our portfolio pages. You can now click a single button to mirror your Free Code Camp profile with your GitHub profile. Algorithm solutions are no longer shown here, but they’ll eventually be accessible through our API.</li>\n<li>fixed some issues with Brownie Points and Streaks</li>\n<li>improved our Camper News page by removing the (mostly unused) comments and adding one-click upvoting</li>\n<li>added a Creative Commons license to literally all of our images and text</li>\n<li>thanks to Loopback, everything is now an API, and we will soon publish cool ways to interact with Free Code Camp’s (non-sensitive) data</li>\n</ul>\n<h2>FAQ</h2>\n<h3>The challenge I was most recently doing disappeared.</h3>\n<p>You can just keep going. If you have time to go back and try our new challenges, they should be a quick review for you. Otherwise, keep moving forward.</p>\n<h3>Why are you deploying all these improvements at once?</h3>\n<p>We’ve been working on some of the features for months on our Staging branch. Most of them were held up by a single task: our transition to <a href="http://loopback.io/">Loopback</a>. @BerkeleyTrue started working on this back in March.</p>\n<h3>Was deploying everything at once necessary?</h3>\n<p>Probably not. Going forward, we will deploy new code several times a day (as we did prior to the Loopback feature). We plan to start using a <a href="https://en.wikipedia.org/wiki/Continuous_integration">continuous integration</a> and other agile best practices as we reduce our <a href="https://en.wikipedia.org/wiki/Technical_debt">technical debt</a>.</p>\n'}},function(e,n){e.exports={title:"Site Improvements October 2015",order:5,body:'<p>Our open source community has been hard at work throughout September on some major improvements. We’re going to keep up this tempo, and do a special live stream for our first birthday (October 15, 2015). Here are the improvements we just pushed to production:</p>\n<p>###Certification</p>\n<ul>\n<li>New challenges have appeared called “Claim your Front End Developer Certificate” and “Claim your Full Stack Developer Certificate”.</li>\n<li>We’ve built acceptance of our <a href="https://freecodecamp.com/wiki/Academic-Honesty-Policy">Academic Honesty Policy</a> into these certificate challenges.</li>\n<li>Certificates are issued programmatically once you meet their requirements.</li>\n<li>Certificates are available right from your Code Portfolio, and publicly viewable to all as long as you haven’t hidden your solutions.</li>\n<li>Each certificate has a unique verifiable URL that employers can check. This makes it is impossible to forge our certificates without access to our production servers.</li>\n</ul>\n<p>###Code Portfolios</p>\n<ul>\n<li>All challenges and their solutions now show up on your code portfolio, including Challenges.</li>\n<li>You can hide your solutions from other people.</li>\n</ul>\n<p>###Unauthenticated Campers</p>\n<ul>\n<li>You can complete all of our challenges without being hassled to log in.</li>\n<li>Once you complete a challenge, you will be redirected to the next logical challenge, even if you aren’t logged in.</li>\n</ul>\n<p>###Improved challenges</p>\n<ul>\n<li>@berkeleytrue figured out a way to make all challenge solutions 100% sharable. You can copy a URL directly from your browser and share it with others, and they will be able to run your code against the challenge’s tests. URLs update automatically when you run a challenge’s tests.</li>\n<li>We completely rewrote all Algorithm tests to be as transparent as possible. By popular request, we no longer show the Chai tests themselves - just a message clearly explaining what each test is testing.</li>\n<li>By popular request, we added gif-style challenges, and are replacing our video-style challenges with these. All of our old videos will remain available on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">YouTube channel</a>.</li>\n</ul>\n<p>###Wiki improvements</p>\n<ul>\n<li>@rafase282 has nearly finished creating <a href="https://freecodecamp.com/wiki/Map">notes for every single challenge in Free Code Camp’s curriculum</a>, including hints and solutions.</li>\n<li>@codenonprofit has started creating “portal” style wiki articles that serve as better entry points into our tangle of 400+ articles.</li>\n</ul>\n<p>###Resolved experiments</p>\n<ul>\n<li><a href="http://Plug.dj">Plug.dj</a> shut down, and our <a href="http://plug.dj">plug.dj</a> room with it. Some of our campers are working on building an open source music app to replace it.</li>\n<li>We delisted several low-traffic casual Gitter rooms from our wiki and created a catch-all <a href="https://gitter.im/freecodecamp/casual">Casual chat room</a> for non-coding-related chat.</li>\n<li>We now recommend campers use their Campsite’s Facebook group for chatting instead of their campsite’s Gitter chatroom. Only a few of our Campsite Gitter chatroooms had active synchronous discussions, and about 1/3rd of all conversations consisted of someone saying “hello” and not getting a response. We’ve delisted all our Campsite Gitter rooms from our Campsite directory. Still, we will keep them open for archival purposes, and you can keep using it if you’d like. Here’s a short <a href="http://blog.freecodecamp.com/2015/09/jump-start-your-local-campsite-with-coffee-and-code.html">blog post</a> about how our Campsites are evolving and growing.</li>\n</ul>\n<p>###Other exciting developments</p>\n<ul>\n<li>We just launched our first-ever <a href="https://teespring.com/get-free-code-camp-t-shirt">t-shirt campaign</a> and added a second campaign for <a href="https://teespring.com/free-code-camp-shirt-eu">EU fulfillment</a>.</li>\n<li>We just launched Commit. Rather than going into detail on it here, read <a href="http://blog.freecodecamp.com/2015/10/commit-to-yourself-commit-to-nonprofit.html">@codenonprofit’s blog post</a>.</li>\n<li>We launched <a href="http://freecodecamp.com/labs">Free Code Camp Labs</a> to showcase some unique projects our campers are building.</li>\n<li>We started gathering <a href="http://freecodecamp.com/stories">Stories from campers</a> and putting them all in one place. These are just a fraction of the campers who’ve advanced their careers and gotten coding jobs after learning with Free Code Camp, but it’s a pretty representative sample.</li>\n</ul>\n<p>###Improvements coming in the next few weeks:</p>\n<ul>\n<li>A clickable hint button on each challenge that cycles through a series of increasingly helpful hints.</li>\n<li>Recommended solutions that you can compare your solution with once you complete each challenge.</li>\n<li>We’ll re-record some of our dated-looking gifs.</li>\n<li>We’ll finish the Get Set for Back End Projects with Clementine.js (gif-style challenge)</li>\n<li>We’ll finish the new Get Set for Front End Projects (gif-style challenge)</li>\n<li>We’ll move all Front End Project and Back End Project challenges to gif-style.</li>\n<li>We’ll add a back button to our gif-style challenges.</li>\n<li>We’ll launch our job board.</li>\n<li>We’ll publish several new JSON API and AJAX-related challenges</li>\n<li>We’ll finish a leaderboard creation mechanic designed for teachers to track students and campers to track their friends.</li>\n<li>We’ll finish the Hikes interface (Hikes are Briana Swift’s <a href="https://www.youtube.com/watch?v=q7tlgZg4Q1o&amp;list=PLWKjhJtqVAbmfoj2Th9fvxhHIeqFO7wOy">computer science theory challenges</a>)</li>\n<li>We’ll close the ~30 pull requests that have piled up (thanks, contributors!)</li>\n</ul>\n<p>###And longer term goals we still haven’t forgotten:</p>\n<ul>\n<li>Support for major world languages (<a href="https://trello.com/b/m7zhwXka/fcc-translation">translation is still underway</a>)</li>\n<li>Turning Free Code Camp into a single-page isomorphic app</li>\n<li>Creating a browser-based replacement for Screen Hero / Team Viewer that is well suited to pairing on Free Code Camp.</li>\n<li>React.js curriculum</li>\n<li>D3.js curriculum and data visualization Front End Projects</li>\n</ul>\n<p>##Our codebase is improving quickly. If you see something that looks funky or broken, please click that “bug” button and create a GitHub issue for us. Thanks for your patience and support.</p>\n<p>#Happy coding!</p>\n'
}},function(e,n){e.exports={title:"Spanish Translation Terminology",order:5,body:"<p>#Spanish terminology alignment</p>\n<p>Para evitar confusión para otros Campers necesitamos alinearnos todos los traductores con la misma terminología. Para ello, hemos creado una lista con las palabras más comúnes y las traducciones que hemos estado utilizando hasta ahora.</p>\n<p>Vale recalcar que todos los términos están abiertos a discusión. En caso se tenga que hacer algún cambio, nos pueden enviar un mensaje directo a través de Slack a @miya o @eabedrapo.</p>\n<p>##FCC terminology</p>\n<p>###Untranslated</p>\n<ul>\n<li>Free Code Camp</li>\n<li>Challenge</li>\n<li>Algorithm</li>\n<li>Front End Project</li>\n<li>Back End Project</li>\n<li>Top menu buttons.</li>\n<li>Camper</li>\n<li>Full Stack</li>\n<li>Bug</li>\n</ul>\n<p>##CS terminology</p>\n<p>###Untranslated</p>\n<ul>\n<li>Hardware</li>\n<li>Software</li>\n<li>Bit</li>\n<li>Byte</li>\n<li>Front-end</li>\n<li>Link</li>\n<li>Framework</li>\n<li>Query</li>\n</ul>\n<p>###Translated</p>\n<ul>\n<li>Boolean Logic: Lógica Booleana</li>\n<li>Loop: Búcle</li>\n<li>Computer Science: Informática</li>\n<li>Run (a program): Ejecutar</li>\n<li>Click: Darle click</li>\n<li>Responsive: Adaptable</li>\n</ul>\n<p>##General terminology</p>\n<p>###Translated</p>\n<ul>\n<li>Non-profit: Empresas sin fines de lucro</li>\n<li>Self-paced: Manejados a tu propio ritmo</li>\n</ul>\n<p>##HTML / CSS terminology</p>\n<p>###Non-Traslated</p>\n<ul>\n<li>Web</li>\n<li>Tests &amp; challengeSeeds (they shouldn’t be translated, at least for this first version).</li>\n</ul>\n<p>####To do\nVideo para mostrar a otras personas como colaborar con la traducción y revisión de los archivos.</p>\n<p>####To discuss\nGénero a usar? ejem: “Una de las mejores maneras de mantenerte <strong>motivado</strong> cuando estás aprendiendo…”</p>\n<ul>\n<li>“motivado o motivada” (ambos?)</li>\n</ul>\n"}},function(e,n){e.exports={title:"Start Here",order:5,body:'<h1>If you’re new to Free Code Camp, or just new to the wiki, start here:</h1>\n<h2>Curriculum</h2>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/What-you-will-learn,-and-in-what-sequence-you-will-learn-it">What you will learn, and in what sequence you will learn it</a></li>\n<li><a href="https://freecodecamp.com/wiki/How-Long-Free-Code-Camp-Takes">How long does Free Code Camp take?</a></li>\n<li><a href="https://freecodecamp.com/wiki/Brownie-Points">What are these brownie points?</a></li>\n<li><a href="https://freecodecamp.com/wiki/Free-Code-Camp-Front-End-Development-Certificate">The Front End Development Certificate</a></li>\n<li>The Data Visualization Certificate</li>\n<li>The Back End Development Certificate</li>\n<li><a href="https://freecodecamp.com/wiki/Free-Code-Camp-Full-Stack-Development-Certificate">The Full Stack Development Certificate</a></li>\n<li>The Coding Interview Preparation</li>\n<li><a href="https://freecodecamp.com/wiki/Guide-to-Back-End-Projects-Table-of-Contents">Guide to Back End Projects</a></li>\n<li><a href="https://freecodecamp.com/wiki/Back-End-Project-Resources">Back End Project Resources</a></li>\n<li><a href="https://freecodecamp.com/wiki/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python">Why JavaScript?</a></li>\n</ul>\n<h2>Community</h2>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Code-of-Conduct">Code of Conduct</a></li>\n<li><a href="https://freecodecamp.com/wiki/Camper-News">Camper News</a></li>\n<li><a href="https://freecodecamp.com/wiki/Campsites">Campsites</a></li>\n<li><a href="https://freecodecamp.com/wiki/Official-Free-Code-Camp-Chat-Rooms">Official Chat Rooms</a></li>\n<li><a href="https://freecodecamp.com/wiki/camperbot">How to use CamperBot</a></li>\n<li><a href="https://freecodecamp.com/wiki/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile">Join the LinkedIn Community and Find Alumni</a></li>\n<li><a href="https://freecodecamp.com/wiki/How-you-can-stream-your-live-coding-sessions-on-the-Free-Code-Camp-Twitch.tv-channel">Stream your Coding Session on our Twitch.tv page</a></li>\n</ul>\n<h2>Nonprofit</h2>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/How-FreeCodeCamp-Nonprofit-Projects-work">How Nonprofit Projects Work</a></li>\n<li><a href="https://freecodecamp.com/wiki/Free-Code-Camp-completion-language-requirements">Natural Language Requirements</a></li>\n<li><a href="https://freecodecamp.com/wiki/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits">Resources that Free Code Camp recommends to Nonprofits Who Don’t Qualify</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Using Github Pages for your front end development projects",order:5,body:'<p>@freecodecamp <a href="https://twitter.com/FreeCodeCamp/status/648707819965837312">asked me nicely</a> to explain how I use github (and github pages) instead of codepen for my front-end projects. Here’s the how and why of it, starting with why.</p>\n<h1>Benefits</h1>\n<p>I love <a href="http://Codepen.io">Codepen.io</a>, it’s a wonderful, easy-to-use tool for simple front-end experimentation. But as the fcc projects got more complex, I realized coding locally was going to save me a bunch of headaches. My text-editor and <a href="https://incident57.com/codekit/">codekit</a> combo are just waaay faster.</p>\n<ul>\n<li>Autocomplete</li>\n<li>Compile everything (codepen was really dragging trying to compile Jade)</li>\n<li>Better auto-refresh</li>\n<li>Built in bower</li>\n<li>Git versioning</li>\n<li>Improved screen real-estate experience</li>\n</ul>\n<h1>Git to Github</h1>\n<p>Since I’m already saving locally, and using git for version control, I figured might as well upload to Github. Plus, Github has a fantastic, free service for front-end projects called <a href="https://pages.github.com/">Github Pages</a>. Just update your repo and your changes are live.</p>\n<p>How it works is simple. Github checks if your repository has a branch called <code>gh-pages</code> and serves any code that’s sitting in that branch. No back-end stuff here, but HTML, CSS and JS work like a charm.</p>\n<h1>Make it Work</h1>\n<h2>First things first</h2>\n<p>Let’s make a new folder for your project. I’ll use the <a href="http://www.freecodecamp.com/challenges/stylize-stories-on-camper-news">Camper News</a> project as my example.</p>\n<p>Got to your work directory and make a new one. You can do this in the terminal (or not).</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_06_PM.png" alt="Project Directory"></p>\n<p>Now, go into the project directory, and (for sure in the terminal this time) use the command <code>git init</code>. Note, this tutorial assumes <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">you have git installed</a>.</p>\n<p>Alright, awesome. Now we’re ready to work.</p>\n<h2>Next steps</h2>\n<p>Create some files in your campNews directory. I don’t know, maybe an index.html and probably app.css and app.js, or whatever naming convention you prefer. Put your code in these files. Alright, now we’re ready for our first commit. It takes <strong>two steps</strong>.</p>\n<ol>\n<li><code>git add -A</code> will prep all these new files and the new code inside them</li>\n<li><code>git commit -m \'relevant message\'</code> will commit all the work you’ve done to the branch you’re currently on (‘master’ by default)</li>\n</ol>\n<h2>The key to this whole thing</h2>\n<p>OK, so far we’re still local. There’s some stuff we gotta do to take our work and move it to github. It’s at this point I like to switch branches. Remember - github only serves from gh-pages, and if you’ve followed along so far, your branch is called ‘master’. Let’s make a new (local) gh-pages branch.</p>\n<p><code>git checkout -b gh-pages</code> will create it, copy all the work from master into gh-pages and switch me over to the branch. Phew.</p>\n<p><code>git branch -d master</code> will get rid of the master branch. Sounds crazy I know, but what do we need it for? Just think of gh-pages as your NEW master branch.</p>\n<p>Now, <code>git add -A</code> and <code>git commit -m \'relevant message\'</code> again, just in case. And be prepared to leave your editor and terminal and go online for the first time.</p>\n<p>Go to your github profile and create a new repo. Name it something relevant, like campNews.</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_49_PM.png" alt="New Repo"></p>\n<p>Once it’s created, go in and grab the HTTPS clone URL. (Ignore the files in my screenshot, your repo will be empty at this point).</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_51_PM.png" alt="clone url"></p>\n<h2>Putting it all together</h2>\n<p>And you can leave the online world. Back to the terminal! Let’s connect our local project to this github repo. All it takes is one command.</p>\n<p><code>git remote add origin &lt;server&gt;</code> Just replace server with the HTTPS url you just copied. So my command looks like this:</p>\n<p><code>git remote add origin https://github.com/gkobilansky/campNews.git</code>.</p>\n<p>OK, so far we’ve:</p>\n<ol>\n<li>Created our project</li>\n<li>Versioned it in git</li>\n<li>Commited some changes</li>\n<li>Switched it to the ‘gh-pages’ branch</li>\n<li>Connected it to github</li>\n</ol>\n<h2>Last step!</h2>\n<p>Push you project to github. Again, simple:</p>\n<p><code>git push origin gh-pages</code></p>\n<p>That command will make sure your latest commits get uploaded to github. Once you’ve done this at least once, your project should be available <a href="http://*username*.github.io/*repository*">http://<em>username</em>.github.io/<em>repository</em></a>, so for me it’s <a href="http://gkobilansky.github.io/campNews">http://gkobilansky.github.io/campNews</a>.</p>\n<p>Once this is all done, the process just repeats itself:</p>\n<ol>\n<li><code>git add -A</code></li>\n<li><code>git commit -m \'relevant message\'</code></li>\n<li><code>git push origin gh-pages</code></li>\n</ol>\n<p>Granted, steeper learning curve than <a href="http://codepen.io">codepen.io</a>, but faster and more flexible once you get the hang of it.</p>\n<p>Happy coding!</p>\n<p>PS. Thanks to <a href="http://rogerdudler.github.io/git-guide/">this guide</a> by Roger Dudler for keeping things simple.</p>\n'}},function(e,n){e.exports={title:"What the style guide for Algorithms is",order:5,body:"<p>Writing Algorithm challenges is a great way to exercise your own problem solving and testing abilities. Follow this process closely to maximize the chances of us accepting your Algorithm.</p>\n<ul>\n<li>Fork the Free Code Camp repository and open <code>seed_data/Algorithms.json</code> to become familiar with the format of our Algorithms.</li>\n<li>Regardless of your Algorithm’s difficulty, put it as the last Algorithm in the JSON file. Change one of the numbers in the ID to ensure that your Algorithm has a unique ID.</li>\n<li>In the terminal, run <code>node seed_data/seed.js</code>. Run <code>gulp</code>. You should be able to navigate to your new Algorithm in the challenge map. Whenever you make a change to Algorithm.json, you’ll need to reseed in order to see these changes in the browser.</li>\n<li>Solve your own Algorithm. Confirm that your tests work as expected and that your instructions are sufficiently clear.</li>\n<li>Submit a pull request to Free Code Camp’s Staging branch and in the pull request body, link to a gist that has your algorithmic solution.</li>\n</ul>\n<p>Here is a description of each of the Algorithms’ fields.</p>\n<ul>\n<li>Name - The name of your challenge. It’s OK for this to be humorous but it must be brief and relevant to the task.</li>\n<li>Difficulty - Attempt to rate difficulty compared against existing Algorithm challenges. A good proxy for the difficulty of a Algorithm is how long it takes you to solve it. For every 15 minutes it takes, increase the difficulty. For example, a one-hour Algorithm should probably be a 4.</li>\n<li>Description- Separate paragraphs with a line break. Only the first paragraph is visible prior to a user before they click the the ‘More information’ button. All necessary information must be included in the first paragraph. Write this first paragraph as succinctly as possible. Subsequent paragraphs should offer hints or details if needed. If your subject matter warrants deeper understanding, you may link to Wikipedia.</li>\n<li>Challenge Seed - This is where you set up what will be in the editor when the camper starts the Algorithm.</li>\n<li>Tests - These tests are what bring your challenge to life. Without them, we cannot confirm the accuracy of a user’s submitted answer. Choose your tests wisely. Algorithm tests are written using the Chai.js assertion library. Please use the should and expect syntax for end user readability. As an example of what not do to, many of the original Algorithm challenges are written with assert syntax and many of the test cases are difficult to read. If your Algorithm question has a lot of edge cases, you will need to write many tests for full coverage. If you find yourself writing more tests than you desire, you may consider simplifying the requirements of your Algorithm challenge. For difficulty level 1 through 3, you will generally only need 2 to 4 tests.</li>\n<li>MDNlinks- Take a look at <code>seed_data/bonfireMDNlinks.js</code>. If any of these concepts are relevant to your Algorithm, be sure to include them. If you know of an MDN article that isn’t linked here, you can add it to the bonfireMDNlinks.js file before adding it to your Algorithm.</li>\n</ul>\n"}},function(e,n){e.exports={title:"Why You Should Try Pair Programming",order:5,body:'<h4>When I started working through my first Algorithms, I was really scared of speaking to strangers. What would this person think about me?</h4>\n<p>Would I even be able to write good code with someone watching me?</p>\n<p>Now, some weeks later I’ve pair programmed and reviewed code with more than 40 campers and let me tell you: it’s not as scary as it seems.\nIt’s perfectly normal to feel that way. Most of the campers that I’ve talked to agree that they were nervous too.</p>\n<p><strong>Here are a few good reasons to try pair programming</strong> (I wish I knew this when I started…):</p>\n<h3>You can…</h3>\n<ul>\n<li>Build your professional network</li>\n<li>Meet new friends - develop a support group</li>\n<li>Improve social skills</li>\n<li>Get motivation and encouragement from fellow campers</li>\n<li>See other’s coding styles</li>\n<li>Learn from each other</li>\n<li>Strengthen your strengths and get help finding and improving your weaknesses</li>\n<li>Pair with <strong>more</strong> experienced dev to <strong>improve your skills</strong></li>\n<li>Pair with <strong>less</strong> experienced dev to <strong>test your knowledge</strong></li>\n<li>Gain a new skill that will be useful for interviews and employment down the road</li>\n</ul>\n<p>With the right person, pair programming is one of the best ways to learn at the same time as you make new friends!\n<a href="https://freecodecamp.com/wiki/Tips-on-How-To-Become-A-Good-Pair-Programmer">You might also want to know how you could be a good pair programmer!</a></p>\n<p>// Samuel (gr33n) with help from Ryan (rsprice)</p>\n'}},function(e,n){e.exports={title:"Wiki Style Guide",order:5,body:'<p>###“Wiki” is a Hawaiian word meaning “quick”. Keep this in mind when creating wiki articles.</p>\n<p>We are always happy to help new contributors write, edit, and localize our wiki articles. Help us make Free Code Camp the best it can be.</p>\n<p>You can create a new wiki page by clicking the “New Page” button at top right.</p>\n<p>Keep your wiki articles short and focused.</p>\n<p>You can include images if they help you better communicate your subject.</p>\n<h4>Use descriptive, punctuation-free titles that follow a name convention as <code>Name of Page</code>.</h4>\n<p>Our wiki articles are <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">written in GitHub-flavor Markdown</a>.</p>\n<ul>\n<li><a href="https://freecodecamp.com/wiki/Algorithm-Style-Guide">Algorithm Style Guide</a></li>\n</ul>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/rafase282">@rafase282</a> in <a href="https://freecodecamp.com/wiki/Gitter">Gitter</a></p>\n<p>We look forward to wiki-ing with you!</p>\n'}},function(e,n,t){(function(n){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o=t(2),r=a(o),l=t(155),i=t(288),c=t(265),p=(a(c),t(250)),h=a(p),d=t(319),u=(a(d),t(320)),m=(a(u),t(256)),f=(a(m),t(259)),g=t(264),w=a(g);t(327),t(331);var y=w["default"].rhythm;w["default"].fontSizeToPx;e.exports=r["default"].createClass({displayName:"exports",mixins:[l.State,l.Navigation],getInitialState:function(){return{filterText:""}},handleTopicChange:function(e){return this.transitionTo(e.target.value)},handleSearchChange:function(e){this.setState({filterText:this.refs.filterTextInput.value})},render:function(){var e,t,a,o=new RegExp("^/"+n.slice(0,2));return e=(0,f.templateChildrenPages)(n,this.props.state).map(function(e){return{title:e.data.title,order:e.data.order,path:e.path}}).filter(function(e){return o.test(e.path)}),e=(0,h["default"])(e,function(e){return e.order}),t=e.map(function(e){return r["default"].createElement("option",{key:e.path,value:e.path},e.title)}),a=e.filter(function(e){if(this.state.filterText.length>0){var n=new RegExp(this.state.filterText,"i");return n.test(e.title)}return!0},this).map(function(e){return function(n){var t;return t=e.isActive((0,f.link)(n.path)),r["default"].createElement("li",{key:n.path,style:{marginBottom:y(.5)}},r["default"].createElement(l.Link,{to:(0,f.link)(n.path)},t?r["default"].createElement("strong",null,n.title):n.title))}}(this)),r["default"].createElement("div",null,r["default"].createElement(i.Breakpoint,{minWidth:700},r["default"].createElement("div",{className:"wikiAside"},r["default"].createElement("div",{className:"searchBar"},r["default"].createElement("input",{type:"text",value:this.props.filterText,ref:"filterTextInput",onChange:this.handleSearchChange,placeholder:"Article search"})),r["default"].createElement("div",{className:"articlesList"},r["default"].createElement("ul",null,a))),r["default"].createElement("div",{className:"articleContent"},r["default"].createElement(l.RouteHandler,s({typography:w["default"]},this.props)))),r["default"].createElement(i.Breakpoint,{maxWidth:700},r["default"].createElement("div",{className:"searchBar"},r["default"].createElement("input",{type:"text",value:this.props.filterText,ref:"filterTextInput",onChange:this.handleSearchChange,placeholder:"Article search"})),r["default"].createElement("div",{className:"wikiSelector"},r["default"].createElement("select",{defaultValue:this.props.state.path,onChange:this.handleTopicChange},t)),r["default"].createElement("div",{className:"articleContent"},r["default"].createElement(l.RouteHandler,s({typography:w["default"]},this.props)))))}})}).call(n,"en/_template.jsx")},function(e,n){e.exports={title:"bot announce",order:5,body:'<h2>Announcing CamperBot!</h2>\n<p>CamperBot is our new AI friend who’s going to make the FCC chatrooms more fun.\nHe can get info from the wiki, share Algorithm hints, and help you get brownie points for helping people!</p>\n<p><a href="https://twitter.com/FreeCodeCamp/status/627338604134559744">https://twitter.com/FreeCodeCamp/status/627338604134559744</a></p>\n<h3>beta testing</h3>\n<p>Currently in beta test in the #HelpBonfires channel. Try it out here:\n<a href="https://gitter.im/FreeCodeCamp/HelpBonfires">https://gitter.im/FreeCodeCamp/HelpBonfires</a></p>\n<h3>read about what CamperBot features</h3>\n<p><a href="https://freecodecamp.com/wiki/camperbot">https://freecodecamp.com/wiki/camperbot</a></p>\n<h3>talk to the Dev Team</h3>\n<p><a href="https://gitter.im/dcsan/gitterbot">https://gitter.im/dcsan/gitterbot</a></p>\n'}},function(e,n){e.exports={title:"camperbot",order:5,body:'<p>Hi, I’m <strong><a href="https://freecodecamp.com/wiki/camperbot">CamperBot</a></strong>! I can help you in this chatroom :smile:</p>\n<h3>Basic Commands:</h3>\n<ul>\n<li><code>find TOPIC</code>  find all entries about topic. ex: <code>find js</code></li>\n<li><code>wiki TOPIC</code> show contents of topic page</li>\n<li><code>thanks @username</code>  send brownie points to another user</li>\n<li><code>about @username</code>   shows info on that user</li>\n<li><code>Algorithm BONFIRENAME</code> info on a Algorithm</li>\n</ul>\n<p>:speech_balloon: <a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">meet CamperBot in this room!</a></p>\n<h2>Example Commands</h2>\n<pre><code>find js   # <span class="hljs-built_in">all</span> JS entries\nwiki muta  # first <span class="hljs-built_in">entry</span> with muta <span class="hljs-type">in</span> <span class="hljs-keyword">name</span>\nwiki bobbytables  # showing images\nwiki video  # and video\nrollem    # secret sauce\nAlgorithm roman   # <span class="hljs-built_in">any</span> Algorithm with roman <span class="hljs-type">in</span> <span class="hljs-keyword">name</span>\n</code></pre>\n<p>For playing with CamperBot please use the testing channel:\n<a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">https://gitter.im/FreeCodeCamp/camperbotPlayground</a></p>\n<h2>Help on Algorithms</h2>\n<p>Live currently on the HelpBonFires channel on Gitter\n<a href="https://gitter.im/FreeCodeCamp/HelpBonfires">https://gitter.im/FreeCodeCamp/HelpBonfires</a></p>\n<p>We’ve added some Algorithm specific commands. If you type <code>Algorithm $BONFIRENAME</code> (where $BONFIRENAME is part of a Algorithm name) it will set the chat to be about that Algorithm. Then you can use some other Algorithm specific commands:</p>\n<ul>\n<li>bf details - more info</li>\n<li>bf spoiler - show some hints</li>\n</ul>\n<h2>More  commands</h2>\n<ul>\n<li><code>update</code>  pulls new wiki edits asap</li>\n<li><code>topics</code> selected pages from the wiki</li>\n<li><code>rooms</code>  all rooms the bot is in</li>\n<li><code>archives</code> show history</li>\n<li><code>music</code> deprecated, plug DJ no longer exists.</li>\n<li><code>twitch</code> show the twitch feed</li>\n</ul>\n<h2>Content for the wiki</h2>\n<p>Feel free to make new pages, an example entry is here:\n<a href="https://freecodecamp.com/wiki/example">https://freecodecamp.com/wiki/example</a></p>\n<h2>Source Repository</h2>\n<h3><a href="https://github.com/FreeCodeCamp/camperbot">https://github.com/FreeCodeCamp/camperbot</a></h3>\n<p>Fork it and have fun!</p>\n<h2>Roadmap</h2>\n<p>We’re looking for ideas for new features to add, and some people to help working on the bot.\nHave a look at Tickets with <a href="https://github.com/FreeCodeCamp/camperbot/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22">help wanted</a> on the repo and maybe you can contribute?</p>\n<p>In future, we’re planning:</p>\n<ul>\n<li>Algorithm step-by-step tutorials will be available via chat and from the CamperBot</li>\n<li>realtime tagging and searching of chats by topic</li>\n<li>a scripting language and natural language processing\nGet involved and let us know what you’d like to see next!</li>\n</ul>\n<h2>Developer Chatroom</h2>\n<ul>\n<li><a href="https://gitter.im/FreeCodeCamp/camperbot">Join us on our repository chat room</a> to discuss new features. Perhaps we can pair up to work on the bot 2.0!</li>\n<li><a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">Join this chat room</a> to mess around with the CamperBot and try out commands, proofread your edits to wiki content etc.</li>\n</ul>\n<p><img src="https://avatars1.githubusercontent.com/camperbot?&amp;s=100" alt="enjoy"> Happy Coding!</p>\n'}},function(e,n){e.exports={title:"html elements",order:5,body:'<p>Most HTML elements have an opening tag and a closing tag. Opening tags look like this: <code>&lt;h1&gt;</code>.</p>\n<p>Closing tags look like this: <code>&lt;/h1&gt;</code>.</p>\n<p>Note that the only difference between opening and closing tags is that closing tags have a slash after their opening angle bracket.</p>\n<p>Try it here! <a href="http://www.freecodecamp.com/challenges/say-hello-to-html-elements">http://www.freecodecamp.com/challenges/say-hello-to-html-elements</a></p>\n'}},function(e,n){e.exports={title:"Welcome to the Free Code Camp Wiki",order:0,body:'<h1>Welcome to the Free Code Camp Wiki!</h1>\n<p>Our open source community’s Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:</p>\n<ul>\n<li>Curriculum</li>\n<li>Local Campsite Communities</li>\n<li>Nonprofit Projects</li>\n</ul>\n<p><img src="http://i.imgur.com/gyJwzkx.png" alt="An illustration of CamperBot"></p>\n<p>The best way to access this wiki is via <a href="https://freecodecamp.com/wiki/camperbot">CamperBot</a>, located in our Gitter channels. CamperBot is a community designed tool useful for accessing our wiki content without ever leaving Gitter.</p>\n<p>To contribute a wiki article for any of the Algorithms, please use this <a href="https://freecodecamp.com/wiki/Algorithm-Wiki-Template">template</a>. This is essential for <a href="https://github.com/camperbot">@CamperBot</a> to retrieve the article. Algorithm articles that do not use this template will be removed.</p>\n<p>You will then need to fork the <a href="https://github.com/FreeCodeCamp/wiki">wiki</a> and create a branch where you will make your changes to later submit a pull request to be merged before the changes goes live on the wiki. This is to filter any spam content or damage to <strong>our</strong> wiki. Detailed instructions with graphics found here: <a href="https://freecodecamp.com/wiki/How-To-Contribute-To-The-Wiki">How To Contribute To The Wiki.</a></p>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a>.</p>\n<p>We look forward to collaborating with you on expanding and improving this wiki!</p>\n'}},function(e,n){e.exports={title:"js Array prototype filter",order:5,body:'<h1>Array.prototype.filter()</h1>\n<p>The <code>filter()</code> method creates a new array with all elements that pass the test implemented by the provided function</p>\n<pre><code class="language-js">arr.filter(callback[, thisArg])\n</code></pre>\n<h2>filter() Parameters</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Required</td>\n<td>arr</td>\n<td>Array being filtered</td>\n</tr>\n<tr>\n<td>Required</td>\n<td>callback</td>\n<td>Function with 3 arguments (element, index, array)</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>thisArg</td>\n<td>Value of <em>this</em> while executing callback</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Return:</strong> A new array that contains all the values for which the callback function returns true. If the callback function returns false for all elements of arr, the length of the new array is 0.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">MDN link</a> | <a href="https://msdn.microsoft.com/library/ff679973%28v=vs.94%29.aspx?f=255&amp;MSPPError=-2147217396">MSDN link</a></p>\n<h2>Callback Parameters</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Optional</td>\n<td>element</td>\n<td>current element of array being filtered</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>index</td>\n<td>current index of array being filtered</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>array</td>\n<td>current array being filtered</td>\n</tr>\n</tbody>\n</table>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-comment">// Define a callback function.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckIfPrime</span>(<span class="hljs-params">value, index, ar</span>) </span>{\n    high = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(value)) + <span class="hljs-number">1</span>;\n    \n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> div = <span class="hljs-number">2</span>; div &lt;= high; div++) {\n        <span class="hljs-keyword">if</span> (value % div == <span class="hljs-number">0</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n        }\n    } \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n\n<span class="hljs-comment">// Create the original array.</span>\n<span class="hljs-keyword">var</span> numbers = [<span class="hljs-number">31</span>, <span class="hljs-number">33</span>, <span class="hljs-number">35</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">41</span>, <span class="hljs-number">43</span>, <span class="hljs-number">45</span>, <span class="hljs-number">47</span>, <span class="hljs-number">49</span>, <span class="hljs-number">51</span>, <span class="hljs-number">53</span>];\n\n<span class="hljs-comment">// Get the prime numbers that are in the original array. </span>\n<span class="hljs-keyword">var</span> primes = numbers.filter(CheckIfPrime);\n\n<span class="hljs-built_in">document</span>.write(primes);\n<span class="hljs-comment">// Output: 31,37,41,43,47,53</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Create the original array.</span>\n<span class="hljs-keyword">var</span> arr = [<span class="hljs-number">5</span>, <span class="hljs-string">"element"</span>, <span class="hljs-number">10</span>, <span class="hljs-string">"the"</span>, <span class="hljs-literal">true</span>];\n\n<span class="hljs-comment">// Create an array that contains the string</span>\n<span class="hljs-comment">// values that are in the original array.</span>\n<span class="hljs-keyword">var</span> result = arr.filter(\n    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{\n        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">typeof</span> value === <span class="hljs-string">\'string\'</span>);\n    }\n);\n\n<span class="hljs-built_in">document</span>.write(result);\n<span class="hljs-comment">// Output: element, the</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js for loop",order:5,body:'<h3>Syntax</h3>\n<blockquote>\n<p>for ([initialization]; [condition]; [final-expression]) <br/>\nstatement</p>\n</blockquote>\n<p>The javascript <code>for</code> statement consists of three expressions and a statement:</p>\n<ul>\n<li>initialization - Run before the first execution on the loop. This expression is commonly used to create counters. Variables created here are scoped to the loop. Once the loop has finished it’s execution they are destroyed.</li>\n<li>condition - Expression that is checked prior to the execution of every iteration. If omitted this expression evaluates to true;</li>\n<li>final-expression - Expression that is run after every iteration. Usually used to increment a counter.</li>\n<li>statement - Code to be repeated in the loop</li>\n</ul>\n<p>any of these three expressions or the statement can be omitted. For loops are commonly used to count a certain number of iterations to repeat a statement.</p>\n<h3>Common Pitfalls</h3>\n<p><strong>Exceeding the bounds of an array</strong></p>\n<p>When indexing over an array many times it is easy to exceed the bounds of the\narray (ex. try to reference the 4th element of a 3 element array).</p>\n<pre><code class="language-js"><span class="hljs-comment">// This will cause an error.</span>\n<span class="hljs-comment">// The bounds of the array will be exceeded.</span>\n<span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= arr.length; i++) {\n   <span class="hljs-built_in">console</span>.log(i);\n}\n\noutput:\n<span class="hljs-number">1</span>\n<span class="hljs-number">2</span>\n<span class="hljs-number">3</span>\n<span class="hljs-literal">undefined</span>\n</code></pre>\n<p>There are to ways to fix this code. Set the condition to either <code>i &lt; arr.length</code> or <code>i &lt;= arr.length - 1</code></p>\n<h3>Examples</h3>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">9</span>; i++) {\n   <span class="hljs-built_in">console</span>.log(i);\n   <span class="hljs-comment">// more statements</span>\n}\n\noutput:\n<span class="hljs-number">0</span>\n<span class="hljs-number">1</span>\n<span class="hljs-number">2</span>\n<span class="hljs-number">3</span>\n<span class="hljs-number">4</span>\n<span class="hljs-number">5</span>\n<span class="hljs-number">6</span>\n<span class="hljs-number">7</span>\n<span class="hljs-number">8</span>\n</code></pre>\n<p>links: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">MDN</a></p>\n<p>related: js-loops</p>\n'
}},function(e,n){e.exports={title:"js for of loop",order:5,body:'<p>The <code>for..of</code> statement creates a loop iterating over iterable objects (including Array, Map, Set, Arguments object and so on), invoking a custom iteration hook with statements to be executed for the value of each distinct property.</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (variable <span class="hljs-keyword">of</span> object) {\n  statement\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>variable</td>\n<td>On each iteration a value of a different property is assigned to variable.</td>\n</tr>\n<tr>\n<td>object</td>\n<td>Object whose enumerable properties are iterated.</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of">MDN link</a> | <a href="https://msdn.microsoft.com/library/dn858238%28v=vs.94%29.aspx?f=255&amp;MSPPError=-2147217396">MSDN link</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/@@iterator">arguments[@@iterator]()</a></p>\n<h2>Examples</h2>\n<h3>Array</h3>\n<pre><code class="language-js"><span class="hljs-keyword">let</span> arr = [ <span class="hljs-string">"fred"</span>, <span class="hljs-string">"tom"</span>, <span class="hljs-string">"bob"</span> ];\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> arr) {\n    <span class="hljs-built_in">console</span>.log(i);\n}\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// fred</span>\n<span class="hljs-comment">// tom</span>\n<span class="hljs-comment">// bob</span>\n</code></pre>\n<h3>Map</h3>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> m = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();\nm.set(<span class="hljs-number">1</span>, <span class="hljs-string">"black"</span>);\nm.set(<span class="hljs-number">2</span>, <span class="hljs-string">"red"</span>);\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n <span class="hljs-keyword">of</span> m) {\n<span class="hljs-built_in">console</span>.log(n);\n}\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 1,black</span>\n<span class="hljs-comment">// 2,red</span>\n</code></pre>\n<h3>Set</h3>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>();\ns.add(<span class="hljs-number">1</span>);\ns.add(<span class="hljs-string">"red"</span>);\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n <span class="hljs-keyword">of</span> s) {\n<span class="hljs-built_in">console</span>.log(n);\n}\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 1</span>\n<span class="hljs-comment">// red</span>\n</code></pre>\n<h3>Arguments object</h3>\n<pre><code class="language-js"><span class="hljs-comment">// your browser must support for..of loop</span>\n<span class="hljs-comment">// and let-scoped variables in for loops</span>\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DisplayArgumentsObject</span>(<span class="hljs-params"></span>)\n</span>{\n	<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n <span class="hljs-keyword">of</span> <span class="hljs-built_in">arguments</span>) {\n	<span class="hljs-built_in">console</span>.log(n);\n	}\n}\n\nDisplayArgumentsObject(<span class="hljs-number">1</span>,<span class="hljs-string">"red"</span>);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 1</span>\n<span class="hljs-comment">// red</span>\n</code></pre>\n'}},672,function(e,n){e.exports={title:"Welcome to the Free Code Camp Wiki",order:0,body:'<h1>Spanish Top Page</h1>\n<p>Our open source community’s Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:</p>\n<ul>\n<li>Curriculum</li>\n<li>Local Campsite Communities</li>\n<li>Nonprofit Projects</li>\n</ul>\n<p><img src="http://i.imgur.com/gyJwzkx.png" alt="An illustration of CamperBot"></p>\n<p>The best way to access this wiki is via <a href="https://freecodecamp.com/wiki/camperbot">CamperBot</a>, located in our Gitter channels. CamperBot is a community designed tool useful for accessing our wiki content without ever leaving Gitter.</p>\n<p>To contribute a wiki article for any of the bonfires, please use this <a href="https://freecodecamp.com/wiki/Bonfire-Wiki-Template">template</a>. This is essential for <a href="https://github.com/camperbot">@CamperBot</a> to retrieve the article. Bonfire articles that do not use this template will be removed.</p>\n<p>You will then need to fork the <a href="https://github.com/FreeCodeCamp/wiki">wiki</a> and create a branch where you will make your changes to later submit a pull request to be merged before the changes goes live on the wiki. This is to filter any spam content or damage to <strong>our</strong> wiki. Detailed instructions with graphics found here: <a href="https://freecodecamp.com/wiki/How-To-Contribute-To-The-Wiki">How To Contribute To The Wiki.</a></p>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a>.</p>\n<p>We look forward to collaborating with you on expanding and improving this wiki!</p>\n'}},function(e,n){e.exports={title:"Welcome to the Free Code Camp Wiki!",body:'<p>Our open source community’s Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:</p>\n<ul>\n<li>Curriculum</li>\n<li>Local Campsite Communities</li>\n<li>Nonprofit Projects</li>\n</ul>\n<p><img src="http://i.imgur.com/gyJwzkx.png" alt="An illustration of CamperBot"></p>\n<p>The best way to access this wiki is via <a href="http://beta.freecodecamp.com/wiki/docs/camperbot">CamperBot</a>, located in our Gitter channels. CamperBot is a community designed tool useful for accessing our wiki content without ever leaving Gitter.</p>\n<p>To contribute a wiki article for any of the bonfires, please use this <a href="http://beta.freecodecamp.com/wiki/docs/Bonfire-Wiki-Template">template</a>. This is essential for <a href="https://github.com/camperbot">@CamperBot</a> to retrieve the article. Bonfire articles that do not use this template will be removed.</p>\n<p>You will then need to clone the <a href="http://beta.freecodecamp.com/wiki/docs">wiki</a> and create a branch where you will make your changes and submmit a pull request to be merged before the changes goes live on the wiki. This is to filter any spam content or damage to <strong>our</strong> wiki.</p>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a>.</p>\n<p>We look forward to collaborating with you on expanding and improving this wiki!</p>\n'}}]));
//# sourceMappingURL=bundle.js.map