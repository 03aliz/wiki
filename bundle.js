!function(e){function n(a){if(t[a])return t[a].exports;var s=t[a]={exports:{},id:a,loaded:!1};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){e.exports=t(1)},function(e,n,t){"use strict";function a(e){t(258);return e()}var s=t(2),o=t(154),r=t(155),i=t(197),l=t(246),p=t(249),c=t(284);t(260);a(function(){return c.loadContext(function(e){var n,a,d,h,u,m,f;return d=t(258),a=d.pages,n=d.config,h=d.relativePath,f=n.linkPrefix,f||(f=""),m=p(a,e),a=l(a,function(e){return null!=e.path}),u?u.replaceRoutes([c]):u=r.run([m],r.HistoryLocation,function(e,t){var r;return r=i(a,function(e){var n=f+e.path;return n===t.path||n===t.pathname}),c.onRouteChange&&c.onRouteChange(t,r,a,n),o.render(s.createElement(e,{config:n,pages:a,page:r,state:t}),"undefined"!=typeof window?document.getElementById("react-mount"):void 0)})})})},function(e,n,t){"use strict";e.exports=t(3)},function(e,n,t){"use strict";var a=t(4),s=t(144),o=t(148),r=t(39),i=t(153),l={};r(l,o),r(l,{findDOMNode:i("findDOMNode","ReactDOM","react-dom",a,a.findDOMNode),render:i("render","ReactDOM","react-dom",a,a.render),unmountComponentAtNode:i("unmountComponentAtNode","ReactDOM","react-dom",a,a.unmountComponentAtNode),renderToString:i("renderToString","ReactDOMServer","react-dom/server",s,s.renderToString),renderToStaticMarkup:i("renderToStaticMarkup","ReactDOMServer","react-dom/server",s,s.renderToStaticMarkup)}),l.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=a,l.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=s,e.exports=l},function(e,n,t){"use strict";var a=t(5),s=t(6),o=t(71),r=t(45),i=t(28),l=t(18),p=t(50),c=t(54),d=t(142),h=t(91),u=t(143);t(25);o.inject();var m=l.measure("React","render",i.render),f={findDOMNode:h,render:m,unmountComponentAtNode:i.unmountComponentAtNode,version:d,unstable_batchedUpdates:c.batchedUpdates,unstable_renderSubtreeIntoContainer:u};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({CurrentOwner:a,InstanceHandles:r,Mount:i,Reconciler:p,TextComponent:s});e.exports=f},function(e,n){"use strict";var t={current:null};e.exports=t},function(e,n,t){"use strict";var a=t(7),s=t(22),o=t(26),r=t(28),i=t(39),l=t(21),p=t(20),c=(t(70),function(e){});i(c.prototype,{construct:function(e){this._currentElement=e,this._stringText=""+e,this._rootNodeID=null,this._mountIndex=0},mountComponent:function(e,n,t){if(this._rootNodeID=e,n.useCreateElement){var a=t[r.ownerDocumentContextKey],o=a.createElement("span");return s.setAttributeForID(o,e),r.getID(o),p(o,this._stringText),o}var i=l(this._stringText);return n.renderToStaticMarkup?i:"<span "+s.createMarkupForID(e)+">"+i+"</span>"},receiveComponent:function(e,n){if(e!==this._currentElement){this._currentElement=e;var t=""+e;if(t!==this._stringText){this._stringText=t;var s=r.getNode(this._rootNodeID);a.updateTextContent(s,t)}}},unmountComponent:function(){o.unmountIDFromEnvironment(this._rootNodeID)}}),e.exports=c},function(e,n,t){"use strict";function a(e,n,t){var a=t>=e.childNodes.length?null:e.childNodes.item(t);e.insertBefore(n,a)}var s=t(8),o=t(16),r=t(18),i=t(19),l=t(20),p=t(13),c={dangerouslyReplaceNodeWithMarkup:s.dangerouslyReplaceNodeWithMarkup,updateTextContent:l,processUpdates:function(e,n){for(var t,r=null,c=null,d=0;d<e.length;d++)if(t=e[d],t.type===o.MOVE_EXISTING||t.type===o.REMOVE_NODE){var h=t.fromIndex,u=t.parentNode.childNodes[h],m=t.parentID;u?void 0:p(!1),r=r||{},r[m]=r[m]||[],r[m][h]=u,c=c||[],c.push(u)}var f;if(f=n.length&&"string"==typeof n[0]?s.dangerouslyRenderMarkup(n):n,c)for(var g=0;g<c.length;g++)c[g].parentNode.removeChild(c[g]);for(var y=0;y<e.length;y++)switch(t=e[y],t.type){case o.INSERT_MARKUP:a(t.parentNode,f[t.markupIndex],t.toIndex);break;case o.MOVE_EXISTING:a(t.parentNode,r[t.parentID][t.fromIndex],t.toIndex);break;case o.SET_MARKUP:i(t.parentNode,t.content);break;case o.TEXT_CONTENT:l(t.parentNode,t.content);break;case o.REMOVE_NODE:}}};r.measureMethods(c,"DOMChildrenOperations",{updateTextContent:"updateTextContent"}),e.exports=c},function(e,n,t){"use strict";function a(e){return e.substring(1,e.indexOf(" "))}var s=t(9),o=t(10),r=t(15),i=t(14),l=t(13),p=/^(<[^ \/>]+)/,c="data-danger-index",d={dangerouslyRenderMarkup:function(e){s.canUseDOM?void 0:l(!1);for(var n,t={},d=0;d<e.length;d++)e[d]?void 0:l(!1),n=a(e[d]),n=i(n)?n:"*",t[n]=t[n]||[],t[n][d]=e[d];var h=[],u=0;for(n in t)if(t.hasOwnProperty(n)){var m,f=t[n];for(m in f)if(f.hasOwnProperty(m)){var g=f[m];f[m]=g.replace(p,"$1 "+c+'="'+m+'" ')}for(var y=o(f.join(""),r),b=0;b<y.length;++b){var w=y[b];w.hasAttribute&&w.hasAttribute(c)&&(m=+w.getAttribute(c),w.removeAttribute(c),h.hasOwnProperty(m)?l(!1):void 0,h[m]=w,u+=1)}}return u!==h.length?l(!1):void 0,h.length!==e.length?l(!1):void 0,h},dangerouslyReplaceNodeWithMarkup:function(e,n){s.canUseDOM?void 0:l(!1),n?void 0:l(!1),"html"===e.tagName.toLowerCase()?l(!1):void 0;var t;t="string"==typeof n?o(n,r)[0]:n,e.parentNode.replaceChild(t,e)}};e.exports=d},function(e,n){"use strict";var t=!("undefined"==typeof window||!window.document||!window.document.createElement),a={canUseDOM:t,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:t&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:t&&!!window.screen,isInWorker:!t};e.exports=a},function(e,n,t){"use strict";function a(e){var n=e.match(c);return n&&n[1].toLowerCase()}function s(e,n){var t=p;p?void 0:l(!1);var s=a(e),o=s&&i(s);if(o){t.innerHTML=o[1]+e+o[2];for(var c=o[0];c--;)t=t.lastChild}else t.innerHTML=e;var d=t.getElementsByTagName("script");d.length&&(n?void 0:l(!1),r(d).forEach(n));for(var h=r(t.childNodes);t.lastChild;)t.removeChild(t.lastChild);return h}var o=t(9),r=t(11),i=t(14),l=t(13),p=o.canUseDOM?document.createElement("div"):null,c=/^\s*<(\w+)/;e.exports=s},function(e,n,t){"use strict";function a(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function s(e){return a(e)?Array.isArray(e)?e.slice():o(e):[e]}var o=t(12);e.exports=s},function(e,n,t){"use strict";function a(e){var n=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?s(!1):void 0,"number"!=typeof n?s(!1):void 0,0===n||n-1 in e?void 0:s(!1),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(t){}for(var a=Array(n),o=0;n>o;o++)a[o]=e[o];return a}var s=t(13);e.exports=a},function(e,n,t){"use strict";var a=function(e,n,t,a,s,o,r,i){if(!e){var l;if(void 0===n)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var p=[t,a,s,o,r,i],c=0;l=new Error("Invariant Violation: "+n.replace(/%s/g,function(){return p[c++]}))}throw l.framesToPop=1,l}};e.exports=a},function(e,n,t){"use strict";function a(e){return r?void 0:o(!1),h.hasOwnProperty(e)||(e="*"),i.hasOwnProperty(e)||("*"===e?r.innerHTML="<link />":r.innerHTML="<"+e+"></"+e+">",i[e]=!r.firstChild),i[e]?h[e]:null}var s=t(9),o=t(13),r=s.canUseDOM?document.createElement("div"):null,i={},l=[1,'<select multiple="true">',"</select>"],p=[1,"<table>","</table>"],c=[3,"<table><tbody><tr>","</tr></tbody></table>"],d=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],h={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:l,option:l,caption:p,colgroup:p,tbody:p,tfoot:p,thead:p,td:c,th:c},u=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];u.forEach(function(e){h[e]=d,i[e]=!0}),e.exports=a},function(e,n){"use strict";function t(e){return function(){return e}}function a(){}a.thatReturns=t,a.thatReturnsFalse=t(!1),a.thatReturnsTrue=t(!0),a.thatReturnsNull=t(null),a.thatReturnsThis=function(){return this},a.thatReturnsArgument=function(e){return e},e.exports=a},function(e,n,t){"use strict";var a=t(17),s=a({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});e.exports=s},function(e,n,t){"use strict";var a=t(13),s=function(e){var n,t={};e instanceof Object&&!Array.isArray(e)?void 0:a(!1);for(n in e)e.hasOwnProperty(n)&&(t[n]=n);return t};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){return t}var s={enableMeasure:!1,storedMeasure:a,measureMethods:function(e,n,t){},measure:function(e,n,t){return t},injection:{injectMeasure:function(e){s.storedMeasure=e}}};e.exports=s},function(e,n,t){"use strict";var a=t(9),s=/^[ \r\n\t\f]/,o=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,r=function(e,n){e.innerHTML=n};if("undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction&&(r=function(e,n){MSApp.execUnsafeLocalFunction(function(){e.innerHTML=n})}),a.canUseDOM){var i=document.createElement("div");i.innerHTML=" ",""===i.innerHTML&&(r=function(e,n){if(e.parentNode&&e.parentNode.replaceChild(e,e),s.test(n)||"<"===n[0]&&o.test(n)){e.innerHTML=String.fromCharCode(65279)+n;var t=e.firstChild;1===t.data.length?e.removeChild(t):t.deleteData(0,1)}else e.innerHTML=n})}e.exports=r},function(e,n,t){"use strict";var a=t(9),s=t(21),o=t(19),r=function(e,n){e.textContent=n};a.canUseDOM&&("textContent"in document.documentElement||(r=function(e,n){o(e,s(n))})),e.exports=r},function(e,n){"use strict";function t(e){return s[e]}function a(e){return(""+e).replace(o,t)}var s={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},o=/[&><"']/g;e.exports=a},function(e,n,t){"use strict";function a(e){return c.hasOwnProperty(e)?!0:p.hasOwnProperty(e)?!1:l.test(e)?(c[e]=!0,!0):(p[e]=!0,!1)}function s(e,n){return null==n||e.hasBooleanValue&&!n||e.hasNumericValue&&isNaN(n)||e.hasPositiveNumericValue&&1>n||e.hasOverloadedBooleanValue&&n===!1}var o=t(23),r=t(18),i=t(24),l=(t(25),/^[a-zA-Z_][\w\.\-]*$/),p={},c={},d={createMarkupForID:function(e){return o.ID_ATTRIBUTE_NAME+"="+i(e)},setAttributeForID:function(e,n){e.setAttribute(o.ID_ATTRIBUTE_NAME,n)},createMarkupForProperty:function(e,n){var t=o.properties.hasOwnProperty(e)?o.properties[e]:null;if(t){if(s(t,n))return"";var a=t.attributeName;return t.hasBooleanValue||t.hasOverloadedBooleanValue&&n===!0?a+'=""':a+"="+i(n)}return o.isCustomAttribute(e)?null==n?"":e+"="+i(n):null},createMarkupForCustomAttribute:function(e,n){return a(e)&&null!=n?e+"="+i(n):""},setValueForProperty:function(e,n,t){var a=o.properties.hasOwnProperty(n)?o.properties[n]:null;if(a){var r=a.mutationMethod;if(r)r(e,t);else if(s(a,t))this.deleteValueForProperty(e,n);else if(a.mustUseAttribute){var i=a.attributeName,l=a.attributeNamespace;l?e.setAttributeNS(l,i,""+t):a.hasBooleanValue||a.hasOverloadedBooleanValue&&t===!0?e.setAttribute(i,""):e.setAttribute(i,""+t)}else{var p=a.propertyName;a.hasSideEffects&&""+e[p]==""+t||(e[p]=t)}}else o.isCustomAttribute(n)&&d.setValueForAttribute(e,n,t)},setValueForAttribute:function(e,n,t){a(n)&&(null==t?e.removeAttribute(n):e.setAttribute(n,""+t))},deleteValueForProperty:function(e,n){var t=o.properties.hasOwnProperty(n)?o.properties[n]:null;if(t){var a=t.mutationMethod;if(a)a(e,void 0);else if(t.mustUseAttribute)e.removeAttribute(t.attributeName);else{var s=t.propertyName,r=o.getDefaultValueForProperty(e.nodeName,s);t.hasSideEffects&&""+e[s]===r||(e[s]=r)}}else o.isCustomAttribute(n)&&e.removeAttribute(n)}};r.measureMethods(d,"DOMPropertyOperations",{setValueForProperty:"setValueForProperty",setValueForAttribute:"setValueForAttribute",deleteValueForProperty:"deleteValueForProperty"}),e.exports=d},function(e,n,t){"use strict";function a(e,n){return(e&n)===n}var s=t(13),o={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var n=o,t=e.Properties||{},r=e.DOMAttributeNamespaces||{},l=e.DOMAttributeNames||{},p=e.DOMPropertyNames||{},c=e.DOMMutationMethods||{};e.isCustomAttribute&&i._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var d in t){i.properties.hasOwnProperty(d)?s(!1):void 0;var h=d.toLowerCase(),u=t[d],m={attributeName:h,attributeNamespace:null,propertyName:d,mutationMethod:null,mustUseAttribute:a(u,n.MUST_USE_ATTRIBUTE),mustUseProperty:a(u,n.MUST_USE_PROPERTY),hasSideEffects:a(u,n.HAS_SIDE_EFFECTS),hasBooleanValue:a(u,n.HAS_BOOLEAN_VALUE),hasNumericValue:a(u,n.HAS_NUMERIC_VALUE),hasPositiveNumericValue:a(u,n.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:a(u,n.HAS_OVERLOADED_BOOLEAN_VALUE)};if(m.mustUseAttribute&&m.mustUseProperty?s(!1):void 0,!m.mustUseProperty&&m.hasSideEffects?s(!1):void 0,m.hasBooleanValue+m.hasNumericValue+m.hasOverloadedBooleanValue<=1?void 0:s(!1),l.hasOwnProperty(d)){var f=l[d];m.attributeName=f}r.hasOwnProperty(d)&&(m.attributeNamespace=r[d]),p.hasOwnProperty(d)&&(m.propertyName=p[d]),c.hasOwnProperty(d)&&(m.mutationMethod=c[d]),i.properties[d]=m}}},r={},i={ID_ATTRIBUTE_NAME:"data-reactid",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var n=0;n<i._isCustomAttributeFunctions.length;n++){var t=i._isCustomAttributeFunctions[n];if(t(e))return!0}return!1},getDefaultValueForProperty:function(e,n){var t,a=r[e];return a||(r[e]=a={}),n in a||(t=document.createElement(e),a[n]=t[n]),a[n]},injection:o};e.exports=i},function(e,n,t){"use strict";function a(e){return'"'+s(e)+'"'}var s=t(21);e.exports=a},function(e,n,t){"use strict";var a=t(15),s=a;e.exports=s},function(e,n,t){"use strict";var a=t(27),s=t(28),o={processChildrenUpdates:a.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkupByID:a.dangerouslyReplaceNodeWithMarkupByID,unmountIDFromEnvironment:function(e){s.purgeID(e)}};e.exports=o},function(e,n,t){"use strict";var a=t(7),s=t(22),o=t(28),r=t(18),i=t(13),l={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},p={updatePropertyByID:function(e,n,t){var a=o.getNode(e);l.hasOwnProperty(n)?i(!1):void 0,null!=t?s.setValueForProperty(a,n,t):s.deleteValueForProperty(a,n)},dangerouslyReplaceNodeWithMarkupByID:function(e,n){var t=o.getNode(e);a.dangerouslyReplaceNodeWithMarkup(t,n)},dangerouslyProcessChildrenUpdates:function(e,n){for(var t=0;t<e.length;t++)e[t].parentNode=o.getNode(e[t].parentID);a.processUpdates(e,n)}};r.measureMethods(p,"ReactDOMIDOperations",{dangerouslyReplaceNodeWithMarkupByID:"dangerouslyReplaceNodeWithMarkupByID",dangerouslyProcessChildrenUpdates:"dangerouslyProcessChildrenUpdates"}),e.exports=p},function(e,n,t){"use strict";function a(e,n){for(var t=Math.min(e.length,n.length),a=0;t>a;a++)if(e.charAt(a)!==n.charAt(a))return a;return e.length===n.length?-1:t}function s(e){return e?e.nodeType===U?e.documentElement:e.firstChild:null}function o(e){var n=s(e);return n&&Q.getID(n)}function r(e){var n=i(e);if(n)if(_.hasOwnProperty(n)){var t=_[n];t!==e&&(d(t,n)?M(!1):void 0,_[n]=e)}else _[n]=e;return n}function i(e){return e&&e.getAttribute&&e.getAttribute(D)||""}function l(e,n){var t=i(e);t!==n&&delete _[t],e.setAttribute(D,n),_[n]=e}function p(e){return _.hasOwnProperty(e)&&d(_[e],e)||(_[e]=Q.findReactNodeByID(e)),_[e]}function c(e){var n=W.get(e)._rootNodeID;return C.isNullComponentID(n)?null:(_.hasOwnProperty(n)&&d(_[n],n)||(_[n]=Q.findReactNodeByID(n)),_[n])}function d(e,n){if(e){i(e)!==n?M(!1):void 0;var t=Q.findReactContainerForID(n);if(t&&B(t,e))return!0}return!1}function h(e){delete _[e]}function u(e){var n=_[e];return n&&d(n,e)?void(Y=n):!1}function m(e){Y=null,S.traverseAncestors(e,u);var n=Y;return Y=null,n}function f(e,n,t,a,s,o){x.useCreateElement&&(o=F({},o),t.nodeType===U?o[G]=t:o[G]=t.ownerDocument);var r=P.mountComponent(e,n,a,o);e._renderedComponent._topLevelWrapper=e,Q._mountImageIntoNode(r,t,s,a)}function g(e,n,t,a,s){var o=I.ReactReconcileTransaction.getPooled(a);o.perform(f,null,e,n,t,o,a,s),I.ReactReconcileTransaction.release(o)}function y(e,n){for(P.unmountComponent(e),n.nodeType===U&&(n=n.documentElement);n.lastChild;)n.removeChild(n.lastChild)}function b(e){var n=o(e);return n?n!==S.getReactRootIDFromNodeID(n):!1}function w(e){for(;e&&e.parentNode!==e;e=e.parentNode)if(1===e.nodeType){var n=i(e);if(n){var t,a=S.getReactRootIDFromNodeID(n),s=e;do if(t=i(s),s=s.parentNode,null==s)return null;while(t!==a);if(s===z[a])return e}}return null}var j=t(23),v=t(29),x=(t(5),t(41)),k=t(42),C=t(44),S=t(45),W=t(47),T=t(48),A=t(18),P=t(50),E=t(53),I=t(54),F=t(39),R=t(58),B=t(59),O=t(62),M=t(13),N=t(19),q=t(67),D=(t(70),t(25),j.ID_ATTRIBUTE_NAME),_={},L=1,U=9,H=11,G="__ReactMount_ownerDocument$"+Math.random().toString(36).slice(2),J={},z={},$=[],Y=null,V=function(){};V.prototype.isReactComponent={},V.prototype.render=function(){return this.props};var Q={TopLevelWrapper:V,_instancesByReactRootID:J,scrollMonitor:function(e,n){n()},_updateRootComponent:function(e,n,t,a){return Q.scrollMonitor(t,function(){E.enqueueElementInternal(e,n),a&&E.enqueueCallbackInternal(e,a)}),e},_registerComponent:function(e,n){!n||n.nodeType!==L&&n.nodeType!==U&&n.nodeType!==H?M(!1):void 0,v.ensureScrollValueMonitoring();var t=Q.registerContainer(n);return J[t]=e,t},_renderNewRootComponent:function(e,n,t,a){var s=O(e,null),o=Q._registerComponent(s,n);return I.batchedUpdates(g,s,o,n,t,a),s},renderSubtreeIntoContainer:function(e,n,t,a){return null==e||null==e._reactInternalInstance?M(!1):void 0,Q._renderSubtreeIntoContainer(e,n,t,a)},_renderSubtreeIntoContainer:function(e,n,t,a){k.isValidElement(n)?void 0:M(!1);var r=new k(V,null,null,null,null,null,n),l=J[o(t)];if(l){var p=l._currentElement,c=p.props;if(q(c,n)){var d=l._renderedComponent.getPublicInstance(),h=a&&function(){a.call(d)};return Q._updateRootComponent(l,r,t,h),d}Q.unmountComponentAtNode(t)}var u=s(t),m=u&&!!i(u),f=b(t),g=m&&!l&&!f,y=Q._renderNewRootComponent(r,t,g,null!=e?e._reactInternalInstance._processChildContext(e._reactInternalInstance._context):R)._renderedComponent.getPublicInstance();return a&&a.call(y),y},render:function(e,n,t){return Q._renderSubtreeIntoContainer(null,e,n,t)},registerContainer:function(e){var n=o(e);return n&&(n=S.getReactRootIDFromNodeID(n)),n||(n=S.createReactRootID()),z[n]=e,n},unmountComponentAtNode:function(e){!e||e.nodeType!==L&&e.nodeType!==U&&e.nodeType!==H?M(!1):void 0;var n=o(e),t=J[n];if(!t){var a=(b(e),i(e));a&&a===S.getReactRootIDFromNodeID(a);return!1}return I.batchedUpdates(y,t,e),delete J[n],delete z[n],!0},findReactContainerForID:function(e){var n=S.getReactRootIDFromNodeID(e),t=z[n];return t},findReactNodeByID:function(e){var n=Q.findReactContainerForID(e);return Q.findComponentRoot(n,e)},getFirstReactDOM:function(e){return w(e)},findComponentRoot:function(e,n){var t=$,a=0,s=m(n)||e;for(t[0]=s.firstChild,t.length=1;a<t.length;){for(var o,r=t[a++];r;){var i=Q.getID(r);i?n===i?o=r:S.isAncestorIDOf(i,n)&&(t.length=a=0,t.push(r.firstChild)):t.push(r.firstChild),r=r.nextSibling}if(o)return t.length=0,o}t.length=0,M(!1)},_mountImageIntoNode:function(e,n,t,o){if(!n||n.nodeType!==L&&n.nodeType!==U&&n.nodeType!==H?M(!1):void 0,t){var r=s(n);if(T.canReuseMarkup(e,r))return;var i=r.getAttribute(T.CHECKSUM_ATTR_NAME);r.removeAttribute(T.CHECKSUM_ATTR_NAME);var l=r.outerHTML;r.setAttribute(T.CHECKSUM_ATTR_NAME,i);var p=e,c=a(p,l);" (client) "+p.substring(c-20,c+20)+"\n (server) "+l.substring(c-20,c+20);n.nodeType===U?M(!1):void 0}if(n.nodeType===U?M(!1):void 0,o.useCreateElement){for(;n.lastChild;)n.removeChild(n.lastChild);n.appendChild(e)}else N(n,e)},ownerDocumentContextKey:G,getReactRootID:o,getID:r,setID:l,getNode:p,getNodeFromInstance:c,isValid:d,purgeID:h};A.measureMethods(Q,"ReactMount",{_renderNewRootComponent:"_renderNewRootComponent",_mountImageIntoNode:"_mountImageIntoNode"}),e.exports=Q},function(e,n,t){"use strict";function a(e){return Object.prototype.hasOwnProperty.call(e,g)||(e[g]=m++,h[e[g]]={}),h[e[g]]}var s=t(30),o=t(31),r=t(32),i=t(37),l=t(18),p=t(38),c=t(39),d=t(40),h={},u=!1,m=0,f={topAbort:"abort",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},g="_reactListenersID"+String(Math.random()).slice(2),y=c({},i,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(y.handleTopLevel),y.ReactEventListener=e}},setEnabled:function(e){y.ReactEventListener&&y.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!y.ReactEventListener||!y.ReactEventListener.isEnabled())},listenTo:function(e,n){for(var t=n,o=a(t),i=r.registrationNameDependencies[e],l=s.topLevelTypes,p=0;p<i.length;p++){var c=i[p];o.hasOwnProperty(c)&&o[c]||(c===l.topWheel?d("wheel")?y.ReactEventListener.trapBubbledEvent(l.topWheel,"wheel",t):d("mousewheel")?y.ReactEventListener.trapBubbledEvent(l.topWheel,"mousewheel",t):y.ReactEventListener.trapBubbledEvent(l.topWheel,"DOMMouseScroll",t):c===l.topScroll?d("scroll",!0)?y.ReactEventListener.trapCapturedEvent(l.topScroll,"scroll",t):y.ReactEventListener.trapBubbledEvent(l.topScroll,"scroll",y.ReactEventListener.WINDOW_HANDLE):c===l.topFocus||c===l.topBlur?(d("focus",!0)?(y.ReactEventListener.trapCapturedEvent(l.topFocus,"focus",t),y.ReactEventListener.trapCapturedEvent(l.topBlur,"blur",t)):d("focusin")&&(y.ReactEventListener.trapBubbledEvent(l.topFocus,"focusin",t),y.ReactEventListener.trapBubbledEvent(l.topBlur,"focusout",t)),o[l.topBlur]=!0,o[l.topFocus]=!0):f.hasOwnProperty(c)&&y.ReactEventListener.trapBubbledEvent(c,f[c],t),o[c]=!0)}},trapBubbledEvent:function(e,n,t){return y.ReactEventListener.trapBubbledEvent(e,n,t)},trapCapturedEvent:function(e,n,t){return y.ReactEventListener.trapCapturedEvent(e,n,t)},ensureScrollValueMonitoring:function(){if(!u){var e=p.refreshScrollValues;y.ReactEventListener.monitorScrollValue(e),u=!0}},eventNameDispatchConfigs:o.eventNameDispatchConfigs,registrationNameModules:o.registrationNameModules,putListener:o.putListener,getListener:o.getListener,deleteListener:o.deleteListener,deleteAllListeners:o.deleteAllListeners});l.measureMethods(y,"ReactBrowserEventEmitter",{putListener:"putListener",deleteListener:"deleteListener"}),e.exports=y},function(e,n,t){"use strict";var a=t(17),s=a({bubbled:null,captured:null}),o=a({topAbort:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topVolumeChange:null,topWaiting:null,topWheel:null}),r={topLevelTypes:o,PropagationPhases:s};e.exports=r},function(e,n,t){"use strict";var a=t(32),s=t(33),o=t(34),r=t(35),i=t(36),l=t(13),p=(t(25),{}),c=null,d=function(e,n){e&&(s.executeDispatchesInOrder(e,n),e.isPersistent()||e.constructor.release(e))},h=function(e){return d(e,!0)},u=function(e){return d(e,!1)},m=null,f={injection:{injectMount:s.injection.injectMount,injectInstanceHandle:function(e){m=e},getInstanceHandle:function(){return m},injectEventPluginOrder:a.injectEventPluginOrder,injectEventPluginsByName:a.injectEventPluginsByName},eventNameDispatchConfigs:a.eventNameDispatchConfigs,registrationNameModules:a.registrationNameModules,putListener:function(e,n,t){"function"!=typeof t?l(!1):void 0;var s=p[n]||(p[n]={});s[e]=t;var o=a.registrationNameModules[n];o&&o.didPutListener&&o.didPutListener(e,n,t)},getListener:function(e,n){var t=p[n];return t&&t[e]},deleteListener:function(e,n){var t=a.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n);var s=p[n];s&&delete s[e]},deleteAllListeners:function(e){for(var n in p)if(p[n][e]){var t=a.registrationNameModules[n];t&&t.willDeleteListener&&t.willDeleteListener(e,n),delete p[n][e]}},extractEvents:function(e,n,t,s,o){for(var i,l=a.plugins,p=0;p<l.length;p++){var c=l[p];if(c){var d=c.extractEvents(e,n,t,s,o);d&&(i=r(i,d))}}return i},enqueueEvents:function(e){e&&(c=r(c,e))},processEventQueue:function(e){var n=c;c=null,e?i(n,h):i(n,u),c?l(!1):void 0,o.rethrowCaughtError()},__purge:function(){p={}},__getListenerBank:function(){return p}};e.exports=f},function(e,n,t){"use strict";function a(){if(i)for(var e in l){var n=l[e],t=i.indexOf(e);if(t>-1?void 0:r(!1),!p.plugins[t]){n.extractEvents?void 0:r(!1),p.plugins[t]=n;var a=n.eventTypes;for(var o in a)s(a[o],n,o)?void 0:r(!1)}}}function s(e,n,t){p.eventNameDispatchConfigs.hasOwnProperty(t)?r(!1):void 0,p.eventNameDispatchConfigs[t]=e;var a=e.phasedRegistrationNames;if(a){for(var s in a)if(a.hasOwnProperty(s)){var i=a[s];o(i,n,t)}return!0}return e.registrationName?(o(e.registrationName,n,t),!0):!1}function o(e,n,t){p.registrationNameModules[e]?r(!1):void 0,p.registrationNameModules[e]=n,p.registrationNameDependencies[e]=n.eventTypes[t].dependencies}var r=t(13),i=null,l={},p={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){i?r(!1):void 0,i=Array.prototype.slice.call(e),a()},injectEventPluginsByName:function(e){var n=!1;for(var t in e)if(e.hasOwnProperty(t)){var s=e[t];l.hasOwnProperty(t)&&l[t]===s||(l[t]?r(!1):void 0,l[t]=s,n=!0)}n&&a()},getPluginModuleForEvent:function(e){var n=e.dispatchConfig;if(n.registrationName)return p.registrationNameModules[n.registrationName]||null;for(var t in n.phasedRegistrationNames)if(n.phasedRegistrationNames.hasOwnProperty(t)){var a=p.registrationNameModules[n.phasedRegistrationNames[t]];if(a)return a}return null},_resetEventPlugins:function(){i=null;for(var e in l)l.hasOwnProperty(e)&&delete l[e];p.plugins.length=0;var n=p.eventNameDispatchConfigs;for(var t in n)n.hasOwnProperty(t)&&delete n[t];var a=p.registrationNameModules;for(var s in a)a.hasOwnProperty(s)&&delete a[s]}};e.exports=p},function(e,n,t){"use strict";function a(e){return e===g.topMouseUp||e===g.topTouchEnd||e===g.topTouchCancel}function s(e){return e===g.topMouseMove||e===g.topTouchMove}function o(e){return e===g.topMouseDown||e===g.topTouchStart}function r(e,n,t,a){var s=e.type||"unknown-event";e.currentTarget=f.Mount.getNode(a),n?u.invokeGuardedCallbackWithCatch(s,t,e,a):u.invokeGuardedCallback(s,t,e,a),e.currentTarget=null}function i(e,n){var t=e._dispatchListeners,a=e._dispatchIDs;if(Array.isArray(t))for(var s=0;s<t.length&&!e.isPropagationStopped();s++)r(e,n,t[s],a[s]);else t&&r(e,n,t,a);e._dispatchListeners=null,e._dispatchIDs=null}function l(e){var n=e._dispatchListeners,t=e._dispatchIDs;if(Array.isArray(n)){for(var a=0;a<n.length&&!e.isPropagationStopped();a++)if(n[a](e,t[a]))return t[a]}else if(n&&n(e,t))return t;return null}function p(e){var n=l(e);return e._dispatchIDs=null,e._dispatchListeners=null,n}function c(e){var n=e._dispatchListeners,t=e._dispatchIDs;Array.isArray(n)?m(!1):void 0;var a=n?n(e,t):null;return e._dispatchListeners=null,e._dispatchIDs=null,a}function d(e){return!!e._dispatchListeners}var h=t(30),u=t(34),m=t(13),f=(t(25),{Mount:null,injectMount:function(e){f.Mount=e}}),g=h.topLevelTypes,y={isEndish:a,isMoveish:s,isStartish:o,executeDirectDispatch:c,executeDispatchesInOrder:i,executeDispatchesInOrderStopAtTrue:p,hasDispatches:d,getNode:function(e){return f.Mount.getNode(e)},getID:function(e){return f.Mount.getID(e)},injection:f};e.exports=y},function(e,n,t){"use strict";function a(e,n,t,a){try{return n(t,a)}catch(o){return void(null===s&&(s=o))}}var s=null,o={invokeGuardedCallback:a,invokeGuardedCallbackWithCatch:a,rethrowCaughtError:function(){if(s){var e=s;throw s=null,e}}};e.exports=o},function(e,n,t){"use strict";function a(e,n){if(null==n?s(!1):void 0,null==e)return n;var t=Array.isArray(e),a=Array.isArray(n);return t&&a?(e.push.apply(e,n),e):t?(e.push(n),e):a?[e].concat(n):[e,n]}var s=t(13);e.exports=a},function(e,n){"use strict";var t=function(e,n,t){Array.isArray(e)?e.forEach(n,t):e&&n.call(t,e)};e.exports=t},function(e,n,t){"use strict";function a(e){s.enqueueEvents(e),s.processEventQueue(!1)}var s=t(31),o={handleTopLevel:function(e,n,t,o,r){var i=s.extractEvents(e,n,t,o,r);a(i)}};e.exports=o},function(e,n){"use strict";var t={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){t.currentScrollLeft=e.x,t.currentScrollTop=e.y}};e.exports=t},function(e,n){"use strict";function t(e,n){if(null==e)throw new TypeError("Object.assign target cannot be null or undefined");for(var t=Object(e),a=Object.prototype.hasOwnProperty,s=1;s<arguments.length;s++){var o=arguments[s];if(null!=o){var r=Object(o);for(var i in r)a.call(r,i)&&(t[i]=r[i])}}return t}e.exports=t},function(e,n,t){"use strict";/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
function a(e,n){if(!o.canUseDOM||n&&!("addEventListener"in document))return!1;var t="on"+e,a=t in document;if(!a){var r=document.createElement("div");r.setAttribute(t,"return;"),a="function"==typeof r[t]}return!a&&s&&"wheel"===e&&(a=document.implementation.hasFeature("Events.wheel","3.0")),a}var s,o=t(9);o.canUseDOM&&(s=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),e.exports=a},function(e,n){"use strict";var t={useCreateElement:!1};e.exports=t},function(e,n,t){"use strict";var a=t(5),s=t(39),o=(t(43),"function"==typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103),r={key:!0,ref:!0,__self:!0,__source:!0},i=function(e,n,t,a,s,r,i){var l={$$typeof:o,type:e,key:n,ref:t,props:i,_owner:r};return l};i.createElement=function(e,n,t){var s,o={},l=null,p=null,c=null,d=null;if(null!=n){p=void 0===n.ref?null:n.ref,l=void 0===n.key?null:""+n.key,c=void 0===n.__self?null:n.__self,d=void 0===n.__source?null:n.__source;for(s in n)n.hasOwnProperty(s)&&!r.hasOwnProperty(s)&&(o[s]=n[s])}var h=arguments.length-2;if(1===h)o.children=t;else if(h>1){for(var u=Array(h),m=0;h>m;m++)u[m]=arguments[m+2];o.children=u}if(e&&e.defaultProps){var f=e.defaultProps;for(s in f)"undefined"==typeof o[s]&&(o[s]=f[s])}return i(e,l,p,c,d,a.current,o)},i.createFactory=function(e){var n=i.createElement.bind(null,e);return n.type=e,n},i.cloneAndReplaceKey=function(e,n){var t=i(e.type,n,e.ref,e._self,e._source,e._owner,e.props);return t},i.cloneAndReplaceProps=function(e,n){var t=i(e.type,e.key,e.ref,e._self,e._source,e._owner,n);return t},i.cloneElement=function(e,n,t){var o,l=s({},e.props),p=e.key,c=e.ref,d=e._self,h=e._source,u=e._owner;if(null!=n){void 0!==n.ref&&(c=n.ref,u=a.current),void 0!==n.key&&(p=""+n.key);for(o in n)n.hasOwnProperty(o)&&!r.hasOwnProperty(o)&&(l[o]=n[o])}var m=arguments.length-2;if(1===m)l.children=t;else if(m>1){for(var f=Array(m),g=0;m>g;g++)f[g]=arguments[g+2];l.children=f}return i(e.type,p,c,d,h,u,l)},i.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},e.exports=i},function(e,n,t){"use strict";var a=!1;e.exports=a},function(e,n){"use strict";function t(e){return!!o[e]}function a(e){o[e]=!0}function s(e){delete o[e]}var o={},r={isNullComponentID:t,registerNullComponentID:a,deregisterNullComponentID:s};e.exports=r},function(e,n,t){"use strict";function a(e){return u+e.toString(36)}function s(e,n){return e.charAt(n)===u||n===e.length}function o(e){return""===e||e.charAt(0)===u&&e.charAt(e.length-1)!==u}function r(e,n){return 0===n.indexOf(e)&&s(n,e.length)}function i(e){return e?e.substr(0,e.lastIndexOf(u)):""}function l(e,n){if(o(e)&&o(n)?void 0:h(!1),r(e,n)?void 0:h(!1),e===n)return e;var t,a=e.length+m;for(t=a;t<n.length&&!s(n,t);t++);return n.substr(0,t)}function p(e,n){var t=Math.min(e.length,n.length);if(0===t)return"";for(var a=0,r=0;t>=r;r++)if(s(e,r)&&s(n,r))a=r;else if(e.charAt(r)!==n.charAt(r))break;var i=e.substr(0,a);return o(i)?void 0:h(!1),i}function c(e,n,t,a,s,o){e=e||"",n=n||"",e===n?h(!1):void 0;var p=r(n,e);p||r(e,n)?void 0:h(!1);for(var c=0,d=p?i:l,u=e;;u=d(u,n)){var m;if(s&&u===e||o&&u===n||(m=t(u,p,a)),m===!1||u===n)break;c++<f?void 0:h(!1)}}var d=t(46),h=t(13),u=".",m=u.length,f=1e4,g={createReactRootID:function(){return a(d.createReactRootIndex())},createReactID:function(e,n){return e+n},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===u&&e.length>1){var n=e.indexOf(u,1);return n>-1?e.substr(0,n):e}return null},traverseEnterLeave:function(e,n,t,a,s){var o=p(e,n);o!==e&&c(e,o,t,a,!1,!0),o!==n&&c(o,n,t,s,!0,!1)},traverseTwoPhase:function(e,n,t){e&&(c("",e,n,t,!0,!1),c(e,"",n,t,!1,!0))},traverseTwoPhaseSkipTarget:function(e,n,t){e&&(c("",e,n,t,!0,!0),c(e,"",n,t,!0,!0))},traverseAncestors:function(e,n,t){c("",e,n,t,!0,!1)},getFirstCommonAncestorID:p,_getNextDescendantID:l,isAncestorIDOf:r,SEPARATOR:u};e.exports=g},function(e,n){"use strict";var t={injectCreateReactRootIndex:function(e){a.createReactRootIndex=e}},a={createReactRootIndex:null,injection:t};e.exports=a},function(e,n){"use strict";var t={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,n){e._reactInternalInstance=n}};e.exports=t},function(e,n,t){"use strict";var a=t(49),s=/\/?>/,o={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var n=a(e);return e.replace(s," "+o.CHECKSUM_ATTR_NAME+'="'+n+'"$&')},canReuseMarkup:function(e,n){var t=n.getAttribute(o.CHECKSUM_ATTR_NAME);t=t&&parseInt(t,10);var s=a(e);return s===t}};e.exports=o},function(e,n){"use strict";function t(e){for(var n=1,t=0,s=0,o=e.length,r=-4&o;r>s;){for(;s<Math.min(s+4096,r);s+=4)t+=(n+=e.charCodeAt(s))+(n+=e.charCodeAt(s+1))+(n+=e.charCodeAt(s+2))+(n+=e.charCodeAt(s+3));n%=a,t%=a}for(;o>s;s++)t+=n+=e.charCodeAt(s);return n%=a,t%=a,n|t<<16}var a=65521;e.exports=t},function(e,n,t){"use strict";function a(){s.attachRefs(this,this._currentElement)}var s=t(51),o={mountComponent:function(e,n,t,s){var o=e.mountComponent(n,t,s);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(a,e),o},unmountComponent:function(e){s.detachRefs(e,e._currentElement),e.unmountComponent()},receiveComponent:function(e,n,t,o){var r=e._currentElement;if(n!==r||o!==e._context){var i=s.shouldUpdateRefs(r,n);i&&s.detachRefs(e,r),e.receiveComponent(n,t,o),i&&e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(a,e)}},performUpdateIfNecessary:function(e,n){e.performUpdateIfNecessary(n)}};e.exports=o},function(e,n,t){"use strict";function a(e,n,t){"function"==typeof e?e(n.getPublicInstance()):o.addComponentAsRefTo(n,e,t)}function s(e,n,t){"function"==typeof e?e(null):o.removeComponentAsRefFrom(n,e,t)}var o=t(52),r={};r.attachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&a(t,e,n._owner)}},r.shouldUpdateRefs=function(e,n){var t=null===e||e===!1,a=null===n||n===!1;return t||a||n._owner!==e._owner||n.ref!==e.ref},r.detachRefs=function(e,n){if(null!==n&&n!==!1){var t=n.ref;null!=t&&s(t,e,n._owner)}},e.exports=r},function(e,n,t){"use strict";var a=t(13),s={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,n,t){s.isValidOwner(t)?void 0:a(!1),t.attachRef(n,e)},removeComponentAsRefFrom:function(e,n,t){s.isValidOwner(t)?void 0:a(!1),t.getPublicInstance().refs[n]===e.getPublicInstance()&&t.detachRef(n)}};e.exports=s},function(e,n,t){"use strict";function a(e){i.enqueueUpdate(e)}function s(e,n){var t=r.get(e);return t?t:null}var o=(t(5),t(42)),r=t(47),i=t(54),l=t(39),p=t(13),c=(t(25),{isMounted:function(e){var n=r.get(e);return n?!!n._renderedComponent:!1},enqueueCallback:function(e,n){"function"!=typeof n?p(!1):void 0;var t=s(e);return t?(t._pendingCallbacks?t._pendingCallbacks.push(n):t._pendingCallbacks=[n],void a(t)):null},enqueueCallbackInternal:function(e,n){"function"!=typeof n?p(!1):void 0,e._pendingCallbacks?e._pendingCallbacks.push(n):e._pendingCallbacks=[n],a(e)},enqueueForceUpdate:function(e){var n=s(e,"forceUpdate");n&&(n._pendingForceUpdate=!0,a(n))},enqueueReplaceState:function(e,n){var t=s(e,"replaceState");t&&(t._pendingStateQueue=[n],t._pendingReplaceState=!0,a(t))},enqueueSetState:function(e,n){var t=s(e,"setState");if(t){var o=t._pendingStateQueue||(t._pendingStateQueue=[]);o.push(n),a(t)}},enqueueSetProps:function(e,n){var t=s(e,"setProps");t&&c.enqueueSetPropsInternal(t,n)},enqueueSetPropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:p(!1);var s=t._pendingElement||t._currentElement,r=s.props,i=l({},r.props,n);t._pendingElement=o.cloneAndReplaceProps(s,o.cloneAndReplaceProps(r,i)),a(t)},enqueueReplaceProps:function(e,n){var t=s(e,"replaceProps");t&&c.enqueueReplacePropsInternal(t,n)},enqueueReplacePropsInternal:function(e,n){var t=e._topLevelWrapper;t?void 0:p(!1);var s=t._pendingElement||t._currentElement,r=s.props;t._pendingElement=o.cloneAndReplaceProps(s,o.cloneAndReplaceProps(r,n)),a(t)},enqueueElementInternal:function(e,n){e._pendingElement=n,a(e)}});e.exports=c},function(e,n,t){"use strict";function a(){W.ReactReconcileTransaction&&j?void 0:g(!1)}function s(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=c.getPooled(),this.reconcileTransaction=W.ReactReconcileTransaction.getPooled(!1)}function o(e,n,t,s,o,r){a(),j.batchedUpdates(e,n,t,s,o,r)}function r(e,n){return e._mountOrder-n._mountOrder}function i(e){var n=e.dirtyComponentsLength;n!==y.length?g(!1):void 0,y.sort(r);for(var t=0;n>t;t++){var a=y[t],s=a._pendingCallbacks;if(a._pendingCallbacks=null,u.performUpdateIfNecessary(a,e.reconcileTransaction),s)for(var o=0;o<s.length;o++)e.callbackQueue.enqueue(s[o],a.getPublicInstance())}}function l(e){return a(),j.isBatchingUpdates?void y.push(e):void j.batchedUpdates(l,e)}function p(e,n){j.isBatchingUpdates?void 0:g(!1),b.enqueue(e,n),w=!0}var c=t(55),d=t(56),h=t(18),u=t(50),m=t(57),f=t(39),g=t(13),y=[],b=c.getPooled(),w=!1,j=null,v={initialize:function(){this.dirtyComponentsLength=y.length},close:function(){this.dirtyComponentsLength!==y.length?(y.splice(0,this.dirtyComponentsLength),C()):y.length=0}},x={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},k=[v,x];f(s.prototype,m.Mixin,{getTransactionWrappers:function(){return k},destructor:function(){this.dirtyComponentsLength=null,c.release(this.callbackQueue),this.callbackQueue=null,W.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,n,t){return m.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,n,t)}}),d.addPoolingTo(s);var C=function(){for(;y.length||w;){if(y.length){var e=s.getPooled();e.perform(i,null,e),s.release(e)}if(w){w=!1;var n=b;b=c.getPooled(),n.notifyAll(),c.release(n)}}};C=h.measure("ReactUpdates","flushBatchedUpdates",C);var S={injectReconcileTransaction:function(e){e?void 0:g(!1),W.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:g(!1),"function"!=typeof e.batchedUpdates?g(!1):void 0,"boolean"!=typeof e.isBatchingUpdates?g(!1):void 0,j=e}},W={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:l,flushBatchedUpdates:C,injection:S,asap:p};e.exports=W},function(e,n,t){"use strict";function a(){this._callbacks=null,this._contexts=null}var s=t(56),o=t(39),r=t(13);o(a.prototype,{enqueue:function(e,n){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(n)},notifyAll:function(){var e=this._callbacks,n=this._contexts;if(e){e.length!==n.length?r(!1):void 0,this._callbacks=null,this._contexts=null;for(var t=0;t<e.length;t++)e[t].call(n[t]);e.length=0,n.length=0}},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";var a=t(13),s=function(e){var n=this;if(n.instancePool.length){var t=n.instancePool.pop();return n.call(t,e),t}return new n(e)},o=function(e,n){var t=this;if(t.instancePool.length){var a=t.instancePool.pop();return t.call(a,e,n),a}return new t(e,n)},r=function(e,n,t){var a=this;if(a.instancePool.length){var s=a.instancePool.pop();return a.call(s,e,n,t),s}return new a(e,n,t)},i=function(e,n,t,a){var s=this;if(s.instancePool.length){var o=s.instancePool.pop();return s.call(o,e,n,t,a),o}return new s(e,n,t,a)},l=function(e,n,t,a,s){var o=this;if(o.instancePool.length){var r=o.instancePool.pop();return o.call(r,e,n,t,a,s),r}return new o(e,n,t,a,s)},p=function(e){var n=this;e instanceof n?void 0:a(!1),e.destructor(),n.instancePool.length<n.poolSize&&n.instancePool.push(e)},c=10,d=s,h=function(e,n){var t=e;return t.instancePool=[],t.getPooled=n||d,t.poolSize||(t.poolSize=c),t.release=p,t},u={addPoolingTo:h,oneArgumentPooler:s,twoArgumentPooler:o,threeArgumentPooler:r,fourArgumentPooler:i,fiveArgumentPooler:l};e.exports=u},function(e,n,t){"use strict";var a=t(13),s={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,n,t,s,o,r,i,l){this.isInTransaction()?a(!1):void 0;var p,c;try{this._isInTransaction=!0,p=!0,this.initializeAll(0),c=e.call(n,t,s,o,r,i,l),p=!1}finally{try{if(p)try{this.closeAll(0)}catch(d){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return c},initializeAll:function(e){for(var n=this.transactionWrappers,t=e;t<n.length;t++){var a=n[t];try{this.wrapperInitData[t]=o.OBSERVED_ERROR,this.wrapperInitData[t]=a.initialize?a.initialize.call(this):null}finally{if(this.wrapperInitData[t]===o.OBSERVED_ERROR)try{this.initializeAll(t+1)}catch(s){}}}},closeAll:function(e){this.isInTransaction()?void 0:a(!1);for(var n=this.transactionWrappers,t=e;t<n.length;t++){var s,r=n[t],i=this.wrapperInitData[t];try{s=!0,i!==o.OBSERVED_ERROR&&r.close&&r.close.call(this,i),s=!1}finally{if(s)try{this.closeAll(t+1)}catch(l){}}}this.wrapperInitData.length=0}},o={Mixin:s,OBSERVED_ERROR:{}};e.exports=o},function(e,n,t){"use strict";var a={};e.exports=a},function(e,n,t){"use strict";function a(e,n){var t=!0;e:for(;t;){var a=e,o=n;if(t=!1,a&&o){if(a===o)return!0;if(s(a))return!1;if(s(o)){e=a,n=o.parentNode,t=!0;continue e}return a.contains?a.contains(o):a.compareDocumentPosition?!!(16&a.compareDocumentPosition(o)):!1}return!1}}var s=t(60);e.exports=a},function(e,n,t){"use strict";function a(e){return s(e)&&3==e.nodeType}var s=t(61);e.exports=a},function(e,n){"use strict";function t(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=t},function(e,n,t){"use strict";function a(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function s(e){var n;if(null===e||e===!1)n=new r(s);else if("object"==typeof e){var t=e;!t||"function"!=typeof t.type&&"string"!=typeof t.type?p(!1):void 0,n="string"==typeof t.type?i.createInternalComponent(t):a(t.type)?new t.type(t):new c}else"string"==typeof e||"number"==typeof e?n=i.createInstanceForText(e):p(!1);return n.construct(e),n._mountIndex=0,n._mountImage=null,n}var o=t(63),r=t(68),i=t(69),l=t(39),p=t(13),c=(t(25),function(){});l(c.prototype,o.Mixin,{_instantiateReactComponent:s}),e.exports=s},function(e,n,t){"use strict";function a(e){var n=e._currentElement._owner||null;if(n){var t=n.getName();if(t)return" Check the render method of `"+t+"`."}return""}function s(e){}var o=t(64),r=t(5),i=t(42),l=t(47),p=t(18),c=t(65),d=(t(66),t(50)),h=t(53),u=t(39),m=t(58),f=t(13),g=t(67);t(25);s.prototype.render=function(){var e=l.get(this)._currentElement.type;return e(this.props,this.context,this.updater)};var y=1,b={construct:function(e){this._currentElement=e,this._rootNodeID=null,this._instance=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null},mountComponent:function(e,n,t){this._context=t,this._mountOrder=y++,this._rootNodeID=e;var a,o,r=this._processProps(this._currentElement.props),p=this._processContext(t),c=this._currentElement.type,u="prototype"in c;u&&(a=new c(r,p,h)),(!u||null===a||a===!1||i.isValidElement(a))&&(o=a,a=new s(c)),a.props=r,a.context=p,a.refs=m,a.updater=h,this._instance=a,l.set(a,this);var g=a.state;void 0===g&&(a.state=g=null),"object"!=typeof g||Array.isArray(g)?f(!1):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,a.componentWillMount&&(a.componentWillMount(),this._pendingStateQueue&&(a.state=this._processPendingState(a.props,a.context))),void 0===o&&(o=this._renderValidatedComponent()),this._renderedComponent=this._instantiateReactComponent(o);var b=d.mountComponent(this._renderedComponent,e,n,this._processChildContext(t));return a.componentDidMount&&n.getReactMountReady().enqueue(a.componentDidMount,a),b},unmountComponent:function(){var e=this._instance;e.componentWillUnmount&&e.componentWillUnmount(),d.unmountComponent(this._renderedComponent),this._renderedComponent=null,this._instance=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,l.remove(e)},_maskContext:function(e){var n=null,t=this._currentElement.type,a=t.contextTypes;if(!a)return m;n={};for(var s in a)n[s]=e[s];return n},_processContext:function(e){var n=this._maskContext(e);return n},_processChildContext:function(e){var n=this._currentElement.type,t=this._instance,a=t.getChildContext&&t.getChildContext();if(a){"object"!=typeof n.childContextTypes?f(!1):void 0;for(var s in a)s in n.childContextTypes?void 0:f(!1);return u({},e,a)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,n,t){var s=this.getName();for(var o in e)if(e.hasOwnProperty(o)){var r;try{"function"!=typeof e[o]?f(!1):void 0,r=e[o](n,o,s,t)}catch(i){r=i}if(r instanceof Error){a(this);t===c.prop}}},receiveComponent:function(e,n,t){var a=this._currentElement,s=this._context;this._pendingElement=null,this.updateComponent(n,a,e,s,t)},performUpdateIfNecessary:function(e){null!=this._pendingElement&&d.receiveComponent(this,this._pendingElement||this._currentElement,e,this._context),(null!==this._pendingStateQueue||this._pendingForceUpdate)&&this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context)},updateComponent:function(e,n,t,a,s){var o,r=this._instance,i=this._context===s?r.context:this._processContext(s);n===t?o=t.props:(o=this._processProps(t.props),r.componentWillReceiveProps&&r.componentWillReceiveProps(o,i));var l=this._processPendingState(o,i),p=this._pendingForceUpdate||!r.shouldComponentUpdate||r.shouldComponentUpdate(o,l,i);p?(this._pendingForceUpdate=!1,this._performComponentUpdate(t,o,l,i,e,s)):(this._currentElement=t,this._context=s,r.props=o,r.state=l,r.context=i)},_processPendingState:function(e,n){var t=this._instance,a=this._pendingStateQueue,s=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!a)return t.state;if(s&&1===a.length)return a[0];for(var o=u({},s?a[0]:t.state),r=s?1:0;r<a.length;r++){var i=a[r];u(o,"function"==typeof i?i.call(t,o,e,n):i)}return o},_performComponentUpdate:function(e,n,t,a,s,o){var r,i,l,p=this._instance,c=Boolean(p.componentDidUpdate);c&&(r=p.props,i=p.state,l=p.context),p.componentWillUpdate&&p.componentWillUpdate(n,t,a),this._currentElement=e,this._context=o,p.props=n,p.state=t,p.context=a,this._updateRenderedComponent(s,o),c&&s.getReactMountReady().enqueue(p.componentDidUpdate.bind(p,r,i,l),p)},_updateRenderedComponent:function(e,n){var t=this._renderedComponent,a=t._currentElement,s=this._renderValidatedComponent();if(g(a,s))d.receiveComponent(t,s,e,this._processChildContext(n));else{var o=this._rootNodeID,r=t._rootNodeID;d.unmountComponent(t),this._renderedComponent=this._instantiateReactComponent(s);var i=d.mountComponent(this._renderedComponent,o,e,this._processChildContext(n));this._replaceNodeWithMarkupByID(r,i)}},_replaceNodeWithMarkupByID:function(e,n){o.replaceNodeWithMarkupByID(e,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance,n=e.render();return n},_renderValidatedComponent:function(){var e;r.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{r.current=null}return null===e||e===!1||i.isValidElement(e)?void 0:f(!1),e},attachRef:function(e,n){var t=this.getPublicInstance();null==t?f(!1):void 0;var a=n.getPublicInstance(),s=t.refs===m?t.refs={}:t.refs;s[e]=a},detachRef:function(e){var n=this.getPublicInstance().refs;delete n[e]},getName:function(){var e=this._currentElement.type,n=this._instance&&this._instance.constructor;return e.displayName||n&&n.displayName||e.name||n&&n.name||null},getPublicInstance:function(){var e=this._instance;return e instanceof s?null:e},_instantiateReactComponent:null};p.measureMethods(b,"ReactCompositeComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent",_renderValidatedComponent:"_renderValidatedComponent"});var w={Mixin:b};e.exports=w},function(e,n,t){"use strict";var a=t(13),s=!1,o={unmountIDFromEnvironment:null,replaceNodeWithMarkupByID:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){s?a(!1):void 0,o.unmountIDFromEnvironment=e.unmountIDFromEnvironment,o.replaceNodeWithMarkupByID=e.replaceNodeWithMarkupByID,o.processChildrenUpdates=e.processChildrenUpdates,s=!0}}};e.exports=o},function(e,n,t){"use strict";var a=t(17),s=a({prop:null,context:null,childContext:null});e.exports=s},function(e,n,t){"use strict";var a={};e.exports=a},function(e,n){"use strict";function t(e,n){var t=null===e||e===!1,a=null===n||n===!1;if(t||a)return t===a;var s=typeof e,o=typeof n;return"string"===s||"number"===s?"string"===o||"number"===o:"object"===o&&e.type===n.type&&e.key===n.key}e.exports=t},function(e,n,t){"use strict";var a,s=t(42),o=t(44),r=t(50),i=t(39),l={injectEmptyComponent:function(e){a=s.createElement(e)}},p=function(e){this._currentElement=null,this._rootNodeID=null,this._renderedComponent=e(a)};i(p.prototype,{construct:function(e){},mountComponent:function(e,n,t){return o.registerNullComponentID(e),this._rootNodeID=e,r.mountComponent(this._renderedComponent,e,n,t)},receiveComponent:function(){},unmountComponent:function(e,n,t){r.unmountComponent(this._renderedComponent),o.deregisterNullComponentID(this._rootNodeID),this._rootNodeID=null,this._renderedComponent=null}}),p.injection=l,e.exports=p},function(e,n,t){"use strict";function a(e){if("function"==typeof e.type)return e.type;var n=e.type,t=d[n];return null==t&&(d[n]=t=p(n)),t}function s(e){return c?void 0:l(!1),new c(e.type,e.props)}function o(e){return new h(e)}function r(e){return e instanceof h}var i=t(39),l=t(13),p=null,c=null,d={},h=null,u={injectGenericComponentClass:function(e){c=e},injectTextComponentClass:function(e){h=e},injectComponentClasses:function(e){i(d,e)}},m={getComponentClassForElement:a,createInternalComponent:s,createInstanceForText:o,isTextComponent:r,injection:u};e.exports=m},function(e,n,t){"use strict";var a=(t(39),t(15)),s=(t(25),a);e.exports=s},function(e,n,t){"use strict";function a(){if(!S){S=!0,y.EventEmitter.injectReactEventListener(g),y.EventPluginHub.injectEventPluginOrder(i),y.EventPluginHub.injectInstanceHandle(b),y.EventPluginHub.injectMount(w),y.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:k,EnterLeaveEventPlugin:l,ChangeEventPlugin:o,SelectEventPlugin:v,BeforeInputEventPlugin:s}),y.NativeComponent.injectGenericComponentClass(m),y.NativeComponent.injectTextComponentClass(f),y.Class.injectMixin(d),y.DOMProperty.injectDOMPropertyConfig(c),y.DOMProperty.injectDOMPropertyConfig(C),y.EmptyComponent.injectEmptyComponent("noscript"),y.Updates.injectReconcileTransaction(j),y.Updates.injectBatchingStrategy(u),y.RootIndex.injectCreateReactRootIndex(p.canUseDOM?r.createReactRootIndex:x.createReactRootIndex),y.Component.injectEnvironment(h)}}var s=t(72),o=t(80),r=t(83),i=t(84),l=t(85),p=t(9),c=t(89),d=t(90),h=t(26),u=t(92),m=t(93),f=t(6),g=t(118),y=t(121),b=t(45),w=t(28),j=t(125),v=t(130),x=t(131),k=t(132),C=t(141),S=!1;e.exports={inject:a}},function(e,n,t){"use strict";function a(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function s(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function o(e){switch(e){case A.topCompositionStart:return P.compositionStart;case A.topCompositionEnd:return P.compositionEnd;case A.topCompositionUpdate:return P.compositionUpdate}}function r(e,n){return e===A.topKeyDown&&n.keyCode===v}function i(e,n){switch(e){case A.topKeyUp:return-1!==j.indexOf(n.keyCode);case A.topKeyDown:return n.keyCode!==v;case A.topKeyPress:case A.topMouseDown:case A.topBlur:return!0;default:return!1}}function l(e){var n=e.detail;return"object"==typeof n&&"data"in n?n.data:null}function p(e,n,t,a,s){var p,c;if(x?p=o(e):I?i(e,a)&&(p=P.compositionEnd):r(e,a)&&(p=P.compositionStart),!p)return null;S&&(I||p!==P.compositionStart?p===P.compositionEnd&&I&&(c=I.getData()):I=g.getPooled(n));var d=y.getPooled(p,t,a,s);if(c)d.data=c;else{var h=l(a);null!==h&&(d.data=h)}return m.accumulateTwoPhaseDispatches(d),d}function c(e,n){switch(e){case A.topCompositionEnd:return l(n);case A.topKeyPress:var t=n.which;return t!==W?null:(E=!0,T);case A.topTextInput:var a=n.data;return a===T&&E?null:a;default:return null}}function d(e,n){if(I){if(e===A.topCompositionEnd||i(e,n)){var t=I.getData();return g.release(I),I=null,t}return null}switch(e){case A.topPaste:return null;case A.topKeyPress:return n.which&&!s(n)?String.fromCharCode(n.which):null;case A.topCompositionEnd:return S?null:n.data;default:return null}}function h(e,n,t,a,s){var o;if(o=C?c(e,a):d(e,a),!o)return null;var r=b.getPooled(P.beforeInput,t,a,s);return r.data=o,m.accumulateTwoPhaseDispatches(r),r}var u=t(30),m=t(73),f=t(9),g=t(74),y=t(76),b=t(78),w=t(79),j=[9,13,27,32],v=229,x=f.canUseDOM&&"CompositionEvent"in window,k=null;f.canUseDOM&&"documentMode"in document&&(k=document.documentMode);var C=f.canUseDOM&&"TextEvent"in window&&!k&&!a(),S=f.canUseDOM&&(!x||k&&k>8&&11>=k),W=32,T=String.fromCharCode(W),A=u.topLevelTypes,P={beforeInput:{phasedRegistrationNames:{bubbled:w({onBeforeInput:null}),captured:w({onBeforeInputCapture:null})},dependencies:[A.topCompositionEnd,A.topKeyPress,A.topTextInput,A.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:w({onCompositionEnd:null}),captured:w({onCompositionEndCapture:null})},dependencies:[A.topBlur,A.topCompositionEnd,A.topKeyDown,A.topKeyPress,A.topKeyUp,A.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:w({onCompositionStart:null}),captured:w({onCompositionStartCapture:null})},dependencies:[A.topBlur,A.topCompositionStart,A.topKeyDown,A.topKeyPress,A.topKeyUp,A.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:w({onCompositionUpdate:null}),captured:w({onCompositionUpdateCapture:null})},dependencies:[A.topBlur,A.topCompositionUpdate,A.topKeyDown,A.topKeyPress,A.topKeyUp,A.topMouseDown]}},E=!1,I=null,F={eventTypes:P,extractEvents:function(e,n,t,a,s){return[p(e,n,t,a,s),h(e,n,t,a,s)]}};e.exports=F},function(e,n,t){"use strict";function a(e,n,t){var a=n.dispatchConfig.phasedRegistrationNames[t];return b(e,a)}function s(e,n,t){var s=n?y.bubbled:y.captured,o=a(e,t,s);o&&(t._dispatchListeners=f(t._dispatchListeners,o),t._dispatchIDs=f(t._dispatchIDs,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&m.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,s,e)}function r(e){e&&e.dispatchConfig.phasedRegistrationNames&&m.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(e.dispatchMarker,s,e)}function i(e,n,t){if(t&&t.dispatchConfig.registrationName){var a=t.dispatchConfig.registrationName,s=b(e,a);s&&(t._dispatchListeners=f(t._dispatchListeners,s),t._dispatchIDs=f(t._dispatchIDs,e))}}function l(e){e&&e.dispatchConfig.registrationName&&i(e.dispatchMarker,null,e)}function p(e){g(e,o)}function c(e){g(e,r)}function d(e,n,t,a){m.injection.getInstanceHandle().traverseEnterLeave(t,a,i,e,n)}function h(e){g(e,l)}var u=t(30),m=t(31),f=(t(25),t(35)),g=t(36),y=u.PropagationPhases,b=m.getListener,w={accumulateTwoPhaseDispatches:p,accumulateTwoPhaseDispatchesSkipTarget:c,accumulateDirectDispatches:h,accumulateEnterLeaveDispatches:d};e.exports=w},function(e,n,t){"use strict";function a(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var s=t(56),o=t(39),r=t(75);o(a.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[r()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,n,t=this._startText,a=t.length,s=this.getText(),o=s.length;for(e=0;a>e&&t[e]===s[e];e++);var r=a-e;for(n=1;r>=n&&t[a-n]===s[o-n];n++);var i=n>1?1-n:void 0;return this._fallbackText=s.slice(e,i),this._fallbackText}}),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";function a(){return!o&&s.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var s=t(9),o=null;e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={data:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){this.dispatchConfig=e,this.dispatchMarker=n,this.nativeEvent=t,this.target=a,this.currentTarget=a;var s=this.constructor.Interface;for(var o in s)if(s.hasOwnProperty(o)){var i=s[o];i?this[o]=i(t):this[o]=t[o]}var l=null!=t.defaultPrevented?t.defaultPrevented:t.returnValue===!1;l?this.isDefaultPrevented=r.thatReturnsTrue:this.isDefaultPrevented=r.thatReturnsFalse,this.isPropagationStopped=r.thatReturnsFalse}var s=t(56),o=t(39),r=t(15),i=(t(25),{type:null,currentTarget:r.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null});o(a.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=r.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=r.thatReturnsTrue)},persist:function(){this.isPersistent=r.thatReturnsTrue},isPersistent:r.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var n in e)this[n]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),a.Interface=i,a.augmentClass=function(e,n){var t=this,a=Object.create(t.prototype);o(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=o({},t.Interface,n),e.augmentClass=t.augmentClass,s.addPoolingTo(e,s.fourArgumentPooler)},s.addPoolingTo(a,s.fourArgumentPooler),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={data:null};s.augmentClass(a,o),e.exports=a},function(e,n){"use strict";var t=function(e){var n;for(n in e)if(e.hasOwnProperty(n))return n;return null};e.exports=t},function(e,n,t){"use strict";function a(e){var n=e.nodeName&&e.nodeName.toLowerCase();return"select"===n||"input"===n&&"file"===e.type}function s(e){var n=k.getPooled(P.change,I,e,C(e));j.accumulateTwoPhaseDispatches(n),x.batchedUpdates(o,n)}function o(e){w.enqueueEvents(e),w.processEventQueue(!1)}function r(e,n){E=e,I=n,E.attachEvent("onchange",s)}function i(){E&&(E.detachEvent("onchange",s),E=null,I=null)}function l(e,n,t){return e===A.topChange?t:void 0}function p(e,n,t){e===A.topFocus?(i(),r(n,t)):e===A.topBlur&&i()}function c(e,n){E=e,I=n,F=e.value,R=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(E,"value",M),E.attachEvent("onpropertychange",h)}function d(){E&&(delete E.value,E.detachEvent("onpropertychange",h),E=null,I=null,F=null,R=null)}function h(e){if("value"===e.propertyName){var n=e.srcElement.value;n!==F&&(F=n,s(e))}}function u(e,n,t){return e===A.topInput?t:void 0}function m(e,n,t){e===A.topFocus?(d(),c(n,t)):e===A.topBlur&&d()}function f(e,n,t){return e!==A.topSelectionChange&&e!==A.topKeyUp&&e!==A.topKeyDown||!E||E.value===F?void 0:(F=E.value,I)}function g(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function y(e,n,t){return e===A.topClick?t:void 0}var b=t(30),w=t(31),j=t(73),v=t(9),x=t(54),k=t(77),C=t(81),S=t(40),W=t(82),T=t(79),A=b.topLevelTypes,P={change:{phasedRegistrationNames:{
bubbled:T({onChange:null}),captured:T({onChangeCapture:null})},dependencies:[A.topBlur,A.topChange,A.topClick,A.topFocus,A.topInput,A.topKeyDown,A.topKeyUp,A.topSelectionChange]}},E=null,I=null,F=null,R=null,B=!1;v.canUseDOM&&(B=S("change")&&(!("documentMode"in document)||document.documentMode>8));var O=!1;v.canUseDOM&&(O=S("input")&&(!("documentMode"in document)||document.documentMode>9));var M={get:function(){return R.get.call(this)},set:function(e){F=""+e,R.set.call(this,e)}},N={eventTypes:P,extractEvents:function(e,n,t,s,o){var r,i;if(a(n)?B?r=l:i=p:W(n)?O?r=u:(r=f,i=m):g(n)&&(r=y),r){var c=r(e,n,t);if(c){var d=k.getPooled(P.change,c,s,o);return d.type="change",j.accumulateTwoPhaseDispatches(d),d}}i&&i(e,n,t)}};e.exports=N},function(e,n){"use strict";function t(e){var n=e.target||e.srcElement||window;return 3===n.nodeType?n.parentNode:n}e.exports=t},function(e,n){"use strict";function t(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&a[e.type]||"textarea"===n)}var a={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};e.exports=t},function(e,n){"use strict";var t=0,a={createReactRootIndex:function(){return t++}};e.exports=a},function(e,n,t){"use strict";var a=t(79),s=[a({ResponderEventPlugin:null}),a({SimpleEventPlugin:null}),a({TapEventPlugin:null}),a({EnterLeaveEventPlugin:null}),a({ChangeEventPlugin:null}),a({SelectEventPlugin:null}),a({BeforeInputEventPlugin:null})];e.exports=s},function(e,n,t){"use strict";var a=t(30),s=t(73),o=t(86),r=t(28),i=t(79),l=a.topLevelTypes,p=r.getFirstReactDOM,c={mouseEnter:{registrationName:i({onMouseEnter:null}),dependencies:[l.topMouseOut,l.topMouseOver]},mouseLeave:{registrationName:i({onMouseLeave:null}),dependencies:[l.topMouseOut,l.topMouseOver]}},d=[null,null],h={eventTypes:c,extractEvents:function(e,n,t,a,i){if(e===l.topMouseOver&&(a.relatedTarget||a.fromElement))return null;if(e!==l.topMouseOut&&e!==l.topMouseOver)return null;var h;if(n.window===n)h=n;else{var u=n.ownerDocument;h=u?u.defaultView||u.parentWindow:window}var m,f,g="",y="";if(e===l.topMouseOut?(m=n,g=t,f=p(a.relatedTarget||a.toElement),f?y=r.getID(f):f=h,f=f||h):(m=h,f=n,y=t),m===f)return null;var b=o.getPooled(c.mouseLeave,g,a,i);b.type="mouseleave",b.target=m,b.relatedTarget=f;var w=o.getPooled(c.mouseEnter,y,a,i);return w.type="mouseenter",w.target=f,w.relatedTarget=m,s.accumulateEnterLeaveDispatches(b,w,g,y),d[0]=b,d[1]=w,d}};e.exports=h},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(38),r=t(88),i={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:r,button:function(e){var n=e.button;return"which"in e?n:2===n?2:4===n?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};s.augmentClass(a,i),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o=t(81),r={view:function(e){if(e.view)return e.view;var n=o(e);if(null!=n&&n.window===n)return n;var t=n.ownerDocument;return t?t.defaultView||t.parentWindow:window},detail:function(e){return e.detail||0}};s.augmentClass(a,r),e.exports=a},function(e,n){"use strict";function t(e){var n=this,t=n.nativeEvent;if(t.getModifierState)return t.getModifierState(e);var a=s[e];return a?!!t[a]:!1}function a(e){return t}var s={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};e.exports=a},function(e,n,t){"use strict";var a,s=t(23),o=t(9),r=s.injection.MUST_USE_ATTRIBUTE,i=s.injection.MUST_USE_PROPERTY,l=s.injection.HAS_BOOLEAN_VALUE,p=s.injection.HAS_SIDE_EFFECTS,c=s.injection.HAS_NUMERIC_VALUE,d=s.injection.HAS_POSITIVE_NUMERIC_VALUE,h=s.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(o.canUseDOM){var u=document.implementation;a=u&&u.hasFeature&&u.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}var m={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,acceptCharset:null,accessKey:null,action:null,allowFullScreen:r|l,allowTransparency:r,alt:null,async:l,autoComplete:null,autoPlay:l,capture:r|l,cellPadding:null,cellSpacing:null,charSet:r,challenge:r,checked:i|l,classID:r,className:a?r:i,cols:r|d,colSpan:null,content:null,contentEditable:null,contextMenu:r,controls:i|l,coords:null,crossOrigin:null,data:null,dateTime:r,"default":l,defer:l,dir:null,disabled:r|l,download:h,draggable:null,encType:null,form:r,formAction:r,formEncType:r,formMethod:r,formNoValidate:l,formTarget:r,frameBorder:r,headers:null,height:r,hidden:r|l,high:null,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:i,inputMode:r,integrity:null,is:r,keyParams:r,keyType:r,kind:null,label:null,lang:null,list:r,loop:i|l,low:null,manifest:r,marginHeight:null,marginWidth:null,max:null,maxLength:r,media:r,mediaGroup:null,method:null,min:null,minLength:r,multiple:i|l,muted:i|l,name:null,nonce:r,noValidate:l,open:l,optimum:null,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:i|l,rel:null,required:l,reversed:l,role:r,rows:r|d,rowSpan:null,sandbox:null,scope:null,scoped:l,scrolling:null,seamless:r|l,selected:i|l,shape:null,size:r|d,sizes:r,span:d,spellCheck:null,src:null,srcDoc:i,srcLang:null,srcSet:r,start:c,step:null,style:null,summary:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:i|p,width:r,wmode:r,wrap:null,about:r,datatype:r,inlist:r,prefix:r,property:r,resource:r,"typeof":r,vocab:r,autoCapitalize:null,autoCorrect:null,autoSave:null,color:null,itemProp:r,itemScope:r|l,itemType:r,itemID:r,itemRef:r,results:null,security:r,unselectable:r},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{autoCapitalize:"autocapitalize",autoComplete:"autocomplete",autoCorrect:"autocorrect",autoFocus:"autofocus",autoPlay:"autoplay",autoSave:"autosave",encType:"encoding",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc",srcSet:"srcset"}};e.exports=m},function(e,n,t){"use strict";var a=(t(47),t(91)),s=(t(25),"_getDOMNodeDidWarn"),o={getDOMNode:function(){return this.constructor[s]=!0,a(this)}};e.exports=o},function(e,n,t){"use strict";function a(e){return null==e?null:1===e.nodeType?e:s.has(e)?o.getNodeFromInstance(e):(null!=e.render&&"function"==typeof e.render?r(!1):void 0,void r(!1))}var s=(t(5),t(47)),o=t(28),r=t(13);t(25);e.exports=a},function(e,n,t){"use strict";function a(){this.reinitializeTransaction()}var s=t(54),o=t(57),r=t(39),i=t(15),l={initialize:i,close:function(){h.isBatchingUpdates=!1}},p={initialize:i,close:s.flushBatchedUpdates.bind(s)},c=[p,l];r(a.prototype,o.Mixin,{getTransactionWrappers:function(){return c}});var d=new a,h={isBatchingUpdates:!1,batchedUpdates:function(e,n,t,a,s,o){var r=h.isBatchingUpdates;h.isBatchingUpdates=!0,r?e(n,t,a,s,o):d.perform(e,null,n,t,a,s,o)}};e.exports=h},function(e,n,t){"use strict";function a(){return this}function s(){var e=this._reactInternalComponent;return!!e}function o(){}function r(e,n){var t=this._reactInternalComponent;t&&(F.enqueueSetPropsInternal(t,e),n&&F.enqueueCallbackInternal(t,n))}function i(e,n){var t=this._reactInternalComponent;t&&(F.enqueueReplacePropsInternal(t,e),n&&F.enqueueCallbackInternal(t,n))}function l(e,n){n&&(null!=n.dangerouslySetInnerHTML&&(null!=n.children?M(!1):void 0,"object"==typeof n.dangerouslySetInnerHTML&&z in n.dangerouslySetInnerHTML?void 0:M(!1)),null!=n.style&&"object"!=typeof n.style?M(!1):void 0)}function p(e,n,t,a){var s=P.findReactContainerForID(e);if(s){var o=s.nodeType===$?s.ownerDocument:s;L(n,o)}a.getReactMountReady().enqueue(c,{id:e,registrationName:n,listener:t})}function c(){var e=this;x.putListener(e.id,e.registrationName,e.listener)}function d(){var e=this;e._rootNodeID?void 0:M(!1);var n=P.getNode(e._rootNodeID);switch(n?void 0:M(!1),e._tag){case"iframe":e._wrapperState.listeners=[x.trapBubbledEvent(v.topLevelTypes.topLoad,"load",n)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var t in Y)Y.hasOwnProperty(t)&&e._wrapperState.listeners.push(x.trapBubbledEvent(v.topLevelTypes[t],Y[t],n));break;case"img":e._wrapperState.listeners=[x.trapBubbledEvent(v.topLevelTypes.topError,"error",n),x.trapBubbledEvent(v.topLevelTypes.topLoad,"load",n)];break;case"form":e._wrapperState.listeners=[x.trapBubbledEvent(v.topLevelTypes.topReset,"reset",n),x.trapBubbledEvent(v.topLevelTypes.topSubmit,"submit",n)]}}function h(){S.mountReadyWrapper(this)}function u(){T.postUpdateWrapper(this)}function m(e){Z.call(X,e)||(K.test(e)?void 0:M(!1),X[e]=!0)}function f(e,n){return e.indexOf("-")>=0||null!=n.is}function g(e){m(e),this._tag=e.toLowerCase(),this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._rootNodeID=null,this._wrapperState=null,this._topLevelWrapper=null,this._nodeWithLegacyProperties=null}var y=t(94),b=t(96),w=t(23),j=t(22),v=t(30),x=t(29),k=t(26),C=t(104),S=t(105),W=t(109),T=t(112),A=t(113),P=t(28),E=t(114),I=t(18),F=t(53),R=t(39),B=t(43),O=t(21),M=t(13),N=(t(40),t(79)),q=t(19),D=t(20),_=(t(117),t(70),t(25),x.deleteListener),L=x.listenTo,U=x.registrationNameModules,H={string:!0,number:!0},G=N({children:null}),J=N({style:null}),z=N({__html:null}),$=1,Y={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},V={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Q={listing:!0,pre:!0,textarea:!0},K=(R({menuitem:!0},V),/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/),X={},Z={}.hasOwnProperty;g.displayName="ReactDOMComponent",g.Mixin={construct:function(e){this._currentElement=e},mountComponent:function(e,n,t){this._rootNodeID=e;var a=this._currentElement.props;switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":this._wrapperState={listeners:null},n.getReactMountReady().enqueue(d,this);break;case"button":a=C.getNativeProps(this,a,t);break;case"input":S.mountWrapper(this,a,t),a=S.getNativeProps(this,a,t);break;case"option":W.mountWrapper(this,a,t),a=W.getNativeProps(this,a,t);break;case"select":T.mountWrapper(this,a,t),a=T.getNativeProps(this,a,t),t=T.processChildContext(this,a,t);break;case"textarea":A.mountWrapper(this,a,t),a=A.getNativeProps(this,a,t)}l(this,a);var s;if(n.useCreateElement){var o=t[P.ownerDocumentContextKey],r=o.createElement(this._currentElement.type);j.setAttributeForID(r,this._rootNodeID),P.getID(r),this._updateDOMProperties({},a,n,r),this._createInitialChildren(n,a,t,r),s=r}else{var i=this._createOpenTagMarkupAndPutListeners(n,a),p=this._createContentMarkup(n,a,t);s=!p&&V[this._tag]?i+"/>":i+">"+p+"</"+this._currentElement.type+">"}switch(this._tag){case"input":n.getReactMountReady().enqueue(h,this);case"button":case"select":case"textarea":a.autoFocus&&n.getReactMountReady().enqueue(y.focusDOMComponent,this)}return s},_createOpenTagMarkupAndPutListeners:function(e,n){var t="<"+this._currentElement.type;for(var a in n)if(n.hasOwnProperty(a)){var s=n[a];if(null!=s)if(U.hasOwnProperty(a))s&&p(this._rootNodeID,a,s,e);else{a===J&&(s&&(s=this._previousStyleCopy=R({},n.style)),s=b.createMarkupForStyles(s));var o=null;null!=this._tag&&f(this._tag,n)?a!==G&&(o=j.createMarkupForCustomAttribute(a,s)):o=j.createMarkupForProperty(a,s),o&&(t+=" "+o)}}if(e.renderToStaticMarkup)return t;var r=j.createMarkupForID(this._rootNodeID);return t+" "+r},_createContentMarkup:function(e,n,t){var a="",s=n.dangerouslySetInnerHTML;if(null!=s)null!=s.__html&&(a=s.__html);else{var o=H[typeof n.children]?n.children:null,r=null!=o?null:n.children;if(null!=o)a=O(o);else if(null!=r){var i=this.mountChildren(r,e,t);a=i.join("")}}return Q[this._tag]&&"\n"===a.charAt(0)?"\n"+a:a},_createInitialChildren:function(e,n,t,a){var s=n.dangerouslySetInnerHTML;if(null!=s)null!=s.__html&&q(a,s.__html);else{var o=H[typeof n.children]?n.children:null,r=null!=o?null:n.children;if(null!=o)D(a,o);else if(null!=r)for(var i=this.mountChildren(r,e,t),l=0;l<i.length;l++)a.appendChild(i[l])}},receiveComponent:function(e,n,t){var a=this._currentElement;this._currentElement=e,this.updateComponent(n,a,e,t)},updateComponent:function(e,n,t,a){var s=n.props,o=this._currentElement.props;switch(this._tag){case"button":s=C.getNativeProps(this,s),o=C.getNativeProps(this,o);break;case"input":S.updateWrapper(this),s=S.getNativeProps(this,s),o=S.getNativeProps(this,o);break;case"option":s=W.getNativeProps(this,s),o=W.getNativeProps(this,o);break;case"select":s=T.getNativeProps(this,s),o=T.getNativeProps(this,o);break;case"textarea":A.updateWrapper(this),s=A.getNativeProps(this,s),o=A.getNativeProps(this,o)}l(this,o),this._updateDOMProperties(s,o,e,null),this._updateDOMChildren(s,o,e,a),!B&&this._nodeWithLegacyProperties&&(this._nodeWithLegacyProperties.props=o),"select"===this._tag&&e.getReactMountReady().enqueue(u,this)},_updateDOMProperties:function(e,n,t,a){var s,o,r;for(s in e)if(!n.hasOwnProperty(s)&&e.hasOwnProperty(s))if(s===J){var i=this._previousStyleCopy;for(o in i)i.hasOwnProperty(o)&&(r=r||{},r[o]="");this._previousStyleCopy=null}else U.hasOwnProperty(s)?e[s]&&_(this._rootNodeID,s):(w.properties[s]||w.isCustomAttribute(s))&&(a||(a=P.getNode(this._rootNodeID)),j.deleteValueForProperty(a,s));for(s in n){var l=n[s],c=s===J?this._previousStyleCopy:e[s];if(n.hasOwnProperty(s)&&l!==c)if(s===J)if(l?l=this._previousStyleCopy=R({},l):this._previousStyleCopy=null,c){for(o in c)!c.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(r=r||{},r[o]="");for(o in l)l.hasOwnProperty(o)&&c[o]!==l[o]&&(r=r||{},r[o]=l[o])}else r=l;else U.hasOwnProperty(s)?l?p(this._rootNodeID,s,l,t):c&&_(this._rootNodeID,s):f(this._tag,n)?(a||(a=P.getNode(this._rootNodeID)),s===G&&(l=null),j.setValueForAttribute(a,s,l)):(w.properties[s]||w.isCustomAttribute(s))&&(a||(a=P.getNode(this._rootNodeID)),null!=l?j.setValueForProperty(a,s,l):j.deleteValueForProperty(a,s))}r&&(a||(a=P.getNode(this._rootNodeID)),b.setValueForStyles(a,r))},_updateDOMChildren:function(e,n,t,a){var s=H[typeof e.children]?e.children:null,o=H[typeof n.children]?n.children:null,r=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,i=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,l=null!=s?null:e.children,p=null!=o?null:n.children,c=null!=s||null!=r,d=null!=o||null!=i;null!=l&&null==p?this.updateChildren(null,t,a):c&&!d&&this.updateTextContent(""),null!=o?s!==o&&this.updateTextContent(""+o):null!=i?r!==i&&this.updateMarkup(""+i):null!=p&&this.updateChildren(p,t,a)},unmountComponent:function(){switch(this._tag){case"iframe":case"img":case"form":case"video":case"audio":var e=this._wrapperState.listeners;if(e)for(var n=0;n<e.length;n++)e[n].remove();break;case"input":S.unmountWrapper(this);break;case"html":case"head":case"body":M(!1)}if(this.unmountChildren(),x.deleteAllListeners(this._rootNodeID),k.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._wrapperState=null,this._nodeWithLegacyProperties){var t=this._nodeWithLegacyProperties;t._reactInternalComponent=null,this._nodeWithLegacyProperties=null}},getPublicInstance:function(){if(!this._nodeWithLegacyProperties){var e=P.getNode(this._rootNodeID);e._reactInternalComponent=this,e.getDOMNode=a,e.isMounted=s,e.setState=o,e.replaceState=o,e.forceUpdate=o,e.setProps=r,e.replaceProps=i,e.props=this._currentElement.props,this._nodeWithLegacyProperties=e}return this._nodeWithLegacyProperties}},I.measureMethods(g,"ReactDOMComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent"}),R(g.prototype,g.Mixin,E.Mixin),e.exports=g},function(e,n,t){"use strict";var a=t(28),s=t(91),o=t(95),r={componentDidMount:function(){this.props.autoFocus&&o(s(this))}},i={Mixin:r,focusDOMComponent:function(){o(a.getNode(this._rootNodeID))}};e.exports=i},function(e,n){"use strict";function t(e){try{e.focus()}catch(n){}}e.exports=t},function(e,n,t){"use strict";var a=t(97),s=t(9),o=t(18),r=(t(98),t(100)),i=t(101),l=t(103),p=(t(25),l(function(e){return i(e)})),c=!1,d="cssFloat";if(s.canUseDOM){var h=document.createElement("div").style;try{h.font=""}catch(u){c=!0}void 0===document.documentElement.style.cssFloat&&(d="styleFloat")}var m={createMarkupForStyles:function(e){var n="";for(var t in e)if(e.hasOwnProperty(t)){var a=e[t];null!=a&&(n+=p(t)+":",n+=r(t,a)+";")}return n||null},setValueForStyles:function(e,n){var t=e.style;for(var s in n)if(n.hasOwnProperty(s)){var o=r(s,n[s]);if("float"===s&&(s=d),o)t[s]=o;else{var i=c&&a.shorthandPropertyExpansions[s];if(i)for(var l in i)t[l]="";else t[s]=""}}}};o.measureMethods(m,"CSSPropertyOperations",{setValueForStyles:"setValueForStyles"}),e.exports=m},function(e,n){"use strict";function t(e,n){return e+n.charAt(0).toUpperCase()+n.substring(1)}var a={animationIterationCount:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,stopOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},s=["Webkit","ms","Moz","O"];Object.keys(a).forEach(function(e){s.forEach(function(n){a[t(n,e)]=a[e]})});var o={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},r={isUnitlessNumber:a,shorthandPropertyExpansions:o};e.exports=r},function(e,n,t){"use strict";function a(e){return s(e.replace(o,"ms-"))}var s=t(99),o=/^-ms-/;e.exports=a},function(e,n){"use strict";function t(e){return e.replace(a,function(e,n){return n.toUpperCase()})}var a=/-(.)/g;e.exports=t},function(e,n,t){"use strict";function a(e,n){var t=null==n||"boolean"==typeof n||""===n;if(t)return"";var a=isNaN(n);return a||0===n||o.hasOwnProperty(e)&&o[e]?""+n:("string"==typeof n&&(n=n.trim()),n+"px")}var s=t(97),o=s.isUnitlessNumber;e.exports=a},function(e,n,t){"use strict";function a(e){return s(e).replace(o,"-ms-")}var s=t(102),o=/^ms-/;e.exports=a},function(e,n){"use strict";function t(e){return e.replace(a,"-$1").toLowerCase()}var a=/([A-Z])/g;e.exports=t},function(e,n){"use strict";function t(e){var n={};return function(t){return n.hasOwnProperty(t)||(n[t]=e.call(this,t)),n[t]}}e.exports=t},function(e,n){"use strict";var t={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},a={getNativeProps:function(e,n,a){if(!n.disabled)return n;var s={};for(var o in n)n.hasOwnProperty(o)&&!t[o]&&(s[o]=n[o]);return s}};e.exports=a},function(e,n,t){"use strict";function a(){this._rootNodeID&&h.updateWrapper(this)}function s(e){var n=this._currentElement.props,t=r.executeOnChange(n,e);l.asap(a,this);var s=n.name;if("radio"===n.type&&null!=s){for(var o=i.getNode(this._rootNodeID),p=o;p.parentNode;)p=p.parentNode;for(var h=p.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),u=0;u<h.length;u++){var m=h[u];if(m!==o&&m.form===o.form){var f=i.getID(m);f?void 0:c(!1);var g=d[f];g?void 0:c(!1),l.asap(a,g)}}}return t}var o=t(27),r=t(106),i=t(28),l=t(54),p=t(39),c=t(13),d={},h={getNativeProps:function(e,n,t){var a=r.getValue(n),s=r.getChecked(n),o=p({},n,{defaultChecked:void 0,defaultValue:void 0,value:null!=a?a:e._wrapperState.initialValue,checked:null!=s?s:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return o},mountWrapper:function(e,n){var t=n.defaultValue;e._wrapperState={initialChecked:n.defaultChecked||!1,initialValue:null!=t?t:null,onChange:s.bind(e)}},mountReadyWrapper:function(e){d[e._rootNodeID]=e},unmountWrapper:function(e){delete d[e._rootNodeID]},updateWrapper:function(e){var n=e._currentElement.props,t=n.checked;null!=t&&o.updatePropertyByID(e._rootNodeID,"checked",t||!1);var a=r.getValue(n);null!=a&&o.updatePropertyByID(e._rootNodeID,"value",""+a)}};e.exports=h},function(e,n,t){"use strict";function a(e){null!=e.checkedLink&&null!=e.valueLink?p(!1):void 0}function s(e){a(e),null!=e.value||null!=e.onChange?p(!1):void 0}function o(e){a(e),null!=e.checked||null!=e.onChange?p(!1):void 0}function r(e){if(e){var n=e.getName();if(n)return" Check the render method of `"+n+"`."}return""}var i=t(107),l=t(65),p=t(13),c=(t(25),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),d={value:function(e,n,t){return!e[n]||c[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,n,t){return!e[n]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:i.func},h={},u={checkPropTypes:function(e,n,t){for(var a in d){if(d.hasOwnProperty(a))var s=d[a](n,a,e,l.prop);if(s instanceof Error&&!(s.message in h)){h[s.message]=!0;r(t)}}},getValue:function(e){return e.valueLink?(s(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(o(e),e.checkedLink.value):e.checked},executeOnChange:function(e,n){return e.valueLink?(s(e),e.valueLink.requestChange(n.target.value)):e.checkedLink?(o(e),e.checkedLink.requestChange(n.target.checked)):e.onChange?e.onChange.call(void 0,n):void 0}};e.exports=u},function(e,n,t){"use strict";function a(e){function n(n,t,a,s,o,r){if(s=s||x,r=r||a,null==t[a]){var i=w[o];return n?new Error("Required "+i+" `"+r+"` was not specified in "+("`"+s+"`.")):null}return e(t,a,s,o,r)}var t=n.bind(null,!1);return t.isRequired=n.bind(null,!0),t}function s(e){function n(n,t,a,s,o){var r=n[t],i=f(r);if(i!==e){var l=w[s],p=g(r);return new Error("Invalid "+l+" `"+o+"` of type "+("`"+p+"` supplied to `"+a+"`, expected ")+("`"+e+"`."))}return null}return a(n)}function o(){return a(j.thatReturns(null))}function r(e){function n(n,t,a,s,o){var r=n[t];if(!Array.isArray(r)){var i=w[s],l=f(r);return new Error("Invalid "+i+" `"+o+"` of type "+("`"+l+"` supplied to `"+a+"`, expected an array."))}for(var p=0;p<r.length;p++){var c=e(r,p,a,s,o+"["+p+"]");if(c instanceof Error)return c}return null}return a(n)}function i(){function e(e,n,t,a,s){if(!b.isValidElement(e[n])){var o=w[a];return new Error("Invalid "+o+" `"+s+"` supplied to "+("`"+t+"`, expected a single ReactElement."))}return null}return a(e)}function l(e){function n(n,t,a,s,o){if(!(n[t]instanceof e)){var r=w[s],i=e.name||x,l=y(n[t]);return new Error("Invalid "+r+" `"+o+"` of type "+("`"+l+"` supplied to `"+a+"`, expected ")+("instance of `"+i+"`."))}return null}return a(n)}function p(e){function n(n,t,a,s,o){for(var r=n[t],i=0;i<e.length;i++)if(r===e[i])return null;var l=w[s],p=JSON.stringify(e);return new Error("Invalid "+l+" `"+o+"` of value `"+r+"` "+("supplied to `"+a+"`, expected one of "+p+"."))}return a(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOf, expected an instance of array.")})}function c(e){function n(n,t,a,s,o){var r=n[t],i=f(r);if("object"!==i){var l=w[s];return new Error("Invalid "+l+" `"+o+"` of type "+("`"+i+"` supplied to `"+a+"`, expected an object."))}for(var p in r)if(r.hasOwnProperty(p)){var c=e(r,p,a,s,o+"."+p);if(c instanceof Error)return c}return null}return a(n)}function d(e){function n(n,t,a,s,o){for(var r=0;r<e.length;r++){var i=e[r];if(null==i(n,t,a,s,o))return null}var l=w[s];return new Error("Invalid "+l+" `"+o+"` supplied to "+("`"+a+"`."))}return a(Array.isArray(e)?n:function(){return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")})}function h(){function e(e,n,t,a,s){if(!m(e[n])){var o=w[a];return new Error("Invalid "+o+" `"+s+"` supplied to "+("`"+t+"`, expected a ReactNode."))}return null}return a(e)}function u(e){function n(n,t,a,s,o){var r=n[t],i=f(r);if("object"!==i){var l=w[s];return new Error("Invalid "+l+" `"+o+"` of type `"+i+"` "+("supplied to `"+a+"`, expected `object`."))}for(var p in e){var c=e[p];if(c){var d=c(r,p,a,s,o+"."+p);if(d)return d}}return null}return a(n)}function m(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(m);if(null===e||b.isValidElement(e))return!0;var n=v(e);if(!n)return!1;var t,a=n.call(e);if(n!==e.entries){for(;!(t=a.next()).done;)if(!m(t.value))return!1}else for(;!(t=a.next()).done;){var s=t.value;if(s&&!m(s[1]))return!1}return!0;default:return!1}}function f(e){var n=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":n}function g(e){var n=f(e);if("object"===n){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return n}function y(e){return e.constructor&&e.constructor.name?e.constructor.name:"<<anonymous>>"}var b=t(42),w=t(66),j=t(15),v=t(108),x="<<anonymous>>",k={array:s("array"),bool:s("boolean"),func:s("function"),number:s("number"),object:s("object"),string:s("string"),any:o(),arrayOf:r,element:i(),instanceOf:l,node:h(),objectOf:c,oneOf:p,oneOfType:d,shape:u};e.exports=k},function(e,n){"use strict";function t(e){var n=e&&(a&&e[a]||e[s]);return"function"==typeof n?n:void 0}var a="function"==typeof Symbol&&Symbol.iterator,s="@@iterator";e.exports=t},function(e,n,t){"use strict";var a=t(110),s=t(112),o=t(39),r=(t(25),s.valueContextKey),i={mountWrapper:function(e,n,t){var a=t[r],s=null;if(null!=a)if(s=!1,Array.isArray(a)){for(var o=0;o<a.length;o++)if(""+a[o]==""+n.value){s=!0;break}}else s=""+a==""+n.value;e._wrapperState={selected:s}},getNativeProps:function(e,n,t){var s=o({selected:void 0,children:void 0},n);null!=e._wrapperState.selected&&(s.selected=e._wrapperState.selected);var r="";return a.forEach(n.children,function(e){null!=e&&("string"==typeof e||"number"==typeof e)&&(r+=e)}),s.children=r,s}};e.exports=i},function(e,n,t){"use strict";function a(e){return(""+e).replace(j,"//")}function s(e,n){this.func=e,this.context=n,this.count=0}function o(e,n,t){var a=e.func,s=e.context;a.call(s,n,e.count++)}function r(e,n,t){if(null==e)return e;var a=s.getPooled(n,t);y(e,o,a),s.release(a)}function i(e,n,t,a){this.result=e,this.keyPrefix=n,this.func=t,this.context=a,this.count=0}function l(e,n,t){var s=e.result,o=e.keyPrefix,r=e.func,i=e.context,l=r.call(i,n,e.count++);Array.isArray(l)?p(l,s,t,g.thatReturnsArgument):null!=l&&(f.isValidElement(l)&&(l=f.cloneAndReplaceKey(l,o+(l!==n?a(l.key||"")+"/":"")+t)),s.push(l))}function p(e,n,t,s,o){var r="";null!=t&&(r=a(t)+"/");var p=i.getPooled(n,r,s,o);y(e,l,p),i.release(p)}function c(e,n,t){if(null==e)return e;var a=[];return p(e,a,null,n,t),a}function d(e,n,t){return null}function h(e,n){return y(e,d,null)}function u(e){var n=[];return p(e,n,null,g.thatReturnsArgument),n}var m=t(56),f=t(42),g=t(15),y=t(111),b=m.twoArgumentPooler,w=m.fourArgumentPooler,j=/\/(?!\/)/g;s.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},m.addPoolingTo(s,b),i.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},m.addPoolingTo(i,w);var v={forEach:r,map:c,mapIntoWithKeyPrefixInternal:p,count:h,toArray:u};e.exports=v},function(e,n,t){"use strict";function a(e){return f[e]}function s(e,n){return e&&null!=e.key?r(e.key):n.toString(36)}function o(e){return(""+e).replace(g,a)}function r(e){return"$"+o(e)}function i(e,n,t,a){var o=typeof e;if(("undefined"===o||"boolean"===o)&&(e=null),null===e||"string"===o||"number"===o||p.isValidElement(e))return t(a,e,""===n?u+s(e,0):n),1;var l,c,f=0,g=""===n?u:n+m;if(Array.isArray(e))for(var y=0;y<e.length;y++)l=e[y],c=g+s(l,y),f+=i(l,c,t,a);else{var b=d(e);if(b){var w,j=b.call(e);if(b!==e.entries)for(var v=0;!(w=j.next()).done;)l=w.value,c=g+s(l,v++),f+=i(l,c,t,a);else for(;!(w=j.next()).done;){var x=w.value;x&&(l=x[1],c=g+r(x[0])+m+s(l,0),f+=i(l,c,t,a))}}else if("object"===o){String(e);h(!1)}}return f}function l(e,n,t){return null==e?0:i(e,"",n,t)}var p=(t(5),t(42)),c=t(45),d=t(108),h=t(13),u=(t(25),c.SEPARATOR),m=":",f={"=":"=0",".":"=1",":":"=2"},g=/[=.:]/g;e.exports=l},function(e,n,t){"use strict";function a(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,n=r.getValue(e);null!=n&&s(this,e,n)}}function s(e,n,t){var a,s,o=i.getNode(e._rootNodeID).options;if(n){for(a={},s=0;s<t.length;s++)a[""+t[s]]=!0;for(s=0;s<o.length;s++){var r=a.hasOwnProperty(o[s].value);o[s].selected!==r&&(o[s].selected=r)}}else{for(a=""+t,s=0;s<o.length;s++)if(o[s].value===a)return void(o[s].selected=!0);o.length&&(o[0].selected=!0)}}function o(e){var n=this._currentElement.props,t=r.executeOnChange(n,e);return this._wrapperState.pendingUpdate=!0,l.asap(a,this),t}var r=t(106),i=t(28),l=t(54),p=t(39),c=(t(25),"__ReactDOMSelect_value$"+Math.random().toString(36).slice(2)),d={valueContextKey:c,getNativeProps:function(e,n,t){return p({},n,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,n){var t=r.getValue(n);e._wrapperState={pendingUpdate:!1,initialValue:null!=t?t:n.defaultValue,onChange:o.bind(e),wasMultiple:Boolean(n.multiple)}},processChildContext:function(e,n,t){var a=p({},t);return a[c]=e._wrapperState.initialValue,a},postUpdateWrapper:function(e){var n=e._currentElement.props;e._wrapperState.initialValue=void 0;var t=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(n.multiple);var a=r.getValue(n);null!=a?(e._wrapperState.pendingUpdate=!1,s(e,Boolean(n.multiple),a)):t!==Boolean(n.multiple)&&(null!=n.defaultValue?s(e,Boolean(n.multiple),n.defaultValue):s(e,Boolean(n.multiple),n.multiple?[]:""))}};e.exports=d},function(e,n,t){"use strict";function a(){this._rootNodeID&&c.updateWrapper(this)}function s(e){var n=this._currentElement.props,t=o.executeOnChange(n,e);return i.asap(a,this),t}var o=t(106),r=t(27),i=t(54),l=t(39),p=t(13),c=(t(25),{getNativeProps:function(e,n,t){null!=n.dangerouslySetInnerHTML?p(!1):void 0;var a=l({},n,{defaultValue:void 0,value:void 0,children:e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return a},mountWrapper:function(e,n){var t=n.defaultValue,a=n.children;null!=a&&(null!=t?p(!1):void 0,Array.isArray(a)&&(a.length<=1?void 0:p(!1),a=a[0]),t=""+a),null==t&&(t="");var r=o.getValue(n);e._wrapperState={initialValue:""+(null!=r?r:t),onChange:s.bind(e)}},updateWrapper:function(e){var n=e._currentElement.props,t=o.getValue(n);null!=t&&r.updatePropertyByID(e._rootNodeID,"value",""+t)}});e.exports=c},function(e,n,t){"use strict";function a(e,n,t){g.push({parentID:e,parentNode:null,type:d.INSERT_MARKUP,markupIndex:y.push(n)-1,content:null,fromIndex:null,toIndex:t})}
function s(e,n,t){g.push({parentID:e,parentNode:null,type:d.MOVE_EXISTING,markupIndex:null,content:null,fromIndex:n,toIndex:t})}function o(e,n){g.push({parentID:e,parentNode:null,type:d.REMOVE_NODE,markupIndex:null,content:null,fromIndex:n,toIndex:null})}function r(e,n){g.push({parentID:e,parentNode:null,type:d.SET_MARKUP,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function i(e,n){g.push({parentID:e,parentNode:null,type:d.TEXT_CONTENT,markupIndex:null,content:n,fromIndex:null,toIndex:null})}function l(){g.length&&(c.processChildrenUpdates(g,y),p())}function p(){g.length=0,y.length=0}var c=t(64),d=t(16),h=(t(5),t(50)),u=t(115),m=t(116),f=0,g=[],y=[],b={Mixin:{_reconcilerInstantiateChildren:function(e,n,t){return u.instantiateChildren(e,n,t)},_reconcilerUpdateChildren:function(e,n,t,a){var s;return s=m(n),u.updateChildren(e,s,t,a)},mountChildren:function(e,n,t){var a=this._reconcilerInstantiateChildren(e,n,t);this._renderedChildren=a;var s=[],o=0;for(var r in a)if(a.hasOwnProperty(r)){var i=a[r],l=this._rootNodeID+r,p=h.mountComponent(i,l,n,t);i._mountIndex=o++,s.push(p)}return s},updateTextContent:function(e){f++;var n=!0;try{var t=this._renderedChildren;u.unmountChildren(t);for(var a in t)t.hasOwnProperty(a)&&this._unmountChild(t[a]);this.setTextContent(e),n=!1}finally{f--,f||(n?p():l())}},updateMarkup:function(e){f++;var n=!0;try{var t=this._renderedChildren;u.unmountChildren(t);for(var a in t)t.hasOwnProperty(a)&&this._unmountChildByName(t[a],a);this.setMarkup(e),n=!1}finally{f--,f||(n?p():l())}},updateChildren:function(e,n,t){f++;var a=!0;try{this._updateChildren(e,n,t),a=!1}finally{f--,f||(a?p():l())}},_updateChildren:function(e,n,t){var a=this._renderedChildren,s=this._reconcilerUpdateChildren(a,e,n,t);if(this._renderedChildren=s,s||a){var o,r=0,i=0;for(o in s)if(s.hasOwnProperty(o)){var l=a&&a[o],p=s[o];l===p?(this.moveChild(l,i,r),r=Math.max(l._mountIndex,r),l._mountIndex=i):(l&&(r=Math.max(l._mountIndex,r),this._unmountChild(l)),this._mountChildByNameAtIndex(p,o,i,n,t)),i++}for(o in a)!a.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||this._unmountChild(a[o])}},unmountChildren:function(){var e=this._renderedChildren;u.unmountChildren(e),this._renderedChildren=null},moveChild:function(e,n,t){e._mountIndex<t&&s(this._rootNodeID,e._mountIndex,n)},createChild:function(e,n){a(this._rootNodeID,n,e._mountIndex)},removeChild:function(e){o(this._rootNodeID,e._mountIndex)},setTextContent:function(e){i(this._rootNodeID,e)},setMarkup:function(e){r(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,n,t,a,s){var o=this._rootNodeID+n,r=h.mountComponent(e,o,a,s);e._mountIndex=t,this.createChild(e,r)},_unmountChild:function(e){this.removeChild(e),e._mountIndex=null}}};e.exports=b},function(e,n,t){"use strict";function a(e,n,t){var a=void 0===e[t];null!=n&&a&&(e[t]=o(n,null))}var s=t(50),o=t(62),r=t(67),i=t(111),l=(t(25),{instantiateChildren:function(e,n,t){if(null==e)return null;var s={};return i(e,a,s),s},updateChildren:function(e,n,t,a){if(!n&&!e)return null;var i;for(i in n)if(n.hasOwnProperty(i)){var l=e&&e[i],p=l&&l._currentElement,c=n[i];if(null!=l&&r(p,c))s.receiveComponent(l,c,t,a),n[i]=l;else{l&&s.unmountComponent(l,i);var d=o(c,null);n[i]=d}}for(i in e)!e.hasOwnProperty(i)||n&&n.hasOwnProperty(i)||s.unmountComponent(e[i]);return n},unmountChildren:function(e){for(var n in e)if(e.hasOwnProperty(n)){var t=e[n];s.unmountComponent(t)}}});e.exports=l},function(e,n,t){"use strict";function a(e,n,t){var a=e,s=void 0===a[t];s&&null!=n&&(a[t]=n)}function s(e){if(null==e)return e;var n={};return o(e,a,n),n}var o=t(111);t(25);e.exports=s},function(e,n){"use strict";function t(e,n){if(e===n)return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),s=Object.keys(n);if(t.length!==s.length)return!1;for(var o=a.bind(n),r=0;r<t.length;r++)if(!o(t[r])||e[t[r]]!==n[t[r]])return!1;return!0}var a=Object.prototype.hasOwnProperty;e.exports=t},function(e,n,t){"use strict";function a(e){var n=h.getID(e),t=d.getReactRootIDFromNodeID(n),a=h.findReactContainerForID(t),s=h.getFirstReactDOM(a);return s}function s(e,n){this.topLevelType=e,this.nativeEvent=n,this.ancestors=[]}function o(e){r(e)}function r(e){for(var n=h.getFirstReactDOM(f(e.nativeEvent))||window,t=n;t;)e.ancestors.push(t),t=a(t);for(var s=0;s<e.ancestors.length;s++){n=e.ancestors[s];var o=h.getID(n)||"";y._handleTopLevel(e.topLevelType,n,o,e.nativeEvent,f(e.nativeEvent))}}function i(e){var n=g(window);e(n)}var l=t(119),p=t(9),c=t(56),d=t(45),h=t(28),u=t(54),m=t(39),f=t(81),g=t(120);m(s.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),c.addPoolingTo(s,c.twoArgumentPooler);var y={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:p.canUseDOM?window:null,setHandleTopLevel:function(e){y._handleTopLevel=e},setEnabled:function(e){y._enabled=!!e},isEnabled:function(){return y._enabled},trapBubbledEvent:function(e,n,t){var a=t;return a?l.listen(a,n,y.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,n,t){var a=t;return a?l.capture(a,n,y.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var n=i.bind(null,e);l.listen(window,"scroll",n)},dispatchEvent:function(e,n){if(y._enabled){var t=s.getPooled(e,n);try{u.batchedUpdates(o,t)}finally{s.release(t)}}}};e.exports=y},function(e,n,t){"use strict";var a=t(15),s={listen:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!1),{remove:function(){e.removeEventListener(n,t,!1)}}):e.attachEvent?(e.attachEvent("on"+n,t),{remove:function(){e.detachEvent("on"+n,t)}}):void 0},capture:function(e,n,t){return e.addEventListener?(e.addEventListener(n,t,!0),{remove:function(){e.removeEventListener(n,t,!0)}}):{remove:a}},registerDefault:function(){}};e.exports=s},function(e,n){"use strict";function t(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}e.exports=t},function(e,n,t){"use strict";var a=t(23),s=t(31),o=t(64),r=t(122),i=t(68),l=t(29),p=t(69),c=t(18),d=t(46),h=t(54),u={Component:o.injection,Class:r.injection,DOMProperty:a.injection,EmptyComponent:i.injection,EventPluginHub:s.injection,EventEmitter:l.injection,NativeComponent:p.injection,Perf:c.injection,RootIndex:d.injection,Updates:h.injection};e.exports=u},function(e,n,t){"use strict";function a(e,n){var t=x.hasOwnProperty(n)?x[n]:null;C.hasOwnProperty(n)&&(t!==j.OVERRIDE_BASE?g(!1):void 0),e.hasOwnProperty(n)&&(t!==j.DEFINE_MANY&&t!==j.DEFINE_MANY_MERGED?g(!1):void 0)}function s(e,n){if(n){"function"==typeof n?g(!1):void 0,h.isValidElement(n)?g(!1):void 0;var t=e.prototype;n.hasOwnProperty(w)&&k.mixins(e,n.mixins);for(var s in n)if(n.hasOwnProperty(s)&&s!==w){var o=n[s];if(a(t,s),k.hasOwnProperty(s))k[s](e,o);else{var r=x.hasOwnProperty(s),p=t.hasOwnProperty(s),c="function"==typeof o,d=c&&!r&&!p&&n.autobind!==!1;if(d)t.__reactAutoBindMap||(t.__reactAutoBindMap={}),t.__reactAutoBindMap[s]=o,t[s]=o;else if(p){var u=x[s];!r||u!==j.DEFINE_MANY_MERGED&&u!==j.DEFINE_MANY?g(!1):void 0,u===j.DEFINE_MANY_MERGED?t[s]=i(t[s],o):u===j.DEFINE_MANY&&(t[s]=l(t[s],o))}else t[s]=o}}}}function o(e,n){if(n)for(var t in n){var a=n[t];if(n.hasOwnProperty(t)){var s=t in k;s?g(!1):void 0;var o=t in e;o?g(!1):void 0,e[t]=a}}}function r(e,n){e&&n&&"object"==typeof e&&"object"==typeof n?void 0:g(!1);for(var t in n)n.hasOwnProperty(t)&&(void 0!==e[t]?g(!1):void 0,e[t]=n[t]);return e}function i(e,n){return function(){var t=e.apply(this,arguments),a=n.apply(this,arguments);if(null==t)return a;if(null==a)return t;var s={};return r(s,t),r(s,a),s}}function l(e,n){return function(){e.apply(this,arguments),n.apply(this,arguments)}}function p(e,n){var t=n.bind(e);return t}function c(e){for(var n in e.__reactAutoBindMap)if(e.__reactAutoBindMap.hasOwnProperty(n)){var t=e.__reactAutoBindMap[n];e[n]=p(e,t)}}var d=t(123),h=t(42),u=(t(65),t(66),t(124)),m=t(39),f=t(58),g=t(13),y=t(17),b=t(79),w=(t(25),b({mixins:null})),j=y({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),v=[],x={mixins:j.DEFINE_MANY,statics:j.DEFINE_MANY,propTypes:j.DEFINE_MANY,contextTypes:j.DEFINE_MANY,childContextTypes:j.DEFINE_MANY,getDefaultProps:j.DEFINE_MANY_MERGED,getInitialState:j.DEFINE_MANY_MERGED,getChildContext:j.DEFINE_MANY_MERGED,render:j.DEFINE_ONCE,componentWillMount:j.DEFINE_MANY,componentDidMount:j.DEFINE_MANY,componentWillReceiveProps:j.DEFINE_MANY,shouldComponentUpdate:j.DEFINE_ONCE,componentWillUpdate:j.DEFINE_MANY,componentDidUpdate:j.DEFINE_MANY,componentWillUnmount:j.DEFINE_MANY,updateComponent:j.OVERRIDE_BASE},k={displayName:function(e,n){e.displayName=n},mixins:function(e,n){if(n)for(var t=0;t<n.length;t++)s(e,n[t])},childContextTypes:function(e,n){e.childContextTypes=m({},e.childContextTypes,n)},contextTypes:function(e,n){e.contextTypes=m({},e.contextTypes,n)},getDefaultProps:function(e,n){e.getDefaultProps?e.getDefaultProps=i(e.getDefaultProps,n):e.getDefaultProps=n},propTypes:function(e,n){e.propTypes=m({},e.propTypes,n)},statics:function(e,n){o(e,n)},autobind:function(){}},C={replaceState:function(e,n){this.updater.enqueueReplaceState(this,e),n&&this.updater.enqueueCallback(this,n)},isMounted:function(){return this.updater.isMounted(this)},setProps:function(e,n){this.updater.enqueueSetProps(this,e),n&&this.updater.enqueueCallback(this,n)},replaceProps:function(e,n){this.updater.enqueueReplaceProps(this,e),n&&this.updater.enqueueCallback(this,n)}},S=function(){};m(S.prototype,d.prototype,C);var W={createClass:function(e){var n=function(e,n,t){this.__reactAutoBindMap&&c(this),this.props=e,this.context=n,this.refs=f,this.updater=t||u,this.state=null;var a=this.getInitialState?this.getInitialState():null;"object"!=typeof a||Array.isArray(a)?g(!1):void 0,this.state=a};n.prototype=new S,n.prototype.constructor=n,v.forEach(s.bind(null,n)),s(n,e),n.getDefaultProps&&(n.defaultProps=n.getDefaultProps()),n.prototype.render?void 0:g(!1);for(var t in x)n.prototype[t]||(n.prototype[t]=null);return n},injection:{injectMixin:function(e){v.push(e)}}};e.exports=W},function(e,n,t){"use strict";function a(e,n,t){this.props=e,this.context=n,this.refs=o,this.updater=t||s}var s=t(124),o=(t(43),t(58)),r=t(13);t(25);a.prototype.isReactComponent={},a.prototype.setState=function(e,n){"object"!=typeof e&&"function"!=typeof e&&null!=e?r(!1):void 0,this.updater.enqueueSetState(this,e),n&&this.updater.enqueueCallback(this,n)},a.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e)};e.exports=a},function(e,n,t){"use strict";function a(e,n){}var s=(t(25),{isMounted:function(e){return!1},enqueueCallback:function(e,n){},enqueueForceUpdate:function(e){a(e,"forceUpdate")},enqueueReplaceState:function(e,n){a(e,"replaceState")},enqueueSetState:function(e,n){a(e,"setState")},enqueueSetProps:function(e,n){a(e,"setProps")},enqueueReplaceProps:function(e,n){a(e,"replaceProps")}});e.exports=s},function(e,n,t){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=s.getPooled(null),this.useCreateElement=!e&&i.useCreateElement}var s=t(55),o=t(56),r=t(29),i=t(41),l=t(126),p=t(57),c=t(39),d={initialize:l.getSelectionInformation,close:l.restoreSelection},h={initialize:function(){var e=r.isEnabled();return r.setEnabled(!1),e},close:function(e){r.setEnabled(e)}},u={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},m=[d,h,u],f={getTransactionWrappers:function(){return m},getReactMountReady:function(){return this.reactMountReady},destructor:function(){s.release(this.reactMountReady),this.reactMountReady=null}};c(a.prototype,p.Mixin,f),o.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";function a(e){return o(document.documentElement,e)}var s=t(127),o=t(59),r=t(95),i=t(129),l={hasSelectionCapabilities:function(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&"text"===e.type||"textarea"===n||"true"===e.contentEditable)},getSelectionInformation:function(){var e=i();return{focusedElem:e,selectionRange:l.hasSelectionCapabilities(e)?l.getSelection(e):null}},restoreSelection:function(e){var n=i(),t=e.focusedElem,s=e.selectionRange;n!==t&&a(t)&&(l.hasSelectionCapabilities(t)&&l.setSelection(t,s),r(t))},getSelection:function(e){var n;if("selectionStart"in e)n={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var t=document.selection.createRange();t.parentElement()===e&&(n={start:-t.moveStart("character",-e.value.length),end:-t.moveEnd("character",-e.value.length)})}else n=s.getOffsets(e);return n||{start:0,end:0}},setSelection:function(e,n){var t=n.start,a=n.end;if("undefined"==typeof a&&(a=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(a,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var o=e.createTextRange();o.collapse(!0),o.moveStart("character",t),o.moveEnd("character",a-t),o.select()}else s.setOffsets(e,n)}};e.exports=l},function(e,n,t){"use strict";function a(e,n,t,a){return e===t&&n===a}function s(e){var n=document.selection,t=n.createRange(),a=t.text.length,s=t.duplicate();s.moveToElementText(e),s.setEndPoint("EndToStart",t);var o=s.text.length,r=o+a;return{start:o,end:r}}function o(e){var n=window.getSelection&&window.getSelection();if(!n||0===n.rangeCount)return null;var t=n.anchorNode,s=n.anchorOffset,o=n.focusNode,r=n.focusOffset,i=n.getRangeAt(0);try{i.startContainer.nodeType,i.endContainer.nodeType}catch(l){return null}var p=a(n.anchorNode,n.anchorOffset,n.focusNode,n.focusOffset),c=p?0:i.toString().length,d=i.cloneRange();d.selectNodeContents(e),d.setEnd(i.startContainer,i.startOffset);var h=a(d.startContainer,d.startOffset,d.endContainer,d.endOffset),u=h?0:d.toString().length,m=u+c,f=document.createRange();f.setStart(t,s),f.setEnd(o,r);var g=f.collapsed;return{start:g?m:u,end:g?u:m}}function r(e,n){var t,a,s=document.selection.createRange().duplicate();"undefined"==typeof n.end?(t=n.start,a=t):n.start>n.end?(t=n.end,a=n.start):(t=n.start,a=n.end),s.moveToElementText(e),s.moveStart("character",t),s.setEndPoint("EndToStart",s),s.moveEnd("character",a-t),s.select()}function i(e,n){if(window.getSelection){var t=window.getSelection(),a=e[c()].length,s=Math.min(n.start,a),o="undefined"==typeof n.end?s:Math.min(n.end,a);if(!t.extend&&s>o){var r=o;o=s,s=r}var i=p(e,s),l=p(e,o);if(i&&l){var d=document.createRange();d.setStart(i.node,i.offset),t.removeAllRanges(),s>o?(t.addRange(d),t.extend(l.node,l.offset)):(d.setEnd(l.node,l.offset),t.addRange(d))}}}var l=t(9),p=t(128),c=t(75),d=l.canUseDOM&&"selection"in document&&!("getSelection"in window),h={getOffsets:d?s:o,setOffsets:d?r:i};e.exports=h},function(e,n){"use strict";function t(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function a(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function s(e,n){for(var s=t(e),o=0,r=0;s;){if(3===s.nodeType){if(r=o+s.textContent.length,n>=o&&r>=n)return{node:s,offset:n-o};o=r}s=t(a(s))}}e.exports=s},function(e,n){"use strict";function t(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}e.exports=t},function(e,n,t){"use strict";function a(e){if("selectionStart"in e&&l.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var n=window.getSelection();return{anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}}if(document.selection){var t=document.selection.createRange();return{parentElement:t.parentElement(),text:t.text,top:t.boundingTop,left:t.boundingLeft}}}function s(e,n){if(j||null==y||y!==c())return null;var t=a(y);if(!w||!u(w,t)){w=t;var s=p.getPooled(g.select,b,e,n);return s.type="select",s.target=y,r.accumulateTwoPhaseDispatches(s),s}return null}var o=t(30),r=t(73),i=t(9),l=t(126),p=t(77),c=t(129),d=t(82),h=t(79),u=t(117),m=o.topLevelTypes,f=i.canUseDOM&&"documentMode"in document&&document.documentMode<=11,g={select:{phasedRegistrationNames:{bubbled:h({onSelect:null}),captured:h({onSelectCapture:null})},dependencies:[m.topBlur,m.topContextMenu,m.topFocus,m.topKeyDown,m.topMouseDown,m.topMouseUp,m.topSelectionChange]}},y=null,b=null,w=null,j=!1,v=!1,x=h({onSelect:null}),k={eventTypes:g,extractEvents:function(e,n,t,a,o){if(!v)return null;switch(e){case m.topFocus:(d(n)||"true"===n.contentEditable)&&(y=n,b=t,w=null);break;case m.topBlur:y=null,b=null,w=null;break;case m.topMouseDown:j=!0;break;case m.topContextMenu:case m.topMouseUp:return j=!1,s(a,o);case m.topSelectionChange:if(f)break;case m.topKeyDown:case m.topKeyUp:return s(a,o)}return null},didPutListener:function(e,n,t){n===x&&(v=!0)}};e.exports=k},function(e,n){"use strict";var t=Math.pow(2,53),a={createReactRootIndex:function(){return Math.ceil(Math.random()*t)}};e.exports=a},function(e,n,t){"use strict";var a=t(30),s=t(119),o=t(73),r=t(28),i=t(133),l=t(77),p=t(134),c=t(135),d=t(86),h=t(138),u=t(139),m=t(87),f=t(140),g=t(15),y=t(136),b=t(13),w=t(79),j=a.topLevelTypes,v={abort:{phasedRegistrationNames:{bubbled:w({onAbort:!0}),captured:w({onAbortCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:w({onBlur:!0}),captured:w({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:w({onCanPlay:!0}),captured:w({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:w({onCanPlayThrough:!0}),captured:w({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:w({onClick:!0}),captured:w({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:w({onContextMenu:!0}),captured:w({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:w({onCopy:!0}),captured:w({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:w({onCut:!0}),captured:w({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:w({onDoubleClick:!0}),captured:w({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:w({onDrag:!0}),captured:w({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:w({onDragEnd:!0}),captured:w({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:w({onDragEnter:!0}),captured:w({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:w({onDragExit:!0}),captured:w({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:w({onDragLeave:!0}),captured:w({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:w({onDragOver:!0}),captured:w({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:w({onDragStart:!0}),captured:w({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:w({onDrop:!0}),captured:w({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:w({onDurationChange:!0}),captured:w({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:w({onEmptied:!0}),captured:w({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:w({onEncrypted:!0}),captured:w({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:w({onEnded:!0}),captured:w({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:w({onError:!0}),captured:w({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:w({onFocus:!0}),captured:w({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:w({onInput:!0}),captured:w({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:w({onKeyDown:!0}),captured:w({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:w({onKeyPress:!0}),captured:w({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:w({onKeyUp:!0}),captured:w({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:w({onLoad:!0}),captured:w({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:w({onLoadedData:!0}),captured:w({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:w({onLoadedMetadata:!0}),captured:w({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:w({onLoadStart:!0}),captured:w({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:w({onMouseDown:!0}),captured:w({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:w({onMouseMove:!0}),captured:w({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:w({onMouseOut:!0}),captured:w({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:w({onMouseOver:!0}),captured:w({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:w({onMouseUp:!0}),captured:w({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:w({onPaste:!0}),captured:w({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:w({onPause:!0}),captured:w({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:w({onPlay:!0}),captured:w({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:w({onPlaying:!0}),captured:w({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:w({onProgress:!0}),captured:w({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:w({onRateChange:!0}),captured:w({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:w({onReset:!0}),captured:w({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:w({onScroll:!0}),captured:w({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:w({onSeeked:!0}),captured:w({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:w({onSeeking:!0}),captured:w({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:w({onStalled:!0}),captured:w({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:w({onSubmit:!0}),captured:w({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:w({onSuspend:!0}),captured:w({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:w({onTimeUpdate:!0}),captured:w({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:w({onTouchCancel:!0}),captured:w({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:w({onTouchEnd:!0}),captured:w({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:w({onTouchMove:!0}),captured:w({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:w({onTouchStart:!0}),captured:w({onTouchStartCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:w({onVolumeChange:!0}),captured:w({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:w({onWaiting:!0}),captured:w({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:w({onWheel:!0}),captured:w({onWheelCapture:!0})}}},x={topAbort:v.abort,topBlur:v.blur,topCanPlay:v.canPlay,topCanPlayThrough:v.canPlayThrough,topClick:v.click,topContextMenu:v.contextMenu,topCopy:v.copy,topCut:v.cut,topDoubleClick:v.doubleClick,topDrag:v.drag,topDragEnd:v.dragEnd,topDragEnter:v.dragEnter,topDragExit:v.dragExit,topDragLeave:v.dragLeave,topDragOver:v.dragOver,topDragStart:v.dragStart,topDrop:v.drop,topDurationChange:v.durationChange,topEmptied:v.emptied,topEncrypted:v.encrypted,topEnded:v.ended,topError:v.error,topFocus:v.focus,topInput:v.input,topKeyDown:v.keyDown,topKeyPress:v.keyPress,topKeyUp:v.keyUp,topLoad:v.load,topLoadedData:v.loadedData,topLoadedMetadata:v.loadedMetadata,topLoadStart:v.loadStart,topMouseDown:v.mouseDown,topMouseMove:v.mouseMove,topMouseOut:v.mouseOut,topMouseOver:v.mouseOver,topMouseUp:v.mouseUp,topPaste:v.paste,topPause:v.pause,topPlay:v.play,topPlaying:v.playing,topProgress:v.progress,topRateChange:v.rateChange,topReset:v.reset,topScroll:v.scroll,topSeeked:v.seeked,topSeeking:v.seeking,topStalled:v.stalled,topSubmit:v.submit,topSuspend:v.suspend,topTimeUpdate:v.timeUpdate,topTouchCancel:v.touchCancel,topTouchEnd:v.touchEnd,topTouchMove:v.touchMove,topTouchStart:v.touchStart,topVolumeChange:v.volumeChange,topWaiting:v.waiting,topWheel:v.wheel};for(var k in x)x[k].dependencies=[k];var C=w({onClick:null}),S={},W={eventTypes:v,extractEvents:function(e,n,t,a,s){var r=x[e];if(!r)return null;var g;switch(e){case j.topAbort:case j.topCanPlay:case j.topCanPlayThrough:case j.topDurationChange:case j.topEmptied:case j.topEncrypted:case j.topEnded:case j.topError:case j.topInput:case j.topLoad:case j.topLoadedData:case j.topLoadedMetadata:case j.topLoadStart:case j.topPause:case j.topPlay:case j.topPlaying:case j.topProgress:case j.topRateChange:case j.topReset:case j.topSeeked:case j.topSeeking:case j.topStalled:case j.topSubmit:case j.topSuspend:case j.topTimeUpdate:case j.topVolumeChange:case j.topWaiting:g=l;break;case j.topKeyPress:if(0===y(a))return null;case j.topKeyDown:case j.topKeyUp:g=c;break;case j.topBlur:case j.topFocus:g=p;break;case j.topClick:if(2===a.button)return null;case j.topContextMenu:case j.topDoubleClick:case j.topMouseDown:case j.topMouseMove:case j.topMouseOut:case j.topMouseOver:case j.topMouseUp:g=d;break;case j.topDrag:case j.topDragEnd:case j.topDragEnter:case j.topDragExit:case j.topDragLeave:case j.topDragOver:case j.topDragStart:case j.topDrop:g=h;break;case j.topTouchCancel:case j.topTouchEnd:case j.topTouchMove:case j.topTouchStart:g=u;break;case j.topScroll:g=m;break;case j.topWheel:g=f;break;case j.topCopy:case j.topCut:case j.topPaste:g=i}g?void 0:b(!1);var w=g.getPooled(r,t,a,s);return o.accumulateTwoPhaseDispatches(w),w},didPutListener:function(e,n,t){if(n===C){var a=r.getNode(e);S[e]||(S[e]=s.listen(a,"click",g))}},willDeleteListener:function(e,n){n===C&&(S[e].remove(),delete S[e])}};e.exports=W},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(77),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o={relatedTarget:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(136),r=t(137),i=t(88),l={key:r,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:i,charCode:function(e){return"keypress"===e.type?o(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?o(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};s.augmentClass(a,l),e.exports=a},function(e,n){"use strict";function t(e){var n,t=e.keyCode;return"charCode"in e?(n=e.charCode,0===n&&13===t&&(n=13)):n=t,n>=32||13===n?n:0}e.exports=t},function(e,n,t){"use strict";function a(e){if(e.key){var n=o[e.key]||e.key;if("Unidentified"!==n)return n}if("keypress"===e.type){var t=s(e);return 13===t?"Enter":String.fromCharCode(t)}return"keydown"===e.type||"keyup"===e.type?r[e.keyCode]||"Unidentified":""}var s=t(136),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},r={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(86),o={dataTransfer:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(87),o=t(88),r={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};s.augmentClass(a,r),e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a){s.call(this,e,n,t,a)}var s=t(86),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};s.augmentClass(a,o),e.exports=a},function(e,n,t){"use strict";var a=t(23),s=a.injection.MUST_USE_ATTRIBUTE,o={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},r={Properties:{clipPath:s,cx:s,cy:s,d:s,dx:s,dy:s,fill:s,fillOpacity:s,fontFamily:s,fontSize:s,fx:s,fy:s,gradientTransform:s,gradientUnits:s,markerEnd:s,markerMid:s,markerStart:s,offset:s,opacity:s,patternContentUnits:s,patternUnits:s,points:s,preserveAspectRatio:s,r:s,rx:s,ry:s,spreadMethod:s,stopColor:s,stopOpacity:s,stroke:s,strokeDasharray:s,strokeLinecap:s,strokeOpacity:s,strokeWidth:s,textAnchor:s,transform:s,version:s,viewBox:s,x1:s,x2:s,x:s,xlinkActuate:s,xlinkArcrole:s,xlinkHref:s,xlinkRole:s,xlinkShow:s,xlinkTitle:s,xlinkType:s,xmlBase:s,xmlLang:s,xmlSpace:s,y1:s,y2:s,y:s},DOMAttributeNamespaces:{xlinkActuate:o.xlink,xlinkArcrole:o.xlink,xlinkHref:o.xlink,xlinkRole:o.xlink,xlinkShow:o.xlink,xlinkTitle:o.xlink,xlinkType:o.xlink,xmlBase:o.xml,xmlLang:o.xml,xmlSpace:o.xml},DOMAttributeNames:{clipPath:"clip-path",fillOpacity:"fill-opacity",fontFamily:"font-family",fontSize:"font-size",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",patternContentUnits:"patternContentUnits",patternUnits:"patternUnits",preserveAspectRatio:"preserveAspectRatio",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeDasharray:"stroke-dasharray",strokeLinecap:"stroke-linecap",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",textAnchor:"text-anchor",viewBox:"viewBox",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlLang:"xml:lang",xmlSpace:"xml:space"}};e.exports=r},function(e,n){"use strict";e.exports="0.14.3"},function(e,n,t){"use strict";var a=t(28);e.exports=a.renderSubtreeIntoContainer},function(e,n,t){"use strict";var a=t(71),s=t(145),o=t(142);a.inject();var r={renderToString:s.renderToString,renderToStaticMarkup:s.renderToStaticMarkup,version:o};e.exports=r},function(e,n,t){"use strict";function a(e){r.isValidElement(e)?void 0:m(!1);var n;try{d.injection.injectBatchingStrategy(p);var t=i.createReactRootID();return n=c.getPooled(!1),n.perform(function(){var a=u(e,null),s=a.mountComponent(t,n,h);return l.addChecksumToMarkup(s)},null)}finally{c.release(n),d.injection.injectBatchingStrategy(o)}}function s(e){r.isValidElement(e)?void 0:m(!1);var n;try{d.injection.injectBatchingStrategy(p);var t=i.createReactRootID();return n=c.getPooled(!0),n.perform(function(){var a=u(e,null);return a.mountComponent(t,n,h)},null)}finally{c.release(n),d.injection.injectBatchingStrategy(o)}}var o=t(92),r=t(42),i=t(45),l=t(48),p=t(146),c=t(147),d=t(54),h=t(58),u=t(62),m=t(13);e.exports={renderToString:a,renderToStaticMarkup:s}},function(e,n){"use strict";var t={isBatchingUpdates:!1,batchedUpdates:function(e){}};e.exports=t},function(e,n,t){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.reactMountReady=o.getPooled(null),this.useCreateElement=!1}var s=t(56),o=t(55),r=t(57),i=t(39),l=t(15),p={initialize:function(){this.reactMountReady.reset()},close:l},c=[p],d={getTransactionWrappers:function(){return c},getReactMountReady:function(){return this.reactMountReady},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null}};i(a.prototype,r.Mixin,d),s.addPoolingTo(a),e.exports=a},function(e,n,t){"use strict";var a=t(110),s=t(123),o=t(122),r=t(149),i=t(42),l=(t(150),t(107)),p=t(142),c=t(39),d=t(152),h=i.createElement,u=i.createFactory,m=i.cloneElement,f={Children:{map:a.map,forEach:a.forEach,count:a.count,toArray:a.toArray,only:d},Component:s,createElement:h,
cloneElement:m,isValidElement:i.isValidElement,PropTypes:l,createClass:o.createClass,createFactory:u,createMixin:function(e){return e},DOM:r,version:p,__spread:c};e.exports=f},function(e,n,t){"use strict";function a(e){return s.createFactory(e)}var s=t(42),o=(t(150),t(151)),r=o({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul","var":"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},a);e.exports=r},function(e,n,t){"use strict";function a(){if(d.current){var e=d.current.getName();if(e)return" Check the render method of `"+e+"`."}return""}function s(e,n){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=!0;o("uniqueKey",e,n)}}function o(e,n,t){var s=a();if(!s){var o="string"==typeof t?t:t.displayName||t.name;o&&(s=" Check the top-level render call using <"+o+">.")}var r=m[e]||(m[e]={});if(r[s])return null;r[s]=!0;var i={parentOrOwner:s,url:" See https://fb.me/react-warning-keys for more information.",childOwner:null};return n&&n._owner&&n._owner!==d.current&&(i.childOwner=" It was passed a child from "+n._owner.getName()+"."),i}function r(e,n){if("object"==typeof e)if(Array.isArray(e))for(var t=0;t<e.length;t++){var a=e[t];p.isValidElement(a)&&s(a,n)}else if(p.isValidElement(e))e._store&&(e._store.validated=!0);else if(e){var o=h(e);if(o&&o!==e.entries)for(var r,i=o.call(e);!(r=i.next()).done;)p.isValidElement(r.value)&&s(r.value,n)}}function i(e,n,t,s){for(var o in n)if(n.hasOwnProperty(o)){var r;try{"function"!=typeof n[o]?u(!1):void 0,r=n[o](t,o,e,s)}catch(i){r=i}if(r instanceof Error&&!(r.message in f)){f[r.message]=!0;a()}}}function l(e){var n=e.type;if("function"==typeof n){var t=n.displayName||n.name;n.propTypes&&i(t,n.propTypes,e.props,c.prop),"function"==typeof n.getDefaultProps}}var p=t(42),c=t(65),d=(t(66),t(5)),h=(t(43),t(108)),u=t(13),m=(t(25),{}),f={},g={createElement:function(e,n,t){var a="string"==typeof e||"function"==typeof e,s=p.createElement.apply(this,arguments);if(null==s)return s;if(a)for(var o=2;o<arguments.length;o++)r(arguments[o],e);return l(s),s},createFactory:function(e){var n=g.createElement.bind(null,e);return n.type=e,n},cloneElement:function(e,n,t){for(var a=p.cloneElement.apply(this,arguments),s=2;s<arguments.length;s++)r(arguments[s],a.type);return l(a),a}};e.exports=g},function(e,n){"use strict";function t(e,n,t){if(!e)return null;var s={};for(var o in e)a.call(e,o)&&(s[o]=n.call(t,e[o],o,e));return s}var a=Object.prototype.hasOwnProperty;e.exports=t},function(e,n,t){"use strict";function a(e){return s.isValidElement(e)?void 0:o(!1),e}var s=t(42),o=t(13);e.exports=a},function(e,n,t){"use strict";function a(e,n,t,a,s){return s}t(39),t(25);e.exports=a},function(e,n,t){"use strict";e.exports=t(4)},function(e,n,t){"use strict";n.DefaultRoute=t(156),n.Link=t(171),n.NotFoundRoute=t(172),n.Redirect=t(173),n.Route=t(170),n.ActiveHandler=t(168),n.RouteHandler=n.ActiveHandler,n.HashLocation=t(174),n.HistoryLocation=t(178),n.RefreshLocation=t(179),n.StaticLocation=t(180),n.TestLocation=t(181),n.ImitateBrowserBehavior=t(182),n.ScrollToTopBehavior=t(183),n.History=t(176),n.Navigation=t(184),n.State=t(185),n.createRoute=t(158).createRoute,n.createDefaultRoute=t(158).createDefaultRoute,n.createNotFoundRoute=t(158).createNotFoundRoute,n.createRedirect=t(158).createRedirect,n.createRoutesFromReactChildren=t(186),n.create=t(187),n.run=t(196)},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},r=t(157),i=t(168),l=t(170),p=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(l);p.propTypes={name:r.string,path:r.falsy,children:r.falsy,handler:r.func.isRequired},p.defaultProps={handler:i},e.exports=p},function(e,n,t){"use strict";var a=t(39),s=t(2).PropTypes,o=t(158),r=a({},s,{falsy:function(e,n,t){return e[n]?new Error("<"+t+'> should not have a "'+n+'" prop'):void 0},route:s.instanceOf(o),router:s.func});e.exports=r},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var s,o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(39),i=t(159),l=t(160),p=t(161),c=function(){function e(n,t,s,o,r,i,l,c){a(this,e),this.name=n,this.path=t,this.paramNames=p.extractParamNames(this.path),this.ignoreScrollBehavior=!!s,this.isDefault=!!o,this.isNotFound=!!r,this.onEnter=i,this.onLeave=l,this.handler=c}return o(e,null,[{key:"createRoute",value:function(n,t){n=n||{},"string"==typeof n&&(n={path:n});var a=s;a?l(null==n.parentRoute||n.parentRoute===a,"You should not use parentRoute with createRoute inside another route's child callback; it is ignored"):a=n.parentRoute;var o=n.name,r=n.path||o;!r||n.isDefault||n.isNotFound?r=a?a.path:"/":p.isAbsolute(r)?a&&i(r===a.path||0===a.paramNames.length,'You cannot nest path "%s" inside "%s"; the parent requires URL parameters',r,a.path):r=a?p.join(a.path,r):"/"+r,n.isNotFound&&!/\*$/.test(r)&&(r+="*");var c=new e(o,r,n.ignoreScrollBehavior,n.isDefault,n.isNotFound,n.onEnter,n.onLeave,n.handler);if(a&&(c.isDefault?(i(null==a.defaultRoute,"%s may not have more than one default route",a),a.defaultRoute=c):c.isNotFound&&(i(null==a.notFoundRoute,"%s may not have more than one not found route",a),a.notFoundRoute=c),a.appendChild(c)),"function"==typeof t){var d=s;s=c,t.call(c,c),s=d}return c}},{key:"createDefaultRoute",value:function(n){return e.createRoute(r({},n,{isDefault:!0}))}},{key:"createNotFoundRoute",value:function(n){return e.createRoute(r({},n,{isNotFound:!0}))}},{key:"createRedirect",value:function(n){return e.createRoute(r({},n,{path:n.path||n.from||"*",onEnter:function(e,t,a){e.redirect(n.to,n.params||t,n.query||a)}}))}}]),o(e,[{key:"appendChild",value:function(n){i(n instanceof e,"route.appendChild must use a valid Route"),this.childRoutes||(this.childRoutes=[]),this.childRoutes.push(n)}},{key:"toString",value:function(){var e="<Route";return this.name&&(e+=' name="'+this.name+'"'),e+=' path="'+this.path+'">'}}]),e}();e.exports=c},function(e,n,t){"use strict";var a=function(e,n,t,a,s,o,r,i){if(!e){var l;if(void 0===n)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var p=[t,a,s,o,r,i],c=0;l=new Error(n.replace(/%s/g,function(){return p[c++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}};e.exports=a},function(e,n,t){"use strict";var a=!1,s=function(){};a&&(s=function(e,n){for(var t=arguments.length,a=Array(t>2?t-2:0),s=2;t>s;s++)a[s-2]=arguments[s];if(void 0===n)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");if(n.length<10||/^[s\W]*$/.test(n))throw new Error("The warning format should be able to uniquely identify this warning. Please, use a more descriptive format than: "+n);if(0!==n.indexOf("Failed Composite propType: ")&&!e){var o=0,r="Warning: "+n.replace(/%s/g,function(){return a[o++]});console.warn(r);try{throw new Error(r)}catch(i){}}}),e.exports=s},function(e,n,t){"use strict";function a(e){if(!(e in d)){var n=[],t=e.replace(i,function(e,t){return t?(n.push(t),"([^/?#]+)"):"*"===e?(n.push("splat"),"(.*?)"):"\\"+e});d[e]={matcher:new RegExp("^"+t+"$","i"),paramNames:n}}return d[e]}var s=t(159),o=t(162),r=t(163),i=/:([a-zA-Z_$][a-zA-Z0-9_$]*)|[*.()\[\]\\+|{}^$]/g,l=/:([a-zA-Z_$][a-zA-Z0-9_$?]*[?]?)|[*]/g,p=/\/\/\?|\/\?\/|\/\?(?![^\/=]+=.*$)/g,c=/\?(.*)$/,d={},h={isAbsolute:function(e){return"/"===e.charAt(0)},join:function(e,n){return e.replace(/\/*$/,"/")+n},extractParamNames:function(e){return a(e).paramNames},extractParams:function(e,n){var t=a(e),s=t.matcher,o=t.paramNames,r=n.match(s);if(!r)return null;var i={};return o.forEach(function(e,n){i[e]=r[n+1]}),i},injectParams:function(e,n){n=n||{};var t=0;return e.replace(l,function(a,o){if(o=o||"splat","?"===o.slice(-1)){if(o=o.slice(0,-1),null==n[o])return""}else s(null!=n[o],'Missing "%s" parameter for path "%s"',o,e);var r;return"splat"===o&&Array.isArray(n[o])?(r=n[o][t++],s(null!=r,'Missing splat # %s for path "%s"',t,e)):r=n[o],r}).replace(p,"/")},extractQuery:function(e){var n=e.match(c);return n&&r.parse(n[1])},withoutQuery:function(e){return e.replace(c,"")},withQuery:function(e,n){var t=h.extractQuery(e);t&&(n=n?o(t,n):t);var a=r.stringify(n,{arrayFormat:"brackets"});return a?h.withoutQuery(e)+"?"+a:h.withoutQuery(e)}};e.exports=h},function(e,n){"use strict";function t(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=Object.assign||function(e,n){for(var a,s,o=t(e),r=1;r<arguments.length;r++){a=arguments[r],s=Object.keys(Object(a));for(var i=0;i<s.length;i++)o[s[i]]=a[s[i]]}return o}},function(e,n,t){e.exports=t(164)},function(e,n,t){var a=t(165),s=t(167);e.exports={stringify:a,parse:s}},function(e,n,t){var a=t(166),s={delimiter:"&",arrayPrefixGenerators:{brackets:function(e,n){return e+"[]"},indices:function(e,n){return e+"["+n+"]"},repeat:function(e,n){return e}}};s.stringify=function(e,n,t){if(a.isBuffer(e)?e=e.toString():e instanceof Date?e=e.toISOString():null===e&&(e=""),"string"==typeof e||"number"==typeof e||"boolean"==typeof e)return[encodeURIComponent(n)+"="+encodeURIComponent(e)];var o=[];if("undefined"==typeof e)return o;for(var r=Object.keys(e),i=0,l=r.length;l>i;++i){var p=r[i];o=Array.isArray(e)?o.concat(s.stringify(e[p],t(n,p),t)):o.concat(s.stringify(e[p],n+"["+p+"]",t))}return o},e.exports=function(e,n){n=n||{};var t="undefined"==typeof n.delimiter?s.delimiter:n.delimiter,a=[];if("object"!=typeof e||null===e)return"";var o;o=n.arrayFormat in s.arrayPrefixGenerators?n.arrayFormat:"indices"in n?n.indices?"indices":"repeat":"indices";for(var r=s.arrayPrefixGenerators[o],i=Object.keys(e),l=0,p=i.length;p>l;++l){var c=i[l];a=a.concat(s.stringify(e[c],c,r))}return a.join(t)}},function(e,n){n.arrayToObject=function(e){for(var n={},t=0,a=e.length;a>t;++t)"undefined"!=typeof e[t]&&(n[t]=e[t]);return n},n.merge=function(e,t){if(!t)return e;if("object"!=typeof t)return Array.isArray(e)?e.push(t):e[t]=!0,e;if("object"!=typeof e)return e=[e].concat(t);Array.isArray(e)&&!Array.isArray(t)&&(e=n.arrayToObject(e));for(var a=Object.keys(t),s=0,o=a.length;o>s;++s){var r=a[s],i=t[r];e[r]?e[r]=n.merge(e[r],i):e[r]=i}return e},n.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(n){return e}},n.compact=function(e,t){if("object"!=typeof e||null===e)return e;t=t||[];var a=t.indexOf(e);if(-1!==a)return t[a];if(t.push(e),Array.isArray(e)){for(var s=[],o=0,r=e.length;r>o;++o)"undefined"!=typeof e[o]&&s.push(e[o]);return s}var i=Object.keys(e);for(o=0,r=i.length;r>o;++o){var l=i[o];e[l]=n.compact(e[l],t)}return e},n.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},n.isBuffer=function(e){return null===e||"undefined"==typeof e?!1:!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},function(e,n,t){var a=t(166),s={delimiter:"&",depth:5,arrayLimit:20,parameterLimit:1e3};s.parseValues=function(e,n){for(var t={},s=e.split(n.delimiter,n.parameterLimit===1/0?void 0:n.parameterLimit),o=0,r=s.length;r>o;++o){var i=s[o],l=-1===i.indexOf("]=")?i.indexOf("="):i.indexOf("]=")+1;if(-1===l)t[a.decode(i)]="";else{var p=a.decode(i.slice(0,l)),c=a.decode(i.slice(l+1));if(Object.prototype.hasOwnProperty(p))continue;t.hasOwnProperty(p)?t[p]=[].concat(t[p]).concat(c):t[p]=c}}return t},s.parseObject=function(e,n,t){if(!e.length)return n;var a=e.shift(),o={};if("[]"===a)o=[],o=o.concat(s.parseObject(e,n,t));else{var r="["===a[0]&&"]"===a[a.length-1]?a.slice(1,a.length-1):a,i=parseInt(r,10),l=""+i;!isNaN(i)&&a!==r&&l===r&&i>=0&&i<=t.arrayLimit?(o=[],o[i]=s.parseObject(e,n,t)):o[r]=s.parseObject(e,n,t)}return o},s.parseKeys=function(e,n,t){if(e){var a=/^([^\[\]]*)/,o=/(\[[^\[\]]*\])/g,r=a.exec(e);if(!Object.prototype.hasOwnProperty(r[1])){var i=[];r[1]&&i.push(r[1]);for(var l=0;null!==(r=o.exec(e))&&l<t.depth;)++l,Object.prototype.hasOwnProperty(r[1].replace(/\[|\]/g,""))||i.push(r[1]);return r&&i.push("["+e.slice(r.index)+"]"),s.parseObject(i,n,t)}}},e.exports=function(e,n){if(""===e||null===e||"undefined"==typeof e)return{};n=n||{},n.delimiter="string"==typeof n.delimiter||a.isRegExp(n.delimiter)?n.delimiter:s.delimiter,n.depth="number"==typeof n.depth?n.depth:s.depth,n.arrayLimit="number"==typeof n.arrayLimit?n.arrayLimit:s.arrayLimit,n.parameterLimit="number"==typeof n.parameterLimit?n.parameterLimit:s.parameterLimit;for(var t="string"==typeof e?s.parseValues(e,n):e,o={},r=Object.keys(t),i=0,l=r.length;l>i;++i){var p=r[i],c=s.parseKeys(p,t[p],n);o=a.merge(o,c)}return a.compact(o)}},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},i=t(2),l=t(169),p=t(39),c=t(157),d="__routeHandler__",h=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"getChildContext",value:function(){return{routeDepth:this.context.routeDepth+1}}},{key:"componentDidMount",value:function(){this._updateRouteComponent(this.refs[d])}},{key:"componentDidUpdate",value:function(){this._updateRouteComponent(this.refs[d])}},{key:"componentWillUnmount",value:function(){this._updateRouteComponent(null)}},{key:"_updateRouteComponent",value:function(e){this.context.router.setRouteComponentAtDepth(this.getRouteDepth(),e)}},{key:"getRouteDepth",value:function(){return this.context.routeDepth}},{key:"createChildRouteHandler",value:function(e){var n=this.context.router.getRouteAtDepth(this.getRouteDepth());if(null==n)return null;var t=p({},e||this.props,{ref:d,params:this.context.router.getCurrentParams(),query:this.context.router.getCurrentQuery()});return i.createElement(n.handler,t)}},{key:"render",value:function(){var e=this.createChildRouteHandler();return e?i.createElement(l,null,e):i.createElement("script",null)}}]),n}(i.Component);h.contextTypes={routeDepth:c.number.isRequired,router:c.router.isRequired},h.childContextTypes={routeDepth:c.number.isRequired},e.exports=h},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},i=t(2),l=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"render",value:function(){return this.props.children}}]),n}(i.Component);e.exports=l},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},i=t(2),l=t(159),p=t(157),c=t(168),d=function(e){function n(){a(this,n),r(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),o(n,[{key:"render",value:function(){l(!1,"%s elements are for router configuration only and should not be rendered",this.constructor.name)}}]),n}(i.Component);d.propTypes={name:p.string,path:p.string,handler:p.func,ignoreScrollBehavior:p.bool},d.defaultProps={handler:c},e.exports=d},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}function o(e){return 0===e.button}function r(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),l=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},p=t(2),c=t(39),d=t(157),h=function(e){function n(){a(this,n),l(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),i(n,[{key:"handleClick",value:function(e){var n,t=!0;this.props.onClick&&(n=this.props.onClick(e)),!r(e)&&o(e)&&((n===!1||e.defaultPrevented===!0)&&(t=!1),e.preventDefault(),t&&this.context.router.transitionTo(this.props.to,this.props.params,this.props.query))}},{key:"getHref",value:function(){return this.context.router.makeHref(this.props.to,this.props.params,this.props.query)}},{key:"getClassName",value:function(){var e=this.props.className;return this.getActiveState()&&(e+=" "+this.props.activeClassName),e}},{key:"getActiveState",value:function(){return this.context.router.isActive(this.props.to,this.props.params,this.props.query)}},{key:"render",value:function(){var e=c({},this.props,{href:this.getHref(),className:this.getClassName(),onClick:this.handleClick.bind(this)});return e.activeStyle&&this.getActiveState()&&(e.style=e.activeStyle),p.DOM.a(e,this.props.children)}}]),n}(p.Component);h.contextTypes={router:d.router.isRequired},h.propTypes={activeClassName:d.string.isRequired,to:d.oneOfType([d.string,d.route]).isRequired,params:d.object,query:d.object,activeStyle:d.object,onClick:d.func},h.defaultProps={activeClassName:"active",className:""},e.exports=h},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},r=t(157),i=t(168),l=t(170),p=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(l);p.propTypes={name:r.string,path:r.falsy,children:r.falsy,handler:r.func.isRequired},p.defaultProps={handler:i},e.exports=p},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=function(e,n,t){for(var a=!0;a;){var s=e,o=n,r=t;a=!1,null===s&&(s=Function.prototype);var i=Object.getOwnPropertyDescriptor(s,o);if(void 0!==i){if("value"in i)return i.value;var l=i.get;if(void 0===l)return;return l.call(r)}var p=Object.getPrototypeOf(s);if(null===p)return;e=p,n=o,t=r,a=!0,i=p=void 0}},r=t(157),i=t(170),l=function(e){function n(){a(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return s(n,e),n}(i);l.propTypes={path:r.string,from:r.string,to:r.string,handler:r.falsy},l.defaultProps={},e.exports=l},function(e,n,t){"use strict";function a(e){e===i.PUSH&&(l.length+=1);var n={path:d.getCurrentPath(),type:e};p.forEach(function(e){e.call(d,n)})}function s(){var e=d.getCurrentPath();return"/"===e.charAt(0)?!0:(d.replace("/"+e),!1)}function o(){if(s()){var e=r;r=null,a(e||i.POP)}}var r,i=t(175),l=t(176),p=[],c=!1,d={addChangeListener:function(e){p.push(e),s(),c||(window.addEventListener?window.addEventListener("hashchange",o,!1):window.attachEvent("onhashchange",o),c=!0)},removeChangeListener:function(e){p=p.filter(function(n){return n!==e}),0===p.length&&(window.removeEventListener?window.removeEventListener("hashchange",o,!1):window.removeEvent("onhashchange",o),c=!1)},push:function(e){r=i.PUSH,window.location.hash=e},replace:function(e){r=i.REPLACE,window.location.replace(window.location.pathname+window.location.search+"#"+e)},pop:function(){r=i.POP,l.back()},getCurrentPath:function(){return decodeURI(window.location.href.split("#")[1]||"")},toString:function(){return"<HashLocation>"}};e.exports=d},function(e,n){"use strict";var t={PUSH:"push",REPLACE:"replace",POP:"pop"};e.exports=t},function(e,n,t){"use strict";var a=t(159),s=t(177),o={length:1,back:function(){a(s,"Cannot use History.back without a DOM"),o.length-=1,window.history.back()}};e.exports=o},function(e,n){var t=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=t},function(e,n,t){"use strict";function a(e){var n={path:p.getCurrentPath(),type:e};i.forEach(function(e){e.call(p,n)})}function s(e){void 0!==e.state&&a(o.POP)}var o=t(175),r=t(176),i=[],l=!1,p={addChangeListener:function(e){i.push(e),l||(window.addEventListener?window.addEventListener("popstate",s,!1):window.attachEvent("onpopstate",s),l=!0)},removeChangeListener:function(e){i=i.filter(function(n){return n!==e}),0===i.length&&(window.addEventListener?window.removeEventListener("popstate",s,!1):window.removeEvent("onpopstate",s),l=!1)},push:function(e){window.history.pushState({path:e},"",e),r.length+=1,a(o.PUSH)},replace:function(e){window.history.replaceState({path:e},"",e),a(o.REPLACE)},pop:r.back,getCurrentPath:function(){return decodeURI(window.location.pathname+window.location.search)},toString:function(){return"<HistoryLocation>"}};e.exports=p},function(e,n,t){"use strict";var a=t(178),s=t(176),o={push:function(e){window.location=e},replace:function(e){window.location.replace(e)},pop:s.back,getCurrentPath:a.getCurrentPath,toString:function(){return"<RefreshLocation>"}};e.exports=o},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(){r(!1,"You cannot modify a static location")}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(159),i=function(){function e(n){a(this,e),this.path=n}return o(e,[{key:"getCurrentPath",value:function(){return this.path}},{key:"toString",value:function(){return'<StaticLocation path="'+this.path+'">'}}]),e}();i.prototype.push=s,i.prototype.replace=s,i.prototype.pop=s,e.exports=i},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var s=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),o=t(159),r=t(175),i=t(176),l=function(){function e(n){a(this,e),this.history=n||[],this.listeners=[],this.needsDOM=!1,this._updateHistoryLength()}return s(e,[{key:"_updateHistoryLength",value:function(){i.length=this.history.length}},{key:"_notifyChange",value:function(e){for(var n={path:this.getCurrentPath(),type:e},t=0,a=this.listeners.length;a>t;++t)this.listeners[t].call(this,n)}},{key:"addChangeListener",value:function(e){this.listeners.push(e)}},{key:"removeChangeListener",value:function(e){this.listeners=this.listeners.filter(function(n){return n!==e})}},{key:"push",value:function(e){this.history.push(e),this._updateHistoryLength(),this._notifyChange(r.PUSH)}},{key:"replace",value:function(e){o(this.history.length,"You cannot replace the current path with no history"),this.history[this.history.length-1]=e,this._notifyChange(r.REPLACE)}},{key:"pop",value:function(){this.history.pop(),this._updateHistoryLength(),this._notifyChange(r.POP)}},{key:"getCurrentPath",value:function(){return this.history[this.history.length-1]}},{key:"toString",value:function(){return"<TestLocation>"}}]),e}();e.exports=l},function(e,n,t){"use strict";var a=t(175),s={updateScrollPosition:function(e,n){switch(n){case a.PUSH:case a.REPLACE:window.scrollTo(0,0);break;case a.POP:e?window.scrollTo(e.x,e.y):window.scrollTo(0,0)}}};e.exports=s},function(e,n){"use strict";var t={updateScrollPosition:function(){window.scrollTo(0,0)}};e.exports=t},function(e,n,t){"use strict";var a=t(157),s={contextTypes:{router:a.router.isRequired},makePath:function(e,n,t){return this.context.router.makePath(e,n,t)},makeHref:function(e,n,t){return this.context.router.makeHref(e,n,t)},transitionTo:function(e,n,t){this.context.router.transitionTo(e,n,t)},replaceWith:function(e,n,t){this.context.router.replaceWith(e,n,t)},goBack:function(){return this.context.router.goBack()}};e.exports=s},function(e,n,t){"use strict";var a=t(157),s={contextTypes:{router:a.router.isRequired},getPath:function(){return this.context.router.getCurrentPath()},getPathname:function(){return this.context.router.getCurrentPathname()},getParams:function(){return this.context.router.getCurrentParams()},getQuery:function(){return this.context.router.getCurrentQuery()},getRoutes:function(){return this.context.router.getCurrentRoutes()},isActive:function(e,n,t){return this.context.router.isActive(e,n,t)}};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){e=e||"UnknownComponent";for(var a in n)if(n.hasOwnProperty(a)){var s=n[a](t,a,e);s instanceof Error&&p(!1,s.message)}}function s(e){var n=l({},e),t=n.handler;return t&&(n.onEnter=t.willTransitionTo,n.onLeave=t.willTransitionFrom),n}function o(e){if(i.isValidElement(e)){var n=e.type,t=l({},n.defaultProps,e.props);return n.propTypes&&a(n.displayName,n.propTypes,t),n===c?u.createDefaultRoute(s(t)):n===d?u.createNotFoundRoute(s(t)):n===h?u.createRedirect(s(t)):u.createRoute(s(t),function(){t.children&&r(t.children)})}}function r(e){var n=[];return i.Children.forEach(e,function(e){(e=o(e))&&n.push(e)}),n}var i=t(2),l=t(39),p=t(160),c=t(156),d=t(172),h=t(173),u=t(158);e.exports=r},function(e,n,t){"use strict";function a(e,n){for(var t in n)if(n.hasOwnProperty(t)&&e[t]!==n[t])return!1;return!0}function s(e,n,t,s,o,r){return e.some(function(e){if(e!==n)return!1;for(var i,l=n.paramNames,p=0,c=l.length;c>p;++p)if(i=l[p],s[i]!==t[i])return!1;return a(o,r)&&a(r,o)})}function o(e,n){for(var t,a=0,s=e.length;s>a;++a)t=e[a],t.name&&(h(null==n[t.name],'You may not have more than one route named "%s"',t.name),n[t.name]=t),t.childRoutes&&o(t.childRoutes,n)}function r(e,n){return e.some(function(e){return e.name===n})}function i(e,n){for(var t in n)if(String(e[t])!==String(n[t]))return!1;return!0}function l(e,n){for(var t in n)if(String(e[t])!==String(n[t]))return!1;return!0}function p(e){e=e||{},x(e)&&(e={routes:e});var n=[],t=e.location||F,a=e.scrollBehavior||R,p={},f={},B=null,O=null;
"string"==typeof t&&(t=new w(t)),t instanceof w?d(!u||!1,"You should not use a static location in a DOM environment because the router will not be kept in sync with the current URL"):h(u||t.needsDOM===!1,"You cannot use %s without a DOM",t),t!==y||E()||(t=b);var M=c.createClass({displayName:"Router",statics:{isRunning:!1,cancelPendingTransition:function(){B&&(B.cancel(),B=null)},clearAllRoutes:function(){M.cancelPendingTransition(),M.namedRoutes={},M.routes=[]},addRoutes:function(e){x(e)&&(e=v(e)),o(e,M.namedRoutes),M.routes.push.apply(M.routes,e)},replaceRoutes:function(e){M.clearAllRoutes(),M.addRoutes(e),M.refresh()},match:function(e){return A.findMatch(M.routes,e)},makePath:function(e,n,t){var a;if(I.isAbsolute(e))a=e;else{var s=e instanceof P?e:M.namedRoutes[e];h(s instanceof P,'Cannot find a route named "%s"',e),a=s.path}return I.withQuery(I.injectParams(a,n),t)},makeHref:function(e,n,a){var s=M.makePath(e,n,a);return t===g?"#"+s:s},transitionTo:function(e,n,a){var s=M.makePath(e,n,a);B?t.replace(s):t.push(s)},replaceWith:function(e,n,a){t.replace(M.makePath(e,n,a))},goBack:function(){return W.length>1||t===b?(t.pop(),!0):(d(!1,"goBack() was ignored because there is no router history"),!1)},handleAbort:e.onAbort||function(e){if(t instanceof w)throw new Error("Unhandled aborted transition! Reason: "+e);e instanceof T||(e instanceof S?t.replace(M.makePath(e.to,e.params,e.query)):t.pop())},handleError:e.onError||function(e){throw e},handleLocationChange:function(e){M.dispatch(e.path,e.type)},dispatch:function(e,t){M.cancelPendingTransition();var a=p.path,o=null==t;if(a!==e||o){a&&t===m.PUSH&&M.recordScrollPosition(a);var r=M.match(e);d(null!=r,'No route matches path "%s". Make sure you have <Route path="%s"> somewhere in your routes',e,e),null==r&&(r={});var i,l,c=p.routes||[],h=p.params||{},u=p.query||{},f=r.routes||[],g=r.params||{},y=r.query||{};c.length?(i=c.filter(function(e){return!s(f,e,h,g,u,y)}),l=f.filter(function(e){return!s(c,e,h,g,u,y)})):(i=[],l=f);var b=new k(e,M.replaceWith.bind(M,e));B=b;var w=n.slice(c.length-i.length);k.from(b,i,w,function(n){return n||b.abortReason?O.call(M,n,b):void k.to(b,l,g,y,function(n){O.call(M,n,b,{path:e,action:t,pathname:r.pathname,routes:f,params:g,query:y})})})}},run:function(e){h(!M.isRunning,"Router is already running"),O=function(n,t,a){n&&M.handleError(n),B===t&&(B=null,t.abortReason?M.handleAbort(t.abortReason):e.call(M,M,f=a))},t instanceof w||(t.addChangeListener&&t.addChangeListener(M.handleLocationChange),M.isRunning=!0),M.refresh()},refresh:function(){M.dispatch(t.getCurrentPath(),null)},stop:function(){M.cancelPendingTransition(),t.removeChangeListener&&t.removeChangeListener(M.handleLocationChange),M.isRunning=!1},getLocation:function(){return t},getScrollBehavior:function(){return a},getRouteAtDepth:function(e){var n=p.routes;return n&&n[e]},setRouteComponentAtDepth:function(e,t){n[e]=t},getCurrentPath:function(){return p.path},getCurrentPathname:function(){return p.pathname},getCurrentParams:function(){return p.params},getCurrentQuery:function(){return p.query},getCurrentRoutes:function(){return p.routes},isActive:function(e,n,t){return I.isAbsolute(e)?e===p.path:r(p.routes,e)&&i(p.params,n)&&(null==t||l(p.query,t))}},mixins:[j],propTypes:{children:C.falsy},childContextTypes:{routeDepth:C.number.isRequired,router:C.router.isRequired},getChildContext:function(){return{routeDepth:1,router:M}},getInitialState:function(){return p=f},componentWillReceiveProps:function(){this.setState(p=f)},componentWillUnmount:function(){M.stop()},render:function(){var e=M.getRouteAtDepth(0);return e?c.createElement(e.handler,this.props):null}});return M.clearAllRoutes(),e.routes&&M.addRoutes(e.routes),M}var c=t(2),d=t(160),h=t(159),u=t(177),m=t(175),f=t(182),g=t(174),y=t(178),b=t(179),w=t(180),j=t(188),v=t(186),x=t(190),k=t(191),C=t(157),S=t(193),W=t(176),T=t(192),A=t(194),P=t(158),E=t(195),I=t(161),F=u?g:"/",R=u?f:null;e.exports=p},function(e,n,t){"use strict";function a(e,n){if(!n)return!0;if(e.pathname===n.pathname)return!1;var t=e.routes,a=n.routes,s=t.filter(function(e){return-1!==a.indexOf(e)});return!s.some(function(e){return e.ignoreScrollBehavior})}var s=t(159),o=t(177),r=t(189),i={statics:{recordScrollPosition:function(e){this.scrollHistory||(this.scrollHistory={}),this.scrollHistory[e]=r()},getScrollPosition:function(e){return this.scrollHistory||(this.scrollHistory={}),this.scrollHistory[e]||null}},componentWillMount:function(){s(null==this.constructor.getScrollBehavior()||o,"Cannot use scroll behavior without a DOM")},componentDidMount:function(){this._updateScroll()},componentDidUpdate:function(e,n){this._updateScroll(n)},_updateScroll:function(e){if(a(this.state,e)){var n=this.constructor.getScrollBehavior();n&&n.updateScrollPosition(this.constructor.getScrollPosition(this.state.path),this.state.action)}}};e.exports=i},function(e,n,t){"use strict";function a(){return s(o,"Cannot get current scroll position without a DOM"),{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}}var s=t(159),o=t(177);e.exports=a},function(e,n,t){"use strict";function a(e){return null==e||o.isValidElement(e)}function s(e){return a(e)||Array.isArray(e)&&e.every(a)}var o=t(2);e.exports=s},function(e,n,t){"use strict";function a(e,n){this.path=e,this.abortReason=null,this.retry=n.bind(this)}var s=t(192),o=t(193);a.prototype.abort=function(e){null==this.abortReason&&(this.abortReason=e||"ABORT")},a.prototype.redirect=function(e,n,t){this.abort(new o(e,n,t))},a.prototype.cancel=function(){this.abort(new s)},a.from=function(e,n,t,a){n.reduce(function(n,a,s){return function(o){if(o||e.abortReason)n(o);else if(a.onLeave)try{a.onLeave(e,t[s],n),a.onLeave.length<3&&n()}catch(r){n(r)}else n()}},a)()},a.to=function(e,n,t,a,s){n.reduceRight(function(n,s){return function(o){if(o||e.abortReason)n(o);else if(s.onEnter)try{s.onEnter(e,t,a,n),s.onEnter.length<4&&n()}catch(r){n(r)}else n()}},s)()},e.exports=a},function(e,n){"use strict";function t(){}e.exports=t},function(e,n){"use strict";function t(e,n,t){this.to=e,this.params=n,this.query=t}e.exports=t},function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function s(e,n,t){var a=e.childRoutes;if(a)for(var o,l,p=0,c=a.length;c>p;++p)if(l=a[p],!l.isDefault&&!l.isNotFound&&(o=s(l,n,t)))return o.routes.unshift(e),o;var d=e.defaultRoute;if(d&&(u=r.extractParams(d.path,n)))return new i(n,u,t,[e,d]);var h=e.notFoundRoute;if(h&&(u=r.extractParams(h.path,n)))return new i(n,u,t,[e,h]);var u=r.extractParams(e.path,n);return u?new i(n,u,t,[e]):null}var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(161),i=function(){function e(n,t,s,o){a(this,e),this.pathname=n,this.params=t,this.query=s,this.routes=o}return o(e,null,[{key:"findMatch",value:function(e,n){for(var t=r.withoutQuery(n),a=r.extractQuery(n),o=null,i=0,l=e.length;null==o&&l>i;++i)o=s(e[i],t,a);return o}}]),e}();e.exports=i},function(e,n){"use strict";function t(){/*! taken from modernizr
	   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	   * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	   */
var e=navigator.userAgent;return-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone")?window.history&&"pushState"in window.history:!1}e.exports=t},function(e,n,t){"use strict";function a(e,n,t){"function"==typeof n&&(t=n,n=null);var a=s({routes:e,location:n});return a.run(t),a}var s=t(187);e.exports=a},function(e,n,t){var a=t(198),s=t(219),o=s(a);e.exports=o},function(e,n,t){var a=t(199),s=t(218),o=s(a);e.exports=o},function(e,n,t){function a(e,n){return s(e,n,o)}var s=t(200),o=t(204);e.exports=a},function(e,n,t){var a=t(201),s=a();e.exports=s},function(e,n,t){function a(e){return function(n,t,a){for(var o=s(n),r=a(n),i=r.length,l=e?i:-1;e?l--:++l<i;){var p=r[l];if(t(o[p],p,o)===!1)break}return n}}var s=t(202);e.exports=a},function(e,n,t){function a(e){return s(e)?e:Object(e)}var s=t(203);e.exports=a},function(e,n){function t(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}e.exports=t},function(e,n,t){var a=t(205),s=t(209),o=t(203),r=t(213),i=a(Object,"keys"),l=i?function(e){var n=null==e?void 0:e.constructor;return"function"==typeof n&&n.prototype===e||"function"!=typeof e&&s(e)?r(e):o(e)?i(e):[]}:r;e.exports=l},function(e,n,t){function a(e,n){var t=null==e?void 0:e[n];return s(t)?t:void 0}var s=t(206);e.exports=a},function(e,n,t){function a(e){return null==e?!1:s(e)?c.test(l.call(e)):o(e)&&r.test(e)}var s=t(207),o=t(208),r=/^\[object .+?Constructor\]$/,i=Object.prototype,l=Function.prototype.toString,p=i.hasOwnProperty,c=RegExp("^"+l.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=a},function(e,n,t){function a(e){return s(e)&&i.call(e)==o}var s=t(203),o="[object Function]",r=Object.prototype,i=r.toString;e.exports=a},function(e,n){function t(e){return!!e&&"object"==typeof e}e.exports=t},function(e,n,t){function a(e){return null!=e&&o(s(e))}var s=t(210),o=t(212);e.exports=a},function(e,n,t){var a=t(211),s=a("length");e.exports=s},function(e,n){function t(e){return function(n){return null==n?void 0:n[e]}}e.exports=t},function(e,n){function t(e){return"number"==typeof e&&e>-1&&e%1==0&&a>=e}var a=9007199254740991;e.exports=t},function(e,n,t){function a(e){for(var n=l(e),t=n.length,a=t&&e.length,p=!!a&&i(a)&&(o(e)||s(e)),d=-1,h=[];++d<t;){var u=n[d];(p&&r(u,a)||c.call(e,u))&&h.push(u)}return h}var s=t(214),o=t(215),r=t(216),i=t(212),l=t(217),p=Object.prototype,c=p.hasOwnProperty;e.exports=a},function(e,n,t){function a(e){return o(e)&&s(e)&&i.call(e,"callee")&&!l.call(e,"callee")}var s=t(209),o=t(208),r=Object.prototype,i=r.hasOwnProperty,l=r.propertyIsEnumerable;e.exports=a},function(e,n,t){var a=t(205),s=t(212),o=t(208),r="[object Array]",i=Object.prototype,l=i.toString,p=a(Array,"isArray"),c=p||function(e){return o(e)&&s(e.length)&&l.call(e)==r};e.exports=c},function(e,n){function t(e,n){return e="number"==typeof e||a.test(e)?+e:-1,n=null==n?s:n,e>-1&&e%1==0&&n>e}var a=/^\d+$/,s=9007199254740991;e.exports=t},function(e,n,t){function a(e){if(null==e)return[];l(e)||(e=Object(e));var n=e.length;n=n&&i(n)&&(o(e)||s(e))&&n||0;for(var t=e.constructor,a=-1,p="function"==typeof t&&t.prototype===e,d=Array(n),h=n>0;++a<n;)d[a]=a+"";for(var u in e)h&&r(u,n)||"constructor"==u&&(p||!c.call(e,u))||d.push(u);return d}var s=t(214),o=t(215),r=t(216),i=t(212),l=t(203),p=Object.prototype,c=p.hasOwnProperty;e.exports=a},function(e,n,t){function a(e,n){return function(t,a){var i=t?s(t):0;if(!o(i))return e(t,a);for(var l=n?i:-1,p=r(t);(n?l--:++l<i)&&a(p[l],l,p)!==!1;);return t}}var s=t(210),o=t(212),r=t(202);e.exports=a},function(e,n,t){function a(e,n){return function(t,a,l){if(a=s(a,l,3),i(t)){var p=r(t,a,n);return p>-1?t[p]:void 0}return o(t,a,e)}}var s=t(220),o=t(244),r=t(245),i=t(215);e.exports=a},function(e,n,t){function a(e,n,t){var a=typeof e;return"function"==a?void 0===n?e:r(e,n,t):null==e?i:"object"==a?s(e):void 0===n?l(e):o(e,n)}var s=t(221),o=t(233),r=t(240),i=t(241),l=t(242);e.exports=a},function(e,n,t){function a(e){var n=o(e);if(1==n.length&&n[0][2]){var t=n[0][0],a=n[0][1];return function(e){return null==e?!1:e[t]===a&&(void 0!==a||t in r(e))}}return function(e){return s(e,n)}}var s=t(222),o=t(230),r=t(202);e.exports=a},function(e,n,t){function a(e,n,t){var a=n.length,r=a,i=!t;if(null==e)return!r;for(e=o(e);a--;){var l=n[a];if(i&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<r;){l=n[a];var p=l[0],c=e[p],d=l[1];if(i&&l[2]){if(void 0===c&&!(p in e))return!1}else{var h=t?t(c,d,p):void 0;if(!(void 0===h?s(d,c,t,!0):h))return!1}}return!0}var s=t(223),o=t(202);e.exports=a},function(e,n,t){function a(e,n,t,i,l,p){return e===n?!0:null==e||null==n||!o(e)&&!r(n)?e!==e&&n!==n:s(e,n,a,t,i,l,p)}var s=t(224),o=t(203),r=t(208);e.exports=a},function(e,n,t){function a(e,n,t,a,h,f,g){var y=i(e),b=i(n),w=c,j=c;y||(w=m.call(e),w==p?w=d:w!=d&&(y=l(e))),b||(j=m.call(n),j==p?j=d:j!=d&&(b=l(n)));var v=w==d,x=j==d,k=w==j;if(k&&!y&&!v)return o(e,n,w);if(!h){var C=v&&u.call(e,"__wrapped__"),S=x&&u.call(n,"__wrapped__");if(C||S)return t(C?e.value():e,S?n.value():n,a,h,f,g)}if(!k)return!1;f||(f=[]),g||(g=[]);for(var W=f.length;W--;)if(f[W]==e)return g[W]==n;f.push(e),g.push(n);var T=(y?s:r)(e,n,t,a,h,f,g);return f.pop(),g.pop(),T}var s=t(225),o=t(227),r=t(228),i=t(215),l=t(229),p="[object Arguments]",c="[object Array]",d="[object Object]",h=Object.prototype,u=h.hasOwnProperty,m=h.toString;e.exports=a},function(e,n,t){function a(e,n,t,a,o,r,i){var l=-1,p=e.length,c=n.length;if(p!=c&&!(o&&c>p))return!1;for(;++l<p;){var d=e[l],h=n[l],u=a?a(o?h:d,o?d:h,l):void 0;if(void 0!==u){if(u)continue;return!1}if(o){if(!s(n,function(e){return d===e||t(d,e,a,o,r,i)}))return!1}else if(d!==h&&!t(d,h,a,o,r,i))return!1}return!0}var s=t(226);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length;++t<a;)if(n(e[t],t,e))return!0;return!1}e.exports=t},function(e,n){function t(e,n,t){switch(t){case a:case s:return+e==+n;case o:return e.name==n.name&&e.message==n.message;case r:return e!=+e?n!=+n:e==+n;case i:case l:return e==n+""}return!1}var a="[object Boolean]",s="[object Date]",o="[object Error]",r="[object Number]",i="[object RegExp]",l="[object String]";e.exports=t},function(e,n,t){function a(e,n,t,a,o,i,l){var p=s(e),c=p.length,d=s(n),h=d.length;if(c!=h&&!o)return!1;for(var u=c;u--;){var m=p[u];if(!(o?m in n:r.call(n,m)))return!1}for(var f=o;++u<c;){m=p[u];var g=e[m],y=n[m],b=a?a(o?y:g,o?g:y,m):void 0;if(!(void 0===b?t(g,y,a,o,i,l):b))return!1;f||(f="constructor"==m)}if(!f){var w=e.constructor,j=n.constructor;if(w!=j&&"constructor"in e&&"constructor"in n&&!("function"==typeof w&&w instanceof w&&"function"==typeof j&&j instanceof j))return!1}return!0}var s=t(204),o=Object.prototype,r=o.hasOwnProperty;e.exports=a},function(e,n,t){function a(e){return o(e)&&s(e.length)&&!!P[I.call(e)]}var s=t(212),o=t(208),r="[object Arguments]",i="[object Array]",l="[object Boolean]",p="[object Date]",c="[object Error]",d="[object Function]",h="[object Map]",u="[object Number]",m="[object Object]",f="[object RegExp]",g="[object Set]",y="[object String]",b="[object WeakMap]",w="[object ArrayBuffer]",j="[object Float32Array]",v="[object Float64Array]",x="[object Int8Array]",k="[object Int16Array]",C="[object Int32Array]",S="[object Uint8Array]",W="[object Uint8ClampedArray]",T="[object Uint16Array]",A="[object Uint32Array]",P={};P[j]=P[v]=P[x]=P[k]=P[C]=P[S]=P[W]=P[T]=P[A]=!0,P[r]=P[i]=P[w]=P[l]=P[p]=P[c]=P[d]=P[h]=P[u]=P[m]=P[f]=P[g]=P[y]=P[b]=!1;var E=Object.prototype,I=E.toString;e.exports=a},function(e,n,t){function a(e){for(var n=o(e),t=n.length;t--;)n[t][2]=s(n[t][1]);return n}var s=t(231),o=t(232);e.exports=a},function(e,n,t){function a(e){return e===e&&!s(e)}var s=t(203);e.exports=a},function(e,n,t){function a(e){e=o(e);for(var n=-1,t=s(e),a=t.length,r=Array(a);++n<a;){var i=t[n];r[n]=[i,e[i]]}return r}var s=t(204),o=t(202);e.exports=a},function(e,n,t){function a(e,n){var t=i(e),a=l(e)&&p(n),u=e+"";return e=h(e),function(i){if(null==i)return!1;var l=u;if(i=d(i),(t||!a)&&!(l in i)){if(i=1==e.length?i:s(i,r(e,0,-1)),null==i)return!1;l=c(e),i=d(i)}return i[l]===n?void 0!==n||l in i:o(n,i[l],void 0,!0)}}var s=t(234),o=t(223),r=t(235),i=t(215),l=t(236),p=t(231),c=t(237),d=t(202),h=t(238);e.exports=a},function(e,n,t){function a(e,n,t){if(null!=e){void 0!==t&&t in s(e)&&(n=[t]);for(var a=0,o=n.length;null!=e&&o>a;)e=e[n[a++]];return a&&a==o?e:void 0}}var s=t(202);e.exports=a},function(e,n){function t(e,n,t){var a=-1,s=e.length;n=null==n?0:+n||0,0>n&&(n=-n>s?0:s+n),t=void 0===t||t>s?s:+t||0,0>t&&(t+=s),s=n>t?0:t-n>>>0,n>>>=0;for(var o=Array(s);++a<s;)o[a]=e[a+n];return o}e.exports=t},function(e,n,t){function a(e,n){var t=typeof e;if("string"==t&&i.test(e)||"number"==t)return!0;if(s(e))return!1;var a=!r.test(e);return a||null!=n&&e in o(n)}var s=t(215),o=t(202),r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,i=/^\w*$/;e.exports=a},function(e,n){function t(e){var n=e?e.length:0;return n?e[n-1]:void 0}e.exports=t},function(e,n,t){function a(e){if(o(e))return e;var n=[];return s(e).replace(r,function(e,t,a,s){n.push(a?s.replace(i,"$1"):t||e)}),n}var s=t(239),o=t(215),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,i=/\\(\\)?/g;e.exports=a},function(e,n){function t(e){return null==e?"":e+""}e.exports=t},function(e,n,t){function a(e,n,t){if("function"!=typeof e)return s;if(void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 3:return function(t,a,s){return e.call(n,t,a,s)};case 4:return function(t,a,s,o){return e.call(n,t,a,s,o)};case 5:return function(t,a,s,o,r){return e.call(n,t,a,s,o,r)}}return function(){return e.apply(n,arguments)}}var s=t(241);e.exports=a},function(e,n){function t(e){return e}e.exports=t},function(e,n,t){function a(e){return r(e)?s(e):o(e)}var s=t(211),o=t(243),r=t(236);e.exports=a},function(e,n,t){function a(e){var n=e+"";return e=o(e),function(t){return s(t,e,n)}}var s=t(234),o=t(238);e.exports=a},function(e,n){function t(e,n,t,a){var s;return t(e,function(e,t,o){return n(e,t,o)?(s=a?t:e,!1):void 0}),s}e.exports=t},function(e,n){function t(e,n,t){for(var a=e.length,s=t?a:-1;t?s--:++s<a;)if(n(e[s],s,e))return s;return-1}e.exports=t},function(e,n,t){function a(e,n,t){var a=i(e)?s:r;return n=o(n,t,3),a(e,n)}var s=t(247),o=t(220),r=t(248),i=t(215);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length,s=-1,o=[];++t<a;){var r=e[t];n(r,t,e)&&(o[++s]=r)}return o}e.exports=t},function(e,n,t){function a(e,n){var t=[];return s(e,function(e,a,s){n(e,a,s)&&t.push(e)}),t}var s=t(198);e.exports=a},function(e,n,t){var a,s,o,r,i,l,p;a=t(155),o=t(246),p=t(250),i=t(237),r=t(256),s=t(258).config,l=t(259).link,e.exports=function(e,n){var s,c,d,h,u,m,f,g,y,b,w,j,v,x,k,C;for(C={},C.root=a.createRoute({name:"root-template",path:l("/"),handler:n("./_template")}),k=o(e,function(e){return"_template"===e.file.name&&"."!==e.file.dirname}),h=0,m=k.length;m>h;h++)x=k[h],v=o(k,function(e){return r(x.requirePath,e.file.dirname)}),v=p(v,function(e){return null!=e?e.file.dirname.length:void 0}),j=i(v),b=C[null!=j?j.file.dirname:void 0],b||(b=C.root),C[x.file.dirname]=a.createRoute({name:x.file.dirname+"-template",path:l(x.templatePath),parentRoute:b,handler:n("./"+x.requirePath)});for(s=o(e,function(e){return"_"!==e.file.name.slice(0,1)}),g=t(261),d=t(283),u=0,f=s.length;f>u;u++){switch(y=s[u],y.file.ext){case"md":c=g,y.data=n("./"+y.requirePath);break;case"html":c=d;break;case"jsx":c=n("./"+y.requirePath),y.data=n("./"+y.requirePath).metadata?n("./"+y.requirePath).metadata():void 0;break;case"cjsx":c=n("./"+y.requirePath),y.data=n("./"+y.requirePath).metadata?n("./"+y.requirePath).metadata():void 0;break;default:c=n("./"+y.requirePath)}w=o(k,function(e){return r(y.requirePath,e.file.dirname)}),w=p(w,function(e){return null!=e?e.file.dirname.length:void 0}),j=i(w),b=C[null!=j?j.file.dirname:void 0],b||(b=C.root),r(y.path,"/index")&&b.file.dirname===j.file.dirname?a.createDefaultRoute({name:y.path,parentRoute:b,handler:c}):a.createRoute({name:y.path,path:l(y.path),parentRoute:b,handler:c})}return C.root}},function(e,n,t){function a(e,n,t){if(null==e)return[];t&&l(e,n,t)&&(n=void 0);var a=-1;n=s(n,t,3);var p=o(e,function(e,t,s){return{criteria:n(e,t,s),index:++a,value:e}});return r(p,i)}var s=t(220),o=t(251),r=t(252),i=t(253),l=t(255);e.exports=a},function(e,n,t){function a(e,n){var t=-1,a=o(e)?Array(e.length):[];return s(e,function(e,s,o){a[++t]=n(e,s,o)}),a}var s=t(198),o=t(209);e.exports=a},function(e,n){function t(e,n){var t=e.length;for(e.sort(n);t--;)e[t]=e[t].value;return e}e.exports=t},function(e,n,t){function a(e,n){return s(e.criteria,n.criteria)||e.index-n.index}var s=t(254);e.exports=a},function(e,n){function t(e,n){if(e!==n){var t=null===e,a=void 0===e,s=e===e,o=null===n,r=void 0===n,i=n===n;if(e>n&&!o||!s||t&&!r&&i||a&&i)return 1;if(n>e&&!t||!i||o&&!a&&s||r&&s)return-1}return 0}e.exports=t},function(e,n,t){function a(e,n,t){if(!r(t))return!1;var a=typeof n;if("number"==a?s(t)&&o(n,t.length):"string"==a&&n in t){var i=t[n];return e===e?e===i:i!==i}return!1}var s=t(209),o=t(216),r=t(203);e.exports=a},function(e,n,t){var a=t(257);e.exports=function(e,n){return""===n?!0:-1!==a(e).indexOf(n)}},function(e,n){e.exports=function(e){return null==e?"":""+e}},function(e,n){e.exports={config:{siteTitle:"FreeCodeCamp Wiki",headerColor:"#884499",linkPrefix:"/wiki"},relativePath:"",pages:[{file:{dirname:".",basename:"_template.jsx",name:"_template",extname:".jsx",extSegments:[".jsx"],ext:"jsx"},requirePath:"_template.jsx",templatePath:"/./"},{file:{dirname:"docs",basename:"_template.jsx",name:"_template",extname:".jsx",extSegments:[".jsx"],ext:"jsx"},requirePath:"docs/_template.jsx",templatePath:"/docs/"},{file:{dirname:"docs/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/index.md",data:{title:"10 Steps To Plan Better So You Can Write Less Code",order:5},path:"/docs/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/"},{file:{dirname:"docs/5-Steps-to-organizing-a-successful-Campsite-event.",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/5-Steps-to-organizing-a-successful-Campsite-event./index.md",data:{title:"5 Steps to organizing a successful Campsite event.",order:5},path:"/docs/5-Steps-to-organizing-a-successful-Campsite-event./"},{file:{dirname:"docs/5-steps-to-organizing-a-successful-campsite-event",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/5-steps-to-organizing-a-successful-campsite-event/index.md",data:{title:"5 Steps to organizing a successful Campsite event",order:5},path:"/docs/5-steps-to-organizing-a-successful-campsite-event/"},{file:{dirname:"docs/Academic-Honesty-Policy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Academic-Honesty-Policy/index.md",data:{title:"Academic Honesty Policy",order:5},path:"/docs/Academic-Honesty-Policy/"},{file:{dirname:"docs/Accessing-the-database-from-your-frontend",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Accessing-the-database-from-your-frontend/index.md",data:{title:"Accessing the database from your frontend",order:5},path:"/docs/Accessing-the-database-from-your-frontend/"},{file:{dirname:"docs/Adding-Environment-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Adding-Environment-Variables/index.md",data:{title:"Adding Environment Variables",order:5},path:"/docs/Adding-Environment-Variables/"},{file:{dirname:"docs/Angular-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Angular-Resources/index.md",data:{title:"Angular Resources",order:5},path:"/docs/Angular-Resources/"},{file:{dirname:"docs/Arithmetic-Operators",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Arithmetic-Operators/index.md",data:{title:"Arithmetic Operators",order:5},path:"/docs/Arithmetic-Operators/"},{file:{dirname:"docs/Array.isArray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Array.isArray/index.md",data:{title:"Array.isArray",order:5},path:"/docs/Array.isArray/"},{file:{dirname:"docs/August-2015-Improvements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/August-2015-Improvements/index.md",data:{title:"August 2015 Improvements",order:5},path:"/docs/August-2015-Improvements/"},{file:{dirname:"docs/August-Live-Stream",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/August-Live-Stream/index.md",data:{title:"August Live Stream",order:5},path:"/docs/August-Live-Stream/"},{file:{dirname:"docs/Backend-file-structure",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Backend-file-structure/index.md",data:{title:"Backend file structure",order:5},path:"/docs/Backend-file-structure/"},{file:{dirname:"docs/Basejump-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Basejump-Resources/index.md",data:{title:"Basejump Resources",order:5},path:"/docs/Basejump-Resources/"},{file:{dirname:"docs/beta",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/beta/index.md",data:{title:"beta",order:5},path:"/docs/beta/"},{file:{dirname:"docs/bf-bouncer",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/bf-bouncer/index.md",data:{title:"bf bouncer",order:5},path:"/docs/bf-bouncer/"},{file:{dirname:"docs/Bobby-Tables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bobby-Tables/index.md",data:{title:"Bobby Tables",order:5},path:"/docs/Bobby-Tables/"},{file:{dirname:"docs/Bonfire-Arguments-Optional",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Arguments-Optional/index.md",data:{title:"Bonfire Arguments Optional",order:5},path:"/docs/Bonfire-Arguments-Optional/"},{file:{dirname:"docs/Bonfire-Binary-Agents",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Binary-Agents/index.md",data:{title:"Bonfire Binary Agents",order:5},path:"/docs/Bonfire-Binary-Agents/"},{file:{dirname:"docs/Bonfire-Boo-who",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Boo-who/index.md",data:{title:"Bonfire Boo who",order:5},path:"/docs/Bonfire-Boo-who/"},{file:{dirname:"docs/Bonfire-Check-for-Palindromes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Check-for-Palindromes/index.md",data:{title:"Bonfire Check for Palindromes",order:5},path:"/docs/Bonfire-Check-for-Palindromes/"},{file:{dirname:"docs/Bonfire-Chunky-Monkey",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Chunky-Monkey/index.md",data:{title:"Bonfire Chunky Monkey",order:5},path:"/docs/Bonfire-Chunky-Monkey/"},{file:{dirname:"docs/Bonfire-Confirm-the-Ending",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Confirm-the-Ending/index.md",data:{title:"Bonfire Confirm the Ending",order:5},path:"/docs/Bonfire-Confirm-the-Ending/"},{file:{dirname:"docs/Bonfire-Convert-HTML-Entities",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Convert-HTML-Entities/index.md",data:{title:"Bonfire Convert HTML Entities",order:5},path:"/docs/Bonfire-Convert-HTML-Entities/"},{file:{dirname:"docs/Bonfire-Diff-Two-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Diff-Two-Arrays/index.md",data:{title:"Bonfire Diff Two Arrays",order:5},path:"/docs/Bonfire-Diff-Two-Arrays/"},{file:{dirname:"docs/Bonfire-DNA-Pairing",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-DNA-Pairing/index.md",data:{title:"Bonfire DNA Pairing",order:5},path:"/docs/Bonfire-DNA-Pairing/"},{file:{dirname:"docs/Bonfire-Drop-it",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Drop-it/index.md",data:{title:"Bonfire Drop it",order:5},path:"/docs/Bonfire-Drop-it/"},{file:{dirname:"docs/Bonfire-Everything-be-True",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Everything-be-True/index.md",data:{title:"Bonfire Everything be True",order:5},path:"/docs/Bonfire-Everything-be-True/"},{file:{dirname:"docs/Bonfire-Exact-Change",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Exact-Change/index.md",data:{title:"Bonfire Exact Change",order:5},path:"/docs/Bonfire-Exact-Change/"},{file:{dirname:"docs/Bonfire-Factorialize-a-Number",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Factorialize-a-Number/index.md",data:{title:"Bonfire Factorialize a Number",order:5},path:"/docs/Bonfire-Factorialize-a-Number/"},{file:{dirname:"docs/Bonfire-Falsey-Bouncer",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Falsey-Bouncer/index.md",data:{title:"Bonfire Falsey Bouncer",order:5},path:"/docs/Bonfire-Falsey-Bouncer/"},{file:{dirname:"docs/Bonfire-Falsy-Bouncer",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Falsy-Bouncer/index.md",data:{title:"Bonfire Falsy Bouncer",order:5},path:"/docs/Bonfire-Falsy-Bouncer/"},{file:{dirname:"docs/Bonfire-Find-The-Longest-Word-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Find-The-Longest-Word-in-a-String/index.md",data:{title:"Bonfire Find The Longest Word in a String",order:5},path:"/docs/Bonfire-Find-The-Longest-Word-in-a-String/"},{file:{dirname:"docs/Bonfire-Finders-Keepers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Finders-Keepers/index.md",data:{title:"Bonfire Finders Keepers",order:5},path:"/docs/Bonfire-Finders-Keepers/"},{file:{dirname:"docs/Bonfire-Friendly-Date-Ranges",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Friendly-Date-Ranges/index.md",data:{title:"Bonfire Friendly Date Ranges",order:5},path:"/docs/Bonfire-Friendly-Date-Ranges/"},{file:{dirname:"docs/Bonfire-Inventory-Update",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Inventory-Update/index.md",data:{title:"Bonfire Inventory Update",order:5},path:"/docs/Bonfire-Inventory-Update/"},{file:{dirname:"docs/Bonfire-Make-a-Person",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Make-a-Person/index.md",data:{title:"Bonfire Make a Person",order:5},path:"/docs/Bonfire-Make-a-Person/"},{file:{dirname:"docs/Bonfire-Map-the-Debris",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Map-the-Debris/index.md",data:{title:"Bonfire Map the Debris",order:5},path:"/docs/Bonfire-Map-the-Debris/"},{file:{dirname:"docs/Bonfire-Meet-Bonfire",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Meet-Bonfire/index.md",data:{title:"Bonfire Meet Bonfire",order:5},path:"/docs/Bonfire-Meet-Bonfire/"},{file:{dirname:"docs/Bonfire-Missing-letters",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Missing-letters/index.md",data:{title:"Bonfire Missing letters",order:5},path:"/docs/Bonfire-Missing-letters/"},{file:{dirname:"docs/Bonfire-Mutations",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Mutations/index.md",data:{title:"Bonfire Mutations",order:5},path:"/docs/Bonfire-Mutations/"},{file:{dirname:"docs/Bonfire-No-Repeats-Please",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-No-Repeats-Please/index.md",data:{title:"Bonfire No Repeats Please",order:5},path:"/docs/Bonfire-No-Repeats-Please/"},{file:{dirname:"docs/Bonfire-Pairwise",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Pairwise/index.md",data:{title:"Bonfire Pairwise",order:5},path:"/docs/Bonfire-Pairwise/"},{file:{dirname:"docs/Bonfire-Pig-Latin",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Pig-Latin/index.md",data:{title:"Bonfire Pig Latin",order:5},path:"/docs/Bonfire-Pig-Latin/"},{file:{dirname:"docs/Bonfire-Repeat-a-String-Repeat-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Repeat-a-String-Repeat-a-String/index.md",data:{title:"Bonfire Repeat a String Repeat a String",order:5},path:"/docs/Bonfire-Repeat-a-String-Repeat-a-String/"},{file:{dirname:"docs/Bonfire-Return-Largest-Numbers-in-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Return-Largest-Numbers-in-Arrays/index.md",data:{title:"Bonfire Return Largest Numbers in Arrays",order:5},path:"/docs/Bonfire-Return-Largest-Numbers-in-Arrays/"},{file:{dirname:"docs/Bonfire-Reverse-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Reverse-a-String/index.md",data:{title:"Bonfire Reverse a String",order:5},path:"/docs/Bonfire-Reverse-a-String/"},{file:{dirname:"docs/Bonfire-Roman-Numeral-Converter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Roman-Numeral-Converter/index.md",data:{title:"Bonfire Roman Numeral Converter",order:5},path:"/docs/Bonfire-Roman-Numeral-Converter/"},{file:{dirname:"docs/Bonfire-Search-and-Replace",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Search-and-Replace/index.md",data:{title:"Bonfire Search and Replace",order:5},path:"/docs/Bonfire-Search-and-Replace/"},{file:{dirname:"docs/Bonfire-Seek-and-Destroy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Seek-and-Destroy/index.md",data:{title:"Bonfire Seek and Destroy",order:5},path:"/docs/Bonfire-Seek-and-Destroy/"},{file:{dirname:"docs/Bonfire-Slasher-Flick",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Slasher-Flick/index.md",data:{title:"Bonfire Slasher Flick",order:5},path:"/docs/Bonfire-Slasher-Flick/"},{file:{dirname:"docs/Bonfire-Smallest-Common-Multiple",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Smallest-Common-Multiple/index.md",data:{title:"Bonfire Smallest Common Multiple",order:5},path:"/docs/Bonfire-Smallest-Common-Multiple/"},{file:{dirname:"docs/Bonfire-Sorted-Union",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Sorted-Union/index.md",data:{title:"Bonfire Sorted Union",order:5},path:"/docs/Bonfire-Sorted-Union/"},{file:{dirname:"docs/Bonfire-Spinal-Tap-Case",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Spinal-Tap-Case/index.md",data:{title:"Bonfire Spinal Tap Case",order:5},path:"/docs/Bonfire-Spinal-Tap-Case/"},{file:{dirname:"docs/Bonfire-Steamroller",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Steamroller/index.md",data:{title:"Bonfire Steamroller",order:5},path:"/docs/Bonfire-Steamroller/"},{file:{dirname:"docs/Bonfire-Style-Guide",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Style-Guide/index.md",data:{title:"Bonfire Style Guide",order:5},path:"/docs/Bonfire-Style-Guide/"},{file:{dirname:"docs/Bonfire-Sum-All-Numbers-in-a-Range",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Sum-All-Numbers-in-a-Range/index.md",data:{title:"Bonfire Sum All Numbers in a Range",order:5},path:"/docs/Bonfire-Sum-All-Numbers-in-a-Range/"},{file:{dirname:"docs/Bonfire-Sum-All-Odd-Fibonacci-Numbers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Sum-All-Odd-Fibonacci-Numbers/index.md",data:{title:"Bonfire Sum All Odd Fibonacci Numbers",order:5},path:"/docs/Bonfire-Sum-All-Odd-Fibonacci-Numbers/"},{file:{dirname:"docs/Bonfire-Sum-All-Primes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Sum-All-Primes/index.md",data:{title:"Bonfire Sum All Primes",order:5},path:"/docs/Bonfire-Sum-All-Primes/"},{file:{dirname:"docs/Bonfire-Symmetric-Difference",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Symmetric-Difference/index.md",data:{title:"Bonfire Symmetric Difference",order:5},path:"/docs/Bonfire-Symmetric-Difference/"},{file:{dirname:"docs/Bonfire-Title-Case-a-Sentence",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Title-Case-a-Sentence/index.md",data:{title:"Bonfire Title Case a Sentence",order:5},path:"/docs/Bonfire-Title-Case-a-Sentence/"},{file:{dirname:"docs/Bonfire-Truncate-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Truncate-a-String/index.md",data:{title:"Bonfire Truncate a String",order:5},path:"/docs/Bonfire-Truncate-a-String/"},{file:{dirname:"docs/Bonfire-Validate-US-Telephone-Numbers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Validate-US-Telephone-Numbers/index.md",data:{title:"Bonfire Validate US Telephone Numbers",order:5},path:"/docs/Bonfire-Validate-US-Telephone-Numbers/"},{file:{dirname:"docs/Bonfire-Where-art-thou",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Where-art-thou/index.md",data:{title:"Bonfire Where art thou",order:5},path:"/docs/Bonfire-Where-art-thou/"},{file:{dirname:"docs/Bonfire-Where-do-I-belong",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Where-do-I-belong/index.md",data:{title:"Bonfire Where do I belong",order:5},path:"/docs/Bonfire-Where-do-I-belong/"},{file:{dirname:"docs/Bonfire-Wiki-Template",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonfire-Wiki-Template/index.md",data:{title:"Bonfire Wiki Template",order:5},path:"/docs/Bonfire-Wiki-Template/"},{file:{dirname:"docs/Bonus-SocketIO",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bonus-SocketIO/index.md",data:{title:"Bonus SocketIO",order:5},path:"/docs/Bonus-SocketIO/"},{file:{dirname:"docs/Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Bootstrap/index.md",data:{title:"Bootstrap",order:5},path:"/docs/Bootstrap/"},{file:{dirname:"docs/bot-announce",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/bot-announce/index.md",data:{title:"bot announce",order:5},path:"/docs/bot-announce/"},{file:{dirname:"docs/botdemo",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/botdemo/index.md",data:{
title:"botdemo",order:5},path:"/docs/botdemo/"},{file:{dirname:"docs/botideas",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/botideas/index.md",data:{title:"botideas",order:5},path:"/docs/botideas/"},{file:{dirname:"docs/botintro",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/botintro/index.md",data:{title:"botintro",order:5},path:"/docs/botintro/"},{file:{dirname:"docs/botpreso",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/botpreso/index.md",data:{title:"botpreso",order:5},path:"/docs/botpreso/"},{file:{dirname:"docs/Brownie-Points",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Brownie-Points/index.md",data:{title:"Brownie Points",order:5},path:"/docs/Brownie-Points/"},{file:{dirname:"docs/Camper-News",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Camper-News/index.md",data:{title:"Camper News",order:5},path:"/docs/Camper-News/"},{file:{dirname:"docs/camperbot",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/camperbot/index.md",data:{title:"camperbot",order:5},path:"/docs/camperbot/"},{file:{dirname:"docs/Campsites",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Campsites/index.md",data:{title:"Campsites",order:5},path:"/docs/Campsites/"},{file:{dirname:"docs/chai-assert",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/chai-assert/index.md",data:{title:"chai assert",order:5},path:"/docs/chai-assert/"},{file:{dirname:"docs/chai-cheat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/chai-cheat/index.md",data:{title:"chai cheat",order:5},path:"/docs/chai-cheat/"},{file:{dirname:"docs/chai",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/chai/index.md",data:{title:"chai",order:5},path:"/docs/chai/"},{file:{dirname:"docs/Clear-Your-Browser's-Local-Storage",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Clear-Your-Browser's-Local-Storage/index.md",data:{title:"Clear Your Browser's Local Storage",order:5},path:"/docs/Clear-Your-Browser's-Local-Storage/"},{file:{dirname:"docs/code-case",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/code-case/index.md",data:{title:"code case",order:5},path:"/docs/code-case/"},{file:{dirname:"docs/code-formatting",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/code-formatting/index.md",data:{title:"code formatting",order:5},path:"/docs/code-formatting/"},{file:{dirname:"docs/Code-of-Conduct",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Code-of-Conduct/index.md",data:{title:"Code of Conduct",order:5},path:"/docs/Code-of-Conduct/"},{file:{dirname:"docs/Coding-Help",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Coding-Help/index.md",data:{title:"Coding Help",order:5},path:"/docs/Coding-Help/"},{file:{dirname:"docs/Contributions-Guide---with-Typo-Demo",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Contributions-Guide---with-Typo-Demo/index.md",data:{title:"Contributions Guide   with Typo Demo",order:5},path:"/docs/Contributions-Guide---with-Typo-Demo/"},{file:{dirname:"docs/Create,-Upload-and-Link-Animated-GIF-Image",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Create,-Upload-and-Link-Animated-GIF-Image/index.md",data:{title:"Create, Upload and Link Animated GIF Image",order:5},path:"/docs/Create,-Upload-and-Link-Animated-GIF-Image/"},{file:{dirname:"docs/Creating-a-new-API-endpoint",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Creating-a-new-API-endpoint/index.md",data:{title:"Creating a new API endpoint",order:5},path:"/docs/Creating-a-new-API-endpoint/"},{file:{dirname:"docs/Creating-a-new-directive",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Creating-a-new-directive/index.md",data:{title:"Creating a new directive",order:5},path:"/docs/Creating-a-new-directive/"},{file:{dirname:"docs/Creating-a-New-Github-Issue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Creating-a-New-Github-Issue/index.md",data:{title:"Creating a New Github Issue",order:5},path:"/docs/Creating-a-New-Github-Issue/"},{file:{dirname:"docs/Creating-a-new-route",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Creating-a-new-route/index.md",data:{title:"Creating a new route",order:5},path:"/docs/Creating-a-new-route/"},{file:{dirname:"docs/css-selectors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/css-selectors/index.md",data:{title:"css selectors",order:5},path:"/docs/css-selectors/"},{file:{dirname:"docs/css",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/css/index.md",data:{title:"css",order:5},path:"/docs/css/"},{file:{dirname:"docs/dau",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/dau/index.md",data:{title:"dau",order:5},path:"/docs/dau/"},{file:{dirname:"docs/debugging",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/debugging/index.md",data:{title:"debugging",order:5},path:"/docs/debugging/"},{file:{dirname:"docs/demo-trim",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/demo-trim/index.md",data:{title:"demo trim",order:5},path:"/docs/demo-trim/"},{file:{dirname:"docs/Develop-BaseJump-locally-and-run-on-c9.io",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Develop-BaseJump-locally-and-run-on-c9.io/index.md",data:{title:"Develop BaseJump locally and run on c9.io",order:5},path:"/docs/Develop-BaseJump-locally-and-run-on-c9.io/"},{file:{dirname:"docs/Disable-Code-Auto-Run",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Disable-Code-Auto-Run/index.md",data:{title:"Disable Code Auto Run",order:5},path:"/docs/Disable-Code-Auto-Run/"},{file:{dirname:"docs/Dynamic-URLs-using-$routeParams",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Dynamic-URLs-using-$routeParams/index.md",data:{title:"Dynamic URLs using $routeParams",order:5},path:"/docs/Dynamic-URLs-using-$routeParams/"},{file:{dirname:"docs/Edit-or-Delete-message",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Edit-or-Delete-message/index.md",data:{title:"Edit or Delete message",order:5},path:"/docs/Edit-or-Delete-message/"},{file:{dirname:"docs/emoji",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/emoji/index.md",data:{title:"emoji",order:5},path:"/docs/emoji/"},{file:{dirname:"docs/Epilogue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Epilogue/index.md",data:{title:"Epilogue",order:5},path:"/docs/Epilogue/"},{file:{dirname:"docs/example",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/example/index.md",data:{title:"example",order:5},path:"/docs/example/"},{file:{dirname:"docs/Fixing-exports.update",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Fixing-exports.update/index.md",data:{title:"Fixing exports.update",order:5},path:"/docs/Fixing-exports.update/"},{file:{dirname:"docs/For-loops-Explained",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/For-loops-Explained/index.md",data:{title:"For loops Explained",order:5},path:"/docs/For-loops-Explained/"},{file:{dirname:"docs/Free-Code-Camp-completion-language-requirements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-completion-language-requirements/index.md",data:{title:"Free Code Camp completion language requirements",order:5},path:"/docs/Free-Code-Camp-completion-language-requirements/"},{file:{dirname:"docs/Free-Code-Camp-Deployment-Workflow",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-Deployment-Workflow/index.md",data:{title:"Free Code Camp Deployment Workflow",order:5},path:"/docs/Free-Code-Camp-Deployment-Workflow/"},{file:{dirname:"docs/Free-Code-Camp-Front-End-Development-Certificate",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-Front-End-Development-Certificate/index.md",data:{title:"Free Code Camp Front End Development Certificate",order:5},path:"/docs/Free-Code-Camp-Front-End-Development-Certificate/"},{file:{dirname:"docs/Free-Code-Camp-Full-Stack-Development-Certificate",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-Full-Stack-Development-Certificate/index.md",data:{title:"Free Code Camp Full Stack Development Certificate",order:5},path:"/docs/Free-Code-Camp-Full-Stack-Development-Certificate/"},{file:{dirname:"docs/Free-Code-Camp-is-an-open-source-community-distributed-across-many-platforms",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-is-an-open-source-community-distributed-across-many-platforms/index.md",data:{title:"Free Code Camp is an open source community distributed across many platforms",order:5},path:"/docs/Free-Code-Camp-is-an-open-source-community-distributed-across-many-platforms/"},{file:{dirname:"docs/Free-Code-Camp-JavaScript-Style-Guide",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-JavaScript-Style-Guide/index.md",data:{title:"Free Code Camp JavaScript Style Guide",order:5},path:"/docs/Free-Code-Camp-JavaScript-Style-Guide/"},{file:{dirname:"docs/Free-Code-Camp-logo",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp-logo/index.md",data:{title:"Free Code Camp logo",order:5},path:"/docs/Free-Code-Camp-logo/"},{file:{dirname:"docs/Free-Code-Camp's-Privacy-Policy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Free-Code-Camp's-Privacy-Policy/index.md",data:{title:"Free Code Camp's Privacy Policy",order:5},path:"/docs/Free-Code-Camp's-Privacy-Policy/"},{file:{dirname:"docs/Frontend-file-structure",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Frontend-file-structure/index.md",data:{title:"Frontend file structure",order:5},path:"/docs/Frontend-file-structure/"},{file:{dirname:"docs/Functional-Programming---Higher-Order-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Functional-Programming---Higher-Order-Functions/index.md",data:{title:"Functional Programming   Higher Order Functions",order:5},path:"/docs/Functional-Programming---Higher-Order-Functions/"},{file:{dirname:"docs/Get-info-about-the-current-user",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Get-info-about-the-current-user/index.md",data:{title:"Get info about the current user",order:5},path:"/docs/Get-info-about-the-current-user/"},{file:{dirname:"docs/Getting-a-coding-job",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Getting-a-coding-job/index.md",data:{title:"Getting a coding job",order:5},path:"/docs/Getting-a-coding-job/"},{file:{dirname:"docs/Git-Blame",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Git-Blame/index.md",data:{title:"Git Blame",order:5},path:"/docs/Git-Blame/"},{file:{dirname:"docs/git-merge",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/git-merge/index.md",data:{title:"git merge",order:5},path:"/docs/git-merge/"},{file:{dirname:"docs/git-rebase",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/git-rebase/index.md",data:{title:"git rebase",order:5},path:"/docs/git-rebase/"},{file:{dirname:"docs/Git-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Git-Resources/index.md",data:{title:"Git Resources",order:5},path:"/docs/Git-Resources/"},{file:{dirname:"docs/Gitter-Moderation-Policy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Gitter-Moderation-Policy/index.md",data:{title:"Gitter Moderation Policy",order:5},path:"/docs/Gitter-Moderation-Policy/"},{file:{dirname:"docs/Gitter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Gitter/index.md",data:{title:"Gitter",order:5},path:"/docs/Gitter/"},{file:{dirname:"docs/global-variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/global-variables/index.md",data:{title:"global variables",order:5},path:"/docs/global-variables/"},{file:{dirname:"docs/good-code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/good-code/index.md",data:{title:"good code",order:5},path:"/docs/good-code/"},{file:{dirname:"docs/Grunt",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Grunt/index.md",data:{title:"Grunt",order:5},path:"/docs/Grunt/"},{file:{dirname:"docs/Guide-to-Basejumps-Table-of-Contents",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Guide-to-Basejumps-Table-of-Contents/index.md",data:{title:"Guide to Basejumps Table of Contents",order:5},path:"/docs/Guide-to-Basejumps-Table-of-Contents/"},{file:{dirname:"docs/guide-to-basejumps/accessing-the-database-from-your-frontend",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/accessing-the-database-from-your-frontend/index.md",data:{title:"Accessing the database from your frontend",order:5},path:"/docs/guide-to-basejumps/accessing-the-database-from-your-frontend/"},{file:{dirname:"docs/guide-to-basejumps/backend-file-structure",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/backend-file-structure/index.md",data:{title:"Backend file structure",order:5},path:"/docs/guide-to-basejumps/backend-file-structure/"},{file:{dirname:"docs/guide-to-basejumps/bonus-socketio",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/bonus-socketio/index.md",data:{title:"Bonus SocketIO",order:5},path:"/docs/guide-to-basejumps/bonus-socketio/"},{file:{dirname:"docs/guide-to-basejumps/creating-a-new-api-endpoint",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/creating-a-new-api-endpoint/index.md",data:{title:"Creating a new API endpoint",order:5},path:"/docs/guide-to-basejumps/creating-a-new-api-endpoint/"},{file:{dirname:"docs/guide-to-basejumps/creating-a-new-directive",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/creating-a-new-directive/index.md",data:{title:"Creating a new directive",order:5},path:"/docs/guide-to-basejumps/creating-a-new-directive/"},{file:{dirname:"docs/guide-to-basejumps/creating-a-new-route",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/creating-a-new-route/index.md",data:{title:"Creating a new route",order:5},path:"/docs/guide-to-basejumps/creating-a-new-route/"},{file:{dirname:"docs/guide-to-basejumps/dynamic-URLs-using-routeParams",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/dynamic-URLs-using-routeParams/index.md",data:{title:"Dynamic URLs using $routeParams",order:5},path:"/docs/guide-to-basejumps/dynamic-URLs-using-routeParams/"},{file:{dirname:"docs/guide-to-basejumps/epilogue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/epilogue/index.md",data:{title:"Epilogue",order:5},path:"/docs/guide-to-basejumps/epilogue/"},{file:{dirname:"docs/guide-to-basejumps/fixing-exports.update",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/fixing-exports.update/index.md",data:{title:"Fixing exports.update",order:5},path:"/docs/guide-to-basejumps/fixing-exports.update/"},{file:{dirname:"docs/guide-to-basejumps/frontend-file-structure",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/frontend-file-structure/index.md",data:{title:"Frontend file structure",order:5},path:"/docs/guide-to-basejumps/frontend-file-structure/"},{file:{dirname:"docs/guide-to-basejumps/get-info-about-the-current-user",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/get-info-about-the-current-user/index.md",data:{title:"Get info about the current user",order:5},path:"/docs/guide-to-basejumps/get-info-about-the-current-user/"},{file:{dirname:"docs/guide-to-basejumps/grunt",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/grunt/index.md",data:{title:"Grunt",order:5},path:"/docs/guide-to-basejumps/grunt/"},{file:{dirname:"docs/guide-to-basejumps",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/index.md",data:{title:"Intro to Yeoman Angular Fullstack Basejumps",order:5},path:"/docs/guide-to-basejumps/"},{file:{dirname:"docs/guide-to-basejumps/isLoggedInAsync",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/isLoggedInAsync/index.md",data:{title:"isLoggedInAsync()",order:5},path:"/docs/guide-to-basejumps/isLoggedInAsync/"},{file:{dirname:"docs/guide-to-basejumps/more-useful-apis",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/more-useful-apis/index.md",data:{title:"More useful APIs",order:5},path:"/docs/guide-to-basejumps/more-useful-apis/"},{file:{dirname:"docs/guide-to-basejumps/quick-tip-keep-data-in-sync",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/quick-tip-keep-data-in-sync/index.md",data:{title:"Quick tip keep data in sync",order:5},path:"/docs/guide-to-basejumps/quick-tip-keep-data-in-sync/"},{file:{dirname:"docs/guide-to-basejumps/restrict-a-page-to-authenticated-users",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/restrict-a-page-to-authenticated-users/index.md",data:{title:"Restrict a page to authenticated users",order:5},path:"/docs/guide-to-basejumps/restrict-a-page-to-authenticated-users/"},{file:{dirname:"docs/guide-to-basejumps/seed-data",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/seed-data/index.md",data:{title:"Seed data",order:5},path:"/docs/guide-to-basejumps/seed-data/"},{file:{dirname:"docs/guide-to-basejumps/table-of-contents",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/guide-to-basejumps/table-of-contents/index.md",data:{title:"Guide to Basejumps Table of Contents",order:5},path:"/docs/guide-to-basejumps/table-of-contents/"},{file:{dirname:"docs/Guide-to-Submitting-Posts-to-Free-Code-Camp-Medium-Publication",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Guide-to-Submitting-Posts-to-Free-Code-Camp-Medium-Publication/index.md",data:{title:"Guide to Submitting Posts to Free Code Camp Medium Publication",order:5},path:"/docs/Guide-to-Submitting-Posts-to-Free-Code-Camp-Medium-Publication/"},{file:{dirname:"docs/Help-I've-Found-a-Bug",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Help-I've-Found-a-Bug/index.md",data:{title:"Help I've Found a Bug",order:5},path:"/docs/Help-I've-Found-a-Bug/"},{file:{dirname:"docs/Help-Rooms",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Help-Rooms/index.md",data:{title:"Help Rooms",order:5},path:"/docs/Help-Rooms/"},{file:{dirname:"docs/Higher-Order-functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Higher-Order-functions/index.md",data:{title:"Higher Order functions",order:5},path:"/docs/Higher-Order-functions/"},{file:{dirname:"docs/Home",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Home/index.md",data:{title:"Home",order:5},path:"/docs/Home/"},{file:{dirname:"docs/How-Free-Code-Camp-works",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-Free-Code-Camp-works/index.md",data:{title:"How Free Code Camp works",order:5},path:"/docs/How-Free-Code-Camp-works/"},{file:{dirname:"docs/How-FreeCodeCamp-Nonprofit-Projects-work",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-FreeCodeCamp-Nonprofit-Projects-work/index.md",data:{title:"How FreeCodeCamp Nonprofit Projects work",order:5},path:"/docs/How-FreeCodeCamp-Nonprofit-Projects-work/"},{file:{dirname:"docs/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work/index.md",data:{title:"How GitHub Issue Moderators AKA Issue Mods Work",order:5},path:"/docs/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work/"},{file:{dirname:"docs/How-JSONP-is-different-from-JSON",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-JSONP-is-different-from-JSON/index.md",data:{title:"How JSONP is different from JSON",order:5},path:"/docs/How-JSONP-is-different-from-JSON/"},{file:{dirname:"docs/How-Long-Free-Code-Camp-Takes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-Long-Free-Code-Camp-Takes/index.md",data:{title:"How Long Free Code Camp Takes",order:5},path:"/docs/How-Long-Free-Code-Camp-Takes/"},{file:{dirname:"docs/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile/index.md",data:{title:"How to add Free Code Camp to my LinkedIn profile",order:5},path:"/docs/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile/"},{file:{dirname:"docs/How-to-best-use-the-Global-Control-Shortcuts-for-Mac",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-best-use-the-Global-Control-Shortcuts-for-Mac/index.md",data:{title:"How to best use the Global Control Shortcuts for Mac",order:5},path:"/docs/How-to-best-use-the-Global-Control-Shortcuts-for-Mac/"},{file:{dirname:"docs/How-to-clear-specific-values-from-your-browser's-local-storage",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-clear-specific-values-from-your-browser's-local-storage/index.md",data:{title:"How to clear specific values from your browser's local storage",order:5},path:"/docs/How-to-clear-specific-values-from-your-browser's-local-storage/"},{file:{dirname:"docs/How-to-clone-the-FreeCodeCamp-website-on-a-Windows-pc",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-clone-the-FreeCodeCamp-website-on-a-Windows-pc/index.md",data:{title:"How to clone the FreeCodeCamp website on a Windows pc",order:5},path:"/docs/How-to-clone-the-FreeCodeCamp-website-on-a-Windows-pc/"},{file:{dirname:"docs/How-to-create-a-Campsite-for-your-city",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-create-a-Campsite-for-your-city/index.md",data:{title:"How to create a Campsite for your city",order:5},path:"/docs/How-to-create-a-Campsite-for-your-city/"},{file:{dirname:"docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp/index.md",data:{title:"How To Create A Pull Request for Free Code Camp",order:5},path:"/docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp/"},{file:{dirname:"docs/How-to-deploy-a-website-without-writing-any-code-at-all",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-deploy-a-website-without-writing-any-code-at-all/index.md",data:{title:"How to deploy a website without writing any code at all",order:5},path:"/docs/How-to-deploy-a-website-without-writing-any-code-at-all/"},{file:{dirname:"docs/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp/index.md",data:{title:"How To Fork And Maintain a Local Instance of Free Code Camp",order:5},path:"/docs/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp/"},{file:{dirname:"docs/How-to-Get-Help-on-Gitter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-Get-Help-on-Gitter/index.md",data:{title:"How to Get Help on Gitter",order:5},path:"/docs/How-to-Get-Help-on-Gitter/"},{file:{dirname:"docs/How-to-get-help-when-you-get-stuck",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-get-help-when-you-get-stuck/index.md",data:{title:"How to get help when you get stuck",order:5},path:"/docs/How-to-get-help-when-you-get-stuck/"},{file:{dirname:"docs/How-to-get-the-MEAN-stack-running-locally-on-OSX",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-get-the-MEAN-stack-running-locally-on-OSX/index.md",data:{title:"How to get the MEAN stack running locally on OSX",order:5},path:"/docs/How-to-get-the-MEAN-stack-running-locally-on-OSX/"},{file:{dirname:"docs/How-to-install-Screenhero",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-install-Screenhero/index.md",data:{title:"How to install Screenhero",order:5},path:"/docs/How-to-install-Screenhero/"},{file:{dirname:"docs/How-to-know-who-is-in-charge-of-your-Campsite-on-Facebook",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-know-who-is-in-charge-of-your-Campsite-on-Facebook/index.md",data:{title:"How to know who is in charge of your Campsite on Facebook",order:5},path:"/docs/How-to-know-who-is-in-charge-of-your-Campsite-on-Facebook/"},{file:{dirname:"docs/how-to-post-code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/how-to-post-code/index.md",data:{title:"how to post code",order:5},path:"/docs/how-to-post-code/"},{file:{dirname:"docs/How-to-share-your-workspace-selfie-with-FreeCodeCamp-on-instagram",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-share-your-workspace-selfie-with-FreeCodeCamp-on-instagram/index.md",data:{title:"How to share your workspace selfie with FreeCodeCamp on instagram",order:5},path:"/docs/How-to-share-your-workspace-selfie-with-FreeCodeCamp-on-instagram/"},{file:{dirname:"docs/How-to-start-when-you-are-stuck-(I)",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-start-when-you-are-stuck-(I)/index.md",data:{title:"How to start when you are stuck (I)",order:5},path:"/docs/How-to-start-when-you-are-stuck-(I)/"},{file:{dirname:"docs/How-to-start-when-you-are-stuck-(II)",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-start-when-you-are-stuck-(II)/index.md",data:{title:"How to start when you are stuck (II)",order:5},path:"/docs/How-to-start-when-you-are-stuck-(II)/"},{file:{dirname:"docs/How-to-start-when-you-are-stuck-(III)",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-start-when-you-are-stuck-(III)/index.md",data:{title:"How to start when you are stuck (III)",order:5},path:"/docs/How-to-start-when-you-are-stuck-(III)/"},{file:{dirname:"docs/How-to-use-the-Free-Code-Camp-Wiki",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-to-use-the-Free-Code-Camp-Wiki/index.md",data:{title:"How to use the Free Code Camp Wiki",order:1},path:"/docs/How-to-use-the-Free-Code-Camp-Wiki/"},{file:{dirname:"docs/How-you-can-get-to-Inbox-Zero-with-Gmail-shortcuts",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-you-can-get-to-Inbox-Zero-with-Gmail-shortcuts/index.md",data:{title:"How you can get to Inbox Zero with Gmail shortcuts",order:5},path:"/docs/How-you-can-get-to-Inbox-Zero-with-Gmail-shortcuts/"},{file:{dirname:"docs/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/index.md",data:{title:"How you can help to stimulate your city's Campsite on Facebook",order:5},path:"/docs/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/"},{file:{dirname:"docs/How-you-can-reach-the-Free-Code-Camp-team-to-interview-them-for-your-publication",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/How-you-can-reach-the-Free-Code-Camp-team-to-interview-them-for-your-publication/index.md",data:{title:"How you can reach the Free Code Camp team to interview them for your publication",order:5},path:"/docs/How-you-can-reach-the-Free-Code-Camp-team-to-interview-them-for-your-publication/"},{file:{dirname:"docs/Html-and-CSS-Cheat-Sheet",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Html-and-CSS-Cheat-Sheet/index.md",data:{title:"Html and CSS Cheat Sheet",order:5},path:"/docs/Html-and-CSS-Cheat-Sheet/"},{file:{dirname:"docs/html-elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/html-elements/index.md",data:{title:"html elements",order:5},path:"/docs/html-elements/"},{file:{dirname:"docs/If-Free-Code-Camp-is-free,-how-does-it-make-money",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/If-Free-Code-Camp-is-free,-how-does-it-make-money/index.md",data:{title:"If Free Code Camp is free, how does it make money",order:5},path:"/docs/If-Free-Code-Camp-is-free,-how-does-it-make-money/"},{file:{dirname:"docs/IIFE",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/IIFE/index.md",data:{title:"IIFE",order:5},path:"/docs/IIFE/"},{file:{dirname:"docs",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],
ext:"md"},requirePath:"docs/index.md",data:{title:"Start Here",order:0},path:"/docs/"},{file:{dirname:"docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps/index.md",data:{title:"Intro to Yeoman Angular Fullstack Basejumps",order:5},path:"/docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps/"},{file:{dirname:"docs/isLoggedInAsync",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/isLoggedInAsync/index.md",data:{title:"isLoggedInAsync",order:5},path:"/docs/isLoggedInAsync/"},{file:{dirname:"docs/JavaScript-Truth-Table",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/JavaScript-Truth-Table/index.md",data:{title:"JavaScript Truth Table",order:5},path:"/docs/JavaScript-Truth-Table/"},{file:{dirname:"docs/jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/jQuery/index.md",data:{title:"jQuery",order:5},path:"/docs/jQuery/"},{file:{dirname:"docs/js-arguments",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-arguments/index.md",data:{title:"js arguments",order:5},path:"/docs/js-arguments/"},{file:{dirname:"docs/js-Array-prototype-concat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-concat/index.md",data:{title:"js Array prototype concat",order:5},path:"/docs/js-Array-prototype-concat/"},{file:{dirname:"docs/js-Array-prototype-every",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-every/index.md",data:{title:"js Array prototype every",order:5},path:"/docs/js-Array-prototype-every/"},{file:{dirname:"docs/js-Array-prototype-filter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-filter/index.md",data:{title:"js Array prototype filter",order:5},path:"/docs/js-Array-prototype-filter/"},{file:{dirname:"docs/js-Array-prototype-forEach",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-forEach/index.md",data:{title:"js Array prototype forEach",order:5},path:"/docs/js-Array-prototype-forEach/"},{file:{dirname:"docs/js-Array-prototype-indexOf",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-indexOf/index.md",data:{title:"js Array prototype indexOf",order:5},path:"/docs/js-Array-prototype-indexOf/"},{file:{dirname:"docs/js-Array-prototype-join",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-join/index.md",data:{title:"js Array prototype join",order:5},path:"/docs/js-Array-prototype-join/"},{file:{dirname:"docs/js-Array-prototype-lastIndexOf",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-lastIndexOf/index.md",data:{title:"js Array prototype lastIndexOf",order:5},path:"/docs/js-Array-prototype-lastIndexOf/"},{file:{dirname:"docs/js-Array-prototype-map",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-map/index.md",data:{title:"js Array prototype map",order:5},path:"/docs/js-Array-prototype-map/"},{file:{dirname:"docs/js-Array-prototype-pop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-pop/index.md",data:{title:"js Array prototype pop",order:5},path:"/docs/js-Array-prototype-pop/"},{file:{dirname:"docs/js-Array-prototype-push",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-push/index.md",data:{title:"js Array prototype push",order:5},path:"/docs/js-Array-prototype-push/"},{file:{dirname:"docs/js-Array-prototype-reduce",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-reduce/index.md",data:{title:"js Array prototype reduce",order:5},path:"/docs/js-Array-prototype-reduce/"},{file:{dirname:"docs/js-Array-prototype-reverse",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-reverse/index.md",data:{title:"js Array prototype reverse",order:5},path:"/docs/js-Array-prototype-reverse/"},{file:{dirname:"docs/js-Array-prototype-shift",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-shift/index.md",data:{title:"js Array prototype shift",order:5},path:"/docs/js-Array-prototype-shift/"},{file:{dirname:"docs/js-Array-prototype-slice",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-slice/index.md",data:{title:"js Array prototype slice",order:5},path:"/docs/js-Array-prototype-slice/"},{file:{dirname:"docs/js-Array-prototype-some",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-some/index.md",data:{title:"js Array prototype some",order:5},path:"/docs/js-Array-prototype-some/"},{file:{dirname:"docs/js-Array-prototype-sort",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-sort/index.md",data:{title:"js Array prototype sort",order:5},path:"/docs/js-Array-prototype-sort/"},{file:{dirname:"docs/js-Array-prototype-splice",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-splice/index.md",data:{title:"js Array prototype splice",order:5},path:"/docs/js-Array-prototype-splice/"},{file:{dirname:"docs/js-Array-prototype-toString",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Array-prototype-toString/index.md",data:{title:"js Array prototype toString",order:5},path:"/docs/js-Array-prototype-toString/"},{file:{dirname:"docs/js-Boolean",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-Boolean/index.md",data:{title:"js Boolean",order:5},path:"/docs/js-Boolean/"},{file:{dirname:"docs/js-closures",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-closures/index.md",data:{title:"js closures",order:5},path:"/docs/js-closures/"},{file:{dirname:"docs/js-falsy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-falsy/index.md",data:{title:"js falsy",order:5},path:"/docs/js-falsy/"},{file:{dirname:"docs/js-for-in-loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-for-in-loop/index.md",data:{title:"js for in loop",order:5},path:"/docs/js-for-in-loop/"},{file:{dirname:"docs/js-for-loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-for-loop/index.md",data:{title:"js for loop",order:5},path:"/docs/js-for-loop/"},{file:{dirname:"docs/js-for-of-loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-for-of-loop/index.md",data:{title:"js for of loop",order:5},path:"/docs/js-for-of-loop/"},{file:{dirname:"docs/js-functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-functions/index.md",data:{title:"js functions",order:5},path:"/docs/js-functions/"},{file:{dirname:"docs/js-immutable",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-immutable/index.md",data:{title:"js immutable",order:5},path:"/docs/js-immutable/"},{file:{dirname:"docs/js-loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-loops/index.md",data:{title:"js loops",order:5},path:"/docs/js-loops/"},{file:{dirname:"docs/JS-Regex-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/JS-Regex-Resources/index.md",data:{title:"JS Regex Resources",order:5},path:"/docs/JS-Regex-Resources/"},{file:{dirname:"docs/JS-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/JS-Resources/index.md",data:{title:"JS Resources",order:5},path:"/docs/JS-Resources/"},{file:{dirname:"docs/js-scope",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-scope/index.md",data:{title:"js scope",order:5},path:"/docs/js-scope/"},{file:{dirname:"docs/js-String-prototype-charAt",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-charAt/index.md",data:{title:"js String prototype charAt",order:5},path:"/docs/js-String-prototype-charAt/"},{file:{dirname:"docs/js-String-prototype-charCodeAt",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-charCodeAt/index.md",data:{title:"js String prototype charCodeAt",order:5},path:"/docs/js-String-prototype-charCodeAt/"},{file:{dirname:"docs/js-String-prototype-concat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-concat/index.md",data:{title:"js String prototype concat",order:5},path:"/docs/js-String-prototype-concat/"},{file:{dirname:"docs/js-String-prototype-indexOf",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-indexOf/index.md",data:{title:"js String prototype indexOf",order:5},path:"/docs/js-String-prototype-indexOf/"},{file:{dirname:"docs/js-String-prototype-lastindexOf",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-lastindexOf/index.md",data:{title:"js String prototype lastindexOf",order:5},path:"/docs/js-String-prototype-lastindexOf/"},{file:{dirname:"docs/js-String-prototype-match",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-match/index.md",data:{title:"js String prototype match",order:5},path:"/docs/js-String-prototype-match/"},{file:{dirname:"docs/js-String-prototype-replace",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-replace/index.md",data:{title:"js String prototype replace",order:5},path:"/docs/js-String-prototype-replace/"},{file:{dirname:"docs/js-String-prototype-slice",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-slice/index.md",data:{title:"js String prototype slice",order:5},path:"/docs/js-String-prototype-slice/"},{file:{dirname:"docs/js-String-prototype-split",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-split/index.md",data:{title:"js String prototype split",order:5},path:"/docs/js-String-prototype-split/"},{file:{dirname:"docs/js-String-prototype-substr",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-substr/index.md",data:{title:"js String prototype substr",order:5},path:"/docs/js-String-prototype-substr/"},{file:{dirname:"docs/js-String-prototype-substring",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-substring/index.md",data:{title:"js String prototype substring",order:5},path:"/docs/js-String-prototype-substring/"},{file:{dirname:"docs/js-String-prototype-toLowerCase",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-toLowerCase/index.md",data:{title:"js String prototype toLowerCase",order:5},path:"/docs/js-String-prototype-toLowerCase/"},{file:{dirname:"docs/js-String-prototype-toUpperCase",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-String-prototype-toUpperCase/index.md",data:{title:"js String prototype toUpperCase",order:5},path:"/docs/js-String-prototype-toUpperCase/"},{file:{dirname:"docs/js-ternary",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-ternary/index.md",data:{title:"js ternary",order:5},path:"/docs/js-ternary/"},{file:{dirname:"docs/js-truthy",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-truthy/index.md",data:{title:"js truthy",order:5},path:"/docs/js-truthy/"},{file:{dirname:"docs/js-undefined",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/js-undefined/index.md",data:{title:"js undefined",order:5},path:"/docs/js-undefined/"},{file:{dirname:"docs/jsonp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/jsonp/index.md",data:{title:"jsonp",order:5},path:"/docs/jsonp/"},{file:{dirname:"docs/Know-it-all",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Know-it-all/index.md",data:{title:"Know it all",order:5},path:"/docs/Know-it-all/"},{file:{dirname:"docs/latex",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/latex/index.md",data:{title:"latex",order:5},path:"/docs/latex/"},{file:{dirname:"docs/Learn-the-basics-of-the-VIM-editor",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Learn-the-basics-of-the-VIM-editor/index.md",data:{title:"Learn the basics of the VIM editor",order:5},path:"/docs/Learn-the-basics-of-the-VIM-editor/"},{file:{dirname:"docs/Linking-Your-Account-with-GitHub",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Linking-Your-Account-with-GitHub/index.md",data:{title:"Linking Your Account with GitHub",order:5},path:"/docs/Linking-Your-Account-with-GitHub/"},{file:{dirname:"docs/List-of-Free-Code-Camp-city-based-Campsites",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/List-of-Free-Code-Camp-city-based-Campsites/index.md",data:{title:"List of Free Code Camp city based Campsites",order:5},path:"/docs/List-of-Free-Code-Camp-city-based-Campsites/"},{file:{dirname:"docs/Loop-Protect",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Loop-Protect/index.md",data:{title:"Loop Protect",order:5},path:"/docs/Loop-Protect/"},{file:{dirname:"docs/Map",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Map/index.md",data:{title:"Map",order:5},path:"/docs/Map/"},{file:{dirname:"docs/Math.max",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Math.max/index.md",data:{title:"Math.max",order:5},path:"/docs/Math.max/"},{file:{dirname:"docs/Math.min",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Math.min/index.md",data:{title:"Math.min",order:5},path:"/docs/Math.min/"},{file:{dirname:"docs/Math.pow",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Math.pow/index.md",data:{title:"Math.pow",order:5},path:"/docs/Math.pow/"},{file:{dirname:"docs/michaelqlarson@gmail.com",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/michaelqlarson@gmail.com/index.md",data:{title:"michaelqlarson@gmail.com",order:5},path:"/docs/michaelqlarson@gmail.com/"},{file:{dirname:"docs/More-useful-APIs",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/More-useful-APIs/index.md",data:{title:"More useful APIs",order:5},path:"/docs/More-useful-APIs/"},{file:{dirname:"docs/Mostaganem",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Mostaganem/index.md",data:{title:"Mostaganem",order:5},path:"/docs/Mostaganem/"},{file:{dirname:"docs/Object.getOwnPropertyNames",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Object.getOwnPropertyNames/index.md",data:{title:"Object.getOwnPropertyNames",order:5},path:"/docs/Object.getOwnPropertyNames/"},{file:{dirname:"docs/Object.keys",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Object.keys/index.md",data:{title:"Object.keys",order:5},path:"/docs/Object.keys/"},{file:{dirname:"docs/October-2015-Improvements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/October-2015-Improvements/index.md",data:{title:"October 2015 Improvements",order:5},path:"/docs/October-2015-Improvements/"},{file:{dirname:"docs/October-2015-Summit-Agenda",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/October-2015-Summit-Agenda/index.md",data:{title:"October 2015 Summit Agenda",order:5},path:"/docs/October-2015-Summit-Agenda/"},{file:{dirname:"docs/Official-Free-Code-Camp-Chat-Rooms",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Official-Free-Code-Camp-Chat-Rooms/index.md",data:{title:"Official Free Code Camp Chat Rooms",order:5},path:"/docs/Official-Free-Code-Camp-Chat-Rooms/"},{file:{dirname:"docs/ooda",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/ooda/index.md",data:{title:"ooda",order:5},path:"/docs/ooda/"},{file:{dirname:"docs/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits/index.md",data:{title:"Other resources that Free Code Camp recommends to nonprofits",order:5},path:"/docs/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits/"},{file:{dirname:"docs/Pair-programming-and-why-it-is-special",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Pair-programming-and-why-it-is-special/index.md",data:{title:"Pair programming and why it is special",order:5},path:"/docs/Pair-programming-and-why-it-is-special/"},{file:{dirname:"docs/parseInt",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/parseInt/index.md",data:{title:"parseInt",order:5},path:"/docs/parseInt/"},{file:{dirname:"docs/Programming-Fundamental",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Programming-Fundamental/index.md",data:{title:"Programming Fundamental",order:5},path:"/docs/Programming-Fundamental/"},{file:{dirname:"docs/Promises",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Promises/index.md",data:{title:"Promises",order:5},path:"/docs/Promises/"},{file:{dirname:"docs/Pseudoclassical-class-definition-OOp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Pseudoclassical-class-definition-OOp/index.md",data:{title:"Pseudoclassical class definition OOp",order:5},path:"/docs/Pseudoclassical-class-definition-OOp/"},{file:{dirname:"docs/Pull-Request-Contribute",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Pull-Request-Contribute/index.md",data:{title:"Pull Request Contribute",order:5},path:"/docs/Pull-Request-Contribute/"},{file:{dirname:"docs/Quick-tip-keep-data-in-sync",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Quick-tip-keep-data-in-sync/index.md",data:{title:"Quick tip keep data in sync",order:5},path:"/docs/Quick-tip-keep-data-in-sync/"},{file:{dirname:"docs/Refresh-Your-Browser-Cache",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Refresh-Your-Browser-Cache/index.md",data:{title:"Refresh Your Browser Cache",order:5},path:"/docs/Refresh-Your-Browser-Cache/"},{file:{dirname:"docs/Registering-your-Nonprofit-to-Raise-Donations-through-Free-Code-Camp-Commit",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Registering-your-Nonprofit-to-Raise-Donations-through-Free-Code-Camp-Commit/index.md",data:{title:"Registering your Nonprofit to Raise Donations through Free Code Camp Commit",order:5},path:"/docs/Registering-your-Nonprofit-to-Raise-Donations-through-Free-Code-Camp-Commit/"},{file:{dirname:"docs/Restrict-a-page-to-authenticated-users",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Restrict-a-page-to-authenticated-users/index.md",data:{title:"Restrict a page to authenticated users",order:5},path:"/docs/Restrict-a-page-to-authenticated-users/"},{file:{dirname:"docs/RTFM",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/RTFM/index.md",data:{title:"RTFM",order:5},path:"/docs/RTFM/"},{file:{dirname:"docs/Saturday-Summit-August-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Saturday-Summit-August-2015/index.md",data:{title:"Saturday Summit August 2015",order:5},path:"/docs/Saturday-Summit-August-2015/"},{file:{dirname:"docs/Saturday-Summit-November-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Saturday-Summit-November-2015/index.md",data:{title:"Saturday Summit November 2015",order:5},path:"/docs/Saturday-Summit-November-2015/"},{file:{dirname:"docs/Saturday-Summit-October-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Saturday-Summit-October-2015/index.md",data:{title:"Saturday Summit October 2015",order:5},path:"/docs/Saturday-Summit-October-2015/"},{file:{dirname:"docs/Searching-for-Your-Issue-on-Github",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Searching-for-Your-Issue-on-Github/index.md",data:{title:"Searching for Your Issue on Github",order:5},path:"/docs/Searching-for-Your-Issue-on-Github/"},{file:{dirname:"docs/Seed-data",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Seed-data/index.md",data:{title:"Seed data",order:5},path:"/docs/Seed-data/"},{file:{dirname:"docs/Select-Issues-for-Contributing-Using-Labels",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Select-Issues-for-Contributing-Using-Labels/index.md",data:{title:"Select Issues for Contributing Using Labels",order:5},path:"/docs/Select-Issues-for-Contributing-Using-Labels/"},{file:{dirname:"docs/Site-Improvements-August-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Site-Improvements-August-2015/index.md",data:{title:"Site Improvements August 2015",order:5},path:"/docs/Site-Improvements-August-2015/"},{file:{dirname:"docs/Site-Improvements-October-2015",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Site-Improvements-October-2015/index.md",data:{title:"Site Improvements October 2015",order:5},path:"/docs/Site-Improvements-October-2015/"},{file:{dirname:"docs/Slack",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Slack/index.md",data:{title:"Slack",order:5},path:"/docs/Slack/"},{file:{dirname:"docs/Spanish-Translation-Terminology",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Spanish-Translation-Terminology/index.md",data:{title:"Spanish Translation Terminology",order:5},path:"/docs/Spanish-Translation-Terminology/"},{file:{dirname:"docs/staging",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/staging/index.md",data:{title:"staging",order:5},path:"/docs/staging/"},{file:{dirname:"docs/Start-Here",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Start-Here/index.md",data:{title:"Start Here",order:5},path:"/docs/Start-Here/"},{file:{dirname:"docs/Streaks",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Streaks/index.md",data:{title:"Streaks",order:5},path:"/docs/Streaks/"},{file:{dirname:"docs/Stream-Your-Coding-Sessions-on-Twitch.tv",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Stream-Your-Coding-Sessions-on-Twitch.tv/index.md",data:{title:"Stream Your Coding Sessions on Twitch.tv",order:5},path:"/docs/Stream-Your-Coding-Sessions-on-Twitch.tv/"},{file:{dirname:"docs/String.fromCharCode",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/String.fromCharCode/index.md",data:{title:"String.fromCharCode",order:5},path:"/docs/String.fromCharCode/"},{file:{dirname:"docs/String.length",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/String.length/index.md",data:{title:"String.length",order:5},path:"/docs/String.length/"},{file:{dirname:"docs/Test-issue-with-Bonfire-truncate-a-string",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Test-issue-with-Bonfire-truncate-a-string/index.md",data:{title:"Test issue with Bonfire truncate a string",order:5},path:"/docs/Test-issue-with-Bonfire-truncate-a-string/"},{file:{dirname:"docs/Test-Me",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Test-Me/index.md",data:{title:"Test Me",order:5},path:"/docs/Test-Me/"},{file:{dirname:"docs/testingjson",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/testingjson/index.md",data:{title:"testingjson",order:5},path:"/docs/testingjson/"},{file:{dirname:"docs/The-main-advantages-of-Free-Code-Camp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/The-main-advantages-of-Free-Code-Camp/index.md",data:{title:"The main advantages of Free Code Camp",order:5},path:"/docs/The-main-advantages-of-Free-Code-Camp/"},{file:{dirname:"docs/Tips-on-How-To-Become-A-Good-Pair-Programmer",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Tips-on-How-To-Become-A-Good-Pair-Programmer/index.md",data:{title:"Tips on How To Become A Good Pair Programmer",order:5},path:"/docs/Tips-on-How-To-Become-A-Good-Pair-Programmer/"},{file:{dirname:"docs/topic",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/topic/index.md",data:{title:"topic",order:5},path:"/docs/topic/"},{file:{dirname:"docs/Translating-Free-Code-Camp-into-Your-Native-Language",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Translating-Free-Code-Camp-into-Your-Native-Language/index.md",data:{title:"Translating Free Code Camp into Your Native Language",order:5},path:"/docs/Translating-Free-Code-Camp-into-Your-Native-Language/"},{file:{dirname:"docs/triphop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/triphop/index.md",data:{title:"triphop",order:5},path:"/docs/triphop/"},{file:{dirname:"docs/Twitch",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Twitch/index.md",data:{title:"Twitch",order:5},path:"/docs/Twitch/"},{file:{dirname:"docs/update",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/update/index.md",data:{title:"update",order:5},path:"/docs/update/"},{file:{dirname:"docs/Using-Github-Pages-for-your-front-end-development-projects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Using-Github-Pages-for-your-front-end-development-projects/index.md",data:{title:"Using Github Pages for your front end development projects",order:5},path:"/docs/Using-Github-Pages-for-your-front-end-development-projects/"},{file:{dirname:"docs/Vadodara",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Vadodara/index.md",data:{title:"Vadodara",order:5},path:"/docs/Vadodara/"},{file:{dirname:"docs/video-demo",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/video-demo/index.md",data:{title:"video demo",order:5},path:"/docs/video-demo/"},{file:{dirname:"docs/video",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/video/index.md",data:{title:"video",order:5},path:"/docs/video/"},{file:{dirname:"docs/wat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/wat/index.md",data:{title:"wat",order:5},path:"/docs/wat/"},{file:{dirname:"docs/Waypoint-Access-Array-Data-with-Indexes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Access-Array-Data-with-Indexes/index.md",data:{title:"Waypoint Access Array Data with Indexes",order:5},path:"/docs/Waypoint-Access-Array-Data-with-Indexes/"},{file:{dirname:"docs/Waypoint-Add-a-Negative-Margin-to-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-a-Negative-Margin-to-an-Element/index.md",data:{title:"Waypoint Add a Negative Margin to an Element",order:5},path:"/docs/Waypoint-Add-a-Negative-Margin-to-an-Element/"},{file:{dirname:"docs/Waypoint-Add-a-Submit-Button-to-a-Form",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-a-Submit-Button-to-a-Form/index.md",data:{title:"Waypoint Add a Submit Button to a Form",order:5},path:"/docs/Waypoint-Add-a-Submit-Button-to-a-Form/"},{file:{dirname:"docs/Waypoint-Add-Alt-Text-to-an-Image-for-Accessibility",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Alt-Text-to-an-Image-for-Accessibility/index.md",data:{title:"Waypoint Add Alt Text to an Image for Accessibility",order:5},path:"/docs/Waypoint-Add-Alt-Text-to-an-Image-for-Accessibility/"},{file:{dirname:"docs/Waypoint-Add-Borders-Around-your-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Borders-Around-your-Elements/index.md",data:{title:"Waypoint Add Borders Around your Elements",order:5},path:"/docs/Waypoint-Add-Borders-Around-your-Elements/"},{file:{dirname:"docs/Waypoint-Add-Different-Margins-to-Each-Side-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Different-Margins-to-Each-Side-of-an-Element/index.md",data:{title:"Waypoint Add Different Margins to Each Side of an Element",order:5},path:"/docs/Waypoint-Add-Different-Margins-to-Each-Side-of-an-Element/"},{file:{dirname:"docs/Waypoint-Add-Different-Padding-to-Each-Side-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Different-Padding-to-Each-Side-of-an-Element/index.md",data:{title:"Waypoint Add Different Padding to Each Side of an Element",order:5},path:"/docs/Waypoint-Add-Different-Padding-to-Each-Side-of-an-Element/"},{file:{dirname:"docs/Waypoint-Add-Elements-within-your-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Elements-within-your-Bootstrap-Wells/index.md",data:{title:"Waypoint Add Elements within your Bootstrap Wells",order:5},path:"/docs/Waypoint-Add-Elements-within-your-Bootstrap-Wells/"},{file:{dirname:"docs/Waypoint-Add-Font-Awesome-Icons-to-all-of-our-Buttons",
basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Font-Awesome-Icons-to-all-of-our-Buttons/index.md",data:{title:"Waypoint Add Font Awesome Icons to all of our Buttons",order:5},path:"/docs/Waypoint-Add-Font-Awesome-Icons-to-all-of-our-Buttons/"},{file:{dirname:"docs/Waypoint-Add-Font-Awesome-Icons-to-our-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Font-Awesome-Icons-to-our-Buttons/index.md",data:{title:"Waypoint Add Font Awesome Icons to our Buttons",order:5},path:"/docs/Waypoint-Add-Font-Awesome-Icons-to-our-Buttons/"},{file:{dirname:"docs/Waypoint-Add-ID-Attributes-to-Bootstrap-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-ID-Attributes-to-Bootstrap-Elements/index.md",data:{title:"Waypoint Add ID Attributes to Bootstrap Elements",order:5},path:"/docs/Waypoint-Add-ID-Attributes-to-Bootstrap-Elements/"},{file:{dirname:"docs/Waypoint-Add-Images-to-your-Website",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Images-to-your-Website/index.md",data:{title:"Waypoint Add Images to your Website",order:5},path:"/docs/Waypoint-Add-Images-to-your-Website/"},{file:{dirname:"docs/Waypoint-Add-New-Properties-to-a-JavaScript-Object",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-New-Properties-to-a-JavaScript-Object/index.md",data:{title:"Waypoint Add New Properties to a JavaScript Object",order:5},path:"/docs/Waypoint-Add-New-Properties-to-a-JavaScript-Object/"},{file:{dirname:"docs/Waypoint-Add-Placeholder-Text-to-a-Text-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Placeholder-Text-to-a-Text-Field/index.md",data:{title:"Waypoint Add Placeholder Text to a Text Field",order:5},path:"/docs/Waypoint-Add-Placeholder-Text-to-a-Text-Field/"},{file:{dirname:"docs/Waypoint-Add-Rounded-Corners-with-a-Border-Radius",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Rounded-Corners-with-a-Border-Radius/index.md",data:{title:"Waypoint Add Rounded Corners with a Border Radius",order:5},path:"/docs/Waypoint-Add-Rounded-Corners-with-a-Border-Radius/"},{file:{dirname:"docs/Waypoint-Add-Two-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-Two-Numbers-with-JavaScript/index.md",data:{title:"Waypoint Add Two Numbers with JavaScript",order:5},path:"/docs/Waypoint-Add-Two-Numbers-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Add-your-JavaScript-Slot-Machine-Slots",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Add-your-JavaScript-Slot-Machine-Slots/index.md",data:{title:"Waypoint Add your JavaScript Slot Machine Slots",order:5},path:"/docs/Waypoint-Add-your-JavaScript-Slot-Machine-Slots/"},{file:{dirname:"docs/Waypoint-Adjust-the-Margin-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Adjust-the-Margin-of-an-Element/index.md",data:{title:"Waypoint Adjust the Margin of an Element",order:5},path:"/docs/Waypoint-Adjust-the-Margin-of-an-Element/"},{file:{dirname:"docs/Waypoint-Adjusting-the-Padding-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Adjusting-the-Padding-of-an-Element/index.md",data:{title:"Waypoint Adjusting the Padding of an Element",order:5},path:"/docs/Waypoint-Adjusting-the-Padding-of-an-Element/"},{file:{dirname:"docs/Waypoint-Apply-the-Default-Bootstrap-Button-Style",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Apply-the-Default-Bootstrap-Button-Style/index.md",data:{title:"Waypoint Apply the Default Bootstrap Button Style",order:5},path:"/docs/Waypoint-Apply-the-Default-Bootstrap-Button-Style/"},{file:{dirname:"docs/Waypoint-Bring-your-JavaScript-Slot-Machine-to-Life",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Bring-your-JavaScript-Slot-Machine-to-Life/index.md",data:{title:"Waypoint Bring your JavaScript Slot Machine to Life",order:5},path:"/docs/Waypoint-Bring-your-JavaScript-Slot-Machine-to-Life/"},{file:{dirname:"docs/Waypoint-Build-JavaScript-Objects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Build-JavaScript-Objects/index.md",data:{title:"Waypoint Build JavaScript Objects",order:5},path:"/docs/Waypoint-Build-JavaScript-Objects/"},{file:{dirname:"docs/Waypoint-Call-out-Optional-Actions-with-Button-Info",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Call-out-Optional-Actions-with-Button-Info/index.md",data:{title:"Waypoint Call out Optional Actions with Button Info",order:5},path:"/docs/Waypoint-Call-out-Optional-Actions-with-Button-Info/"},{file:{dirname:"docs/Waypoint-Center-Text-with-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Center-Text-with-Bootstrap/index.md",data:{title:"Waypoint Center Text with Bootstrap",order:5},path:"/docs/Waypoint-Center-Text-with-Bootstrap/"},{file:{dirname:"docs/Waypoint-Change-Text-Inside-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Change-Text-Inside-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Change Text Inside an Element Using jQuery",order:5},path:"/docs/Waypoint-Change-Text-Inside-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Change-Text-with-Click-Events",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Change-Text-with-Click-Events/index.md",data:{title:"Waypoint Change Text with Click Events",order:5},path:"/docs/Waypoint-Change-Text-with-Click-Events/"},{file:{dirname:"docs/Waypoint-Change-the-Color-of-Text",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Change-the-Color-of-Text/index.md",data:{title:"Waypoint Change the Color of Text",order:5},path:"/docs/Waypoint-Change-the-Color-of-Text/"},{file:{dirname:"docs/Waypoint-Change-the-CSS-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Change-the-CSS-of-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Change the CSS of an Element Using jQuery",order:5},path:"/docs/Waypoint-Change-the-CSS-of-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Change-the-Font-Size-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Change-the-Font-Size-of-an-Element/index.md",data:{title:"Waypoint Change the Font Size of an Element",order:5},path:"/docs/Waypoint-Change-the-Font-Size-of-an-Element/"},{file:{dirname:"docs/Waypoint-Check-Radio-Buttons-and-Checkboxes-by-Default",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Check-Radio-Buttons-and-Checkboxes-by-Default/index.md",data:{title:"Waypoint Check Radio Buttons and Checkboxes by Default",order:5},path:"/docs/Waypoint-Check-Radio-Buttons-and-Checkboxes-by-Default/"},{file:{dirname:"docs/Waypoint-Check-the-Length-Property-of-a-String-Variable",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Check-the-Length-Property-of-a-String-Variable/index.md",data:{title:"Waypoint Check the Length Property of a String Variable",order:5},path:"/docs/Waypoint-Check-the-Length-Property-of-a-String-Variable/"},{file:{dirname:"docs/Waypoint-Clone-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Clone-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Clone an Element Using jQuery",order:5},path:"/docs/Waypoint-Clone-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Comment-out-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Comment-out-HTML/index.md",data:{title:"Waypoint Comment out HTML",order:5},path:"/docs/Waypoint-Comment-out-HTML/"},{file:{dirname:"docs/Waypoint-Comment-your-JavaScript-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Comment-your-JavaScript-Code/index.md",data:{title:"Waypoint Comment your JavaScript Code",order:5},path:"/docs/Waypoint-Comment-your-JavaScript-Code/"},{file:{dirname:"docs/Waypoint-Concatenate-Strings-with-.concat",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Concatenate-Strings-with-.concat/index.md",data:{title:"Waypoint Concatenate Strings with .concat",order:5},path:"/docs/Waypoint-Concatenate-Strings-with-.concat/"},{file:{dirname:"docs/Waypoint-Condense-arrays-with-reduce",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Condense-arrays-with-reduce/index.md",data:{title:"Waypoint Condense arrays with reduce",order:5},path:"/docs/Waypoint-Condense-arrays-with-reduce/"},{file:{dirname:"docs/Waypoint-Construct-JavaScript-Objects-with-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Construct-JavaScript-Objects-with-Functions/index.md",data:{title:"Waypoint Construct JavaScript Objects with Functions",order:5},path:"/docs/Waypoint-Construct-JavaScript-Objects-with-Functions/"},{file:{dirname:"docs/Waypoint-Convert-JSON-Data-to-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Convert-JSON-Data-to-HTML/index.md",data:{title:"Waypoint Convert JSON Data to HTML",order:5},path:"/docs/Waypoint-Convert-JSON-Data-to-HTML/"},{file:{dirname:"docs/Waypoint-Count-Backwards-With-a-For-Loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Count-Backwards-With-a-For-Loop/index.md",data:{title:"Waypoint Count Backwards With a For Loop",order:5},path:"/docs/Waypoint-Count-Backwards-With-a-For-Loop/"},{file:{dirname:"docs/Waypoint-Create-a-Block-Element-Bootstrap-Button",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Block-Element-Bootstrap-Button/index.md",data:{title:"Waypoint Create a Block Element Bootstrap Button",order:5},path:"/docs/Waypoint-Create-a-Block-Element-Bootstrap-Button/"},{file:{dirname:"docs/Waypoint-Create-a-Bootstrap-Button",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Bootstrap-Button/index.md",data:{title:"Waypoint Create a Bootstrap Button",order:5},path:"/docs/Waypoint-Create-a-Bootstrap-Button/"},{file:{dirname:"docs/Waypoint-Create-a-Bootstrap-Headline",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Bootstrap-Headline/index.md",data:{title:"Waypoint Create a Bootstrap Headline",order:5},path:"/docs/Waypoint-Create-a-Bootstrap-Headline/"},{file:{dirname:"docs/Waypoint-Create-a-Bootstrap-Row",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Bootstrap-Row/index.md",data:{title:"Waypoint Create a Bootstrap Row",order:5},path:"/docs/Waypoint-Create-a-Bootstrap-Row/"},{file:{dirname:"docs/Waypoint-Create-a-Bulleted-Unordered-List",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Bulleted-Unordered-List/index.md",data:{title:"Waypoint Create a Bulleted Unordered List",order:5},path:"/docs/Waypoint-Create-a-Bulleted-Unordered-List/"},{file:{dirname:"docs/Waypoint-Create-a-Class-to-Target-with-jQuery-Selectors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Class-to-Target-with-jQuery-Selectors/index.md",data:{title:"Waypoint Create a Class to Target with jQuery Selectors",order:5},path:"/docs/Waypoint-Create-a-Class-to-Target-with-jQuery-Selectors/"},{file:{dirname:"docs/Waypoint-Create-a-Custom-Heading",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Custom-Heading/index.md",data:{title:"Waypoint Create a Custom Heading",order:5},path:"/docs/Waypoint-Create-a-Custom-Heading/"},{file:{dirname:"docs/Waypoint-Create-a-Form-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Form-Element/index.md",data:{title:"Waypoint Create a Form Element",order:5},path:"/docs/Waypoint-Create-a-Form-Element/"},{file:{dirname:"docs/Waypoint-Create-a-JavaScript-Slot-Machine",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-JavaScript-Slot-Machine/index.md",data:{title:"Waypoint Create a JavaScript Slot Machine",order:5},path:"/docs/Waypoint-Create-a-JavaScript-Slot-Machine/"},{file:{dirname:"docs/Waypoint-Create-a-Set-of-Checkboxes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Set-of-Checkboxes/index.md",data:{title:"Waypoint Create a Set of Checkboxes",order:5},path:"/docs/Waypoint-Create-a-Set-of-Checkboxes/"},{file:{dirname:"docs/Waypoint-Create-a-Set-of-Radio-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Set-of-Radio-Buttons/index.md",data:{title:"Waypoint Create a Set of Radio Buttons",order:5},path:"/docs/Waypoint-Create-a-Set-of-Radio-Buttons/"},{file:{dirname:"docs/Waypoint-Create-a-Text-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-a-Text-Field/index.md",data:{title:"Waypoint Create a Text Field",order:5},path:"/docs/Waypoint-Create-a-Text-Field/"},{file:{dirname:"docs/Waypoint-Create-an-Ordered-List",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-an-Ordered-List/index.md",data:{title:"Waypoint Create an Ordered List",order:5},path:"/docs/Waypoint-Create-an-Ordered-List/"},{file:{dirname:"docs/Waypoint-Create-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-Bootstrap-Wells/index.md",data:{title:"Waypoint Create Bootstrap Wells",order:5},path:"/docs/Waypoint-Create-Bootstrap-Wells/"},{file:{dirname:"docs/Waypoint-Create-Decimal-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Create-Decimal-Numbers-with-JavaScript/index.md",data:{title:"Waypoint Create Decimal Numbers with JavaScript",order:5},path:"/docs/Waypoint-Create-Decimal-Numbers-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Declare-JavaScript-Objects-as-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Declare-JavaScript-Objects-as-Variables/index.md",data:{title:"Waypoint Declare JavaScript Objects as Variables",order:5},path:"/docs/Waypoint-Declare-JavaScript-Objects-as-Variables/"},{file:{dirname:"docs/Waypoint-Declare-JavaScript-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Declare-JavaScript-Variables/index.md",data:{title:"Waypoint Declare JavaScript Variables",order:5},path:"/docs/Waypoint-Declare-JavaScript-Variables/"},{file:{dirname:"docs/Waypoint-Declare-String-Variables",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Declare-String-Variables/index.md",data:{title:"Waypoint Declare String Variables",order:5},path:"/docs/Waypoint-Declare-String-Variables/"},{file:{dirname:"docs/Waypoint-Delete-HTML-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Delete-HTML-Elements/index.md",data:{title:"Waypoint Delete HTML Elements",order:5},path:"/docs/Waypoint-Delete-HTML-Elements/"},{file:{dirname:"docs/Waypoint-Delete-Properties-from-a-JavaScript-Object",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Delete-Properties-from-a-JavaScript-Object/index.md",data:{title:"Waypoint Delete Properties from a JavaScript Object",order:5},path:"/docs/Waypoint-Delete-Properties-from-a-JavaScript-Object/"},{file:{dirname:"docs/Waypoint-Delete-your-jQuery-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Delete-your-jQuery-Functions/index.md",data:{title:"Waypoint Delete your jQuery Functions",order:5},path:"/docs/Waypoint-Delete-your-jQuery-Functions/"},{file:{dirname:"docs/Waypoint-Disable-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Disable-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Disable an Element Using jQuery",order:5},path:"/docs/Waypoint-Disable-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Ditch-Custom-CSS-for-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Ditch-Custom-CSS-for-Bootstrap/index.md",data:{title:"Waypoint Ditch Custom CSS for Bootstrap",order:5},path:"/docs/Waypoint-Ditch-Custom-CSS-for-Bootstrap/"},{file:{dirname:"docs/Waypoint-Divide-One-Number-by-Another-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Divide-One-Number-by-Another-with-JavaScript/index.md",data:{title:"Waypoint Divide One Number by Another with JavaScript",order:5},path:"/docs/Waypoint-Divide-One-Number-by-Another-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Fill-in-the-Blank-with-Placeholder-Text",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Fill-in-the-Blank-with-Placeholder-Text/index.md",data:{title:"Waypoint Fill in the Blank with Placeholder Text",order:5},path:"/docs/Waypoint-Fill-in-the-Blank-with-Placeholder-Text/"},{file:{dirname:"docs/Waypoint-Filter-Arrays-with-filter",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Filter-Arrays-with-filter/index.md",data:{title:"Waypoint Filter Arrays with filter",order:5},path:"/docs/Waypoint-Filter-Arrays-with-filter/"},{file:{dirname:"docs/Waypoint-Find-Numbers-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Find-Numbers-with-Regular-Expressions/index.md",data:{title:"Waypoint Find Numbers with Regular Expressions",order:5},path:"/docs/Waypoint-Find-Numbers-with-Regular-Expressions/"},{file:{dirname:"docs/Waypoint-Find-White-Space-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Find-White-Space-with-Regular-Expressions/index.md",data:{title:"Waypoint Find White Space with Regular Expressions",order:5},path:"/docs/Waypoint-Find-White-Space-with-Regular-Expressions/"},{file:{dirname:"docs/Waypoint-Generate-Random-Fractions-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Generate-Random-Fractions-with-JavaScript/index.md",data:{title:"Waypoint Generate Random Fractions with JavaScript",order:5},path:"/docs/Waypoint-Generate-Random-Fractions-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Generate-Random-Whole-Numbers-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Generate-Random-Whole-Numbers-with-JavaScript/index.md",data:{title:"Waypoint Generate Random Whole Numbers with JavaScript",order:5},path:"/docs/Waypoint-Generate-Random-Whole-Numbers-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range/index.md",data:{title:"Waypoint Generate Random Whole Numbers within a Range",order:5},path:"/docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range/"},{file:{dirname:"docs/Waypoint-Get-JSON-with-the-jQuery-getJSON-Method",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Get-JSON-with-the-jQuery-getJSON-Method/index.md",data:{title:"Waypoint Get JSON with the jQuery getJSON Method",order:5},path:"/docs/Waypoint-Get-JSON-with-the-jQuery-getJSON-Method/"},{file:{dirname:"docs/Waypoint-Give-a-Background-Color-to-a-Div-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Give-a-Background-Color-to-a-Div-Element/index.md",data:{title:"Waypoint Give a Background Color to a Div Element",order:5},path:"/docs/Waypoint-Give-a-Background-Color-to-a-Div-Element/"},{file:{dirname:"docs/Waypoint-Give-Each-Element-a-Unique-ID",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Give-Each-Element-a-Unique-ID/index.md",data:{title:"Waypoint Give Each Element a Unique ID",order:5},path:"/docs/Waypoint-Give-Each-Element-a-Unique-ID/"},{file:{dirname:"docs/Waypoint-Give-your-JavaScript-Slot-Machine-some-stylish-images",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Give-your-JavaScript-Slot-Machine-some-stylish-images/index.md",data:{title:"Waypoint Give your JavaScript Slot Machine some stylish images",order:5},path:"/docs/Waypoint-Give-your-JavaScript-Slot-Machine-some-stylish-images/"},{file:{dirname:"docs/Waypoint-Headline-with-the-h2-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Headline-with-the-h2-Element/index.md",data:{title:"Waypoint Headline with the h2 Element",order:5},path:"/docs/Waypoint-Headline-with-the-h2-Element/"},{file:{dirname:"docs/Waypoint-House-our-page-within-a-Bootstrap-Container-Fluid-Div",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-House-our-page-within-a-Bootstrap-Container-Fluid-Div/index.md",data:{title:"Waypoint House our page within a Bootstrap Container Fluid Div",order:5},path:"/docs/Waypoint-House-our-page-within-a-Bootstrap-Container-Fluid-Div/"},{file:{dirname:"docs/Waypoint-Import-a-Google-Font",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Import-a-Google-Font/index.md",data:{title:"Waypoint Import a Google Font",order:5},path:"/docs/Waypoint-Import-a-Google-Font/"},{file:{dirname:"docs/Waypoint-Inform-with-the-Paragraph-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Inform-with-the-Paragraph-Element/index.md",data:{title:"Waypoint Inform with the Paragraph Element",order:5},path:"/docs/Waypoint-Inform-with-the-Paragraph-Element/"},{file:{dirname:"docs/Waypoint-Inherit-Styles-from-the-Body-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Inherit-Styles-from-the-Body-Element/index.md",data:{title:"Waypoint Inherit Styles from the Body Element",order:5},path:"/docs/Waypoint-Inherit-Styles-from-the-Body-Element/"},{file:{dirname:"docs/Waypoint-Invert-Regular-Expression-Matches-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Invert-Regular-Expression-Matches-with-JavaScript/index.md",data:{title:"Waypoint Invert Regular Expression Matches with JavaScript",order:5},path:"/docs/Waypoint-Invert-Regular-Expression-Matches-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Iterate-Odd-Numbers-With-a-For-Loop",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Iterate-Odd-Numbers-With-a-For-Loop/index.md",data:{title:"Waypoint Iterate Odd Numbers With a For Loop",order:5},path:"/docs/Waypoint-Iterate-Odd-Numbers-With-a-For-Loop/"},{file:{dirname:"docs/Waypoint-Iterate-over-Arrays-with-map",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Iterate-over-Arrays-with-map/index.md",data:{title:"Waypoint Iterate over Arrays with map",order:5},path:"/docs/Waypoint-Iterate-over-Arrays-with-map/"},{file:{dirname:"docs/Waypoint-Iterate-with-JavaScript-For-Loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Iterate-with-JavaScript-For-Loops/index.md",data:{title:"Waypoint Iterate with JavaScript For Loops",order:5},path:"/docs/Waypoint-Iterate-with-JavaScript-For-Loops/"},{file:{dirname:"docs/Waypoint-Iterate-with-JavaScript-While-Loops",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Iterate-with-JavaScript-While-Loops/index.md",data:{title:"Waypoint Iterate with JavaScript While Loops",order:5},path:"/docs/Waypoint-Iterate-with-JavaScript-While-Loops/"},{file:{dirname:"docs/Waypoint-Join-Strings-with-.join",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Join-Strings-with-.join/index.md",data:{title:"Waypoint Join Strings with .join",order:5},path:"/docs/Waypoint-Join-Strings-with-.join/"},{file:{dirname:"docs/Waypoint-Label-Bootstrap-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Label-Bootstrap-Buttons/index.md",data:{title:"Waypoint Label Bootstrap Buttons",order:5},path:"/docs/Waypoint-Label-Bootstrap-Buttons/"},{file:{dirname:"docs/Waypoint-Label-Bootstrap-Wells",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Label-Bootstrap-Wells/index.md",data:{title:"Waypoint Label Bootstrap Wells",order:5},path:"/docs/Waypoint-Label-Bootstrap-Wells/"},{file:{dirname:"docs/Waypoint-Learn-how-Script-Tags-and-Document-Ready-Work",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Learn-how-Script-Tags-and-Document-Ready-Work/index.md",data:{title:"Waypoint Learn how Script Tags and Document Ready Work",order:5},path:"/docs/Waypoint-Learn-how-Script-Tags-and-Document-Ready-Work/"},{file:{dirname:"docs/Waypoint-Line-up-Form-Elements-Responsively-with-Bootstrap",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Line-up-Form-Elements-Responsively-with-Bootstrap/index.md",data:{title:"Waypoint Line up Form Elements Responsively with Bootstrap",order:5},path:"/docs/Waypoint-Line-up-Form-Elements-Responsively-with-Bootstrap/"},{file:{dirname:"docs/Waypoint-Link-to-External-Pages-with-Anchor-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Link-to-External-Pages-with-Anchor-Elements/index.md",data:{title:"Waypoint Link to External Pages with Anchor Elements",order:5},path:"/docs/Waypoint-Link-to-External-Pages-with-Anchor-Elements/"},{file:{dirname:"docs/Waypoint-Make-Circular-Images-with-a-Border-Radius",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Circular-Images-with-a-Border-Radius/index.md",data:{title:"Waypoint Make Circular Images with a Border Radius",order:5},path:"/docs/Waypoint-Make-Circular-Images-with-a-Border-Radius/"},{file:{dirname:"docs/Waypoint-Make-Dead-Links-using-the-Hash-Symbol",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Dead-Links-using-the-Hash-Symbol/index.md",data:{title:"Waypoint Make Dead Links using the Hash Symbol",order:5},path:"/docs/Waypoint-Make-Dead-Links-using-the-Hash-Symbol/"},{file:{dirname:"docs/Waypoint-Make-Images-Mobile-Responsive",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Images-Mobile-Responsive/index.md",data:{title:"Waypoint Make Images Mobile Responsive",order:5},path:"/docs/Waypoint-Make-Images-Mobile-Responsive/"},{file:{dirname:"docs/Waypoint-Make-Instances-of-Objects-with-a-Constructor-Function",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Instances-of-Objects-with-a-Constructor-Function/index.md",data:{title:"Waypoint Make Instances of Objects with a Constructor Function",order:5},path:"/docs/Waypoint-Make-Instances-of-Objects-with-a-Constructor-Function/"},{file:{dirname:"docs/Waypoint-Make-Object-Properties-Private",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Object-Properties-Private/index.md",data:{title:"Waypoint Make Object Properties Private",order:5},path:"/docs/Waypoint-Make-Object-Properties-Private/"},{file:{dirname:"docs/Waypoint-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/index.md",data:{title:"Waypoint Make Unique Objects by Passing Parameters to our Constructor",order:5},path:"/docs/Waypoint-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/"},{file:{dirname:"docs/Waypoint-Manipulate-Arrays-With-pop()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Manipulate-Arrays-With-pop()/index.md",data:{title:"Waypoint Manipulate Arrays With pop()",order:5},path:"/docs/Waypoint-Manipulate-Arrays-With-pop()/"},{file:{dirname:"docs/Waypoint-Manipulate-Arrays-With-push()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Manipulate-Arrays-With-push()/index.md",data:{title:"Waypoint Manipulate Arrays With push()",order:5},path:"/docs/Waypoint-Manipulate-Arrays-With-push()/"},{file:{dirname:"docs/Waypoint-Manipulate-Arrays-With-shift()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Manipulate-Arrays-With-shift()/index.md",data:{title:"Waypoint Manipulate Arrays With shift()",order:5},path:"/docs/Waypoint-Manipulate-Arrays-With-shift()/"},{file:{dirname:"docs/Waypoint-Manipulate-Arrays-With-unshift()",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Manipulate-Arrays-With-unshift()/index.md",data:{title:"Waypoint Manipulate Arrays With unshift()",order:5},path:"/docs/Waypoint-Manipulate-Arrays-With-unshift()/"},{file:{dirname:"docs/Waypoint-Manipulate-JavaScript-Objects",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Manipulate-JavaScript-Objects/index.md",data:{title:"Waypoint Manipulate JavaScript Objects",order:5},path:"/docs/Waypoint-Manipulate-JavaScript-Objects/"},{file:{dirname:"docs/Waypoint-Modify-Array-Data-With-Indexes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Modify-Array-Data-With-Indexes/index.md",data:{title:"Waypoint Modify Array Data With Indexes",order:5},path:"/docs/Waypoint-Modify-Array-Data-With-Indexes/"},{file:{dirname:"docs/Waypoint-Multiply-Two-Numbers-with-JavaScript",
basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Multiply-Two-Numbers-with-JavaScript/index.md",data:{title:"Waypoint Multiply Two Numbers with JavaScript",order:5},path:"/docs/Waypoint-Multiply-Two-Numbers-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Nest-an-Anchor-Element-within-a-Paragraph",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Nest-an-Anchor-Element-within-a-Paragraph/index.md",data:{title:"Waypoint Nest an Anchor Element within a Paragraph",order:5},path:"/docs/Waypoint-Nest-an-Anchor-Element-within-a-Paragraph/"},{file:{dirname:"docs/Waypoint-Nest-Many-Elements-within-a-Single-Div-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Nest-Many-Elements-within-a-Single-Div-Element/index.md",data:{title:"Waypoint Nest Many Elements within a Single Div Element",order:5},path:"/docs/Waypoint-Nest-Many-Elements-within-a-Single-Div-Element/"},{file:{dirname:"docs/Waypoint-Nest-one-Array-within-Another-Array",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Nest-one-Array-within-Another-Array/index.md",data:{title:"Waypoint Nest one Array within Another Array",order:5},path:"/docs/Waypoint-Nest-one-Array-within-Another-Array/"},{file:{dirname:"docs/Waypoint-Override-All-Other-Styles-by-using-Important",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Override-All-Other-Styles-by-using-Important/index.md",data:{title:"Waypoint Override All Other Styles by using Important",order:5},path:"/docs/Waypoint-Override-All-Other-Styles-by-using-Important/"},{file:{dirname:"docs/Waypoint-Override-Class-Declarations-by-Styling-ID-Attributes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Override-Class-Declarations-by-Styling-ID-Attributes/index.md",data:{title:"Waypoint Override Class Declarations by Styling ID Attributes",order:5},path:"/docs/Waypoint-Override-Class-Declarations-by-Styling-ID-Attributes/"},{file:{dirname:"docs/Waypoint-Override-Class-Declarations-with-Inline-Styles",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Override-Class-Declarations-with-Inline-Styles/index.md",data:{title:"Waypoint Override Class Declarations with Inline Styles",order:5},path:"/docs/Waypoint-Override-Class-Declarations-with-Inline-Styles/"},{file:{dirname:"docs/Waypoint-Override-Styles-in-Subsequent-CSS",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Override-Styles-in-Subsequent-CSS/index.md",data:{title:"Waypoint Override Styles in Subsequent CSS",order:5},path:"/docs/Waypoint-Override-Styles-in-Subsequent-CSS/"},{file:{dirname:"docs/Waypoint-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/index.md",data:{title:"Waypoint Perform Arithmetic Operations on Decimals with JavaScript",order:5},path:"/docs/Waypoint-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Prioritize-One-Style-Over-Another",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Prioritize-One-Style-Over-Another/index.md",data:{title:"Waypoint Prioritize One Style Over Another",order:5},path:"/docs/Waypoint-Prioritize-One-Style-Over-Another/"},{file:{dirname:"docs/Waypoint-Remove-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Remove-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Remove an Element Using jQuery",order:5},path:"/docs/Waypoint-Remove-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Remove-Classes-from-an-element-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Remove-Classes-from-an-element-with-jQuery/index.md",data:{title:"Waypoint Remove Classes from an element with jQuery",order:5},path:"/docs/Waypoint-Remove-Classes-from-an-element-with-jQuery/"},{file:{dirname:"docs/Waypoint-Render-Images-from-Data-Sources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Render-Images-from-Data-Sources/index.md",data:{title:"Waypoint Render Images from Data Sources",order:5},path:"/docs/Waypoint-Render-Images-from-Data-Sources/"},{file:{dirname:"docs/Waypoint-Responsively-Style-Checkboxes",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Responsively-Style-Checkboxes/index.md",data:{title:"Waypoint Responsively Style Checkboxes",order:5},path:"/docs/Waypoint-Responsively-Style-Checkboxes/"},{file:{dirname:"docs/Waypoint-Responsively-Style-Radio-Buttons",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Responsively-Style-Radio-Buttons/index.md",data:{title:"Waypoint Responsively Style Radio Buttons",order:5},path:"/docs/Waypoint-Responsively-Style-Radio-Buttons/"},{file:{dirname:"docs/Waypoint-Reverse-Arrays-with-reverse",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Reverse-Arrays-with-reverse/index.md",data:{title:"Waypoint Reverse Arrays with reverse",order:5},path:"/docs/Waypoint-Reverse-Arrays-with-reverse/"},{file:{dirname:"docs/Waypoint-Save-your-Code-Revisions-Forever-with-Git",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Save-your-Code-Revisions-Forever-with-Git/index.md",data:{title:"Waypoint Save your Code Revisions Forever with Git",order:5},path:"/docs/Waypoint-Save-your-Code-Revisions-Forever-with-Git/"},{file:{dirname:"docs/Waypoint-Say-Hello-to-HTML-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Say-Hello-to-HTML-Elements/index.md",data:{title:"Waypoint Say Hello to HTML Elements",order:5},path:"/docs/Waypoint-Say-Hello-to-HTML-Elements/"},{file:{dirname:"docs/Waypoint-Set-the-Font-Family-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Set-the-Font-Family-of-an-Element/index.md",data:{title:"Waypoint Set the Font Family of an Element",order:5},path:"/docs/Waypoint-Set-the-Font-Family-of-an-Element/"},{file:{dirname:"docs/Waypoint-Set-the-ID-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Set-the-ID-of-an-Element/index.md",data:{title:"Waypoint Set the ID of an Element",order:5},path:"/docs/Waypoint-Set-the-ID-of-an-Element/"},{file:{dirname:"docs/Waypoint-Sift-through-Text-with-Regular-Expressions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Sift-through-Text-with-Regular-Expressions/index.md",data:{title:"Waypoint Sift through Text with Regular Expressions",order:5},path:"/docs/Waypoint-Sift-through-Text-with-Regular-Expressions/"},{file:{dirname:"docs/Waypoint-Size-your-Images",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Size-your-Images/index.md",data:{title:"Waypoint Size your Images",order:5},path:"/docs/Waypoint-Size-your-Images/"},{file:{dirname:"docs/Waypoint-Sort-Arrays-with-sort",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Sort-Arrays-with-sort/index.md",data:{title:"Waypoint Sort Arrays with sort",order:5},path:"/docs/Waypoint-Sort-Arrays-with-sort/"},{file:{dirname:"docs/Waypoint-Specify-How-Fonts-Should-Degrade",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Specify-How-Fonts-Should-Degrade/index.md",data:{title:"Waypoint Specify How Fonts Should Degrade",order:5},path:"/docs/Waypoint-Specify-How-Fonts-Should-Degrade/"},{file:{dirname:"docs/Waypoint-Split-Strings-with-split",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Split-Strings-with-split/index.md",data:{title:"Waypoint Split Strings with split",order:5},path:"/docs/Waypoint-Split-Strings-with-split/"},{file:{dirname:"docs/Waypoint-Split-your-Bootstrap-Row",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Split-your-Bootstrap-Row/index.md",data:{title:"Waypoint Split your Bootstrap Row",order:5},path:"/docs/Waypoint-Split-your-Bootstrap-Row/"},{file:{dirname:"docs/Waypoint-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/index.md",data:{title:"Waypoint Store Multiple Values in one Variable using JavaScript Arrays",order:5},path:"/docs/Waypoint-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/"},{file:{dirname:"docs/Waypoint-Style-Multiple-Elements-with-a-CSS-Class",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Style-Multiple-Elements-with-a-CSS-Class/index.md",data:{title:"Waypoint Style Multiple Elements with a CSS Class",order:5},path:"/docs/Waypoint-Style-Multiple-Elements-with-a-CSS-Class/"},{file:{dirname:"docs/Waypoint-Style-Text-Inputs-as-Form-Controls",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Style-Text-Inputs-as-Form-Controls/index.md",data:{title:"Waypoint Style Text Inputs as Form Controls",order:5},path:"/docs/Waypoint-Style-Text-Inputs-as-Form-Controls/"},{file:{dirname:"docs/Waypoint-Style-the-HTML-Body-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Style-the-HTML-Body-Element/index.md",data:{title:"Waypoint Style the HTML Body Element",order:5},path:"/docs/Waypoint-Style-the-HTML-Body-Element/"},{file:{dirname:"docs/Waypoint-Subtract-One-Number-from-Another-with-JavaScript",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Subtract-One-Number-from-Another-with-JavaScript/index.md",data:{title:"Waypoint Subtract One Number from Another with JavaScript",order:5},path:"/docs/Waypoint-Subtract-One-Number-from-Another-with-JavaScript/"},{file:{dirname:"docs/Waypoint-Target-a-Specific-Child-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-a-Specific-Child-of-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Target a Specific Child of an Element Using jQuery",order:5},path:"/docs/Waypoint-Target-a-Specific-Child-of-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-Elements-by-Class-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-Elements-by-Class-Using-jQuery/index.md",data:{title:"Waypoint Target Elements by Class Using jQuery",order:5},path:"/docs/Waypoint-Target-Elements-by-Class-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-Elements-by-ID-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-Elements-by-ID-Using-jQuery/index.md",data:{title:"Waypoint Target Elements by ID Using jQuery",order:5},path:"/docs/Waypoint-Target-Elements-by-ID-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-Even-Numbered-Elements-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-Even-Numbered-Elements-Using-jQuery/index.md",data:{title:"Waypoint Target Even Numbered Elements Using jQuery",order:5},path:"/docs/Waypoint-Target-Even-Numbered-Elements-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-HTML-Elements-with-Selectors-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-HTML-Elements-with-Selectors-Using-jQuery/index.md",data:{title:"Waypoint Target HTML Elements with Selectors Using jQuery",order:5},path:"/docs/Waypoint-Target-HTML-Elements-with-Selectors-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-the-Children-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-the-Children-of-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Target the Children of an Element Using jQuery",order:5},path:"/docs/Waypoint-Target-the-Children-of-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-the-Parent-of-an-Element-Using-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-the-Parent-of-an-Element-Using-jQuery/index.md",data:{title:"Waypoint Target the Parent of an Element Using jQuery",order:5},path:"/docs/Waypoint-Target-the-Parent-of-an-Element-Using-jQuery/"},{file:{dirname:"docs/Waypoint-Target-the-same-element-with-multiple-jQuery-Selectors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Target-the-same-element-with-multiple-jQuery-Selectors/index.md",data:{title:"Waypoint Target the same element with multiple jQuery Selectors",order:5},path:"/docs/Waypoint-Target-the-same-element-with-multiple-jQuery-Selectors/"},{file:{dirname:"docs/Waypoint-Taste-the-Bootstrap-Button-Color-Rainbow",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Taste-the-Bootstrap-Button-Color-Rainbow/index.md",data:{title:"Waypoint Taste the Bootstrap Button Color Rainbow",order:5},path:"/docs/Waypoint-Taste-the-Bootstrap-Button-Color-Rainbow/"},{file:{dirname:"docs/Waypoint-Trigger-Click Events-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Trigger-Click Events-with-jQuery/index.md",data:{title:"Waypoint Trigger Click Events with jQuery",order:5},path:"/docs/Waypoint-Trigger-Click Events-with-jQuery/"},{file:{dirname:"docs/Waypoint-Turn-an-Image-into-a-Link",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Turn-an-Image-into-a-Link/index.md",data:{title:"Waypoint Turn an Image into a Link",order:5},path:"/docs/Waypoint-Turn-an-Image-into-a-Link/"},{file:{dirname:"docs/Waypoint-Uncomment-HTML",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Uncomment-HTML/index.md",data:{title:"Waypoint Uncomment HTML",order:5},path:"/docs/Waypoint-Uncomment-HTML/"},{file:{dirname:"docs/Waypoint-Understand-Boolean-Values",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Understand-Boolean-Values/index.md",data:{title:"Waypoint Understand Boolean Values",order:5},path:"/docs/Waypoint-Understand-Boolean-Values/"},{file:{dirname:"docs/Waypoint-Use-a-CSS-Class-to-Style-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-a-CSS-Class-to-Style-an-Element/index.md",data:{title:"Waypoint Use a CSS Class to Style an Element",order:5},path:"/docs/Waypoint-Use-a-CSS-Class-to-Style-an-Element/"},{file:{dirname:"docs/Waypoint-Use-Abbreviated-Hex-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Abbreviated-Hex-Code/index.md",data:{title:"Waypoint Use Abbreviated Hex Code",order:5},path:"/docs/Waypoint-Use-Abbreviated-Hex-Code/"},{file:{dirname:"docs/Waypoint-Use-an-ID-Attribute-to-Style-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-an-ID-Attribute-to-Style-an-Element/index.md",data:{title:"Waypoint Use an ID Attribute to Style an Element",order:5},path:"/docs/Waypoint-Use-an-ID-Attribute-to-Style-an-Element/"},{file:{dirname:"docs/Waypoint-Use-appendTo-to-Move-Elements-with-jQuery",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-appendTo-to-Move-Elements-with-jQuery/index.md",data:{title:"Waypoint Use appendTo to Move Elements with jQuery",order:5},path:"/docs/Waypoint-Use-appendTo-to-Move-Elements-with-jQuery/"},{file:{dirname:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/index.md",data:{title:"Waypoint Use Bracket Notation to Find the First Character in a String",order:5},path:"/docs/Waypoint-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/"},{file:{dirname:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/index.md",data:{title:"Waypoint Use Bracket Notation to Find the Last Character in a String",order:5},path:"/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/"},{file:{dirname:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/index.md",data:{title:"Waypoint Use Bracket Notation to Find the Nth Character in a String",order:5},path:"/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/"},{file:{dirname:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/index.md",data:{title:"Waypoint Use Bracket Notation to Find the Nth to Last Character in a String",order:5},path:"/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/"},{file:{dirname:"docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/index.md",data:{title:"Waypoint Use Clockwise Notation to Specify the Margin of an Element",order:5},path:"/docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/"},{file:{dirname:"docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/index.md",data:{title:"Waypoint Use Clockwise Notation to Specify the Padding of an Element",order:5},path:"/docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/"},{file:{dirname:"docs/Waypoint-Use-Comments-to-Clarify-Code",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Comments-to-Clarify-Code/index.md",data:{title:"Waypoint Use Comments to Clarify Code",order:5},path:"/docs/Waypoint-Use-Comments-to-Clarify-Code/"},{file:{dirname:"docs/Waypoint-Use-Conditional-Logic-with-If-Else-Statements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Conditional-Logic-with-If-Else-Statements/index.md",data:{title:"Waypoint Use Conditional Logic with If Else Statements",order:5},path:"/docs/Waypoint-Use-Conditional-Logic-with-If-Else-Statements/"},{file:{dirname:"docs/Waypoint-Use-CSS-Selectors-to-Style-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-CSS-Selectors-to-Style-Elements/index.md",data:{title:"Waypoint Use CSS Selectors to Style Elements",order:5},path:"/docs/Waypoint-Use-CSS-Selectors-to-Style-Elements/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-for-Specific-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-for-Specific-Colors/index.md",data:{title:"Waypoint Use Hex Code for Specific Colors",order:5},path:"/docs/Waypoint-Use-Hex-Code-for-Specific-Colors/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-for-Specific-Shades-of-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-for-Specific-Shades-of-Gray/index.md",data:{title:"Waypoint Use Hex Code for Specific Shades of Gray",order:5},path:"/docs/Waypoint-Use-Hex-Code-for-Specific-Shades-of-Gray/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Blue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Blue/index.md",data:{title:"Waypoint Use Hex Code to Color Elements Blue",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Blue/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Gray/index.md",data:{title:"Waypoint Use Hex Code to Color Elements Gray",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Gray/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Green",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Green/index.md",data:{title:"Waypoint Use Hex Code to Color Elements Green",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Green/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red/index.md",data:{title:"Waypoint Use Hex Code to Color Elements Red",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-White",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Color-Elements-White/index.md",data:{title:"Waypoint Use Hex Code to Color Elements White",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Color-Elements-White/"},{file:{dirname:"docs/Waypoint-Use-Hex-Code-to-Mix-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Hex-Code-to-Mix-Colors/index.md",data:{title:"Waypoint Use Hex Code to Mix Colors",order:5},path:"/docs/Waypoint-Use-Hex-Code-to-Mix-Colors/"},{file:{dirname:"docs/Waypoint-Use-HTML5-to-Require-a-Field",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-HTML5-to-Require-a-Field/index.md",data:{title:"Waypoint Use HTML5 to Require a Field",order:5},path:"/docs/Waypoint-Use-HTML5-to-Require-a-Field/"},{file:{dirname:"docs/Waypoint-Use-jQuery-to-Modify-the-Entire-Page",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-jQuery-to-Modify-the-Entire-Page/index.md",data:{title:"Waypoint Use jQuery to Modify the Entire Page",order:5},path:"/docs/Waypoint-Use-jQuery-to-Modify-the-Entire-Page/"},{file:{dirname:"docs/Waypoint-Use-Responsive-Design-with-Bootstrap-Fluid-Containers",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/index.md",data:{title:"Waypoint Use Responsive Design with Bootstrap Fluid Containers",order:5},path:"/docs/Waypoint-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Color-Elements-Blue",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Color-Elements-Blue/index.md",data:{title:"Waypoint Use RGB to Color Elements Blue",order:5},path:"/docs/Waypoint-Use-RGB-to-Color-Elements-Blue/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Color-Elements-Gray",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Color-Elements-Gray/index.md",data:{title:"Waypoint Use RGB to Color Elements Gray",order:5},path:"/docs/Waypoint-Use-RGB-to-Color-Elements-Gray/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Color-Elements-Green",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Color-Elements-Green/index.md",data:{title:"Waypoint Use RGB to Color Elements Green",order:5},path:"/docs/Waypoint-Use-RGB-to-Color-Elements-Green/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Color-Elements-Red",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Color-Elements-Red/index.md",data:{title:"Waypoint Use RGB to Color Elements Red",order:5},path:"/docs/Waypoint-Use-RGB-to-Color-Elements-Red/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Color-Elements-White",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Color-Elements-White/index.md",data:{title:"Waypoint Use RGB to Color Elements White",order:5},path:"/docs/Waypoint-Use-RGB-to-Color-Elements-White/"},{file:{dirname:"docs/Waypoint-Use-RGB-to-Mix-Colors",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-to-Mix-Colors/index.md",data:{title:"Waypoint Use RGB to Mix Colors",order:5},path:"/docs/Waypoint-Use-RGB-to-Mix-Colors/"},{file:{dirname:"docs/Waypoint-Use-RGB-values-to-Color-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-RGB-values-to-Color-Elements/index.md",data:{title:"Waypoint Use RGB values to Color Elements",order:5},path:"/docs/Waypoint-Use-RGB-values-to-Color-Elements/"},{file:{dirname:"docs/Waypoint-Use-Spans-for-Inline-Elements",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-Spans-for-Inline-Elements/index.md",data:{title:"Waypoint Use Spans for Inline Elements",order:5},path:"/docs/Waypoint-Use-Spans-for-Inline-Elements/"},{file:{dirname:"docs/Waypoint-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/index.md",data:{title:"Waypoint Use the Bootstrap Grid to Put Elements Side By Side",order:5},path:"/docs/Waypoint-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/"},{file:{dirname:"docs/Waypoint-Use-the-Javascript-Console",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Use-the-Javascript-Console/index.md",data:{title:"Waypoint Use the Javascript Console",order:5},path:"/docs/Waypoint-Use-the-Javascript-Console/"},{file:{dirname:"docs/Waypoint-Using-typeof",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Using-typeof/index.md",data:{title:"Waypoint Using typeof",order:5},path:"/docs/Waypoint-Using-typeof/"},{file:{dirname:"docs/Waypoint-Warn-your-Users-of-a-Dangerous-Action",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Warn-your-Users-of-a-Dangerous-Action/index.md",data:{title:"Waypoint Warn your Users of a Dangerous Action",order:5},path:"/docs/Waypoint-Warn-your-Users-of-a-Dangerous-Action/"},{file:{dirname:"docs/Waypoint-Write-Reusable-JavaScript-with-Functions",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Waypoint-Write-Reusable-JavaScript-with-Functions/index.md",data:{title:"Waypoint Write Reusable JavaScript with Functions",order:5},path:"/docs/Waypoint-Write-Reusable-JavaScript-with-Functions/"},{file:{dirname:"docs/Web-Resources",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Web-Resources/index.md",data:{title:"Web Resources",order:5},path:"/docs/Web-Resources/"},{file:{dirname:"docs/What-exactly-Free-Code-Camp-does",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-exactly-Free-Code-Camp-does/index.md",data:{title:"What exactly Free Code Camp does",order:5},path:"/docs/What-exactly-Free-Code-Camp-does/"},{file:{dirname:"docs/What-pair-programming-is-and-why-it-is-special",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-pair-programming-is-and-why-it-is-special/index.md",data:{title:"What pair programming is and why it is special",order:5},path:"/docs/What-pair-programming-is-and-why-it-is-special/"},{file:{dirname:"docs/What-the-main-advantages-of-Free-Code-Camp-are",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-the-main-advantages-of-Free-Code-Camp-are/index.md",data:{title:"What the main advantages of Free Code Camp are",order:5},path:"/docs/What-the-main-advantages-of-Free-Code-Camp-are/"},{file:{dirname:"docs/What-the-style-guide-for-Bonfires-is",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-the-style-guide-for-Bonfires-is/index.md",data:{title:"What the style guide for Bonfires is",order:5},path:"/docs/What-the-style-guide-for-Bonfires-is/"},{file:{dirname:"docs/What-to-do-if-you-speak-a-language-that-Free-Code-Camp-does-not-yet-support",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-to-do-if-you-speak-a-language-that-Free-Code-Camp-does-not-yet-support/index.md",data:{title:"What to do if you speak a language that Free Code Camp does not yet support",order:5},path:"/docs/What-to-do-if-you-speak-a-language-that-Free-Code-Camp-does-not-yet-support/"},{file:{dirname:"docs/What-you-will-learn,-and-in-what-sequence-you-will-learn-it",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/What-you-will-learn,-and-in-what-sequence-you-will-learn-it/index.md",data:{title:"What you will learn, and in what sequence you will learn it",order:5},path:"/docs/What-you-will-learn,-and-in-what-sequence-you-will-learn-it/"},{file:{dirname:"docs/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python/index.md",data:{title:"Why does Free Code Camp use JavaScript instead of Ruby or Python",order:5},path:"/docs/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python/"},{file:{dirname:"docs/Why-you-need-Free-Code-Camp",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Why-you-need-Free-Code-Camp/index.md",data:{title:"Why you need Free Code Camp",order:5},path:"/docs/Why-you-need-Free-Code-Camp/"},{file:{dirname:"docs/Why-You-Should-Try-Pair-Programming",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Why-You-Should-Try-Pair-Programming/index.md",data:{title:"Why You Should Try Pair Programming",order:5},path:"/docs/Why-You-Should-Try-Pair-Programming/"},{file:{dirname:"docs/wiki-js-template",basename:"index.md",name:"index",
extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/wiki-js-template/index.md",data:{title:"wiki js template",order:5},path:"/docs/wiki-js-template/"},{file:{dirname:"docs/Wiki-Style-Guide",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Wiki-Style-Guide/index.md",data:{title:"Wiki Style Guide",order:5},path:"/docs/Wiki-Style-Guide/"},{file:{dirname:"docs/World-Language-Chat-Rooms",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/World-Language-Chat-Rooms/index.md",data:{title:"World Language Chat Rooms",order:5},path:"/docs/World-Language-Chat-Rooms/"},{file:{dirname:"docs/Write-and-Run-ES6-Code-in-Browser",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Write-and-Run-ES6-Code-in-Browser/index.md",data:{title:"Write and Run ES6 Code in Browser",order:5},path:"/docs/Write-and-Run-ES6-Code-in-Browser/"},{file:{dirname:"docs/Writing-great-git-commit-message",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Writing-great-git-commit-message/index.md",data:{title:"Writing great git commit message",order:5},path:"/docs/Writing-great-git-commit-message/"},{file:{dirname:"docs/Zipline-Use-the-Twitchtv-JSON-API",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"docs/Zipline-Use-the-Twitchtv-JSON-API/index.md",data:{title:"Zipline Use the Twitchtv JSON API",order:5},path:"/docs/Zipline-Use-the-Twitchtv-JSON-API/"},{file:{dirname:".",basename:"index.md",name:"index",extname:".md",extSegments:[".md"],ext:"md"},requirePath:"index.md",data:{title:"Welcome to the Free Code Camp Wiki!"},path:"/"}]}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(258),o=t(246),r=a(o),i=t(260),l=a(i),p=t(256),c=a(p),d=n.link=function(e){return null!=s.config.linkPrefix?s.config.linkPrefix+e:e};n.templateChildrenPages=function(e,n){var t=e.split("/");t.pop();var a="/"+t.join("/");a=d(a);var o=(0,l["default"])((0,r["default"])(n.routes,function(e){return(0,c["default"])(e.path,a)})).childRoutes,i=o.map(function(e){return e.path});if(i)var p=(0,r["default"])(s.pages,function(e){return i.indexOf(d(e.path))>=0});else p=[];return p}},function(e,n){function t(e){return e?e[0]:void 0}e.exports=t},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(2),o=a(s),r=t(262),i=a(r),l=t(264),p=a(l);p["default"].rhythm;e.exports=o["default"].createClass({displayName:"exports",render:function(){var e;return e=this.props.page.data,o["default"].createElement(i["default"],{title:e.title+" | "+this.props.config.siteTitle},o["default"].createElement("div",{className:"markdown"},o["default"].createElement("h1",null,e.title),o["default"].createElement("div",{dangerouslySetInnerHTML:{__html:e.body}})))}})},function(e,n,t){"use strict";function a(e){var n=e[e.length-1];return n?n.title:void 0}function s(e){document.title=e||""}var o=t(2),r=t(263),i=o.createClass({propTypes:{title:o.PropTypes.string.isRequired},render:function(){return this.props.children?o.Children.only(this.props.children):null}});e.exports=r(a,s)(i)},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}function s(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),i=t(2),l=a(i),p=t(9),c=a(p),d=t(117),h=a(d);e.exports=function(e,n,t){function a(e){return e.displayName||e.name||"Component"}if("function"!=typeof e)throw new Error("Expected reducePropsToState to be a function.");if("function"!=typeof n)throw new Error("Expected handleStateChangeOnClient to be a function.");if("undefined"!=typeof t&&"function"!=typeof t)throw new Error("Expected mapStateOnServer to either be undefined or a function.");return function(p){function d(){m=e(u.map(function(e){return e.props})),f.canUseDOM?n(m):t&&(m=t(m))}if("function"!=typeof p)throw new Error("Expected WrappedComponent to be a React component.");var u=[],m=void 0,f=function(e){function n(){s(this,n),e.apply(this,arguments)}return o(n,e),n.peek=function(){return m},n.rewind=function(){if(n.canUseDOM)throw new Error("You may ony call rewind() on the server. Call peek() to read the current state.");var e=m;return m=void 0,u=[],e},n.prototype.shouldComponentUpdate=function(e){return!h["default"](e,this.props)},n.prototype.componentWillMount=function(){u.push(this),d()},n.prototype.componentDidUpdate=function(){d()},n.prototype.componentWillUnmount=function(){var e=u.indexOf(this);u.splice(e,1),d()},n.prototype.render=function(){return l["default"].createElement(p,this.props)},r(n,null,[{key:"displayName",value:"SideEffect("+a(p)+")",enumerable:!0},{key:"canUseDOM",value:c["default"].canUseDOM,enumerable:!0}]),n}(i.Component);return f}}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(n,"__esModule",{value:!0});var s=t(265),o=a(s),r={baseFontSize:"16px",baseLineHeight:"24px",bodyFontFamily:'"Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',headerFontFamily:'"Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',bodyWeight:300,headerWeight:600,boldWeight:600,modularScales:[{scale:"minor third"}]},i=new o["default"](r);n["default"]=i,e.exports=n["default"]},function(e,n,t){var a,s,o,r,i,l,p,c,d;a=t(2),c=t(162),s=t(266),p=t(270),l=t(272),o=t(273),r=t(274),i=function(e){var n,t,a,o,i;if(i=s(e),a=r(i,e),null!=e.subThemes&&l(e.subThemes)){t=e.subThemes;for(n in t)o=t[n],i=s(o),a+=r(i,o,n,e)}return a},e.exports=d=function(e){var n,a,r,d,h;if(n={baseFontSize:"18px",baseLineHeight:"28.5px",modularScales:[{scale:"diminished fourth"},{maxWidth:"768px",scale:"minor third"}],googleFonts:[],headerFontFamily:'"Avenir Next", "Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif',bodyFontFamily:"georgia, serif",headerGray:20,headerGrayHue:0,bodyGray:20,bodyGrayHue:0,headerWeight:700,bodyWeight:400,boldWeight:700,fontFaces:[]},e=c(n,e),null!=e.subThemes&&l(e.subThemes)){r=e.subThemes;for(a in r)d=r[a],e.subThemes[a]=c(o(e),d,{rhythmUnit:"px"})}return h=s(e),{options:e,GoogleFont:t(281)(e),TypographyStyle:t(282)(function(){return i(e)}),rhythm:h.rhythm,createStyles:function(){return i(e)},fontSizeToPx:h.adjustFontSizeTo,fontSizeToMS:function(n){var t,a;return t=e.baseFontSize.slice(0,-2),a=p(n,e.modularScales[0])*t+"px",h.adjustFontSizeTo(a)},injectStyles:function(){var n,t;return"undefined"!=typeof document&&null!==document?null!=document.getElementById("typography.js")?(t=document.getElementById("typography.js"),t.innerHTML=i(e)):(n="undefined"!=typeof document&&null!==document?document.createElement("style"):void 0,n.id="typography.js",n.innerHTML=i(e),document.head.appendChild(n)):void 0}}}},function(e,n,t){var a,s,o,r,i,l,p,c,d,h;l=t(162),s=t(267),p=t(268),d=function(e){return p(e)[1]},h=function(e){return p(e)[0]},o={baseFontSize:"16px",baseLineHeight:"24px",rhythmUnit:"rem",defaultRhythmBorderWidth:"1px",defaultRhythmBorderStyle:"solid",roundToNearestHalfLine:!0,minLinePadding:"2px"},i=function(e,n){var t,a,o,r,i;return a=s(n.baseFontSize),o=h(a(e,"px")),t=h(a(n.baseLineHeight,"px")),i=h(a(n.minLinePadding,"px")),r=n.roundToNearestHalfLine?Math.ceil(2*o/t)/2:Math.ceil(o/t),2*i>r*t-o&&(r+=n.roundToNearestHalfLine?.5:1),r},c=function(e){var n;return n=s(e.baseFontSize),function(t,a,s){var o,r;return null==t&&(t=1),null==a&&(a=e.baseFontSize),null==s&&(s=0),o=t*h(e.baseLineHeight)-s,o+=d(e.baseLineHeight),r=n(o,e.rhythmUnit,a),"px"===d(r)&&(r=Math.floor(h(r))+d(r)),parseFloat(h(r).toFixed(5))+d(r)}},r=function(e){var n;return n=s(e.baseFontSize),{fontSize:h(e.baseFontSize)/16*100+"%",lineHeight:n(e.baseLineHeight,"em")}},a=function(e,n,t,a){var o,r;return null==t&&(t=a.baseFontSize),"%"===d(e)&&(e=h(a.baseFontSize)*(h(e)/100)+"px"),o=s(a.baseFontSize),t=o(t,"px"),e=o(e,"px",t),r=c(a),"auto"===n&&(n=i(e,a)),{fontSize:o(e,a.rhythmUnit,t),lineHeight:r(n,t)}},e.exports=function(e){var n;return n=JSON.parse(JSON.stringify(o)),e=l(n,e),{rhythm:c(e),establishBaseline:function(){return r(e)},linesForFontSize:function(n){return i(n,e)},adjustFontSizeTo:function(n,t,s){return null==t&&(t="auto"),a(n,t,s,e)}}}},function(e,n,t){var a,s,o,r;s=t(268),t(269),a="16px",o=function(e){return s(e)[1]},r=function(e){return s(e)[0]},e.exports=function(e){return null==e&&(e=e),function(n,t,a,s){var i,l,p;if(null==a&&(a=e),null==s&&(s=a),i=o(n),i===t)return n;if(p=r(n),"px"!==o(a)&&console.warn("Parameter fromContext must resolve to a value in pixel units."),"px"!==o(s)&&console.warn("Parameter toContext must resolve to a value in pixel units."),"px"!==i)if("em"===i)p=r(n)*r(a);else if("rem"===i)p=r(n)*r(e);else{if("ex"!==i)return"ch"===i||"vw"===i||"vh"===i||"vmin"===i?(console.warn(i+" units can't be reliably converted; Returning original value."),n):(console.warn(i+" is an unknown or unsupported length unit; Returning original value."),n);p=r(n)*r(a)*2}if(l=p,"px"!==t)if("em"===t)l=p/r(s);else if("rem"===t)l=p/r(e);else{if("ex"!==t)return"ch"===t||"vw"===t||"vh"===t||"vmin"===t?(console.warn(t+" units can't be reliably converted; Returning original value."),n):(console.warn(t+" is an unknown or unsupported length unit; Returning original value."),n);l=p/r(s)/2}return parseFloat(l.toFixed(5))+t}}},function(e,n){e.exports=function(e,n){n||(n=[0,""]),e=String(e);var t=parseFloat(e,10);return n[0]=t,n[1]=e.match(/[\d.\-\+]*\s*(.*)/)[1]||"",n}},function(e,n){!function(e){"use strict";for(var n,t,a={},s=function(){},o="memory".split(","),r="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");n=o.pop();)e[n]=e[n]||a;for(;t=r.pop();)e[t]=e[t]||s}(this.console=this.console||{})},function(e,n,t){var a,s;a=t(271),s={"minor second":16/15,"major second":9/8,"minor third":1.2,"major third":4/3,"diminished fourth":Math.sqrt(2),"perfect fifth":1.5,"minor sixth":1.6,golden:1.61803398875,phi:1.61803398875,"major sixth":5/3,"minor seventh":16/9,"major seventh":15/8,octave:2,"major tenth":2.5,"major eleventh":8/3,"major twelfth":3,"double octave":4},e.exports=function(e,n){var t;return null==e&&(e=0),null==n&&(n="golden"),t=a(n)?n:null!=s[n]?s[n]:s.golden,Math.pow(t,e)}},function(e,n){function t(e){return!!e&&"object"==typeof e}function a(e){return"number"==typeof e||t(e)&&r.call(e)==s}var s="[object Number]",o=Object.prototype,r=o.toString;e.exports=a},function(e,n){/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2015, Jon Schlinkert.
	 * Licensed under the MIT License.
	 */
"use strict";e.exports=function(e){return null!=e&&"object"==typeof e&&!Array.isArray(e)}},function(e,n){e.exports=function(e){if(!e||"object"!=typeof e)return e;var n;if(a(e)){var s=e.length;n=Array(s);for(var o=0;s>o;o++)n[o]=e[o]}else{var r=t(e);n={};for(var o=0,i=r.length;i>o;o++){var l=r[o];n[l]=e[l]}}return n};var t=Object.keys||function(e){var n=[];for(var t in e)({}).hasOwnProperty.call(e,t)&&n.push(t);return n},a=Array.isArray||function(e){return"[object Array]"==={}.toString.call(e)}},function(e,n,t){var a,s,o,r,i,l,p,c,d,h;c=t(270),d=t(275),i=t(276),l=t(277),s=t(278),p=t(279),h=null,o=function(e,n){var t,a,o,r,i,l,p,c,d,h;if(d="",i="",!(null!=n.fontFaces&&n.fontFaces.length>0))return d;for(l=n.fontFaces,a=0,r=l.length;r>a;a++){t=l[a],c=function(){var e,n,a,s;for(a=t.src,s=[],e=0,n=a.length;n>e;e++)p=a[e],s.push("src: "+p+";");return s}();for(o in t)h=t[o],"src"!==o&&(i+=s(o,"-")+": "+h+";\n");d+="@font-face {\n  "+i+"\n  "+c.join("\n")+"\n}"}return d},a=function(e,n){var t;return null!=h&&(e=p(e,function(e){return".typography-theme-"+h+" "+e})),t=e.join(","),t+" {\n"+n+"\n}\n\n"},r=function(e,n){var t,s,o,r,i,l,p,d,h,u,m,f,g,y;for(y="",t=n.baseFontSize.slice(0,-2),f=n.modularScales,d=0,h=f.length;h>d;d++)m=f[d],u=m.maxWidth,g=m.scale,s=e.adjustFontSizeTo(c(3,g)*t+"px"),o=e.adjustFontSizeTo(c(2,g)*t+"px"),r=e.adjustFontSizeTo(c(1,g)*t+"px"),i=e.adjustFontSizeTo(c(2/3,g)*t+"px"),l=e.adjustFontSizeTo(c(1/3,g)*t+"px"),p=e.adjustFontSizeTo(c(0,g)*t+"px"),u&&(y+="@media only screen and (max-width: "+u+") {\n"),y+=a(["h1"],"font-size: "+s.fontSize+";\nline-height: "+s.lineHeight+";"),y+=a(["h2"],"font-size: "+o.fontSize+";\nline-height: "+o.lineHeight+";"),y+=a(["h3"],"font-size: "+r.fontSize+";\nline-height: "+r.lineHeight+";"),y+=a(["h4"],"font-size: "+i.fontSize+";\nline-height: "+i.lineHeight+";"),y+=a(["h5"],"font-size: "+l.fontSize+";\nline-height: "+p.lineHeight+";"),y+=a(["h6"],"font-size: "+p.fontSize+";\nline-height: "+p.lineHeight+";"),u&&(y+="}");return y},e.exports=function(e,n,t,s){var l;return h=t,l="",null==t&&(l=d+"\n\nhtml {\n  box-sizing: border-box;\n  font-size: "+e.establishBaseline().fontSize+";\n  line-height: "+e.establishBaseline().lineHeight+";\n  overflow-y: scroll;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  color: "+i(n.bodyGray,n.bodyGrayHue)+";\n  font-family: "+n.bodyFontFamily+";\n  font-weight: "+n.bodyWeight+";\n  word-wrap: break-word;\n}\n\n/* Make image responsive by default */\nimg {\n  max-width: 100%;\n}\n\n"),t&&(l+=".typography-theme-"+t+" {\n  color: "+i(n.bodyGray,n.bodyGrayHue)+";\n  font-family: "+n.bodyFontFamily+";\n  font-weight: "+n.bodyWeight+";\n  font-size: "+e.adjustFontSizeTo(n.baseFontSize,"auto",s.baseFontSize).fontSize+";\n  line-height: "+e.adjustFontSizeTo(n.baseFontSize,"auto",s.baseFontSize).lineHeight+";\n}"),l+=a(["h1","h2","h3","h4","h5","h6","hgroup","ul","ol","dl","dd","p","figure","pre","table","fieldset","blockquote","form","noscript","iframe","img","hr"],"margin: 0;\nmargin-bottom: "+e.rhythm(1)+";\npadding: 0;"),l+=a(["blockquote"],"margin: "+e.rhythm(1)+" "+e.rhythm(2.5)+";"),l+=a(["b","strong"],"font-weight: "+n.boldWeight),l+=a(["hr"],"background: "+i(80,n.bodyGrayHue)+";\nborder: none;\nheight: 1px;\nmargin-bottom: calc("+e.rhythm(1)+" - 1px);"),l+=a(["ol","ul"],"list-style-position: outside;\nmargin-left: "+e.rhythm(1)+";"),l+=a(["ul li","ol li"],"padding-left: 0;"),l+=a(["code","kbd","pre","samp"],"font-size: "+e.adjustFontSizeTo("85%").fontSize+";\nline-height: "+e.adjustFontSizeTo("85%").lineHeight+";"),l+=a(["table"],"font-size: "+e.adjustFontSizeTo(n.baseFontSize).fontSize+";\nline-height: "+e.adjustFontSizeTo(n.baseLineHeight).lineHeight+";\nwidth: 100%;"),l+=a(["thead"],"text-align: left;"),l+=a(["h1","h2","h3","h4","h5","h6"],"color: "+i(n.headerGray,n.headerGrayHue)+";\nfont-family: "+n.headerFontFamily+";\nfont-weight: "+n.headerWeight+";"),l+=r(e,n)+"\n"+o(e,n)}},function(e,n){e.exports="/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}"},function(e,n){function t(e){return!isNaN(parseFloat(e))&&isFinite(e)}e.exports=function(e,n){if("undefined"==typeof n&&(n=0),e>100&&(e=100),0>e&&(e=0),"cool"===n?n=237:"slate"===n?n=122:"warm"===n&&(n=69),!t(n))throw new Error("Hue is not a number");if(!t(e))throw new Error("Lightness is not a number");var a=0;if(0!==n){var s=19.92978,o=-.3651759,r=.001737214;a=s+o*e+r*Math.pow(e,2)}return"hsl("+n+","+a+"%,"+e+"%)"}},function(e,n){"use strict";var t=String.prototype.valueOf,a=function(e){try{return t.call(e),!0}catch(n){return!1}},s=Object.prototype.toString,o="[object String]",r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;e.exports=function(e){return"string"==typeof e?!0:"object"!=typeof e?!1:r?a(e):s.call(e)===o}},function(e,n){"use strict";e.exports=function(e,n){if("string"!=typeof e)throw new TypeError("Expected a string");return n="undefined"==typeof n?"_":n,e.replace(/([a-z\d])([A-Z])/g,"$1"+n+"$2").replace(new RegExp("("+n+"[A-Z])([A-Z])","g"),"$1"+n+"$2").toLowerCase()}},function(e,n,t){function a(e,n,t){var a=i(e)?s:r;return n=o(n,t,3),a(e,n)}var s=t(280),o=t(220),r=t(251),i=t(215);e.exports=a},function(e,n){function t(e,n){for(var t=-1,a=e.length,s=Array(a);++t<a;)s[t]=n(e[t],t,e);return s}e.exports=t},function(e,n,t){var a;a=t(2),e.exports=function(e){return a.createClass({displayName:"GoogleFont",render:function(){var n,t;return t="",n=e.googleFonts.map(function(e){var n;return n="",n+=e.name.split(" ").join("+"),n+=":",n+=e.styles.join(",")}),t=n.join("|"),t?a.DOM.link({href:"//fonts.googleapis.com/css?family="+t,rel:"stylesheet",type:"text/css"}):null}})}},function(e,n,t){var a,s;a=t(2),s=t(274),e.exports=function(e){return a.createClass({displayName:"TypographyStyle",render:function(){return a.DOM.style({id:"typography.js",dangerouslySetInnerHTML:{__html:e()}})}})}},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(2),o=a(s);e.exports=o["default"].createClass({displayName:"exports",render:function(){var e=this.props.page.data;return o["default"].createElement("div",{dangerouslySetInnerHTML:{__html:e}})}})},function(e,n,t){"use strict";n.loadContext=function(e){var n;return n=t(285),e(n)}},function(e,n,t){function a(e){return t(s(e))}function s(e){return o[e]||function(){throw new Error("Cannot find module '"+e+"'.")}()}var o={"./_template":286,"./_template.jsx":286,"./docs/10-Steps-To-Plan-Better-So-You-Can-Write-Less-Code/index.md":330,"./docs/5-Steps-to-organizing-a-successful-Campsite-event./index.md":331,"./docs/5-steps-to-organizing-a-successful-campsite-event/index.md":332,"./docs/Academic-Honesty-Policy/index.md":333,"./docs/Accessing-the-database-from-your-frontend/index.md":334,"./docs/Adding-Environment-Variables/index.md":335,"./docs/Angular-Resources/index.md":336,"./docs/Arithmetic-Operators/index.md":337,"./docs/Array.isArray/index.md":338,"./docs/August-2015-Improvements/index.md":339,"./docs/August-Live-Stream/index.md":340,"./docs/Backend-file-structure/index.md":341,"./docs/Basejump-Resources/index.md":342,"./docs/Bobby-Tables/index.md":343,"./docs/Bonfire-Arguments-Optional/index.md":344,"./docs/Bonfire-Binary-Agents/index.md":345,"./docs/Bonfire-Boo-who/index.md":346,"./docs/Bonfire-Check-for-Palindromes/index.md":347,"./docs/Bonfire-Chunky-Monkey/index.md":348,"./docs/Bonfire-Confirm-the-Ending/index.md":349,"./docs/Bonfire-Convert-HTML-Entities/index.md":350,"./docs/Bonfire-DNA-Pairing/index.md":351,"./docs/Bonfire-Diff-Two-Arrays/index.md":352,"./docs/Bonfire-Drop-it/index.md":353,"./docs/Bonfire-Everything-be-True/index.md":354,"./docs/Bonfire-Exact-Change/index.md":355,"./docs/Bonfire-Factorialize-a-Number/index.md":356,"./docs/Bonfire-Falsey-Bouncer/index.md":357,"./docs/Bonfire-Falsy-Bouncer/index.md":358,"./docs/Bonfire-Find-The-Longest-Word-in-a-String/index.md":359,"./docs/Bonfire-Finders-Keepers/index.md":360,"./docs/Bonfire-Friendly-Date-Ranges/index.md":361,"./docs/Bonfire-Inventory-Update/index.md":362,"./docs/Bonfire-Make-a-Person/index.md":363,"./docs/Bonfire-Map-the-Debris/index.md":364,"./docs/Bonfire-Meet-Bonfire/index.md":365,"./docs/Bonfire-Missing-letters/index.md":366,"./docs/Bonfire-Mutations/index.md":367,"./docs/Bonfire-No-Repeats-Please/index.md":368,"./docs/Bonfire-Pairwise/index.md":369,"./docs/Bonfire-Pig-Latin/index.md":370,"./docs/Bonfire-Repeat-a-String-Repeat-a-String/index.md":371,"./docs/Bonfire-Return-Largest-Numbers-in-Arrays/index.md":372,"./docs/Bonfire-Reverse-a-String/index.md":373,"./docs/Bonfire-Roman-Numeral-Converter/index.md":374,"./docs/Bonfire-Search-and-Replace/index.md":375,"./docs/Bonfire-Seek-and-Destroy/index.md":376,"./docs/Bonfire-Slasher-Flick/index.md":377,"./docs/Bonfire-Smallest-Common-Multiple/index.md":378,"./docs/Bonfire-Sorted-Union/index.md":379,"./docs/Bonfire-Spinal-Tap-Case/index.md":380,"./docs/Bonfire-Steamroller/index.md":381,"./docs/Bonfire-Style-Guide/index.md":382,"./docs/Bonfire-Sum-All-Numbers-in-a-Range/index.md":383,"./docs/Bonfire-Sum-All-Odd-Fibonacci-Numbers/index.md":384,"./docs/Bonfire-Sum-All-Primes/index.md":385,"./docs/Bonfire-Symmetric-Difference/index.md":386,"./docs/Bonfire-Title-Case-a-Sentence/index.md":387,"./docs/Bonfire-Truncate-a-String/index.md":388,"./docs/Bonfire-Validate-US-Telephone-Numbers/index.md":389,"./docs/Bonfire-Where-art-thou/index.md":390,"./docs/Bonfire-Where-do-I-belong/index.md":391,"./docs/Bonfire-Wiki-Template/index.md":392,"./docs/Bonus-SocketIO/index.md":393,"./docs/Bootstrap/index.md":394,"./docs/Brownie-Points/index.md":395,"./docs/Camper-News/index.md":396,"./docs/Campsites/index.md":397,"./docs/Clear-Your-Browser's-Local-Storage/index.md":398,"./docs/Code-of-Conduct/index.md":399,"./docs/Coding-Help/index.md":400,"./docs/Contributions-Guide---with-Typo-Demo/index.md":401,"./docs/Create,-Upload-and-Link-Animated-GIF-Image/index.md":402,"./docs/Creating-a-New-Github-Issue/index.md":403,"./docs/Creating-a-new-API-endpoint/index.md":404,"./docs/Creating-a-new-directive/index.md":405,"./docs/Creating-a-new-route/index.md":406,"./docs/Develop-BaseJump-locally-and-run-on-c9.io/index.md":407,"./docs/Disable-Code-Auto-Run/index.md":408,"./docs/Dynamic-URLs-using-$routeParams/index.md":409,"./docs/Edit-or-Delete-message/index.md":410,"./docs/Epilogue/index.md":411,"./docs/Fixing-exports.update/index.md":412,"./docs/For-loops-Explained/index.md":413,"./docs/Free-Code-Camp's-Privacy-Policy/index.md":414,"./docs/Free-Code-Camp-Deployment-Workflow/index.md":415,"./docs/Free-Code-Camp-Front-End-Development-Certificate/index.md":416,"./docs/Free-Code-Camp-Full-Stack-Development-Certificate/index.md":417,"./docs/Free-Code-Camp-JavaScript-Style-Guide/index.md":418,"./docs/Free-Code-Camp-completion-language-requirements/index.md":419,"./docs/Free-Code-Camp-is-an-open-source-community-distributed-across-many-platforms/index.md":420,"./docs/Free-Code-Camp-logo/index.md":421,"./docs/Frontend-file-structure/index.md":422,"./docs/Functional-Programming---Higher-Order-Functions/index.md":423,"./docs/Get-info-about-the-current-user/index.md":424,"./docs/Getting-a-coding-job/index.md":425,"./docs/Git-Blame/index.md":426,"./docs/Git-Resources/index.md":427,"./docs/Gitter-Moderation-Policy/index.md":428,"./docs/Gitter/index.md":429,"./docs/Grunt/index.md":430,"./docs/Guide-to-Basejumps-Table-of-Contents/index.md":431,"./docs/Guide-to-Submitting-Posts-to-Free-Code-Camp-Medium-Publication/index.md":432,"./docs/Help-I've-Found-a-Bug/index.md":433,"./docs/Help-Rooms/index.md":434,"./docs/Higher-Order-functions/index.md":435,"./docs/Home/index.md":436,"./docs/How-Free-Code-Camp-works/index.md":437,"./docs/How-FreeCodeCamp-Nonprofit-Projects-work/index.md":438,"./docs/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work/index.md":439,"./docs/How-JSONP-is-different-from-JSON/index.md":440,"./docs/How-Long-Free-Code-Camp-Takes/index.md":441,"./docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp/index.md":442,"./docs/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp/index.md":443,"./docs/How-to-Get-Help-on-Gitter/index.md":444,"./docs/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile/index.md":445,"./docs/How-to-best-use-the-Global-Control-Shortcuts-for-Mac/index.md":446,"./docs/How-to-clear-specific-values-from-your-browser's-local-storage/index.md":447,"./docs/How-to-clone-the-FreeCodeCamp-website-on-a-Windows-pc/index.md":448,"./docs/How-to-create-a-Campsite-for-your-city/index.md":449,"./docs/How-to-deploy-a-website-without-writing-any-code-at-all/index.md":450,"./docs/How-to-get-help-when-you-get-stuck/index.md":451,"./docs/How-to-get-the-MEAN-stack-running-locally-on-OSX/index.md":452,"./docs/How-to-install-Screenhero/index.md":453,"./docs/How-to-know-who-is-in-charge-of-your-Campsite-on-Facebook/index.md":454,"./docs/How-to-share-your-workspace-selfie-with-FreeCodeCamp-on-instagram/index.md":455,"./docs/How-to-start-when-you-are-stuck-(I)/index.md":456,"./docs/How-to-start-when-you-are-stuck-(II)/index.md":457,"./docs/How-to-start-when-you-are-stuck-(III)/index.md":458,"./docs/How-to-use-the-Free-Code-Camp-Wiki/index.md":459,"./docs/How-you-can-get-to-Inbox-Zero-with-Gmail-shortcuts/index.md":460,"./docs/How-you-can-help-to-stimulate-your-city's-Campsite-on-Facebook/index.md":461,"./docs/How-you-can-reach-the-Free-Code-Camp-team-to-interview-them-for-your-publication/index.md":462,"./docs/Html-and-CSS-Cheat-Sheet/index.md":463,"./docs/IIFE/index.md":464,"./docs/If-Free-Code-Camp-is-free,-how-does-it-make-money/index.md":465,"./docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps/index.md":466,"./docs/JS-Regex-Resources/index.md":467,"./docs/JS-Resources/index.md":468,"./docs/JavaScript-Truth-Table/index.md":469,"./docs/Know-it-all/index.md":470,"./docs/Learn-the-basics-of-the-VIM-editor/index.md":471,"./docs/Linking-Your-Account-with-GitHub/index.md":472,"./docs/List-of-Free-Code-Camp-city-based-Campsites/index.md":473,"./docs/Loop-Protect/index.md":474,"./docs/Map/index.md":475,"./docs/Math.max/index.md":476,"./docs/Math.min/index.md":477,"./docs/Math.pow/index.md":478,"./docs/More-useful-APIs/index.md":479,"./docs/Mostaganem/index.md":480,"./docs/Object.getOwnPropertyNames/index.md":481,"./docs/Object.keys/index.md":482,"./docs/October-2015-Improvements/index.md":483,"./docs/October-2015-Summit-Agenda/index.md":484,"./docs/Official-Free-Code-Camp-Chat-Rooms/index.md":485,"./docs/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits/index.md":486,"./docs/Pair-programming-and-why-it-is-special/index.md":487,"./docs/Programming-Fundamental/index.md":488,"./docs/Promises/index.md":489,"./docs/Pseudoclassical-class-definition-OOp/index.md":490,"./docs/Pull-Request-Contribute/index.md":491,"./docs/Quick-tip-keep-data-in-sync/index.md":492,"./docs/RTFM/index.md":493,"./docs/Refresh-Your-Browser-Cache/index.md":494,"./docs/Registering-your-Nonprofit-to-Raise-Donations-through-Free-Code-Camp-Commit/index.md":495,"./docs/Restrict-a-page-to-authenticated-users/index.md":496,"./docs/Saturday-Summit-August-2015/index.md":497,"./docs/Saturday-Summit-November-2015/index.md":498,"./docs/Saturday-Summit-October-2015/index.md":499,"./docs/Searching-for-Your-Issue-on-Github/index.md":500,"./docs/Seed-data/index.md":501,"./docs/Select-Issues-for-Contributing-Using-Labels/index.md":502,"./docs/Site-Improvements-August-2015/index.md":503,"./docs/Site-Improvements-October-2015/index.md":504,"./docs/Slack/index.md":505,"./docs/Spanish-Translation-Terminology/index.md":506,"./docs/Start-Here/index.md":507,"./docs/Streaks/index.md":508,"./docs/Stream-Your-Coding-Sessions-on-Twitch.tv/index.md":509,"./docs/String.fromCharCode/index.md":510,"./docs/String.length/index.md":511,"./docs/Test-Me/index.md":512,"./docs/Test-issue-with-Bonfire-truncate-a-string/index.md":513,"./docs/The-main-advantages-of-Free-Code-Camp/index.md":514,"./docs/Tips-on-How-To-Become-A-Good-Pair-Programmer/index.md":515,"./docs/Translating-Free-Code-Camp-into-Your-Native-Language/index.md":516,"./docs/Twitch/index.md":517,"./docs/Using-Github-Pages-for-your-front-end-development-projects/index.md":518,"./docs/Vadodara/index.md":519,"./docs/Waypoint-Access-Array-Data-with-Indexes/index.md":520,"./docs/Waypoint-Add-Alt-Text-to-an-Image-for-Accessibility/index.md":521,"./docs/Waypoint-Add-Borders-Around-your-Elements/index.md":522,"./docs/Waypoint-Add-Different-Margins-to-Each-Side-of-an-Element/index.md":523,"./docs/Waypoint-Add-Different-Padding-to-Each-Side-of-an-Element/index.md":524,"./docs/Waypoint-Add-Elements-within-your-Bootstrap-Wells/index.md":525,"./docs/Waypoint-Add-Font-Awesome-Icons-to-all-of-our-Buttons/index.md":526,"./docs/Waypoint-Add-Font-Awesome-Icons-to-our-Buttons/index.md":527,"./docs/Waypoint-Add-ID-Attributes-to-Bootstrap-Elements/index.md":528,"./docs/Waypoint-Add-Images-to-your-Website/index.md":529,"./docs/Waypoint-Add-New-Properties-to-a-JavaScript-Object/index.md":530,"./docs/Waypoint-Add-Placeholder-Text-to-a-Text-Field/index.md":531,"./docs/Waypoint-Add-Rounded-Corners-with-a-Border-Radius/index.md":532,"./docs/Waypoint-Add-Two-Numbers-with-JavaScript/index.md":533,"./docs/Waypoint-Add-a-Negative-Margin-to-an-Element/index.md":534,"./docs/Waypoint-Add-a-Submit-Button-to-a-Form/index.md":535,"./docs/Waypoint-Add-your-JavaScript-Slot-Machine-Slots/index.md":536,"./docs/Waypoint-Adjust-the-Margin-of-an-Element/index.md":537,"./docs/Waypoint-Adjusting-the-Padding-of-an-Element/index.md":538,"./docs/Waypoint-Apply-the-Default-Bootstrap-Button-Style/index.md":539,"./docs/Waypoint-Bring-your-JavaScript-Slot-Machine-to-Life/index.md":540,"./docs/Waypoint-Build-JavaScript-Objects/index.md":541,"./docs/Waypoint-Call-out-Optional-Actions-with-Button-Info/index.md":542,"./docs/Waypoint-Center-Text-with-Bootstrap/index.md":543,"./docs/Waypoint-Change-Text-Inside-an-Element-Using-jQuery/index.md":544,"./docs/Waypoint-Change-Text-with-Click-Events/index.md":545,"./docs/Waypoint-Change-the-CSS-of-an-Element-Using-jQuery/index.md":546,"./docs/Waypoint-Change-the-Color-of-Text/index.md":547,"./docs/Waypoint-Change-the-Font-Size-of-an-Element/index.md":548,"./docs/Waypoint-Check-Radio-Buttons-and-Checkboxes-by-Default/index.md":549,"./docs/Waypoint-Check-the-Length-Property-of-a-String-Variable/index.md":550,"./docs/Waypoint-Clone-an-Element-Using-jQuery/index.md":551,"./docs/Waypoint-Comment-out-HTML/index.md":552,"./docs/Waypoint-Comment-your-JavaScript-Code/index.md":553,"./docs/Waypoint-Concatenate-Strings-with-.concat/index.md":554,"./docs/Waypoint-Condense-arrays-with-reduce/index.md":555,"./docs/Waypoint-Construct-JavaScript-Objects-with-Functions/index.md":556,"./docs/Waypoint-Convert-JSON-Data-to-HTML/index.md":557,"./docs/Waypoint-Count-Backwards-With-a-For-Loop/index.md":558,"./docs/Waypoint-Create-Bootstrap-Wells/index.md":559,"./docs/Waypoint-Create-Decimal-Numbers-with-JavaScript/index.md":560,"./docs/Waypoint-Create-a-Block-Element-Bootstrap-Button/index.md":561,"./docs/Waypoint-Create-a-Bootstrap-Button/index.md":562,"./docs/Waypoint-Create-a-Bootstrap-Headline/index.md":563,"./docs/Waypoint-Create-a-Bootstrap-Row/index.md":564,"./docs/Waypoint-Create-a-Bulleted-Unordered-List/index.md":565,"./docs/Waypoint-Create-a-Class-to-Target-with-jQuery-Selectors/index.md":566,"./docs/Waypoint-Create-a-Custom-Heading/index.md":567,"./docs/Waypoint-Create-a-Form-Element/index.md":568,"./docs/Waypoint-Create-a-JavaScript-Slot-Machine/index.md":569,"./docs/Waypoint-Create-a-Set-of-Checkboxes/index.md":570,"./docs/Waypoint-Create-a-Set-of-Radio-Buttons/index.md":571,"./docs/Waypoint-Create-a-Text-Field/index.md":572,"./docs/Waypoint-Create-an-Ordered-List/index.md":573,"./docs/Waypoint-Declare-JavaScript-Objects-as-Variables/index.md":574,"./docs/Waypoint-Declare-JavaScript-Variables/index.md":575,"./docs/Waypoint-Declare-String-Variables/index.md":576,"./docs/Waypoint-Delete-HTML-Elements/index.md":577,"./docs/Waypoint-Delete-Properties-from-a-JavaScript-Object/index.md":578,"./docs/Waypoint-Delete-your-jQuery-Functions/index.md":579,"./docs/Waypoint-Disable-an-Element-Using-jQuery/index.md":580,"./docs/Waypoint-Ditch-Custom-CSS-for-Bootstrap/index.md":581,"./docs/Waypoint-Divide-One-Number-by-Another-with-JavaScript/index.md":582,"./docs/Waypoint-Fill-in-the-Blank-with-Placeholder-Text/index.md":583,"./docs/Waypoint-Filter-Arrays-with-filter/index.md":584,"./docs/Waypoint-Find-Numbers-with-Regular-Expressions/index.md":585,"./docs/Waypoint-Find-White-Space-with-Regular-Expressions/index.md":586,"./docs/Waypoint-Generate-Random-Fractions-with-JavaScript/index.md":587,"./docs/Waypoint-Generate-Random-Whole-Numbers-with-JavaScript/index.md":588,"./docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range/index.md":589,"./docs/Waypoint-Get-JSON-with-the-jQuery-getJSON-Method/index.md":590,"./docs/Waypoint-Give-Each-Element-a-Unique-ID/index.md":591,"./docs/Waypoint-Give-a-Background-Color-to-a-Div-Element/index.md":592,"./docs/Waypoint-Give-your-JavaScript-Slot-Machine-some-stylish-images/index.md":593,"./docs/Waypoint-Headline-with-the-h2-Element/index.md":594,"./docs/Waypoint-House-our-page-within-a-Bootstrap-Container-Fluid-Div/index.md":595,"./docs/Waypoint-Import-a-Google-Font/index.md":596,"./docs/Waypoint-Inform-with-the-Paragraph-Element/index.md":597,"./docs/Waypoint-Inherit-Styles-from-the-Body-Element/index.md":598,"./docs/Waypoint-Invert-Regular-Expression-Matches-with-JavaScript/index.md":599,"./docs/Waypoint-Iterate-Odd-Numbers-With-a-For-Loop/index.md":600,"./docs/Waypoint-Iterate-over-Arrays-with-map/index.md":601,"./docs/Waypoint-Iterate-with-JavaScript-For-Loops/index.md":602,"./docs/Waypoint-Iterate-with-JavaScript-While-Loops/index.md":603,"./docs/Waypoint-Join-Strings-with-.join/index.md":604,"./docs/Waypoint-Label-Bootstrap-Buttons/index.md":605,"./docs/Waypoint-Label-Bootstrap-Wells/index.md":606,"./docs/Waypoint-Learn-how-Script-Tags-and-Document-Ready-Work/index.md":607,"./docs/Waypoint-Line-up-Form-Elements-Responsively-with-Bootstrap/index.md":608,"./docs/Waypoint-Link-to-External-Pages-with-Anchor-Elements/index.md":609,"./docs/Waypoint-Make-Circular-Images-with-a-Border-Radius/index.md":610,"./docs/Waypoint-Make-Dead-Links-using-the-Hash-Symbol/index.md":611,"./docs/Waypoint-Make-Images-Mobile-Responsive/index.md":612,"./docs/Waypoint-Make-Instances-of-Objects-with-a-Constructor-Function/index.md":613,"./docs/Waypoint-Make-Object-Properties-Private/index.md":614,"./docs/Waypoint-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor/index.md":615,"./docs/Waypoint-Manipulate-Arrays-With-pop()/index.md":616,"./docs/Waypoint-Manipulate-Arrays-With-push()/index.md":617,"./docs/Waypoint-Manipulate-Arrays-With-shift()/index.md":618,"./docs/Waypoint-Manipulate-Arrays-With-unshift()/index.md":619,"./docs/Waypoint-Manipulate-JavaScript-Objects/index.md":620,"./docs/Waypoint-Modify-Array-Data-With-Indexes/index.md":621,"./docs/Waypoint-Multiply-Two-Numbers-with-JavaScript/index.md":622,"./docs/Waypoint-Nest-Many-Elements-within-a-Single-Div-Element/index.md":623,"./docs/Waypoint-Nest-an-Anchor-Element-within-a-Paragraph/index.md":624,"./docs/Waypoint-Nest-one-Array-within-Another-Array/index.md":625,"./docs/Waypoint-Override-All-Other-Styles-by-using-Important/index.md":626,"./docs/Waypoint-Override-Class-Declarations-by-Styling-ID-Attributes/index.md":627,"./docs/Waypoint-Override-Class-Declarations-with-Inline-Styles/index.md":628,"./docs/Waypoint-Override-Styles-in-Subsequent-CSS/index.md":629,"./docs/Waypoint-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript/index.md":630,"./docs/Waypoint-Prioritize-One-Style-Over-Another/index.md":631,"./docs/Waypoint-Remove-Classes-from-an-element-with-jQuery/index.md":632,"./docs/Waypoint-Remove-an-Element-Using-jQuery/index.md":633,"./docs/Waypoint-Render-Images-from-Data-Sources/index.md":634,"./docs/Waypoint-Responsively-Style-Checkboxes/index.md":635,"./docs/Waypoint-Responsively-Style-Radio-Buttons/index.md":636,"./docs/Waypoint-Reverse-Arrays-with-reverse/index.md":637,"./docs/Waypoint-Save-your-Code-Revisions-Forever-with-Git/index.md":638,"./docs/Waypoint-Say-Hello-to-HTML-Elements/index.md":639,"./docs/Waypoint-Set-the-Font-Family-of-an-Element/index.md":640,"./docs/Waypoint-Set-the-ID-of-an-Element/index.md":641,"./docs/Waypoint-Sift-through-Text-with-Regular-Expressions/index.md":642,"./docs/Waypoint-Size-your-Images/index.md":643,"./docs/Waypoint-Sort-Arrays-with-sort/index.md":644,"./docs/Waypoint-Specify-How-Fonts-Should-Degrade/index.md":645,"./docs/Waypoint-Split-Strings-with-split/index.md":646,"./docs/Waypoint-Split-your-Bootstrap-Row/index.md":647,"./docs/Waypoint-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays/index.md":648,"./docs/Waypoint-Style-Multiple-Elements-with-a-CSS-Class/index.md":649,"./docs/Waypoint-Style-Text-Inputs-as-Form-Controls/index.md":650,"./docs/Waypoint-Style-the-HTML-Body-Element/index.md":651,"./docs/Waypoint-Subtract-One-Number-from-Another-with-JavaScript/index.md":652,"./docs/Waypoint-Target-Elements-by-Class-Using-jQuery/index.md":653,"./docs/Waypoint-Target-Elements-by-ID-Using-jQuery/index.md":654,"./docs/Waypoint-Target-Even-Numbered-Elements-Using-jQuery/index.md":655,"./docs/Waypoint-Target-HTML-Elements-with-Selectors-Using-jQuery/index.md":656,"./docs/Waypoint-Target-a-Specific-Child-of-an-Element-Using-jQuery/index.md":657,"./docs/Waypoint-Target-the-Children-of-an-Element-Using-jQuery/index.md":658,"./docs/Waypoint-Target-the-Parent-of-an-Element-Using-jQuery/index.md":659,"./docs/Waypoint-Target-the-same-element-with-multiple-jQuery-Selectors/index.md":660,"./docs/Waypoint-Taste-the-Bootstrap-Button-Color-Rainbow/index.md":661,"./docs/Waypoint-Trigger-Click Events-with-jQuery/index.md":662,"./docs/Waypoint-Turn-an-Image-into-a-Link/index.md":663,"./docs/Waypoint-Uncomment-HTML/index.md":664,"./docs/Waypoint-Understand-Boolean-Values/index.md":665,"./docs/Waypoint-Use-Abbreviated-Hex-Code/index.md":666,"./docs/Waypoint-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String/index.md":667,"./docs/Waypoint-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String/index.md":668,"./docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String/index.md":669,"./docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String/index.md":670,"./docs/Waypoint-Use-CSS-Selectors-to-Style-Elements/index.md":671,"./docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element/index.md":672,"./docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element/index.md":673,"./docs/Waypoint-Use-Comments-to-Clarify-Code/index.md":674,"./docs/Waypoint-Use-Conditional-Logic-with-If-Else-Statements/index.md":675,"./docs/Waypoint-Use-HTML5-to-Require-a-Field/index.md":676,"./docs/Waypoint-Use-Hex-Code-for-Specific-Colors/index.md":677,"./docs/Waypoint-Use-Hex-Code-for-Specific-Shades-of-Gray/index.md":678,"./docs/Waypoint-Use-Hex-Code-to-Color-Elements-Blue/index.md":679,"./docs/Waypoint-Use-Hex-Code-to-Color-Elements-Gray/index.md":680,"./docs/Waypoint-Use-Hex-Code-to-Color-Elements-Green/index.md":681,"./docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red/index.md":682,"./docs/Waypoint-Use-Hex-Code-to-Color-Elements-White/index.md":683,"./docs/Waypoint-Use-Hex-Code-to-Mix-Colors/index.md":684,"./docs/Waypoint-Use-RGB-to-Color-Elements-Blue/index.md":685,"./docs/Waypoint-Use-RGB-to-Color-Elements-Gray/index.md":686,"./docs/Waypoint-Use-RGB-to-Color-Elements-Green/index.md":687,"./docs/Waypoint-Use-RGB-to-Color-Elements-Red/index.md":688,"./docs/Waypoint-Use-RGB-to-Color-Elements-White/index.md":689,"./docs/Waypoint-Use-RGB-to-Mix-Colors/index.md":690,"./docs/Waypoint-Use-RGB-values-to-Color-Elements/index.md":691,"./docs/Waypoint-Use-Responsive-Design-with-Bootstrap-Fluid-Containers/index.md":692,"./docs/Waypoint-Use-Spans-for-Inline-Elements/index.md":693,"./docs/Waypoint-Use-a-CSS-Class-to-Style-an-Element/index.md":694,"./docs/Waypoint-Use-an-ID-Attribute-to-Style-an-Element/index.md":695,"./docs/Waypoint-Use-appendTo-to-Move-Elements-with-jQuery/index.md":696,"./docs/Waypoint-Use-jQuery-to-Modify-the-Entire-Page/index.md":697,"./docs/Waypoint-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side/index.md":698,"./docs/Waypoint-Use-the-Javascript-Console/index.md":699,"./docs/Waypoint-Using-typeof/index.md":700,"./docs/Waypoint-Warn-your-Users-of-a-Dangerous-Action/index.md":701,"./docs/Waypoint-Write-Reusable-JavaScript-with-Functions/index.md":702,"./docs/Web-Resources/index.md":703,"./docs/What-exactly-Free-Code-Camp-does/index.md":704,"./docs/What-pair-programming-is-and-why-it-is-special/index.md":705,"./docs/What-the-main-advantages-of-Free-Code-Camp-are/index.md":706,"./docs/What-the-style-guide-for-Bonfires-is/index.md":707,"./docs/What-to-do-if-you-speak-a-language-that-Free-Code-Camp-does-not-yet-support/index.md":708,"./docs/What-you-will-learn,-and-in-what-sequence-you-will-learn-it/index.md":709,"./docs/Why-You-Should-Try-Pair-Programming/index.md":710,"./docs/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python/index.md":711,"./docs/Why-you-need-Free-Code-Camp/index.md":712,"./docs/Wiki-Style-Guide/index.md":713,"./docs/World-Language-Chat-Rooms/index.md":714,"./docs/Write-and-Run-ES6-Code-in-Browser/index.md":715,"./docs/Writing-great-git-commit-message/index.md":716,"./docs/Zipline-Use-the-Twitchtv-JSON-API/index.md":717,"./docs/_template":718,"./docs/_template.jsx":718,"./docs/beta/index.md":719,"./docs/bf-bouncer/index.md":720,"./docs/bot-announce/index.md":721,"./docs/botdemo/index.md":722,"./docs/botideas/index.md":723,"./docs/botintro/index.md":724,"./docs/botpreso/index.md":725,"./docs/camperbot/index.md":726,"./docs/chai-assert/index.md":727,"./docs/chai-cheat/index.md":728,"./docs/chai/index.md":729,"./docs/code-case/index.md":730,"./docs/code-formatting/index.md":731,"./docs/css-selectors/index.md":732,"./docs/css/index.md":733,"./docs/dau/index.md":734,"./docs/debugging/index.md":735,"./docs/demo-trim/index.md":736,"./docs/emoji/index.md":737,"./docs/example/index.md":738,"./docs/git-merge/index.md":739,
"./docs/git-rebase/index.md":740,"./docs/global-variables/index.md":741,"./docs/good-code/index.md":742,"./docs/guide-to-basejumps/accessing-the-database-from-your-frontend/index.md":743,"./docs/guide-to-basejumps/backend-file-structure/index.md":744,"./docs/guide-to-basejumps/bonus-socketio/index.md":745,"./docs/guide-to-basejumps/creating-a-new-api-endpoint/index.md":746,"./docs/guide-to-basejumps/creating-a-new-directive/index.md":747,"./docs/guide-to-basejumps/creating-a-new-route/index.md":748,"./docs/guide-to-basejumps/dynamic-URLs-using-routeParams/index.md":749,"./docs/guide-to-basejumps/epilogue/index.md":750,"./docs/guide-to-basejumps/fixing-exports.update/index.md":751,"./docs/guide-to-basejumps/frontend-file-structure/index.md":752,"./docs/guide-to-basejumps/get-info-about-the-current-user/index.md":753,"./docs/guide-to-basejumps/grunt/index.md":754,"./docs/guide-to-basejumps/index.md":755,"./docs/guide-to-basejumps/isLoggedInAsync/index.md":756,"./docs/guide-to-basejumps/more-useful-apis/index.md":757,"./docs/guide-to-basejumps/quick-tip-keep-data-in-sync/index.md":758,"./docs/guide-to-basejumps/restrict-a-page-to-authenticated-users/index.md":759,"./docs/guide-to-basejumps/seed-data/index.md":760,"./docs/guide-to-basejumps/table-of-contents/index.md":761,"./docs/how-to-post-code/index.md":762,"./docs/html-elements/index.md":763,"./docs/index.md":764,"./docs/isLoggedInAsync/index.md":765,"./docs/jQuery/index.md":766,"./docs/js-Array-prototype-concat/index.md":767,"./docs/js-Array-prototype-every/index.md":768,"./docs/js-Array-prototype-filter/index.md":769,"./docs/js-Array-prototype-forEach/index.md":770,"./docs/js-Array-prototype-indexOf/index.md":771,"./docs/js-Array-prototype-join/index.md":772,"./docs/js-Array-prototype-lastIndexOf/index.md":773,"./docs/js-Array-prototype-map/index.md":774,"./docs/js-Array-prototype-pop/index.md":775,"./docs/js-Array-prototype-push/index.md":776,"./docs/js-Array-prototype-reduce/index.md":777,"./docs/js-Array-prototype-reverse/index.md":778,"./docs/js-Array-prototype-shift/index.md":779,"./docs/js-Array-prototype-slice/index.md":780,"./docs/js-Array-prototype-some/index.md":781,"./docs/js-Array-prototype-sort/index.md":782,"./docs/js-Array-prototype-splice/index.md":783,"./docs/js-Array-prototype-toString/index.md":784,"./docs/js-Boolean/index.md":785,"./docs/js-String-prototype-charAt/index.md":786,"./docs/js-String-prototype-charCodeAt/index.md":787,"./docs/js-String-prototype-concat/index.md":788,"./docs/js-String-prototype-indexOf/index.md":789,"./docs/js-String-prototype-lastindexOf/index.md":790,"./docs/js-String-prototype-match/index.md":791,"./docs/js-String-prototype-replace/index.md":792,"./docs/js-String-prototype-slice/index.md":793,"./docs/js-String-prototype-split/index.md":794,"./docs/js-String-prototype-substr/index.md":795,"./docs/js-String-prototype-substring/index.md":796,"./docs/js-String-prototype-toLowerCase/index.md":797,"./docs/js-String-prototype-toUpperCase/index.md":798,"./docs/js-arguments/index.md":799,"./docs/js-closures/index.md":800,"./docs/js-falsy/index.md":801,"./docs/js-for-in-loop/index.md":802,"./docs/js-for-loop/index.md":803,"./docs/js-for-of-loop/index.md":804,"./docs/js-functions/index.md":805,"./docs/js-immutable/index.md":806,"./docs/js-loops/index.md":807,"./docs/js-scope/index.md":808,"./docs/js-ternary/index.md":809,"./docs/js-truthy/index.md":810,"./docs/js-undefined/index.md":811,"./docs/jsonp/index.md":812,"./docs/latex/index.md":813,"./docs/michaelqlarson@gmail.com/index.md":814,"./docs/ooda/index.md":815,"./docs/parseInt/index.md":816,"./docs/staging/index.md":817,"./docs/testingjson/index.md":818,"./docs/topic/index.md":819,"./docs/triphop/index.md":820,"./docs/update/index.md":821,"./docs/video-demo/index.md":822,"./docs/video/index.md":823,"./docs/wat/index.md":824,"./docs/wiki-js-template/index.md":825,"./index.md":826};a.keys=function(){return Object.keys(o)},a.resolve=s,e.exports=a,a.id=285},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=t(2),o=a(s),r=t(155),i=t(287),l=t(318),p=a(l),c=t(319),d=a(c),h=t(256),u=(a(h),t(259)),m=t(264),f=a(m);t(326);var g=f["default"].rhythm,y=f["default"].fontSizeToPx;e.exports=o["default"].createClass({displayName:"exports",mixins:[r.State],render:function(){var e,n,t,a,s;return a=(0,p["default"])(this.props.config.headerColor,{contrast:5.5}),n=(0,d["default"])(this.props.config.headerColor).darken(9).hex(),e=(0,p["default"])(n,{contrast:7}),s=this.getRoutes().map(function(e){return e.path}),t=s.indexOf((0,u.link)("/docs/"))>=0,o["default"].createElement("div",null,o["default"].createElement("div",{style:{background:a.bg,color:a.fg,marginBottom:g(1.5)}},o["default"].createElement(i.Container,{style:{maxWidth:960,padding:""+g(.5),paddingBottom:""+g(.5)}},o["default"].createElement(i.Grid,{columns:12,style:{padding:g(.5)+" 0"}},o["default"].createElement(i.Span,{columns:4,style:{height:24}},o["default"].createElement(r.Link,{to:(0,u.link)("/"),style:{textDecoration:"none",color:a.fg,fontSize:y("25.5px").fontSize}},this.props.config.siteTitle)),o["default"].createElement(i.Span,{columns:8,last:!0},o["default"].createElement("a",{style:{"float":"right",color:a.fg,textDecoration:"none",marginLeft:g(.5)},href:"https://github.com/gatsbyjs/gatsby"},"Github"),o["default"].createElement(r.Link,{to:(0,u.link)("/docs/"),style:{background:t?e.bg:a.bg,color:t?e.fg:a.fg,"float":"right",textDecoration:"none",paddingLeft:g(.5),paddingRight:g(.5),paddingBottom:g(1),marginBottom:g(-1),paddingTop:g(1),marginTop:g(-1)}},"Documentation"))))),o["default"].createElement(i.Container,{style:{maxWidth:960,padding:g(1)+" "+g(.5),paddingTop:0}},o["default"].createElement(r.RouteHandler,this.props)))}})},function(e,n,t){n.Container=t(288),n.Grid=t(289),n.Breakpoint=t(308),n.Span=t(316)},function(e,n,t){var a,s;a=t(2),s=t(39),e.exports=a.createClass({displayName:"Container",render:function(){var e,n;return e={maxWidth:"960px",marginLeft:"auto",marginRight:"auto"},n=s(e,this.props.style),a.createElement("div",a.__spread({},this.props,{style:n}),this.props.children,a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){var a;a=t(290),e.exports=a.createClass({displayName:"Grid",propTypes:{columns:a.PropTypes.number,gutterRatio:a.PropTypes.number},getDefaultProps:function(){return{columns:12,gutterRatio:.25}},renderChildren:function(){return a.Children.map(this.props.children,function(e){return function(n){var t,s;return"Breakpoint"===(t=null!=(s=n.type)?s.displayName:void 0)||"Span"===t?a.addons.cloneWithProps(n,{context:{columns:e.props.columns,gutterRatio:e.props.gutterRatio}}):n}}(this))},render:function(){return a.createElement("div",a.__spread({},this.props),this.renderChildren(),a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){"use strict";var a=t(25);a(!1,"require('react/addons') is deprecated. Access using require('react-addons-{addon}') instead."),e.exports=t(291)},function(e,n,t){"use strict";var a=t(292),s=t(3),o=t(295),r=t(297),i=t(303),l=t(298),p=t(54),c=t(304),d=t(296),h=t(307);t(25);s.addons={CSSTransitionGroup:r,LinkedStateMixin:a,PureRenderMixin:o,TransitionGroup:l,batchedUpdates:function(){return p.batchedUpdates.apply(this,arguments)},cloneWithProps:c,createFragment:i.create,shallowCompare:d,update:h},e.exports=s},function(e,n,t){"use strict";var a=t(293),s=t(294),o={linkState:function(e){return new a(this.state[e],s.createStateKeySetter(this,e))}};e.exports=o},function(e,n,t){"use strict";function a(e,n){this.value=e,this.requestChange=n}function s(e){var n={value:"undefined"==typeof e?o.PropTypes.any.isRequired:e.isRequired,requestChange:o.PropTypes.func.isRequired};return o.PropTypes.shape(n)}var o=t(3);a.PropTypes={link:s},e.exports=a},function(e,n){"use strict";function t(e,n){var t={};return function(a){t[n]=a,e.setState(t)}}var a={createStateSetter:function(e,n){return function(t,a,s,o,r,i){var l=n.call(e,t,a,s,o,r,i);l&&e.setState(l)}},createStateKeySetter:function(e,n){var a=e.__keySetters||(e.__keySetters={});return a[n]||(a[n]=t(e,n))}};a.Mixin={createStateSetter:function(e){return a.createStateSetter(this,e)},createStateKeySetter:function(e){return a.createStateKeySetter(this,e)}},e.exports=a},function(e,n,t){"use strict";var a=t(296),s={shouldComponentUpdate:function(e,n){return a(this,e,n)}};e.exports=s},function(e,n,t){"use strict";function a(e,n,t){return!s(e.props,n)||!s(e.state,t)}var s=t(117);e.exports=a},function(e,n,t){"use strict";function a(e){var n="transition"+e+"Timeout",t="transition"+e;return function(e){if(e[t]){if(null==e[n])return new Error(n+" wasn't supplied to ReactCSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!=typeof e[n])return new Error(n+" must be a number (in milliseconds)")}}}var s=t(3),o=t(39),r=t(298),i=t(300),l=s.createClass({displayName:"ReactCSSTransitionGroup",propTypes:{transitionName:i.propTypes.name,transitionAppear:s.PropTypes.bool,transitionEnter:s.PropTypes.bool,transitionLeave:s.PropTypes.bool,transitionAppearTimeout:a("Appear"),transitionEnterTimeout:a("Enter"),transitionLeaveTimeout:a("Leave")},getDefaultProps:function(){return{transitionAppear:!1,transitionEnter:!0,transitionLeave:!0}},_wrapChild:function(e){return s.createElement(i,{name:this.props.transitionName,appear:this.props.transitionAppear,enter:this.props.transitionEnter,leave:this.props.transitionLeave,appearTimeout:this.props.transitionAppearTimeout,enterTimeout:this.props.transitionEnterTimeout,leaveTimeout:this.props.transitionLeaveTimeout},e)},render:function(){return s.createElement(r,o({},this.props,{childFactory:this._wrapChild}))}});e.exports=l},function(e,n,t){"use strict";var a=t(3),s=t(299),o=t(39),r=t(15),i=a.createClass({displayName:"ReactTransitionGroup",propTypes:{component:a.PropTypes.any,childFactory:a.PropTypes.func},getDefaultProps:function(){return{component:"span",childFactory:r.thatReturnsArgument}},getInitialState:function(){return{children:s.getChildMapping(this.props.children)}},componentWillMount:function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},componentDidMount:function(){var e=this.state.children;for(var n in e)e[n]&&this.performAppear(n)},componentWillReceiveProps:function(e){var n=s.getChildMapping(e.children),t=this.state.children;this.setState({children:s.mergeChildMappings(t,n)});var a;for(a in n){var o=t&&t.hasOwnProperty(a);!n[a]||o||this.currentlyTransitioningKeys[a]||this.keysToEnter.push(a)}for(a in t){var r=n&&n.hasOwnProperty(a);!t[a]||r||this.currentlyTransitioningKeys[a]||this.keysToLeave.push(a)}},componentDidUpdate:function(){var e=this.keysToEnter;this.keysToEnter=[],e.forEach(this.performEnter);var n=this.keysToLeave;this.keysToLeave=[],n.forEach(this.performLeave)},performAppear:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillAppear?n.componentWillAppear(this._handleDoneAppearing.bind(this,e)):this._handleDoneAppearing(e)},_handleDoneAppearing:function(e){var n=this.refs[e];n.componentDidAppear&&n.componentDidAppear(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)||this.performLeave(e)},performEnter:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillEnter?n.componentWillEnter(this._handleDoneEntering.bind(this,e)):this._handleDoneEntering(e)},_handleDoneEntering:function(e){var n=this.refs[e];n.componentDidEnter&&n.componentDidEnter(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)||this.performLeave(e)},performLeave:function(e){this.currentlyTransitioningKeys[e]=!0;var n=this.refs[e];n.componentWillLeave?n.componentWillLeave(this._handleDoneLeaving.bind(this,e)):this._handleDoneLeaving(e)},_handleDoneLeaving:function(e){var n=this.refs[e];n.componentDidLeave&&n.componentDidLeave(),delete this.currentlyTransitioningKeys[e];var t=s.getChildMapping(this.props.children);t&&t.hasOwnProperty(e)?this.performEnter(e):this.setState(function(n){var t=o({},n.children);return delete t[e],{children:t}})},render:function(){var e=[];for(var n in this.state.children){var t=this.state.children[n];t&&e.push(a.cloneElement(this.props.childFactory(t),{ref:n,key:n}))}return a.createElement(this.props.component,this.props,e)}});e.exports=i},function(e,n,t){"use strict";var a=t(116),s={getChildMapping:function(e){return e?a(e):e},mergeChildMappings:function(e,n){function t(t){return n.hasOwnProperty(t)?n[t]:e[t]}e=e||{},n=n||{};var a={},s=[];for(var o in e)n.hasOwnProperty(o)?s.length&&(a[o]=s,s=[]):s.push(o);var r,i={};for(var l in n){if(a.hasOwnProperty(l))for(r=0;r<a[l].length;r++){var p=a[l][r];i[a[l][r]]=t(p)}i[l]=t(l)}for(r=0;r<s.length;r++)i[s[r]]=t(s[r]);return i}};e.exports=s},function(e,n,t){"use strict";var a=t(3),s=t(4),o=t(301),r=t(302),i=t(152),l=17,p=a.createClass({displayName:"ReactCSSTransitionGroupChild",propTypes:{name:a.PropTypes.oneOfType([a.PropTypes.string,a.PropTypes.shape({enter:a.PropTypes.string,leave:a.PropTypes.string,active:a.PropTypes.string}),a.PropTypes.shape({enter:a.PropTypes.string,enterActive:a.PropTypes.string,leave:a.PropTypes.string,leaveActive:a.PropTypes.string,appear:a.PropTypes.string,appearActive:a.PropTypes.string})]).isRequired,appear:a.PropTypes.bool,enter:a.PropTypes.bool,leave:a.PropTypes.bool,appearTimeout:a.PropTypes.number,enterTimeout:a.PropTypes.number,leaveTimeout:a.PropTypes.number},transition:function(e,n,t){var a=s.findDOMNode(this);if(!a)return void(n&&n());var i=this.props.name[e]||this.props.name+"-"+e,l=this.props.name[e+"Active"]||i+"-active",p=null,c=function(e){e&&e.target!==a||(clearTimeout(p),o.removeClass(a,i),o.removeClass(a,l),r.removeEndEventListener(a,c),n&&n())};o.addClass(a,i),this.queueClass(l),t?(p=setTimeout(c,t),this.transitionTimeouts.push(p)):r.addEndEventListener(a,c)},queueClass:function(e){this.classNameQueue.push(e),this.timeout||(this.timeout=setTimeout(this.flushClassNameQueue,l))},flushClassNameQueue:function(){this.isMounted()&&this.classNameQueue.forEach(o.addClass.bind(o,s.findDOMNode(this))),this.classNameQueue.length=0,this.timeout=null},componentWillMount:function(){this.classNameQueue=[],this.transitionTimeouts=[]},componentWillUnmount:function(){this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)})},componentWillAppear:function(e){this.props.appear?this.transition("appear",e,this.props.appearTimeout):e()},componentWillEnter:function(e){this.props.enter?this.transition("enter",e,this.props.enterTimeout):e()},componentWillLeave:function(e){this.props.leave?this.transition("leave",e,this.props.leaveTimeout):e()},render:function(){return i(this.props.children)}});e.exports=p},function(e,n,t){"use strict";var a=t(13),s={addClass:function(e,n){return/\s/.test(n)?a(!1):void 0,n&&(e.classList?e.classList.add(n):s.hasClass(e,n)||(e.className=e.className+" "+n)),e},removeClass:function(e,n){return/\s/.test(n)?a(!1):void 0,n&&(e.classList?e.classList.remove(n):s.hasClass(e,n)&&(e.className=e.className.replace(new RegExp("(^|\\s)"+n+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,""))),e},conditionClass:function(e,n,t){return(t?s.addClass:s.removeClass)(e,n)},hasClass:function(e,n){return/\s/.test(n)?a(!1):void 0,e.classList?!!n&&e.classList.contains(n):(" "+e.className+" ").indexOf(" "+n+" ")>-1}};e.exports=s},function(e,n,t){"use strict";function a(){var e=document.createElement("div"),n=e.style;"AnimationEvent"in window||delete i.animationend.animation,"TransitionEvent"in window||delete i.transitionend.transition;for(var t in i){var a=i[t];for(var s in a)if(s in n){l.push(a[s]);break}}}function s(e,n,t){e.addEventListener(n,t,!1)}function o(e,n,t){e.removeEventListener(n,t,!1)}var r=t(9),i={transitionend:{transition:"transitionend",WebkitTransition:"webkitTransitionEnd",MozTransition:"mozTransitionEnd",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd"},animationend:{animation:"animationend",WebkitAnimation:"webkitAnimationEnd",MozAnimation:"mozAnimationEnd",OAnimation:"oAnimationEnd",msAnimation:"MSAnimationEnd"}},l=[];r.canUseDOM&&a();var p={addEndEventListener:function(e,n){return 0===l.length?void window.setTimeout(n,0):void l.forEach(function(t){s(e,t,n)})},removeEndEventListener:function(e,n){0!==l.length&&l.forEach(function(t){o(e,t,n)})}};e.exports=p},function(e,n,t){"use strict";var a=t(110),s=t(42),o=t(15),r=t(13),i=(t(25),{create:function(e){if("object"!=typeof e||!e||Array.isArray(e))return e;if(s.isValidElement(e))return e;1===e.nodeType?r(!1):void 0;var n=[];for(var t in e)a.mapIntoWithKeyPrefixInternal(e[t],n,t,o.thatReturnsArgument);return n}});e.exports=i},function(e,n,t){"use strict";function a(e,n){var t=o.mergeProps(n,e.props);return!t.hasOwnProperty(i)&&e.props.hasOwnProperty(i)&&(t.children=e.props.children),s.createElement(e.type,t)}var s=t(42),o=t(305),r=t(79),i=(t(25),r({children:null}));e.exports=a},function(e,n,t){"use strict";function a(e){return function(n,t,a){n.hasOwnProperty(t)?n[t]=e(n[t],a):n[t]=a}}function s(e,n){for(var t in n)if(n.hasOwnProperty(t)){var a=p[t];a&&p.hasOwnProperty(t)?a(e,t,n[t]):e.hasOwnProperty(t)||(e[t]=n[t])}return e}var o=t(39),r=t(15),i=t(306),l=a(function(e,n){return o({},n,e)}),p={children:r,className:a(i),style:l},c={mergeProps:function(e,n){return s(o({},e),n)}};e.exports=c},function(e,n){"use strict";function t(e){e||(e="");var n,t=arguments.length;if(t>1)for(var a=1;t>a;a++)n=arguments[a],n&&(e=(e?e+" ":"")+n);return e}e.exports=t},function(e,n,t){"use strict";function a(e){return Array.isArray(e)?e.concat():e&&"object"==typeof e?r(new e.constructor,e):e}function s(e,n,t){Array.isArray(e)?void 0:l(!1);var a=n[t];Array.isArray(a)?void 0:l(!1)}function o(e,n){if("object"!=typeof n?l(!1):void 0,p.call(n,u))return 1!==Object.keys(n).length?l(!1):void 0,n[u];var t=a(e);if(p.call(n,m)){var i=n[m];i&&"object"==typeof i?void 0:l(!1),t&&"object"==typeof t?void 0:l(!1),r(t,n[m])}p.call(n,c)&&(s(e,n,c),n[c].forEach(function(e){t.push(e)})),p.call(n,d)&&(s(e,n,d),n[d].forEach(function(e){t.unshift(e)})),p.call(n,h)&&(Array.isArray(e)?void 0:l(!1),Array.isArray(n[h])?void 0:l(!1),n[h].forEach(function(e){Array.isArray(e)?void 0:l(!1),t.splice.apply(t,e)})),p.call(n,f)&&("function"!=typeof n[f]?l(!1):void 0,t=n[f](t));for(var g in n)y.hasOwnProperty(g)&&y[g]||(t[g]=o(e[g],n[g]));return t}var r=t(39),i=t(79),l=t(13),p={}.hasOwnProperty,c=i({$push:null}),d=i({$unshift:null}),h=i({$splice:null}),u=i({$set:null}),m=i({$merge:null}),f=i({$apply:null}),g=[c,d,h,u,m,f],y={};g.forEach(function(e){y[e]=!0}),e.exports=o},function(e,n,t){var a,s,o,r,i;r=t(2),i=t(309),o=t(311),a=r.createClass({displayName:"Breakpoint",mixins:[i],propTypes:{minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{minWidth:0,maxWidth:1e21}},renderChildren:function(){return r.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=(t=n.type)?t.displayName:void 0)?r.addons.cloneWithProps(n,{context:e.props.context}):n}}(this))},render:function(){var e;return this.state.componentWidth&&this.props.minWidth<=(e=this.state.componentWidth)&&e<this.props.maxWidth?r.createElement("div",r.__spread({},this.props),this.renderChildren()):r.createElement("div",null)}}),s=r.createClass({displayName:"Breakpoint",mixins:[o],propTypes:{minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{minWidth:0,maxWidth:1e21}},renderChildren:function(){return r.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=(t=n.type)?t.displayName:void 0)?r.cloneElement(n,{context:e.props.context}):n}}(this))},render:function(){var e;return this.state.pageWidth&&this.props.minWidth<=(e=this.state.pageWidth)&&e<this.props.maxWidth?r.createElement("div",r.__spread({},this.props),this.renderChildren()):r.createElement("div",null)}}),e.exports=r.createClass({displayName:"Breakpoint",propTypes:{widthMethod:r.PropTypes.string.isRequired,minWidth:r.PropTypes.number,maxWidth:r.PropTypes.number},getDefaultProps:function(){return{widthMethod:"pageWidth"}},render:function(){return"pageWidth"===this.props.widthMethod?r.createElement(s,r.__spread({},this.props)):"componentWidth"===this.props.widthMethod?r.createElement(a,r.__spread({},this.props)):void 0}})},function(e,n,t){var a=t(310);e.exports={getInitialState:function(){return void 0!==this.props.initialComponentWidth&&null!==this.props.initialComponentWidth?{componentWidth:this.props.initialComponentWidth}:{}},componentDidMount:function(){this.setState({componentWidth:this.getDOMNode().getBoundingClientRect().width}),a(this.getDOMNode(),this.onResize)},componentDidUpdate:function(){0===this.getDOMNode().getElementsByClassName("resize-sensor").length&&a(this.getDOMNode(),this.onResize)},onResize:function(){this.setState({componentWidth:this.getDOMNode().getBoundingClientRect().width})}}},function(e,n){e.exports=function(e,n){function t(e){var n=e.target||e.srcElement;n.__resizeRAF__&&p(n.__resizeRAF__),n.__resizeRAF__=l(function(){var t=n.__resizeTrigger__;t.__resizeListeners__.forEach(function(n){n.call(t,e)})})}function a(e){this.contentDocument.defaultView.__resizeTrigger__=this.__resizeElement__,this.contentDocument.defaultView.addEventListener("resize",t)}var s=this,o=s.document,r=o.attachEvent;if("undefined"!=typeof navigator)var i=navigator.userAgent.match(/Trident/);var l=function(){var e=s.requestAnimationFrame||s.mozRequestAnimationFrame||s.webkitRequestAnimationFrame||function(e){return s.setTimeout(e,20)};return function(n){return e(n)}}(),p=function(){var e=s.cancelAnimationFrame||s.mozCancelAnimationFrame||s.webkitCancelAnimationFrame||s.clearTimeout;return function(n){return e(n)}}();if(!e.__resizeListeners__)if(e.__resizeListeners__=[],r)e.__resizeTrigger__=e,e.attachEvent("onresize",t);else{"static"==getComputedStyle(e).position&&(e.style.position="relative");var c=e.__resizeTrigger__=o.createElement("object");c.setAttribute("style","display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"),c.setAttribute("class","resize-sensor"),c.__resizeElement__=e,c.onload=a,c.type="text/html",i&&e.appendChild(c),c.data="about:blank",i||e.appendChild(c)}e.__resizeListeners__.push(n)}},function(e,n,t){var a;a=t(312),e.exports={getInitialState:function(){return this.props.initialPageWidth?{pageWidth:this.props.initialPageWidth}:{}},componentDidMount:function(){return a.on(this.onResize)},componentWillUnmount:function(){return a.off(this.onResize)},onResize:function(e){return this.setState({pageWidth:e})}}},function(e,n,t){var a,s,o,r,i,l;o=t(313),a=void 0,r=[],i=!1,"undefined"!=typeof window&&null!==window&&(a=window.innerWidth),s=function(){return i?void 0:(i=!0,o(l))},l=function(){var e,n,t;for(a=window.innerWidth,e=0,n=r.length;n>e;e++)(t=r[e])(a);return i=!1},"undefined"!=typeof window&&null!==window&&window.addEventListener("resize",s),e.exports={on:function(e){return e(a),r.push(e)},off:function(e){return r.splice(r.indexOf(e),1)}}},function(e,n,t){for(var a=t(314),s="undefined"==typeof window?{}:window,o=["moz","webkit"],r="AnimationFrame",i=s["request"+r],l=s["cancel"+r]||s["cancelRequest"+r],p=!0,c=0;c<o.length&&!i;c++)i=s[o[c]+"Request"+r],l=s[o[c]+"Cancel"+r]||s[o[c]+"CancelRequest"+r];if(!i||!l){p=!1;var d=0,h=0,u=[],m=1e3/60;i=function(e){if(0===u.length){var n=a(),t=Math.max(0,m-(n-d));d=t+n,setTimeout(function(){var e=u.slice(0);u.length=0;for(var n=0;n<e.length;n++)if(!e[n].cancelled)try{e[n].callback(d)}catch(t){setTimeout(function(){throw t},0)}},Math.round(t))}return u.push({handle:++h,callback:e,cancelled:!1}),h},l=function(e){for(var n=0;n<u.length;n++)u[n].handle===e&&(u[n].cancelled=!0)}}e.exports=function(e){return p?i.call(s,function(){try{e.apply(this,arguments)}catch(n){setTimeout(function(){throw n},0)}}):i.call(s,e)},e.exports.cancel=function(){l.apply(s,arguments)}},function(e,n,t){(function(n){(function(){var t,a,s;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!=typeof n&&null!==n&&n.hrtime?(e.exports=function(){return(t()-s)/1e6},a=n.hrtime,t=function(){var e;return e=a(),1e9*e[0]+e[1]},s=t()):Date.now?(e.exports=function(){return Date.now()-s},s=Date.now()):(e.exports=function(){return(new Date).getTime()-s},s=(new Date).getTime())}).call(this)}).call(n,t(315))},function(e,n){function t(){p=!1,r.length?l=r.concat(l):c=-1,l.length&&a()}function a(){if(!p){var e=setTimeout(t);p=!0;for(var n=l.length;n;){for(r=l,l=[];++c<n;)r&&r[c].run();c=-1,n=l.length}r=null,p=!1,clearTimeout(e)}}function s(e,n){this.fun=e,this.array=n}function o(){}var r,i=e.exports={},l=[],p=!1,c=-1;i.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];l.push(new s(e,n)),1!==l.length||p||setTimeout(a,0)},s.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=o,i.addListener=o,i.once=o,i.off=o,i.removeListener=o,i.removeAllListeners=o,i.emit=o,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,n,t){var a,s,o;a=t(2),s=t(39),o=t(317),e.exports=a.createClass({displayName:"Span",propTypes:{context:a.PropTypes.object.isRequired,columns:a.PropTypes.number,at:a.PropTypes.number,pre:a.PropTypes.number,post:a.PropTypes.number,squish:a.PropTypes.number,last:a.PropTypes.bool,"break":a.PropTypes.bool},getDefaultProps:function(){return{at:0,pre:0,post:0,squish:0,last:!1,first:!1,"break":!1}},renderChildren:function(){return a.Children.map(this.props.children,function(e){return function(n){var t;return"Span"===(null!=n&&null!=(t=n.type)?t.displayName:void 0)?a.cloneElement(n,{context:{columns:e.props.columns,gutterRatio:e.props.context.gutterRatio}}):n}}(this))},render:function(){var e;return e=o({contextColumns:this.props.context.columns,gutterRatio:this.props.context.gutterRatio,columns:this.props.columns,at:this.props.at,pre:this.props.pre,post:this.props.post,squish:this.props.squish,last:this.props.last,"break":this.props["break"]}),e=s(e,this.props.style),a.createElement("div",a.__spread({},this.props,{style:e}),this.renderChildren(),a.createElement("span",{style:{display:"block",clear:"both"}}," "))}})},function(e,n,t){var a;a=t(39),e.exports=function(e){var n,t,s,o,r,i,l,p,c,d;return s={columns:3,at:0,pre:0,post:0,squish:0,contextColumns:12,gutterRatio:.25,first:!1,last:!1},c=a(s,e),p=100/(c.contextColumns+(c.contextColumns-1)*c.gutterRatio),r=c.gutterRatio*p,t=function(e){return p*e+r*(e-1)},n=function(e){return 0===e?0:t(e)+r},d=t(c.columns),i=0===c.at&&0===c.pre&&0===c.squish?0:n(c.at)+n(c.pre)+n(c.squish),c.last&&0===c.post&&0===c.squish?l=0:0!==c.post||0!==c.squish?(l=n(c.post)+n(c.squish),c.last||(l+=r)):l=r,o=c.last?"right":"left",d+="%",i+="%",l+="%",{"float":o,marginLeft:i,marginRight:l,width:d,clear:c["break"]?"both":"none"}}},function(e,n,t){var a,s,o,r,i;a=t(319),i=t(162),o=t(321),r=t(325),e.exports=s=function(e,n,t){var s,l,p,c,d,h,u,m,f,g,y,b;return null==t&&(t={}),null==n&&(n=e),r(n)&&(t=n,n=e),t=i({colorIsBackground:!0,contrast:5,foregroundMax:.98,foregroundMin:.02,backgroundMax:.85,backgroundMin:.15,direction:void 0},t),t.colorIsBackground?(y=t.foregroundMin,c=t.foregroundMax):(y=t.backgroundMin,c=t.backgroundMax),null!=t.direction?g=o(n,e,y,c,t.direction,t.contrast):(d=a(n,"lab").luminance(c),b=a(n,"lab").luminance(y),p=a.contrast(e,b.css()),l=a.contrast(e,d.css()),l>t.contrast?g=o(n,e,y,c,"end",t.contrast):p>t.contrast?g=o(n,e,y,c,"start",t.contrast):(t.colorIsBackground?(f=t.backgroundMin,m=t.backgroundMax):(f=t.foregroundMin,m=t.foregroundMax),l>p?(g=a(n,"lab").luminance(c),u=a.contrast(g.css(),a(e,"lab").luminance(f)),e=u>t.contrast?o(e,g.css(),f,m,"start",t.contrast):a(e,"lab").luminance(f).lab(),g=g.lab()):(g=a(e,"lab").luminance(y),u=a.contrast(g.css(),a(e,"lab").luminance(m)),e=u>t.contrast?o(e,g.css(),f,m,"end",t.contrast):a(e,"lab").luminance(m).lab(),g=g.lab()))),t.colorIsBackground?(s=e,h=g):(s=g,h=e),{bg:a.lab(s).css(),fg:a.lab(h).css()}}},function(e,n,t){var a,s;(function(e){/** echo  * @license echo  * while read i do echo  *  done echo
	*/
(function(){var t,o,r,i,l,p,c,d,h,u,m,f,g,y,b,w,j,v,x,k,C,S,W,T,A,P,E,I,F,R,B,O,M,N,q,D,_,L,U,H;u=function(e,n,a,s){return new t(e,n,a,s)},"undefined"!=typeof e&&null!==e&&null!=e.exports&&(e.exports=u),a=[],s=function(){return u}.apply(n,a),!(void 0!==s&&(e.exports=s)),u.color=function(e,n,a,s){return new t(e,n,a,s)},u.hsl=function(e,n,a,s){return new t(e,n,a,s,"hsl")},u.hsv=function(e,n,a,s){return new t(e,n,a,s,"hsv")},u.rgb=function(e,n,a,s){return new t(e,n,a,s,"rgb")},u.hex=function(e){return new t(e)},u.css=function(e){return new t(e)},u.lab=function(e,n,a){return new t(e,n,a,"lab")},u.lch=function(e,n,a){return new t(e,n,a,"lch")},u.hsi=function(e,n,a){return new t(e,n,a,"hsi")},u.gl=function(e,n,a,s){return new t(255*e,255*n,255*a,s,"gl")},u.num=function(e){return new t(e,"num")},u.random=function(){var e,n,a,s;for(n="0123456789abcdef",e="#",a=s=0;6>s;a=++s)e+=n.charAt(Math.floor(16*Math.random()));return new t(e)},u.interpolate=function(e,n,a,s){var o,r;return null==e||null==n?"#000":(("string"===(o=D(e))||"number"===o)&&(e=new t(e)),("string"===(r=D(n))||"number"===r)&&(n=new t(n)),e.interpolate(a,n,s))},u.mix=u.interpolate,u.contrast=function(e,n){var a,s,o,r;return("string"===(o=D(e))||"number"===o)&&(e=new t(e)),("string"===(r=D(n))||"number"===r)&&(n=new t(n)),a=e.luminance(),s=n.luminance(),a>s?(a+.05)/(s+.05):(s+.05)/(a+.05)},u.luminance=function(e){return u(e).luminance()},u._Color=t,t=function(){function e(){var e,n,t,a,s,o,r,i,l,p,c,d,h,u,f,g;for(s=this,t=[],p=0,c=arguments.length;c>p;p++)n=arguments[p],null!=n&&t.push(n);if(0===t.length)d=[255,0,255,1,"rgb"],r=d[0],i=d[1],l=d[2],e=d[3],a=d[4];else if("array"===D(t[0])){if(3===t[0].length)h=t[0],r=h[0],i=h[1],l=h[2],e=1;else{if(4!==t[0].length)throw"unknown input argument";u=t[0],r=u[0],i=u[1],l=u[2],e=u[3]}a=null!=(f=t[1])?f:"rgb"}else"string"===D(t[0])?(r=t[0],a="hex"):"object"===D(t[0])?(g=t[0]._rgb,r=g[0],i=g[1],l=g[2],e=g[3],a="rgb"):t.length<=2&&"number"===D(t[0])?(r=t[0],a="num"):t.length>=3&&(r=t[0],i=t[1],l=t[2]);3===t.length?(a="rgb",e=1):4===t.length?"string"===D(t[3])?(a=t[3],e=1):"number"===D(t[3])&&(a="rgb",e=t[3]):5===t.length&&(e=t[3],a=t[4]),null==e&&(e=1),"rgb"===a?s._rgb=[r,i,l,e]:"gl"===a?s._rgb=[255*r,255*i,255*l,e]:"hsl"===a?(s._rgb=j(r,i,l),s._rgb[3]=e):"hsv"===a?(s._rgb=v(r,i,l),s._rgb[3]=e):"hex"===a?s._rgb=b(r):"lab"===a?(s._rgb=k(r,i,l),s._rgb[3]=e):"lch"===a?(s._rgb=W(r,i,l),s._rgb[3]=e):"hsi"===a?(s._rgb=w(r,i,l),s._rgb[3]=e):"num"===a&&(s._rgb=E(r)),o=m(s._rgb)}return e.prototype.rgb=function(){return this._rgb.slice(0,3)},e.prototype.rgba=function(){return this._rgb},e.prototype.hex=function(){return I(this._rgb)},e.prototype.toString=function(){return this.name()},e.prototype.hsl=function(){return R(this._rgb)},e.prototype.hsv=function(){return B(this._rgb)},e.prototype.lab=function(){return O(this._rgb)},e.prototype.lch=function(){return M(this._rgb)},e.prototype.hsi=function(){return F(this._rgb)},e.prototype.gl=function(){return[this._rgb[0]/255,this._rgb[1]/255,this._rgb[2]/255,this._rgb[3]]},e.prototype.num=function(){return N(this._rgb)},e.prototype.luminance=function(n,t){var a,s,o,r;return null==t&&(t="rgb"),arguments.length?(0===n&&(this._rgb=[0,0,0,this._rgb[3]]),1===n&&(this._rgb=[255,255,255,this._rgb[3]]),a=A(this._rgb),s=1e-7,o=20,r=function(e,a){var i,l;return l=e.interpolate(.5,a,t),i=l.luminance(),Math.abs(n-i)<s||!o--?l:i>n?r(e,l):r(l,a)},this._rgb=(a>n?r(new e("black"),this):r(this,new e("white"))).rgba(),this):A(this._rgb)},e.prototype.name=function(){var e,n;e=this.hex();for(n in u.colors)if(e===u.colors[n])return n;return e},e.prototype.alpha=function(e){return arguments.length?(this._rgb[3]=e,this):this._rgb[3]},e.prototype.css=function(e){var n,t,a,s;return null==e&&(e="rgb"),t=this,a=t._rgb,3===e.length&&a[3]<1&&(e+="a"),"rgb"===e?e+"("+a.slice(0,3).map(Math.round).join(",")+")":"rgba"===e?e+"("+a.slice(0,3).map(Math.round).join(",")+","+a[3]+")":"hsl"===e||"hsla"===e?(n=t.hsl(),s=function(e){return Math.round(100*e)/100},n[0]=s(n[0]),n[1]=s(100*n[1])+"%",n[2]=s(100*n[2])+"%",4===e.length&&(n[3]=a[3]),e+"("+n.join(",")+")"):void 0},e.prototype.interpolate=function(n,t,a){var s,o,r,i,l,p,c,d,h,u,m,f,g,y;if(d=this,null==a&&(a="rgb"),"string"===D(t)&&(t=new e(t)),"hsl"===a||"hsv"===a||"lch"===a||"hsi"===a)"hsl"===a?(g=d.hsl(),y=t.hsl()):"hsv"===a?(g=d.hsv(),y=t.hsv()):"hsi"===a?(g=d.hsi(),y=t.hsi()):"lch"===a&&(g=d.lch(),y=t.lch()),"h"===a.substr(0,1)?(r=g[0],m=g[1],p=g[2],i=y[0],f=y[1],c=y[2]):(p=g[0],m=g[1],r=g[2],c=y[0],f=y[1],i=y[2]),isNaN(r)||isNaN(i)?isNaN(r)?isNaN(i)?o=Number.NaN:(o=i,1!==p&&0!==p||"hsv"===a||(u=f)):(o=r,1!==c&&0!==c||"hsv"===a||(u=m)):(s=i>r&&i-r>180?i-(r+360):r>i&&r-i>180?i+360-r:i-r,o=r+n*s),null==u&&(u=m+n*(f-m)),l=p+n*(c-p),h="h"===a.substr(0,1)?new e(o,u,l,a):new e(l,u,o,a);else if("rgb"===a)g=d._rgb,y=t._rgb,h=new e(g[0]+n*(y[0]-g[0]),g[1]+n*(y[1]-g[1]),g[2]+n*(y[2]-g[2]),a);else if("num"===a)t instanceof e||(t=new e(t,a)),g=d._rgb,y=t._rgb,h=new e((g[0]+n*(y[0]-g[0])<<16)+(g[1]+n*(y[1]-g[1])<<8)+(g[2]+n*(y[2]-g[2])&255),a);else{if("lab"!==a)throw"color mode "+a+" is not supported";g=d.lab(),y=t.lab(),h=new e(g[0]+n*(y[0]-g[0]),g[1]+n*(y[1]-g[1]),g[2]+n*(y[2]-g[2]),a)}return h.alpha(d.alpha()+n*(t.alpha()-d.alpha())),h},e.prototype.premultiply=function(){var e,n;return n=this.rgb(),e=this.alpha(),u(n[0]*e,n[1]*e,n[2]*e,e)},e.prototype.darken=function(e){var n,t;return null==e&&(e=20),t=this,n=t.lch(),n[0]-=e,u.lch(n).alpha(t.alpha())},e.prototype.darker=function(e){return this.darken(e)},e.prototype.brighten=function(e){return null==e&&(e=20),this.darken(-e)},e.prototype.brighter=function(e){return this.brighten(e)},e.prototype.saturate=function(e){var n,t;return null==e&&(e=20),t=this,n=t.lch(),n[1]+=e,u.lch(n).alpha(t.alpha())},e.prototype.desaturate=function(e){return null==e&&(e=20),this.saturate(-e)},e}(),m=function(e){var n;for(n in e)3>n?(e[n]<0&&(e[n]=0),e[n]>255&&(e[n]=255)):3===n&&(e[n]<0&&(e[n]=0),e[n]>1&&(e[n]=1));return e},y=function(e){var n,t,a,s,o,r,i,l;if(e=e.toLowerCase(),null!=u.colors&&u.colors[e])return b(u.colors[e]);if(a=e.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)){for(s=a.slice(1,4),t=o=0;2>=o;t=++o)s[t]=+s[t];s[3]=1}else if(a=e.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/))for(s=a.slice(1,5),t=r=0;3>=r;t=++r)s[t]=+s[t];else if(a=e.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){for(s=a.slice(1,4),t=i=0;2>=i;t=++i)s[t]=Math.round(2.55*s[t]);s[3]=1}else if(a=e.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){for(s=a.slice(1,5),t=l=0;2>=l;t=++l)s[t]=Math.round(2.55*s[t]);s[3]=+s[3]}else(a=e.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/))?(n=a.slice(1,4),n[1]*=.01,n[2]*=.01,s=j(n),s[3]=1):(a=e.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/))&&(n=a.slice(1,4),n[1]*=.01,n[2]*=.01,s=j(n),s[3]=+a[4]);return s},b=function(e){var n,t,a,s,o,r;if(e.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return(4===e.length||7===e.length)&&(e=e.substr(1)),3===e.length&&(e=e.split(""),e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]),r=parseInt(e,16),s=r>>16,a=r>>8&255,t=255&r,[s,a,t,1];if(e.match(/^#?([A-Fa-f0-9]{8})$/))return 9===e.length&&(e=e.substr(1)),r=parseInt(e,16),s=r>>24&255,a=r>>16&255,t=r>>8&255,n=255&r,[s,a,t,n];if(o=y(e))return o;throw"unknown color: "+e},w=function(e,n,t){var a,s,o,l;return l=_(arguments),e=l[0],n=l[1],t=l[2],e/=360,1/3>e?(a=(1-n)/3,o=(1+n*g(i*e)/g(r-i*e))/3,s=1-(a+o)):2/3>e?(e-=1/3,o=(1-n)/3,s=(1+n*g(i*e)/g(r-i*e))/3,a=1-(o+s)):(e-=2/3,s=(1-n)/3,a=(1+n*g(i*e)/g(r-i*e))/3,o=1-(s+a)),o=T(t*o*3),s=T(t*s*3),a=T(t*a*3),[255*o,255*s,255*a]},j=function(){var e,n,t,a,s,o,r,i,l,p,c,d,h,u;if(h=_(arguments),a=h[0],i=h[1],o=h[2],0===i)r=t=e=255*o;else{for(c=[0,0,0],n=[0,0,0],p=.5>o?o*(1+i):o+i-o*i,l=2*o-p,a/=360,c[0]=a+1/3,c[1]=a,c[2]=a-1/3,s=d=0;2>=d;s=++d)c[s]<0&&(c[s]+=1),c[s]>1&&(c[s]-=1),6*c[s]<1?n[s]=l+6*(p-l)*c[s]:2*c[s]<1?n[s]=p:3*c[s]<2?n[s]=l+(p-l)*(2/3-c[s])*6:n[s]=l;u=[Math.round(255*n[0]),Math.round(255*n[1]),Math.round(255*n[2])],r=u[0],t=u[1],e=u[2]}return[r,t,e]},v=function(){var e,n,t,a,s,o,r,i,l,p,c,d,h,u,m,f,g,y;if(d=_(arguments),a=d[0],l=d[1],c=d[2],c*=255,0===l)i=t=e=c;else switch(360===a&&(a=0),a>360&&(a-=360),0>a&&(a+=360),a/=60,s=Math.floor(a),n=a-s,o=c*(1-l),r=c*(1-l*n),p=c*(1-l*(1-n)),s){case 0:h=[c,p,o],i=h[0],t=h[1],e=h[2];break;case 1:u=[r,c,o],i=u[0],t=u[1],e=u[2];break;case 2:m=[o,c,p],i=m[0],t=m[1],e=m[2];break;case 3:f=[o,r,c],i=f[0],t=f[1],e=f[2];break;case 4:g=[p,o,c],i=g[0],t=g[1],e=g[2];break;case 5:y=[c,o,r],i=y[0],t=y[1],e=y[2]}return i=Math.round(i),t=Math.round(t),e=Math.round(e),[i,t,e]},o=18,l=.95047,p=1,c=1.08883,x=function(){var e,n,t,a,s,o;return o=_(arguments),s=o[0],e=o[1],n=o[2],t=Math.sqrt(e*e+n*n),a=(Math.atan2(n,e)/Math.PI*180+360)%360,[s,t,a]},k=function(e,n,t){var a,s,o,r,i,d,h;return void 0!==e&&3===e.length&&(d=e,e=d[0],n=d[1],t=d[2]),void 0!==e&&3===e.length&&(h=e,e=h[0],n=h[1],t=h[2]),r=(e+16)/116,o=r+n/500,i=r-t/200,o=C(o)*l,r=C(r)*p,i=C(i)*c,s=U(3.2404542*o-1.5371385*r-.4985314*i),a=U(-.969266*o+1.8760108*r+.041556*i),t=U(.0556434*o-.2040259*r+1.0572252*i),[T(s,0,255),T(a,0,255),T(t,0,255),1]},C=function(e){return e>.206893034?e*e*e:(e-4/29)/7.787037},U=function(e){return Math.round(255*(.00304>=e?12.92*e:1.055*Math.pow(e,1/2.4)-.055))},S=function(){var e,n,t,a;return a=_(arguments),t=a[0],e=a[1],n=a[2],n=n*Math.PI/180,[t,Math.cos(n)*e,Math.sin(n)*e]},W=function(e,n,t){var a,s,o,r,i,l,p;return l=S(e,n,t),a=l[0],s=l[1],o=l[2],p=k(a,s,o),i=p[0],r=p[1],o=p[2],[T(i,0,255),T(r,0,255),T(o,0,255)]},A=function(e,n,t){var a;return a=_(arguments),e=a[0],n=a[1],t=a[2],e=P(e),n=P(n),t=P(t),.2126*e+.7152*n+.0722*t},P=function(e){return e/=255,.03928>=e?e/12.92:Math.pow((e+.055)/1.055,2.4)},E=function(e){var n,t,a;if("number"===D(e)&&e>=0&&16777215>=e)return a=e>>16,t=e>>8&255,n=255&e,[a,t,n,1];throw"unknown num color: "+e},I=function(){var e,n,t,a,s,o;return o=_(arguments),t=o[0],n=o[1],e=o[2],s=t<<16|n<<8|e,a="000000"+s.toString(16),"#"+a.substr(a.length-6)},F=function(){var e,n,t,a,s,o,r,i,l;return l=_(arguments),r=l[0],t=l[1],n=l[2],e=2*Math.PI,r/=255,t/=255,n/=255,o=Math.min(r,t,n),s=(r+t+n)/3,i=1-o/s,0===i?a=0:(a=(r-t+(r-n))/2,a/=Math.sqrt((r-t)*(r-t)+(r-n)*(t-n)),a=Math.acos(a),n>t&&(a=e-a),a/=e),[360*a,i,s]},R=function(e,n,t){var a,s,o,r,i,l;return void 0!==e&&e.length>=3&&(l=e,e=l[0],n=l[1],t=l[2]),e/=255,n/=255,t/=255,r=Math.min(e,n,t),o=Math.max(e,n,t),s=(o+r)/2,o===r?(i=0,a=Number.NaN):i=.5>s?(o-r)/(o+r):(o-r)/(2-o-r),e===o?a=(n-t)/(o-r):n===o?a=2+(t-e)/(o-r):t===o&&(a=4+(e-n)/(o-r)),a*=60,0>a&&(a+=360),[a,i,s]},B=function(){var e,n,t,a,s,o,r,i,l,p;return p=_(arguments),r=p[0],t=p[1],e=p[2],o=Math.min(r,t,e),s=Math.max(r,t,e),n=s-o,l=s/255,0===s?(a=Number.NaN,i=0):(i=n/s,r===s&&(a=(t-e)/n),t===s&&(a=2+(e-r)/n),e===s&&(a=4+(r-t)/n),a*=60,0>a&&(a+=360)),[a,i,l]},O=function(){var e,n,t,a,s,o,r;return r=_(arguments),t=r[0],n=r[1],e=r[2],t=q(t),n=q(n),e=q(e),a=L((.4124564*t+.3575761*n+.1804375*e)/l),s=L((.2126729*t+.7151522*n+.072175*e)/p),o=L((.0193339*t+.119192*n+.9503041*e)/c),[116*s-16,500*(a-s),200*(s-o)]},q=function(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)},L=function(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29},M=function(){var e,n,t,a,s,o,r;return o=_(arguments),s=o[0],t=o[1],n=o[2],r=O(s,t,n),a=r[0],e=r[1],n=r[2],x(a,e,n)},N=function(){var e,n,t,a;return a=_(arguments),t=a[0],n=a[1],e=a[2],(t<<16)+(n<<8)+e},u.scale=function(e,n){var t,a,s,o,r,i,l,p,c,d,h,m,f,g,y,b,w,j,v,x,k;return b="rgb",w=u("#ccc"),k=0,f=!1,m=[0,1],d=[],v=!1,x=[],y=0,g=1,h=!1,j=0,c={},i=function(e,n){var t,a,s,o,i,l,p;if(null==e&&(e=["#ddd","#222"]),null!=e&&"string"===D(e)&&null!=(null!=(i=u.brewer)?i[e]:void 0)&&(e=u.brewer[e]),"array"===D(e)){for(e=e.slice(0),t=s=0,l=e.length-1;l>=0?l>=s:s>=l;t=l>=0?++s:--s)a=e[t],"string"===D(a)&&(e[t]=u(a));if(null!=n)x=n;else for(x=[],t=o=0,p=e.length-1;p>=0?p>=o:o>=p;t=p>=0?++o:--o)x.push(t/(e.length-1))}return r(),d=e},l=function(e){return null==e&&(e=[]),m=e,y=e[0],g=e[e.length-1],r(),j=2===e.length?0:e.length-1},s=function(e){var n,t;if(null!=m){for(t=m.length-1,n=0;t>n&&e>=m[n];)n++;return n-1}return 0},p=function(e){return e},t=function(e){var n,t,a,o,r;return r=e,m.length>2&&(o=m.length-1,n=s(e),a=m[0]+(m[1]-m[0])*(0+.5*k),t=m[o-1]+(m[o]-m[o-1])*(1-.5*k),r=y+(m[n]+.5*(m[n+1]-m[n])-a)/(t-a)*(g-y)),r},o=function(e,n){var t,a,o,r,i,l,h,f,v;if(null==n&&(n=!1),isNaN(e))return w;if(n?h=e:m.length>2?(t=s(e),h=t/(j-1)):(h=o=y!==g?(e-y)/(g-y):0,h=o=(e-y)/(g-y),h=Math.min(1,Math.max(0,h))),n||(h=p(h)),i=Math.floor(1e4*h),c[i])a=c[i];else{if("array"===D(d))for(r=f=0,v=x.length-1;v>=0?v>=f:f>=v;r=v>=0?++f:--f){if(l=x[r],l>=h){a=d[r];break}if(h>=l&&r===x.length-1){a=d[r];break}if(h>l&&h<x[r+1]){h=(h-l)/(x[r+1]-l),a=u.interpolate(d[r],d[r+1],h,b);break}}else"function"===D(d)&&(a=d(h));c[i]=a}return a},r=function(){return c={}},i(e,n),a=function(e){var n;return n=o(e),v&&n[v]?n[v]():n},a.domain=function(e,n,t,s){var o;return null==t&&(t="e"),arguments.length?(null!=n&&(o=u.analyze(e,s),e=0===n?[o.min,o.max]:u.limits(o,t,n)),l(e),a):m},a.mode=function(e){return arguments.length?(b=e,r(),a):b},a.range=function(e,n){return i(e,n),a},a.out=function(e){return v=e,a},a.spread=function(e){return arguments.length?(k=e,a):k},a.correctLightness=function(e){return arguments.length?(h=e,r(),p=h?function(e){var n,t,a,s,r,i,l,p,c;for(n=o(0,!0).lab()[0],t=o(1,!0).lab()[0],l=n>t,a=o(e,!0).lab()[0],r=n+(t-n)*e,s=a-r,p=0,c=1,i=20;Math.abs(s)>.01&&i-- >0;)!function(){return l&&(s*=-1),0>s?(p=e,e+=.5*(c-e)):(c=e,e+=.5*(p-e)),a=o(e,!0).lab()[0],s=a-r}();return e}:function(e){return e},a):h},a.colors=function(n){var t,s,o,r,i,l;if(null==n&&(n="hex"),e=[],s=[],m.length>2)for(t=o=1,l=m.length;l>=1?l>o:o>l;t=l>=1?++o:--o)s.push(.5*(m[t-1]+m[t]));else s=m;for(r=0,i=s.length;i>r;r++)t=s[r],e.push(a(t)[n]());return e},a},null==(H=u.scales)&&(u.scales={}),u.scales.cool=function(){return u.scale([u.hsl(180,1,.9),u.hsl(250,.7,.4)])},u.scales.hot=function(){return u.scale(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")},u.analyze=function(e,n,t){var a,s,o,r,i,l,p;if(o={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==t&&(t=function(){return!0}),a=function(e){null==e||isNaN(e)||(o.values.push(e),o.sum+=e,e<o.min&&(o.min=e),e>o.max&&(o.max=e),o.count+=1)},i=function(e,s){return t(e,s)?a(null!=n&&"function"===D(n)?n(e):null!=n&&"string"===D(n)||"number"===D(n)?e[n]:e):void 0},"array"===D(e))for(l=0,p=e.length;p>l;l++)r=e[l],i(r);else for(s in e)r=e[s],i(r,s);return o.domain=[o.min,o.max],o.limits=function(e,n){return u.limits(o,e,n)},o},u.limits=function(e,n,t){var a,s,o,r,i,l,p,c,d,h,m,f,g,y,b,w,j,v,x,k,C,S,W,T,A,P,E,I,F,R,B,O,M,N,q,_,L,U,H,G,J,z,$,Y,V,Q,K,X,Z,ee,ne,te,ae,se,oe,re;if(null==n&&(n="equal"),null==t&&(t=7),"array"===D(e)&&(e=u.analyze(e)),g=e.min,m=e.max,W=e.sum,P=e.values.sort(function(e,n){return e-n}),h=[],"c"===n.substr(0,1)&&(h.push(g),h.push(m)),"e"===n.substr(0,1)){for(h.push(g),p=E=1,L=t-1;L>=1?L>=E:E>=L;p=L>=1?++E:--E)h.push(g+p/t*(m-g));h.push(m)}else if("l"===n.substr(0,1)){if(0>=g)throw"Logarithmic scales are only possible for values > 0";for(y=Math.LOG10E*Math.log(g),f=Math.LOG10E*Math.log(m),h.push(g),p=I=1,Y=t-1;Y>=1?Y>=I:I>=Y;p=Y>=1?++I:--I)h.push(Math.pow(10,y+p/t*(f-y)));h.push(m)}else if("q"===n.substr(0,1)){for(h.push(g),p=F=1,V=t-1;V>=1?V>=F:F>=V;p=V>=1?++F:--F)x=P.length*p/t,k=Math.floor(x),k===x?h.push(P[k]):(C=x-k,h.push(P[k]*C+P[k+1]*(1-C)));h.push(m)}else if("k"===n.substr(0,1)){for(w=P.length,a=new Array(w),i=new Array(t),S=!0,j=0,o=null,o=[],o.push(g),p=R=1,Q=t-1;Q>=1?Q>=R:R>=Q;p=Q>=1?++R:--R)o.push(g+p/t*(m-g));for(o.push(m);S;){for(c=B=0,K=t-1;K>=0?K>=B:B>=K;c=K>=0?++B:--B)i[c]=0;for(p=O=0,X=w-1;X>=0?X>=O:O>=X;p=X>=0?++O:--O){for(A=P[p],b=Number.MAX_VALUE,c=M=0,Z=t-1;Z>=0?Z>=M:M>=Z;c=Z>=0?++M:--M)l=Math.abs(o[c]-A),b>l&&(b=l,s=c);i[s]++,a[p]=s}for(v=new Array(t),c=N=0,ee=t-1;ee>=0?ee>=N:N>=ee;c=ee>=0?++N:--N)v[c]=null;for(p=q=0,ne=w-1;ne>=0?ne>=q:q>=ne;p=ne>=0?++q:--q)r=a[p],null===v[r]?v[r]=P[p]:v[r]+=P[p];for(c=_=0,U=t-1;U>=0?U>=_:_>=U;c=U>=0?++_:--_)v[c]*=1/i[c];for(S=!1,c=te=0,H=t-1;H>=0?H>=te:te>=H;c=H>=0?++te:--te)if(v[c]!==o[p]){S=!0;break}o=v,j++,j>200&&(S=!1)}for(d={},c=ae=0,G=t-1;G>=0?G>=ae:ae>=G;c=G>=0?++ae:--ae)d[c]=[];for(p=se=0,J=w-1;J>=0?J>=se:se>=J;p=J>=0?++se:--se)r=a[p],d[r].push(P[p]);for(T=[],c=oe=0,z=t-1;z>=0?z>=oe:oe>=z;c=z>=0?++oe:--oe)T.push(d[c][0]),T.push(d[c][d[c].length-1]);for(T=T.sort(function(e,n){return e-n}),h.push(T[0]),p=re=1,$=T.length-1;$>=re;p=re+=2)isNaN(T[p])||h.push(T[p])}return h},u.brewer=h={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},u.colors=f={indigo:"#4b0082",gold:"#ffd700",hotpink:"#ff69b4",firebrick:"#b22222",indianred:"#cd5c5c",yellow:"#ffff00",mistyrose:"#ffe4e1",darkolivegreen:"#556b2f",olive:"#808000",darkseagreen:"#8fbc8f",pink:"#ffc0cb",tomato:"#ff6347",lightcoral:"#f08080",orangered:"#ff4500",navajowhite:"#ffdead",lime:"#00ff00",palegreen:"#98fb98",darkslategrey:"#2f4f4f",greenyellow:"#adff2f",burlywood:"#deb887",seashell:"#fff5ee",mediumspringgreen:"#00fa9a",fuchsia:"#ff00ff",papayawhip:"#ffefd5",blanchedalmond:"#ffebcd",chartreuse:"#7fff00",dimgray:"#696969",black:"#000000",peachpuff:"#ffdab9",springgreen:"#00ff7f",aquamarine:"#7fffd4",white:"#ffffff",orange:"#ffa500",lightsalmon:"#ffa07a",darkslategray:"#2f4f4f",brown:"#a52a2a",ivory:"#fffff0",dodgerblue:"#1e90ff",peru:"#cd853f",lawngreen:"#7cfc00",chocolate:"#d2691e",crimson:"#dc143c",forestgreen:"#228b22",darkgrey:"#a9a9a9",lightseagreen:"#20b2aa",cyan:"#00ffff",mintcream:"#f5fffa",silver:"#c0c0c0",antiquewhite:"#faebd7",mediumorchid:"#ba55d3",skyblue:"#87ceeb",gray:"#808080",darkturquoise:"#00ced1",goldenrod:"#daa520",darkgreen:"#006400",floralwhite:"#fffaf0",darkviolet:"#9400d3",darkgray:"#a9a9a9",moccasin:"#ffe4b5",saddlebrown:"#8b4513",grey:"#808080",darkslateblue:"#483d8b",lightskyblue:"#87cefa",lightpink:"#ffb6c1",mediumvioletred:"#c71585",slategrey:"#708090",red:"#ff0000",deeppink:"#ff1493",limegreen:"#32cd32",darkmagenta:"#8b008b",palegoldenrod:"#eee8aa",plum:"#dda0dd",turquoise:"#40e0d0",lightgrey:"#d3d3d3",lightgoldenrodyellow:"#fafad2",darkgoldenrod:"#b8860b",lavender:"#e6e6fa",maroon:"#800000",yellowgreen:"#9acd32",sandybrown:"#f4a460",thistle:"#d8bfd8",violet:"#ee82ee",navy:"#000080",magenta:"#ff00ff",dimgrey:"#696969",tan:"#d2b48c",rosybrown:"#bc8f8f",olivedrab:"#6b8e23",blue:"#0000ff",lightblue:"#add8e6",ghostwhite:"#f8f8ff",honeydew:"#f0fff0",cornflowerblue:"#6495ed",slateblue:"#6a5acd",linen:"#faf0e6",darkblue:"#00008b",powderblue:"#b0e0e6",seagreen:"#2e8b57",darkkhaki:"#bdb76b",snow:"#fffafa",sienna:"#a0522d",mediumblue:"#0000cd",royalblue:"#4169e1",lightcyan:"#e0ffff",green:"#008000",mediumpurple:"#9370db",midnightblue:"#191970",cornsilk:"#fff8dc",paleturquoise:"#afeeee",bisque:"#ffe4c4",slategray:"#708090",darkcyan:"#008b8b",khaki:"#f0e68c",wheat:"#f5deb3",teal:"#008080",darkorchid:"#9932cc",deepskyblue:"#00bfff",salmon:"#fa8072",darkred:"#8b0000",steelblue:"#4682b4",palevioletred:"#db7093",lightslategray:"#778899",aliceblue:"#f0f8ff",lightslategrey:"#778899",lightgreen:"#90ee90",orchid:"#da70d6",gainsboro:"#dcdcdc",mediumseagreen:"#3cb371",lightgray:"#d3d3d3",mediumturquoise:"#48d1cc",lemonchiffon:"#fffacd",cadetblue:"#5f9ea0",lightyellow:"#ffffe0",lavenderblush:"#fff0f5",coral:"#ff7f50",purple:"#800080",aqua:"#00ffff",whitesmoke:"#f5f5f5",mediumslateblue:"#7b68ee",darkorange:"#ff8c00",mediumaquamarine:"#66cdaa",darksalmon:"#e9967a",beige:"#f5f5dc",blueviolet:"#8a2be2",azure:"#f0ffff",lightsteelblue:"#b0c4de",oldlace:"#fdf5e6"},D=function(){var e,n,t,a,s;for(e={},s="Boolean Number String Function Array Date RegExp Undefined Null".split(" "),t=0,a=s.length;a>t;t++)n=s[t],e["[object "+n+"]"]=n.toLowerCase();return function(n){var t;return t=Object.prototype.toString.call(n),e[t]||"object"}}(),T=function(e,n,t){return null==n&&(n=0),null==t&&(t=1),n>e&&(e=n),e>t&&(e=t),e},_=function(e){return e.length>=3?e:e[0]},i=2*Math.PI,r=Math.PI/3,g=Math.cos,d=function(e){var n,t,a,s,o,r,i,l,p,c,h;return e=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(u(s));return a}(),2===e.length?(p=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=p[0],r=p[1],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push(o[n]+e*(r[n]-o[n]));return a}(),u.lab.apply(u,t)}):3===e.length?(c=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=c[0],r=c[1],i=c[2],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push((1-e)*(1-e)*o[n]+2*(1-e)*e*r[n]+e*e*i[n]);return a}(),u.lab.apply(u,t)}):4===e.length?(h=function(){var n,t,a;for(a=[],n=0,t=e.length;t>n;n++)s=e[n],a.push(s.lab());return a}(),o=h[0],r=h[1],i=h[2],l=h[3],n=function(e){var n,t;return t=function(){var t,a;for(a=[],n=t=0;2>=t;n=++t)a.push((1-e)*(1-e)*(1-e)*o[n]+3*(1-e)*(1-e)*e*r[n]+3*(1-e)*e*e*i[n]+e*e*e*l[n]);return a}(),u.lab.apply(u,t)}):5===e.length&&(t=d(e.slice(0,3)),a=d(e.slice(2,5)),n=function(e){return.5>e?t(2*e):a(2*(e-.5))}),n},u.interpolate.bezier=d}).call(this)}).call(n,t(320)(e))},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,n,t){var a,s,o,r,i,l;a=t(319),i=t(322)("color-pairs-picker-binary-search-contrast"),r=0,e.exports=o=function(e,n,t,s,i,l){var p,c,d,h;return null==n&&(n=e),null==t&&(t=0),null==s&&(s=1),null==i&&(i="end"),null==l&&(l=5),r+=1,h=(t+s)/2,p=a(e,"lab"),c=p.luminance(h).lab(),d=a.contrast(a(n).css(),p.css()),r>15?(r=0,c):d>l-.1&&l+.1>d?(r=0,c):d>l?"end"===i?o(e,n,t,h-.001,i,l):o(e,n,h+.001,s,i,l):l>d?"start"===i?o(e,n,t,h-.001,i,l):o(e,n,h+.001,s,i,l):void 0},s="rgb(8, 27, 44)",l="rgb(124, 171, 217)",s="red",l="red"},function(e,n,t){function a(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function s(){var e=arguments,t=this.useColors;if(e[0]=(t?"%c":"")+this.namespace+(t?" %c":" ")+e[0]+(t?"%c ":" ")+"+"+n.humanize(this.diff),!t)return e;var a="color: "+this.color;e=[e[0],a,"color: inherit"].concat(Array.prototype.slice.call(e,1));var s=0,o=0;return e[0].replace(/%[a-z%]/g,function(e){"%%"!==e&&(s++,"%c"===e&&(o=s))}),e.splice(o,0,a),e}function o(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function r(e){try{null==e?n.storage.removeItem("debug"):n.storage.debug=e}catch(t){}}function i(){var e;try{e=n.storage.debug}catch(t){}return e}function l(){try{return window.localStorage}catch(e){}}n=e.exports=t(323),n.log=o,n.formatArgs=s,n.save=r,n.load=i,n.useColors=a,n.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:l(),n.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],n.formatters.j=function(e){return JSON.stringify(e)},n.enable(i())},function(e,n,t){function a(){return n.colors[c++%n.colors.length]}function s(e){function t(){}function s(){var e=s,t=+new Date,o=t-(p||t);e.diff=o,e.prev=p,e.curr=t,p=t,null==e.useColors&&(e.useColors=n.useColors()),null==e.color&&e.useColors&&(e.color=a());var r=Array.prototype.slice.call(arguments);r[0]=n.coerce(r[0]),"string"!=typeof r[0]&&(r=["%o"].concat(r));var i=0;r[0]=r[0].replace(/%([a-z%])/g,function(t,a){if("%%"===t)return t;i++;var s=n.formatters[a];if("function"==typeof s){var o=r[i];t=s.call(e,o),r.splice(i,1),i--}return t}),"function"==typeof n.formatArgs&&(r=n.formatArgs.apply(e,r));var l=s.log||n.log||console.log.bind(console);l.apply(e,r)}t.enabled=!1,s.enabled=!0;var o=n.enabled(e)?s:t;return o.namespace=e,o}function o(e){n.save(e);for(var t=(e||"").split(/[\s,]+/),a=t.length,s=0;a>s;s++)t[s]&&(e=t[s].replace(/\*/g,".*?"),"-"===e[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")))}function r(){n.enable("")}function i(e){var t,a;for(t=0,a=n.skips.length;a>t;t++)if(n.skips[t].test(e))return!1;for(t=0,a=n.names.length;a>t;t++)if(n.names[t].test(e))return!0;return!1}function l(e){return e instanceof Error?e.stack||e.message:e}n=e.exports=s,n.coerce=l,n.disable=r,n.enable=o,n.enabled=i,n.humanize=t(324),n.names=[],n.skips=[],n.formatters={};var p,c=0},function(e,n){function t(e){if(e=""+e,!(e.length>1e4)){var n=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(n){var t=parseFloat(n[1]),a=(n[2]||"ms").toLowerCase();switch(a){case"years":case"year":case"yrs":case"yr":case"y":return t*c;case"days":case"day":case"d":return t*p;case"hours":case"hour":case"hrs":case"hr":case"h":return t*l;case"minutes":case"minute":case"mins":case"min":case"m":return t*i;case"seconds":case"second":case"secs":case"sec":case"s":return t*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t}}}}function a(e){return e>=p?Math.round(e/p)+"d":e>=l?Math.round(e/l)+"h":e>=i?Math.round(e/i)+"m":e>=r?Math.round(e/r)+"s":e+"ms"}function s(e){return o(e,p,"day")||o(e,l,"hour")||o(e,i,"minute")||o(e,r,"second")||e+" ms"}function o(e,n,t){return n>e?void 0:1.5*n>e?Math.floor(e/n)+" "+t:Math.ceil(e/n)+" "+t+"s"}var r=1e3,i=60*r,l=60*i,p=24*l,c=365.25*p;e.exports=function(e,n){return n=n||{},"string"==typeof e?t(e):n["long"]?s(e):a(e)}},function(e,n){"use strict";e.exports=function(e){return"object"==typeof e&&null!==e}},function(e,n,t){var a=t(327);"string"==typeof a&&(a=[[e.id,a,""]]);t(329)(a,{});a.locals&&(e.exports=a.locals)},function(e,n,t){n=e.exports=t(328)(),n.push([e.id,".hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8;-webkit-text-size-adjust:none}.diff .hljs-header,.hljs-comment{color:#998;font-style:italic}.css .rule .hljs-keyword,.hljs-keyword,.hljs-request,.hljs-status,.hljs-subst,.hljs-winutils,.nginx .hljs-title{color:#333;font-weight:700}.hljs-hexcolor,.hljs-number,.ruby .hljs-constant{color:teal}.hljs-doctag,.hljs-string,.hljs-tag .hljs-value,.tex .hljs-formula{color:#d14}.hljs-id,.hljs-title,.scss .hljs-preprocessor{color:#900;font-weight:700}.hljs-list .hljs-keyword,.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type,.tex .hljs-command,.vhdl .hljs-literal{color:#458;font-weight:700}.django .hljs-tag .hljs-keyword,.hljs-rule .hljs-property,.hljs-tag,.hljs-tag .hljs-title{color:navy;font-weight:400}.hljs-attribute,.hljs-name,.hljs-variable,.lisp .hljs-body{color:teal}.hljs-regexp{color:#009926}.clojure .hljs-keyword,.hljs-prompt,.hljs-symbol,.lisp .hljs-keyword,.ruby .hljs-symbol .hljs-string,.scheme .hljs-keyword,.tex .hljs-special{color:#990073}.hljs-built_in{color:#0086b3}.hljs-cdata,.hljs-doctype,.hljs-pi,.hljs-pragma,.hljs-preprocessor,.hljs-shebang{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.diff .hljs-change{background:#0086b3}.hljs-chunk{color:#aaa}",""])},function(e,n){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],n=0;n<this.length;n++){var t=this[n];t[2]?e.push("@media "+t[2]+"{"+t[1]+"}"):e.push(t[1])}return e.join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var a={},s=0;s<this.length;s++){var o=this[s][0];"number"==typeof o&&(a[o]=!0)}for(s=0;s<n.length;s++){var r=n[s];"number"==typeof r[0]&&a[r[0]]||(t&&!r[2]?r[2]=t:t&&(r[2]="("+r[2]+") and ("+t+")"),e.push(r))}},e}},function(e,n,t){function a(e,n){for(var t=0;t<e.length;t++){var a=e[t],s=u[a.id];if(s){s.refs++;for(var o=0;o<s.parts.length;o++)s.parts[o](a.parts[o]);for(;o<a.parts.length;o++)s.parts.push(p(a.parts[o],n))}else{for(var r=[],o=0;o<a.parts.length;o++)r.push(p(a.parts[o],n));u[a.id]={id:a.id,refs:1,parts:r}}}}function s(e){for(var n=[],t={},a=0;a<e.length;a++){var s=e[a],o=s[0],r=s[1],i=s[2],l=s[3],p={css:r,media:i,sourceMap:l};t[o]?t[o].parts.push(p):n.push(t[o]={id:o,parts:[p]})}return n}function o(e,n){var t=g(),a=w[w.length-1];if("top"===e.insertAt)a?a.nextSibling?t.insertBefore(n,a.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),w.push(n);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
t.appendChild(n)}}function r(e){e.parentNode.removeChild(e);var n=w.indexOf(e);n>=0&&w.splice(n,1)}function i(e){var n=document.createElement("style");return n.type="text/css",o(e,n),n}function l(e){var n=document.createElement("link");return n.rel="stylesheet",o(e,n),n}function p(e,n){var t,a,s;if(n.singleton){var o=b++;t=y||(y=i(n)),a=c.bind(null,t,o,!1),s=c.bind(null,t,o,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=l(n),a=h.bind(null,t),s=function(){r(t),t.href&&URL.revokeObjectURL(t.href)}):(t=i(n),a=d.bind(null,t),s=function(){r(t)});return a(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;a(e=n)}else s()}}function c(e,n,t,a){var s=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=j(n,s);else{var o=document.createTextNode(s),r=e.childNodes;r[n]&&e.removeChild(r[n]),r.length?e.insertBefore(o,r[n]):e.appendChild(o)}}function d(e,n){var t=n.css,a=n.media;n.sourceMap;if(a&&e.setAttribute("media",a),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}function h(e,n){var t=n.css,a=(n.media,n.sourceMap);a&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var s=new Blob([t],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(s),o&&URL.revokeObjectURL(o)}var u={},m=function(e){var n;return function(){return"undefined"==typeof n&&(n=e.apply(this,arguments)),n}},f=m(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),g=m(function(){return document.head||document.getElementsByTagName("head")[0]}),y=null,b=0,w=[];e.exports=function(e,n){if("object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");n=n||{},"undefined"==typeof n.singleton&&(n.singleton=f()),"undefined"==typeof n.insertAt&&(n.insertAt="bottom");var t=s(e);return a(t,n),function(e){for(var o=[],r=0;r<t.length;r++){var i=t[r],l=u[i.id];l.refs--,o.push(l)}if(e){var p=s(e);a(p,n)}for(var r=0;r<o.length;r++){var l=o[r];if(0===l.refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete u[l.id]}}}};var j=function(){var e=[];return function(n,t){return e[n]=t,e.filter(Boolean).join("\n")}}()},function(e,n){e.exports={title:"10 Steps To Plan Better So You Can Write Less Code",order:5,body:'<h2>Learn how to plan your future project!</h2>\n<p><em>Blog post written by BiancaMihai - <a href="https://github.com/biancamihai">GitHub</a> / <a href="https://twitter.com/intent/user?screen_name=bubuslubu">Twitter</a></em></p>\n<p>An ounce of preparation is worth a pound of cure. That’s true in medicine, and that’s definitely true in software development.</p>\n<p>Here’s a structured 10-step workflow that will guide you through the app planning process, with the goal of saving you from writing a lot of unnecessary code.</p>\n<p>Together, we’ll plan out a simple “To-do” single-page web app. We’ll also plan for an API backend for a future mobile app.</p>\n<h3>1) Create our Trello board</h3>\n<p><a href="https://trello.com/">Trello</a> is a fun, free way to break your planning and development process into small tasks that can be tracked.</p>\n<p><img src="https://lh3.googleusercontent.com/EI4AQ4NINm3B2DHR_YIS29JyKVa5dTPiT3RtITylmndFlpshTHepsKuO8_1KQNfdPDSBjslDReHCuPFeH1GNrDtgOwTyq6ZtGf3DFBmq1AsAhPHKt_0pLXQLf0o4ZbDuKVj4-Bo" alt="Image of Trello board"></p>\n<p><a href="https://trello.com/b/O9MZcYyY/todo-app">Here’s what our Trello board will eventually look like</a>. I prefer to split my tasks into 3 columns (depending on the complexity of the project):</p>\n<ul>\n<li>To Do - what is left to do</li>\n<li>In progress - tasks that people are currently working on</li>\n<li>Done - tasks that are done and ready for testing</li>\n</ul>\n<h3>2) Write user stories</h3>\n<p>Here are some example user stories. These will guide how we think about our app’s features and functionality. Note that they all follow a similar structure: as a <person> I can <do something>.</p>\n<ul>\n<li>as a logged-in user I can see the list of my to-do’s.</li>\n<li>as a logged-in user I can add a new to-do.</li>\n<li>as a logged-in user I can delete a to-do (only my to-do’s - not other users’).</li>\n<li>as a logged-in user I can complete a to-do (only my to-do’s - not other users’).</li>\n<li>as an anonymous user, I can register for a new account, recover my password, or log in to the app with an existing account.</li>\n</ul>\n<h3>3) Create our use case model</h3>\n<p>Our use case model will help us visualize our user stories so we can better understand how to implement them.</p>\n<p><img src="https://lh5.googleusercontent.com/2v6iIMbCrLSKVfqttEToum7OA3YGQCBKWUHcSCB1KEbEcijXxQtKJKY6fhLXeecJiO27P4icOuPlkVc9_uNXolzlzNXOo_TPh09GZsAqRH-JISqPrpx0PZdtbHOr0RIuQUbTbaw" alt="Anonymous user case diagram">\n<img src="https://lh6.googleusercontent.com/3V6dVvAcyjqFkaOukimucYOX0CfwBBYNN9SvjmnVy40Pdhs4Wtrr34i3E-9pbV7tFsp4jHm77IFQvFupjq6OWyxqEgCzcQ995Ayh52Msczu6TfwKeNhL9PYHyxSgmPYA1TR6l6Q" alt="Authenticated user case diagram"></p>\n<h3>4) Create our activity diagram</h3>\n<p>Our activity diagram will show the different paths our users can take through our app.</p>\n<p><img src="https://lh6.googleusercontent.com/jAQL4myqWOPA3gk2iTpGyAQBrO6p1GlPe8BQQ1Se6a-Di40X3Zw1p0wfJewZUL-YyDmedYzX5Lxvo2GW2Qnr6I-6kuKe1sDb9_5F_n46cKoawWReWW_ZoZCIJO6Semc4fvsiuHc" alt="Activity diagram picture"></p>\n<p>A user accesses our to-do application.</p>\n<ul>\n<li>If the user is not logged in she will see our login page.</li>\n<li>If she already has an account, she can log in.</li>\n<li>If she has an account, but she forgot her password, she can recover her password.</li>\n<li>If she doesn’t have an account, she can create one.</li>\n<li>Both “create an account” and “recover my password” will require email validation. A user can log in to our application only after she has confirmed her email address.</li>\n<li>If she is logged in, she will see her to-do list (this can be empty if she hasn’t added any to-dos yet).</li>\n<li>A logged in user:\n<ul>\n<li>is able to see her tasks list</li>\n<li>is able to mark a task from her list as completed</li>\n<li>is able to search within her task list</li>\n<li>is able to delete a task from her list</li>\n<li>can logout.</li>\n</ul>\n</li>\n<li>The user can exit the application at any time.</li>\n</ul>\n<h3>5) Create our mockups</h3>\n<p>Our mockups show what our app should look like. It’s much faster to iterate on a mockup than it is to do so on working code.</p>\n<p><img src="https://lh3.googleusercontent.com/GBFhmBkfr-xM5YSXlR0Fm9y8b24ivdRlUtRWQOHJ8skNxEgjTkAef0e5nZ-CcHKNUq2p4V4hgDuAm9LSEuvbovlVborH1ZioAUXVlEblWZ4hN_d2tGEpxhfTkKH9os2JS1pab4w" alt="Mockup picture"></p>\n<h3>6) Choose the right technologies for our project</h3>\n<p>Because this is a single page app, we’ll rely heavily - or in this case exclusively - on JavaScript. Let’s use one of the most popular JavaScript stacks: the MEAN stack. One big benefit of the MEAN stack is that all of its components are free and open-source. There are also tons of resources available for learning the MEAN stack, and for debugging it when you inevitably encounter errors.</p>\n<p>You can have a <a href="http://www.freecodecamp.com/challenges/waypoint-get-set-for-basejumps">MEAN stack development environment</a> up and running in the cloud in less than an hour, for free.</p>\n<p>Here are the components we’ll use:</p>\n<ol>\n<li><a href="http://mongodb.org/">MongoDB</a> for our database</li>\n<li><a href="http://nodejs.org/">Node.js</a> and <a href="http://expressjs.com/">Express.js</a> for implementing our API</li>\n<li><a href="http://angularjs.org/">AngularJS</a>, along with HTML and CSS (and Bootstrap) for our client-side application</li>\n<li><a href="http://mongoosejs.com/">Mongoose</a> to connect our application to MongoDB</li>\n</ol>\n<h3>7) Design our database schema</h3>\n<p>It’s worth the effort to design a database schema, even for our simple application.</p>\n<p>We’ll have two collections: our “Users” collection will house our user data, and our “ToDo” collection will house our tasks that need to be done. One user can have zero, one, or many tasks in  her to-do list, so we will have a one-to-many (1:m) relationship between our two collections.</p>\n<p><img src="https://lh6.googleusercontent.com/5uSb_xnSSc5CWXJD0yyUGVJsL92RRZl3Bex_3wjuzl5Xr69Ks0j3od-yFju24SAd5wWMBNy9uqBrvOzdrUWluOkbcr4H5zFg-ZemJX3ZRWS12D42OowuvWnxA7wWIGrhhzaQ0aw" alt="Database schema diagram"></p>\n<h3>8) Define our use cases</h3>\n<ol>\n<li>What happens to the to-dos related to a user that deletes her account? When the user deletes her account the to-dos related to that user should also be deleted.</li>\n<li>No to-do can be added without being attached to a confirmed user.</li>\n<li>A to-do can only be deleted by its owner.</li>\n<li>No user can be added with an empty username or password.</li>\n<li>No to-do can be added with an empty task.</li>\n</ol>\n<p>Things to keep in mind:</p>\n<ol>\n<li>Use the Mongoose middleware to remove dependent documents like to-dos when a user deletes her account.</li>\n<li>Use Mongoose validation rules on models to prevent empty fields from being added to our database.</li>\n</ol>\n<h3>9) Design and test our API</h3>\n<p>I used a free product called Apiary <a href="http://docs.fcctodoapp.apiary.io/">to document our API</a>.</p>\n<p>Here’s the syntax I used to <a href="https://jsapi.apiary.io/apis/fcctodoapp.apib">create this simple BluePrint</a>.</p>\n<p>I recommend you create an account and start playing with it. If you link your <a href="http://github.com/">GitHub</a> account with Apiary, you can ensure your documentation always stays up to date. You’ll also be able to test your data visually without the need for actually hitting your API endpoints. If you prefer to test your API from the command line, <a href="http://docs.agendor.apiary.io/">here’s an example of how to do this</a>.</p>\n<p>Later, once you’ve implemented your API with Node.js and Express.js, you’ll just need to set your URL in Apiary. Then you can start testing your calls. Our current host url (<a href="http://fcctodoapp.apiblueprint.org/">http://fcctodoapp.apiblueprint.org/</a>) will be replaced by your API’s URL.</p>\n<p><img src="https://lh6.googleusercontent.com/hU3ilG_y9FqtL_zajQ_KOjWy8Qx590Go8nkNvA1j0oR50YJTpjJhL1lAPgjyeLTAS06tq6V62EcJrLQyT_TR2BK49DYiX6kksU6s9cqJDvvaS6jvepIM6uiO4JMbXuu-oXhdsas" alt="App demo picture"></p>\n<h3>10) Start writing code!</h3>\n<p>This is the fun part, and it will take up most of your project’s time. If you need help with this, join us and learn to code.</p>\n'}},function(e,n){e.exports={title:"5 Steps to organizing a successful Campsite event.",order:5,body:"<h1>In-person group programming sessions and events are fun!</h1>\n<h2>This Wiki will help you with organizing a successful Campsite event.</h2>\n<h3>With a little planning and communication having a successful Campsite event can be easy! Here are some steps to help you in doing this.</h3>\n<h3></h3>\n<ul>\n<li>\n<p>Determine the topic for the event (code and coffee, hack session, invite campers to another organization’s event).</p>\n</li>\n<li>\n<p>Find a suitable location. Campsite events should always take place in a public space (library, cafe, hackerspace).</p>\n</li>\n<li>\n<p>Create an event on your Campsite’s Facebook page for the event, and link to it on your Campsite Facebook Group page.</p>\n</li>\n<li>\n<p>Follow-up with reminder posts for the event 1 week prior to the event and then again the day before the event.</p>\n</li>\n<li>\n<p>On the day of the event arrive early, get setup, greet members, and kick the event off. Don’t forget to thank everyone afterwards and extend invites to future meetups.</p>\n</li>\n</ul>\n<p><strong>Try to take some pictures and post them on your Campsite’s Facebook group page.</strong></p>\n"}},function(e,n){e.exports={title:"5 Steps to organizing a successful Campsite event",order:5,body:"<h1>In-person group programming sessions and events are fun!</h1>\n<h2>This Wiki will help you with organizing a successful Campsite event.</h2>\n<h3>With a little planning and communication having a successful Campsite event can be easy! Here are some steps to help you in doing this.</h3>\n<h3></h3>\n<ul>\n<li>\n<p>Determine the topic for the event (code and coffee, hack session, invite campers to another organization’s event).</p>\n</li>\n<li>\n<p>Find a suitable location. Campsite events should always take place in a public space (library, cafe, hackerspace).</p>\n</li>\n<li>\n<p>Create an event on your Campsite’s Facebook page for the event, and link to it on your Campsite Facebook Group page.</p>\n</li>\n<li>\n<p>Follow-up with reminder posts for the event 1 week prior to the event and then again the day before the event.</p>\n</li>\n<li>\n<p>On the day of the event arrive early, get setup, greet members, and kick the event off. Don’t forget to thank everyone afterwards and extend invites to future meetups.</p>\n</li>\n</ul>\n<p><strong>Try to take some pictures and post them on your Campsite’s Facebook group page.</strong></p>\n"}},function(e,n){e.exports={title:"Academic Honesty Policy",order:5,body:"<p>Before we issue our verified certificate to a camper, he or she must accept our Academic Honesty Pledge, which reads:</p>\n<p><strong>I understand that plagiarism means copying someone else’s work and presenting the work as if it were my own, without clearly attributing the original author.</strong></p>\n<p><strong>I understand that plagiarism is an act of intellectual dishonesty, and that people usually get kicked out of university or fired from their jobs if they get caught plagiarizing.</strong></p>\n<p><strong>Aside from using open source libraries such as jQuery and Bootstrap, and short snippets of code which are clearly attributed to their original author, 100% of the code in my Bonfires, Basejumps and Ziplines was written by me or along with another camper with whom I was pair programming in real time.</strong></p>\n<p><strong>I pledge that I did not plagiarize any of my Free Code Camp work, and that I am OK with any random auditing Free Code Camp may do to confirm this.</strong></p>\n"}},function(e,n){e.exports={title:"Accessing the database from your frontend",order:5,body:'<p>You must have noticed in <strong>main.controller.js</strong> how <em>things</em> were retrieved from the database and displayed:</p>\n<pre><code class="language-javascript">\n$http.get(<span class="hljs-string">\'/api/things\'</span>).success(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">awesomeThings</span>)</span>{  \n	$scope.awesomeThings = awesomeThings;  \n});\n\n</code></pre>\n<p>What this does is call the api with a “get” request, which is then routed by <strong>/server/api/thing/index.js</strong> to the <em>exports.index</em> function in <strong>thing.controller.js</strong>. You’ll also notice in <strong>main.controller.js</strong> that there are included examples of <em>$http.post</em> and <em>$http.delete</em> functions too! How nice!</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Fixing-exports.update">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Seed-data">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Adding Environment Variables",order:5,body:'<h1>In Windows</h1>\n<h3>Via GUI</h3>\n<ol>\n<li>Download <a href="http://implbits.com/products/varpanel/">Varpanel</a>.</li>\n<li>Open Varpanel.</li>\n<li>In PATH variable, add the relevant path (for example).</li>\n</ol>\n<p><img src="http://i.imgur.com/RqgGcf5.gif" alt=""></p>\n<h2>Via Command Line</h2>\n<p>Refer to <a href="http://superuser.com/a/284351/275797">this answer</a> on Super User.</p>\n'}},function(e,n){e.exports={title:"Angular Resources",order:5,body:'<p>A collection of helpful Angular resources</p>\n<h3>General Pages</h3>\n<ul>\n<li><a href="https://angularjs.org/">Angular JS</a> - The Angular JS Homepage</li>\n<li><a href="https://github.com/johnpapa/angular-styleguide">Angular Style Guide</a> - Detailed best practices for Angular Development</li>\n</ul>\n<h3>Specific-topic Pages</h3>\n<ul>\n<li><a href="http://www.sitepoint.com/practical-guide-angularjs-directives/">Directives</a> - Excellent guide going into detail on Angular Directives (Part 1)</li>\n<li><a href="http://www.sitepoint.com/practical-guide-angularjs-directives-part-two/">Directives</a> - Excellent guide going into detail on Angular Directives (Part 2)</li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li><a href="https://www.youtube.com/watch?v=5uhZCc0j9RY">Routing in Angular JS</a> - Client Side Routing in 15 minutes</li>\n<li><a href="https://www.youtube.com/watch?v=WuiHuZq_cg4">Angular ToDo App</a> - An Angular ToDo app in 12 minutes</li>\n<li><a href="https://www.codeschool.com/courses/shaping-up-with-angular-js">Shaping Up with Angular.JS</a> - A free Angular.JS tutorial</li>\n</ul>\n'}},function(e,n){e.exports={title:"Arithmetic Operators",order:5,body:'<p>JavaScript provides the user with five arithmetic operators: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> and <code>%</code>. The operators are for addition, subtraction, multiplication, division and remainder respectively.</p>\n<h3>Addition</h3>\n<p><strong>Syntax</strong></p>\n<p><code>a + b</code></p>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-number">2</span> + <span class="hljs-number">3</span>          <span class="hljs-comment">// returns 5</span>\n<span class="hljs-literal">true</span> + <span class="hljs-number">2</span>       <span class="hljs-comment">// interprets true as 1 and returns 3</span>\n<span class="hljs-literal">false</span> + <span class="hljs-number">5</span>      <span class="hljs-comment">// interprets false as 0 and returns 5</span>\n<span class="hljs-literal">true</span> + <span class="hljs-string">"bar"</span>   <span class="hljs-comment">// concatenates the boolean value and returns "truebar"</span>\n<span class="hljs-number">5</span> + <span class="hljs-string">"foo"</span>      <span class="hljs-comment">// concatenates the string and the number and returns "5foo"</span>\n<span class="hljs-string">"foo"</span> + <span class="hljs-string">"bar"</span>  <span class="hljs-comment">// concatenates the strings and returns "foobar"</span>\n</code></pre>\n<p><em>Hint:</em> There is a handy <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Increment_()">increment</a> operator that is a great shortcut when you’re adding numbers by 1.</p>\n<h3>Subtraction</h3>\n<p><strong>Syntax</strong></p>\n<p><code>a - b</code></p>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-number">2</span> - <span class="hljs-number">3</span>      <span class="hljs-comment">// returns -1</span>\n<span class="hljs-number">3</span> - <span class="hljs-number">2</span>      <span class="hljs-comment">// returns 1</span>\n<span class="hljs-literal">false</span> - <span class="hljs-number">5</span>  <span class="hljs-comment">// interprets false as 0 and returns -5</span>\n<span class="hljs-literal">true</span> + <span class="hljs-number">3</span>   <span class="hljs-comment">// interprets true as 1 and returns 4</span>\n<span class="hljs-number">5</span> + <span class="hljs-string">"foo"</span>  <span class="hljs-comment">// returns NaN (Not a Number)</span>\n</code></pre>\n<p><em>Hint:</em> There is a handy <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Decrement_(--)">decrement</a> operator that is a great shortcut when you’re subtracting numbers by 1.</p>\n<h3>Multiplication</h3>\n<p><strong>Syntax</strong></p>\n<p><code>a * b</code></p>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-number">2</span> * <span class="hljs-number">3</span>                <span class="hljs-comment">// returns 6</span>\n<span class="hljs-number">3</span> * -<span class="hljs-number">2</span>               <span class="hljs-comment">// returns -6</span>\n<span class="hljs-literal">false</span> * <span class="hljs-number">5</span>            <span class="hljs-comment">// interprets false as 0 and returns 0</span>\n<span class="hljs-literal">true</span> * <span class="hljs-number">3</span>             <span class="hljs-comment">// interprets true as 1 and returns 3</span>\n<span class="hljs-number">5</span> * <span class="hljs-string">"foo"</span>            <span class="hljs-comment">// returns NaN (Not a Number)</span>\n<span class="hljs-literal">Infinity</span> * <span class="hljs-number">0</span>         <span class="hljs-comment">// returns NaN</span>\n<span class="hljs-literal">Infinity</span> * <span class="hljs-literal">Infinity</span>  <span class="hljs-comment">// returns Infinity</span>\n</code></pre>\n<h3>Division</h3>\n<p><strong>Syntax</strong></p>\n<p><code>a / b</code></p>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-number">3</span> / <span class="hljs-number">2</span>                <span class="hljs-comment">// returns 1.5</span>\n<span class="hljs-number">3.0</span> / <span class="hljs-number">2</span>/<span class="hljs-number">0</span>            <span class="hljs-comment">// returns 1.5</span>\n<span class="hljs-number">3</span> / <span class="hljs-number">0</span>                <span class="hljs-comment">// returns Infinity</span>\n<span class="hljs-number">3.0</span> / <span class="hljs-number">0.0</span>            <span class="hljs-comment">// returns Infinity</span>\n-<span class="hljs-number">3</span> / <span class="hljs-number">0</span>               <span class="hljs-comment">// returns -Infinity</span>\n<span class="hljs-literal">false</span> / <span class="hljs-number">5</span>            <span class="hljs-comment">// interprets false as 0 and returns 0</span>\n<span class="hljs-literal">true</span> / <span class="hljs-number">2</span>             <span class="hljs-comment">// interprets true a 1 and returns 0.5</span>\n<span class="hljs-number">5</span> + <span class="hljs-string">"foo"</span>            <span class="hljs-comment">// returns NaN (Not a Number)</span>\n<span class="hljs-literal">Infinity</span> / <span class="hljs-literal">Infinity</span>  <span class="hljs-comment">// returns NaN</span>\n</code></pre>\n<h3>Remainder</h3>\n<p><strong>Syntax</strong></p>\n<p><code>a % b</code></p>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-number">3</span> % <span class="hljs-number">2</span>          <span class="hljs-comment">// returns 1</span>\n<span class="hljs-literal">true</span> % <span class="hljs-number">5</span>       <span class="hljs-comment">// interprets true as 1 and returns 1</span>\n<span class="hljs-literal">false</span> % <span class="hljs-number">4</span>      <span class="hljs-comment">// interprets false as 0 and returns 0</span>\n<span class="hljs-number">3</span> % <span class="hljs-string">"bar"</span>      <span class="hljs-comment">// returns NaN</span>\n</code></pre>\n<p><em>!Important!</em> As you can see, you <strong>cannot</strong> perform any sort of operations on <code>Infinity</code>.</p>\n<p>Source: The amazing <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators">MDN</a>.</p>\n'}},function(e,n){e.exports={title:"Array.isArray",order:5,body:'<h1>Array.isArray</h1>\n<p>The <code>Array.isArray()</code> method returns <code>true</code> if an object is an array, <code>false</code> if it is not.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Array</span>.isArray(obj)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>obj</strong>\nThe object to be checked.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff848265%28v=vs.94%29.aspx">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-comment">// all following calls return true</span>\n<span class="hljs-built_in">Array</span>.isArray([]);\n<span class="hljs-built_in">Array</span>.isArray([<span class="hljs-number">1</span>]);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());\n<span class="hljs-comment">// Little known fact: Array.prototype itself is an array:</span>\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-built_in">Array</span>.prototype); \n\n<span class="hljs-comment">// all following calls return false</span>\n<span class="hljs-built_in">Array</span>.isArray();\n<span class="hljs-built_in">Array</span>.isArray({});\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-literal">null</span>);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-literal">undefined</span>);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-number">17</span>);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-string">\'Array\'</span>);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-literal">true</span>);\n<span class="hljs-built_in">Array</span>.isArray(<span class="hljs-literal">false</span>);\n<span class="hljs-built_in">Array</span>.isArray({ __proto__: <span class="hljs-built_in">Array</span>.prototype });\n</code></pre>\n'}},function(e,n){e.exports={title:"August 2015 Improvements",order:5,body:'<h2>Sunday’s Improvements</h2>\n<ul>\n<li>replaced our getting-started videos with a simple 10-minute process (using GIFs instead of videos)</li>\n<li>doubled the number of our HTML5 and Bootstrap challenges</li>\n<li>replaced Codecademy’s JavaScript and jQuery challenges with our own challenges</li>\n<li>added our own Object-oriented Programming and Functional Programming challenges</li>\n<li>added two new Zipline front end challenges (Personal Portfolio and Simon game), and moved our Ziplines to much earlier in our curriculum</li>\n<li>completely replaced our Field Guide with a searchable, and easily-editable open-source wiki</li>\n<li>made it so your Bonfire code is stored in your browser, so if you leave the page, your code will be there when you come back</li>\n<li>simplified our portfolio pages. You can now click a single button to mirror your Free Code Camp profile with your GitHub profile. Bonfire solutions are no longer shown here, but they’ll eventually be accessible through our API.</li>\n<li>fixed some issues with Brownie Points and Streaks</li>\n<li>improved our Camper News page by removing the (mostly unused) comments and adding one-click upvoting</li>\n<li>added a Creative Commons license to literally all of our images and text</li>\n<li>thanks to Loopback, everything is now an API, and we will soon publish cool ways to interact with Free Code Camp’s (non-sensitive) data</li>\n</ul>\n<h2>FAQ</h2>\n<h3>The challenge I was most recently doing disappeared.</h3>\n<p>You can just keep going. If you have time to go back and try our new challenges, they should be a quick review for you. Otherwise, keep moving forward.</p>\n<h3>Why are you deploying all these improvements at once?</h3>\n<p>We’ve been working on some of the features for months on our Staging branch. Most of them were held up by a single task: our transition to <a href="http://loopback.io/">Loopback</a>. @BerkeleyTrue started working on this back in March.</p>\n<h3>Was deploying everything at once necessary?</h3>\n<p>Probably not. Going forward, we will deploy new code several times a day (as we did prior to the Loopback feature). We plan to start using a <a href="https://en.wikipedia.org/wiki/Continuous_integration">continuous integration</a> and other agile best practices as we reduce our <a href="https://en.wikipedia.org/wiki/Technical_debt">technical debt</a>.</p>\n'}},function(e,n){e.exports={title:"August Live Stream",order:5,body:'<h3>Free Code Camp’s [August Live Stream] (<a href="https://youtu.be/UhoxoYrJ6Qs">https://youtu.be/UhoxoYrJ6Qs</a>) was the largest yet.</h3>\n<h2>The agenda included:</h2>\n<ul>\n<li>Opening words from Michael</li>\n<li>New front end challenges [3:00] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=3m">https://youtu.be/UhoxoYrJ6Qs?t=3m</a>)</li>\n<li>Newly configured full-stack challenges</li>\n<li>New Nonprofit Projects [12:32] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=12m32s">https://youtu.be/UhoxoYrJ6Qs?t=12m32s</a>)</li>\n<li>Wiki [22:49] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=22m49s">https://youtu.be/UhoxoYrJ6Qs?t=22m49s</a>)</li>\n<li>New chat rooms [29:40] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=29m40s">https://youtu.be/UhoxoYrJ6Qs?t=29m40s</a>)</li>\n<li>New Live Streams [35:34] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=35m34s">https://youtu.be/UhoxoYrJ6Qs?t=35m34s</a>)</li>\n<li>New Internet Radio Station DJ’d by campers [36:30] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=36m30s">https://youtu.be/UhoxoYrJ6Qs?t=36m30s</a>)</li>\n<li>FCC Bot [39:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=39m24s">https://youtu.be/UhoxoYrJ6Qs?t=39m24s</a>)</li>\n<li>Matt Yamamoto Zipline Demo [54:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=54m24s">https://youtu.be/UhoxoYrJ6Qs?t=54m24s</a>)</li>\n<li>Closing from Quincy [1:04:15] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s">https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s</a>)</li>\n<li>[Pull Request After Party with Quincy] (<a href="https://youtu.be/r0lCJ_TFYlI">https://youtu.be/r0lCJ_TFYlI</a>)</li>\n</ul>\n<p><a href="http://www.youtube.com/watch?feature=player_embedded&v=UhoxoYrJ6Qs\n" target="_blank">&lt;img src=“https://www.evernote.com/l/AnvmsUWWNeJFNbfm7fDa7SRLmnbn7jafRL4B/image.png”\nalt=“Screen shot from our twitch feed on August 1 2015” width=“560” height=&quot;315&quot;border=“10” /&gt;</a></p>\n'}},function(e,n){e.exports={title:"Backend file structure",order:5,body:'<p>Your app’s backend api that interacts with your database is located in <strong>/server/api</strong><br>\nLet’s take a look at <strong>/server/api/thing</strong>:</p>\n<ol>\n<li><strong>index.js</strong>:  this file routes the $http API requests made from your app’s front-end to the appropriate function in **thing.controller.js **</li>\n<li><strong>thing.controller.js</strong>: Here is where we actually deal with the database! Take a minute to look through here and figure out what’s going on. These functions will: return all items in a collection, return a single item from a collection when passed its id, post an item to a collection, update an item in the collection (this doesn’t really work as intended out of the box, we’re going to fix that in a minute), and of course, delete an item from the collection.</li>\n<li><strong>thing.model.js</strong>: Here, the actual structure of a <em>thing</em> object is defined. You can add or remove any fields you want from the <em>thing</em> model, and as long as they’re syntactically correct they won’t break anything, even if there are <em>things</em> with different schemas in your database already. But! You don’t just have to edit the <em>thing</em> model to make a new type of collection, because generator-angular-fullstack can do it for you!</li>\n</ol>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Grunt">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-API-endpoint">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Basejump Resources",order:5,body:'<p>The curriculum lead-up to the first Basejump is not very comprehensive.  Here are a number of common resources which other campers have found helpful.</p>\n<h3>Getting Started with Basejumps</h3>\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps">https://freecodecamp.github.io/wiki/docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps</a> - Lots of helpful tips and tricks for the Yeoman Angular Fullstack setup</li>\n<li><a href="https://github.com/DaftMonk/generator-angular-fullstack#generators">https://github.com/DaftMonk/generator-angular-fullstack#generators</a> - Generator used by Yeoman, you can find syntax and what files it creates</li>\n</ul>\n<h3>APIs</h3>\n<ul>\n<li>API for Charting the stock market: <a href="https://www.quandl.com/help/api">https://www.quandl.com/help/api</a></li>\n</ul>\n<h3>MEAN Stack Tutorials &amp; Videos</h3>\n<ul>\n<li>\n<p>5 Part Series on setting up a MEAN stack\n<a href="https://www.youtube.com/watch?v=kHV7gOHvNdk">https://www.youtube.com/watch?v=kHV7gOHvNdk</a></p>\n</li>\n<li>\n<p>A MEAN tutorial that creates a simple Twitter clone\n<a href="https://channel9.msdn.com/Series/MEAN-Stack-Jump-Start">https://channel9.msdn.com/Series/MEAN-Stack-Jump-Start</a></p>\n</li>\n<li>\n<p>Clementine is a stripped down MEAN stack, great for learning the fundamentals.<br>\n<a href="https://johnstonbl01.github.io/clementinejs/tutorials/tutorial-beginner.html">https://johnstonbl01.github.io/clementinejs/tutorials/tutorial-beginner.html</a></p>\n</li>\n<li>\n<p>Authentication with Passport for the MEAN stack:\n<a href="https://vickev.com/#!/article/authentication-in-single-page-applications-node-js-passportjs-angularjs">https://vickev.com/#!/article/authentication-in-single-page-applications-node-js-passportjs-angularjs</a></p>\n</li>\n<li>\n<p>An amazing list of resources for learning the MEAN stack:\n<a href="https://github.com/ericdouglas/MEAN-Learning">https://github.com/ericdouglas/MEAN-Learning</a></p>\n</li>\n</ul>\n<h3>Scotch IO Tutorials</h3>\n<ul>\n<li><a href="https://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application">https://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application</a></li>\n<li><a href="https://scotch.io/tutorials/node-and-angular-to-do-app-application-organization-and-structure">https://scotch.io/tutorials/node-and-angular-to-do-app-application-organization-and-structure</a></li>\n</ul>\n<h3>Node/Express</h3>\n<ul>\n<li><a href="http://stackoverflow.com/a/16512303/1420506">Online Debugging for Node.js/Express</a></li>\n</ul>\n<h3>Cloud 9 Tricks</h3>\n<h5>Speed up browser reloads</h5>\n<ol>\n<li>Open gruntfile.js and edit both instances of <code>livereload: true</code> to <code>livereload: false</code>.</li>\n<li>Open server/config/express.js and comment out the line <code>app.use(require(\'connect-livereload\')());</code></li>\n</ol>\n'
}},function(e,n){e.exports={title:"Bobby Tables",order:5,body:'<p><img src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" alt="Her daughter is named Help I\'m trapped in a driver\'s license factory"><br>\n<em>Source:<a href="https://xkcd.com/327/">xkcd</a></em></p>\n'}},function(e,n){e.exports={title:"Bonfire Arguments Optional",order:5,body:'<p><img src="http://i.imgur.com/63Iaec6.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>It can be quite complicated to understand what needs to be done. There is always many ways to do something when coding but regardless of the algorithm used,  we have to create a program that does the following:</p>\n<ul>\n<li>It has to add two numbers passed as parameters and return the sum.</li>\n<li>It has to check if any of the numbers are actual numbers, otherwise return <strong>undefined</strong> and stop the program right there.</li>\n<li>It has to check if it has one or two arguments passed. More re ignored.</li>\n<li>If it has only one then it has to return a function that used that number and expects another one, to then add it.</li>\n</ul>\n<h2>Hint: 1</h2>\n<p>Every time you deal with an argument, you have to check if it is a number or not. For this a function that handles this task will save you repeated code.</p>\n<h2>Hint: 2</h2>\n<p>When working on the case that it needs to return the function, it is wise to check if the first and only argument is a number again and base the code on that.</p>\n<h2>Hint: 3</h2>\n<p>In the case that only one argument was passed, do not worry about how to prompt input for the second one, just make the function definition properly and things will work out the way they should.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// Function to check if a number is actually a number</span>\n  <span class="hljs-comment">// and return undefined otherwise.</span>\n  <span class="hljs-keyword">var</span> checkNum = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> num !== <span class="hljs-string">\'number\'</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    } <span class="hljs-keyword">else</span>\n      <span class="hljs-keyword">return</span> num;\n  };\n\n  <span class="hljs-comment">// Check if we have two parameters, check if they are numbers</span>\n  <span class="hljs-comment">// handle the case where one is not</span>\n  <span class="hljs-comment">// returns the addition.</span>\n  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">arguments</span>.length &gt; <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">var</span> a = checkNum(<span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>]);\n    <span class="hljs-keyword">var</span> b = checkNum(<span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">if</span> (a === <span class="hljs-literal">undefined</span> || b === <span class="hljs-literal">undefined</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">return</span> a + b;\n    }\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">// If only one parameter was found, returns a new function that expects two</span>\n    <span class="hljs-comment">// Store first argument before entering the new function scope</span>\n    <span class="hljs-keyword">var</span> c = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>];\n\n    <span class="hljs-comment">// Check the number again, must be outside the function to about returning an object</span>\n    <span class="hljs-comment">// instead of undefined.</span>\n    <span class="hljs-keyword">if</span> (checkNum(c)) {\n      <span class="hljs-comment">// Return function that expect a second argument.</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arg2</span>) </span>{\n        <span class="hljs-comment">// Check for non-numbers</span>\n        <span class="hljs-keyword">if</span> (c === <span class="hljs-literal">undefined</span> || checkNum(arg2) === <span class="hljs-literal">undefined</span>) {\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-comment">// if numbers then add them.</span>\n          <span class="hljs-keyword">return</span> c + arg2;\n        }\n      };\n    }\n  }\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First, I create a function with the sole purpose of checking if a number is actually a number and returns undefined if it is not. It uses <strong>typeof</strong> to check.</li>\n<li>Check if we have two parameters, if so, then check if they are numbers or not using the <strong>checkNum</strong> function I created.</li>\n<li>If they are not <strong>undefined</strong> then add them and return the addition. If they any of them is undefined then return undefined.</li>\n<li>In the case that we only have one argument, then we return a new function that expects two parameters. For this we store the first argument before going into a new scope to avoid our arguments being overwritten.</li>\n<li>Still inside the big else, we need to check the argument we saved, if it is a number then we return the function expecting a second argument.</li>\n<li>Now inside the function we are returning, we have to check for non numbers again just as at the beginning using <strong>checkNum</strong> if undefined then return that, otherwise if numbers add them and return the addition.</li>\n</ul>\n<h2>Second Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> args = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-built_in">arguments</span>.length);\n  <span class="hljs-comment">//Storing the arguments in an array</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; args.length; ++i) {\n      args[i] = <span class="hljs-built_in">arguments</span>[i];\n    }\n <span class="hljs-comment">//Check for the arguments length</span>\n <span class="hljs-keyword">if</span>(args.length == <span class="hljs-number">2</span>){\n    <span class="hljs-comment">//If there are two arguments,check for the type of both arguments</span>\n    <span class="hljs-comment">//Use typeof to check the type of the argument(both should be numbers)</span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> args[<span class="hljs-number">0</span>] !== <span class="hljs-string">\'number\'</span> || <span class="hljs-keyword">typeof</span> args[<span class="hljs-number">1</span>] !==<span class="hljs-string">\'number\'</span> ){\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n      }\n    <span class="hljs-keyword">return</span> args[<span class="hljs-number">0</span>]+args[<span class="hljs-number">1</span>];\n   }\n <span class="hljs-comment">//When only one argument is provided</span>\n <span class="hljs-keyword">if</span>(args.length == <span class="hljs-number">1</span>){\n     a= args[<span class="hljs-number">0</span>];\n     <span class="hljs-comment">//Check the  argument using typeof </span>\n    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> a!==<span class="hljs-string">\'number\'</span>){\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n      }\n    <span class="hljs-keyword">else</span>{\n       <span class="hljs-comment">//Making use of closures </span>\n       <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)</span>{\n       <span class="hljs-comment">//Checking the second argument </span>\n         <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> b !==<span class="hljs-string">\'number\'</span>){\n           <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n           }\n         <span class="hljs-keyword">else</span>\n           <span class="hljs-keyword">return</span> a+b;\n          };\n      }\n    }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @coded9</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Binary Agents",order:5,body:'<p><img src="http://i.imgur.com/HSwaSFK.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>This problem is very straight forward, you will get string that will represent a sentence in binary code, and you need to translate that into words. There is not direct way to do this so you will have to translate twice.</p>\n<p>You should first convert from <strong>binary</strong> to <strong>decimal</strong> and from decimal before translating those values into characters</p>\n<h2>Hint: 2</h2>\n<p>Things are easier when focusing on smaller parts, divide the input to focus on one letter at the time.</p>\n<h2>Hint: 3</h2>\n<p>Make sure that each time you transcode a character from binary to decimal, that you reset whatever variable you used to keep track of the ones. Also do not forget to turn everything back into one string.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  biString = str.split(<span class="hljs-string">\' \'</span>);\n  uniString = [];\n  \n<span class="hljs-comment">/*using the radix (or base) parameter in parseInt, we can convert the binary \n  number to a decimal number while simultaneously converting to a char*/</span>\n\n   <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i &lt; biString.length;i++){\n   uniString.push(<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-built_in">parseInt</span>(biString[i], <span class="hljs-number">2</span>))); \n  }\n<span class="hljs-comment">//we then simply join the string</span>\n  <span class="hljs-keyword">return</span> uniString.join(<span class="hljs-string">\'\'</span>);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Separate the string into an array of strings separated by whitespace.</li>\n<li>Create some variables that will be needed along the way, the names are self explanatory for the most part.</li>\n<li>Iterate through each binary string in the new array.</li>\n<li>Convert to decimal by using parseInt(<em>binary</em>, 2) (with the second parameter we tell in which base our numbers currently are)</li>\n<li>At the end, we return out converted message.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Separate the binary code by space.</span>\n  str = str.split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">var</span> power;\n  <span class="hljs-keyword">var</span> decValue = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> sentence = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Check each binary number from the array.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-number">0</span>; s &lt; str.length; s++) {\n    <span class="hljs-comment">// Check each bit from binary number</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; str[s].length; t++) {\n      <span class="hljs-comment">// This only takes into consideration the active ones.</span>\n      <span class="hljs-keyword">if</span> (str[s][t] == <span class="hljs-number">1</span>) {\n        <span class="hljs-comment">// This is quivalent to 2 ** position</span>\n        power = <span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>, +str[s].length - t - <span class="hljs-number">1</span>);\n        decValue += power;\n\n        <span class="hljs-comment">// Record the decimal value by adding the number to the previous one.</span>\n      }\n    }\n\n    <span class="hljs-comment">// After the binary number is converted to decimal, convert it to string and store</span>\n    sentence += (<span class="hljs-built_in">String</span>.fromCharCode(decValue));\n\n    <span class="hljs-comment">// Reset decimal value for next binary number.</span>\n    decValue = <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">return</span> sentence;\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>For each of these binary strings, check for the ones and ignore the zeroes.</li>\n<li>For those that are one or active then convert them to decimal, this takes into account the position and the right power it needs to be raised to.</li>\n<li>Store the power into the <strong>power</strong> variable by adding it to any previous ones on the variable <strong>decValue</strong>. This variable will add and add the powers of the active ones until the end of the loop and then return the decimal number.</li>\n<li>Convert the final decimal outside of the inner loop and then convert it to ASCII and saving it to <strong>sentence</strong> along with any other text string already converted and stored.</li>\n<li>Reset the variable <strong>decValue</strong> to avoid getting wrong decimals before continuing to the outer loop.</li>\n</ul>\n<h2>Code Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">binaryAgent</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(...str.split(<span class="hljs-string">" "</span>).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">char</span>)</span>{ <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(char, <span class="hljs-number">2</span>); }));\n}\n</code></pre>\n<h1>Code Explanation</h1>\n<ul>\n<li>First we use <code>split()</code> to be able to work on each character as an Array element</li>\n<li>Then use <code>map()</code> to process each element  from binary to decimal using \'pareseInt()`</li>\n<li>Last we can use <code>String.fromCharCode()</code> to convert each ASCII number into the corresponding character</li>\n<li>However <code>fromCharCode()</code> expects a series of numbers rather than an Array! We can use ES6 Spread Operator to pass in an Array of numbers as individual numbers. See here for more info; <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @JamesKee @sabahang</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Boo who",order:5,body:'<p><img src="http://i.imgur.com/CgROCEF.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>This program is very simple, the trick is to understand what a boolean primitive is. The programs requires a true or false answer.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will need to check for the type of the parameter to see if it is a boolean.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>To check for the type of a parameter, you can use <code>typeof</code></li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Since you must return true or false you can use if statements or just have it return the boolean used for the if statement.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">boo</span>(<span class="hljs-params">bool</span>) </span>{\n  <span class="hljs-comment">// Uses the operator typeof to check if is a boolean</span>\n  <span class="hljs-comment">// if yes then return true, if it is another type then return false</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> bool === <span class="hljs-string">\'boolean\'</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Check for Palindromes",order:5,body:'<p><img src="http://i.imgur.com/ozDWKEi.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>You have to check if the string you get as an input is a palindrome and return <code>true</code> if it is, and <code>false</code> otherwise.</p>\n<h2>Hint: 1</h2>\n<p>You may use regular expressions (<code>RegExp</code>) to remove unwanted characters from the string.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+RegExp">http://devdocs.io/#q=js+RegExp</a></li>\n</ul>\n<h2>Hint: 2</h2>\n<p>You may use <code>Array.prototype.split</code> and <code>Array.prototype.join</code> methods or <code>for</code> loop.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+String+split">http://devdocs.io/#q=js+String+split</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+join">http://devdocs.io/#q=js+Array+join</a></li>\n<li><a href="http://devdocs.io/#q=js+for">http://devdocs.io/#q=js+for</a></li>\n</ul>\n<h2>Hint: 3</h2>\n<p>You may lowercase the string using <code>String.prototype.toLowerCase</code>.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+String+toLowerCase">http://devdocs.io/#q=js+String+toLowerCase</a></li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>First</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> normalizedStr = str.replace(<span class="hljs-regexp">/[\\W_]/g</span>, <span class="hljs-string">\'\'</span>).toLowerCase();\n  <span class="hljs-keyword">var</span> reverseStr = normalizedStr.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">return</span> normalizedStr === reverseStr;\n}\n</code></pre>\n<h2>Second</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n  str = str.toLowerCase().replace(<span class="hljs-regexp">/[\\W_]/g</span>, <span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = str.length - <span class="hljs-number">1</span>; i &lt; len/<span class="hljs-number">2</span>; i++) {\n    <span class="hljs-keyword">if</span>(str[i] !== str[len-i]) {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    }\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>We use regular expressions to replace any uppercase letter into a lowercase. Then we check if the string is the same as the reversed string using <code>split()</code> to split the original string by characters, then reverse and then join it back together.</p>\n<h2>Recursive Solution</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">palindrome</span>(<span class="hljs-params">str</span>) </span>{\n<span class="hljs-comment">// make all letters lowercase and remove non-alphanumeric characters</span>\n  str = str.toLowerCase();\n  str = str.replace(<span class="hljs-regexp">/[^a-z|1-9]/g</span>, <span class="hljs-string">""</span>);\n  \n  <span class="hljs-comment">// if the length of the string is 0 then it is a palindrome</span>\n  <span class="hljs-keyword">if</span> (str.length === <span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n  <span class="hljs-comment">// if the first letter and the last letter of the string do not equal eachother then it is not a palindrome</span>\n  <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>] !== str[str.length-<span class="hljs-number">1</span>]){\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  <span class="hljs-comment">//Else, run the function without the first and last characters.</span>\n  <span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> palindrome(str.slice(<span class="hljs-number">1</span>,str.length - <span class="hljs-number">1</span>));\n  }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @abhisekp @shadowfool</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Chunky Monkey",order:5,body:'<p><img src="http://i.imgur.com/RdrnNvA.png" alt=""></p>\n<h1>Explanation</h1>\n<p>Our goal for this bonfire is to split <code>arr</code> (first argument) into smaller chunks of arrays with the length provided by <code>size</code> (second argument). There are 4 green checks (objectives) our code needs to pass in order to complete this bonfire:</p>\n<ol>\n<li><code>([\'a\', \'b\', \'c\', \'d\'], 2)</code> is expected to be <code>[[\'a\', \'b\'], [\'c\', \'d\']]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 3)</code> is expected to be <code>[[0, 1, 2], [3, 4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 2)</code> is expected to be <code>[[0, 1], [2, 3], [4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 4)</code> is expected to be <code>[[0, 1, 2, 3], [4, 5]]</code></li>\n</ol>\n<p>Click <strong>More information</strong> under the bonfire title and read the helpful links if you haven’t yet.</p>\n<h2>How to approach the bonfire</h2>\n<p>The helpful links suggest to use <code>Array.push()</code> so let’s start by first creating a new array to store the smaller arrays we will soon have like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> newArray = [];\n</code></pre>\n<p>Next we’ll need a <code>for loop</code> to loop through <code>arr</code> then finally we need a method to do the actual splitting and we can use <code>Array.slice()</code> to do that. The key to this bonfire is understanding how a <code>for loop</code>, <code>size</code>, <code>Array.slice()</code> and <code>Array.push()</code> all work together.</p>\n<h1>How does a for loop and Array.slice() work</h1>\n<p><strong>For Loop</strong></p>\n<p>A <code>for loop</code> keeps looping until a condition evaluates to false for example if we had:</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++)\n</code></pre>\n<p><code>i</code> starts with a value of 0, <code>i</code> loops until <code>i</code> is no longer less than the length of <code>arr</code> and during each repeat loop, the value of <code>i</code> increases by 1 (one). If <code>arr.length</code> happens to be 4 then the <code>for loop</code> stops right before <code>i</code> reaches 4.</p>\n<p><strong>Array.slice() Method</strong></p>\n<p><code>Array.slice()</code> method extracts a portion of an array and returns a copy into a new array. We can declare which element to start and which element to stop. For example, if <code>arr</code> is <code>[\'a\', \'b\', \'c\', \'d\']</code> and we used <code>arr.slice(1, 3);</code>, the <code>Array.slice()</code> method starts at element 1 and stops at element 3 then returns:</p>\n<pre><code class="language-js">[<span class="hljs-string">"b"</span>,<span class="hljs-string">"c"</span>]\n</code></pre>\n<p><em>Notice how it captures the start element but doesn’t capture the stop element.</em></p>\n<h1>Using a for loop and Array.slice() together</h1>\n<p>If we use the following <code>for loop</code> while <code>size</code> is 2 (note: <code>size</code> = 2):</p>\n<pre><code class="language-js">(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i += size)\n</code></pre>\n<p>The loop starts at element 0, loops once then <code>i += 2</code> which is another way of stating <code>i = i + 2</code> so now the new value of <code>i</code> becomes 2. What happens if we combine the following <code>arr.slice()</code> with the <code>for loop</code>?</p>\n<pre><code class="language-js">arr.slice(i, i + size)\n</code></pre>\n<h1>Push the arrays out</h1>\n<p>We can combine the <code>Array.slice()</code> method with the <code>Array.push()</code> method inside the <code>for loop</code> like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i += size) {\nnewArray.push(arr.slice(i, i + size));\n}\n</code></pre>\n<p><code>arr.slice()</code> will start at element 0 and stop at element 2. Here’s the fun part: once the <code>for loop</code>, loops again then the value of <code>i</code> becomes 2 while the <code>i</code> in the <code>arr.slice()</code> will also have a value of 2. The new <code>arr.slice()</code> becomes:</p>\n<pre><code class="language-js">arr.slice(<span class="hljs-number">2</span>, <span class="hljs-number">2</span> + <span class="hljs-number">2</span>)\n</code></pre>\n<p>Now <code>arr.slice()</code> starts at the element 2 and stops at element 4 and in the next loop, <code>arr.slice()</code> will start at element 4 and stop at element 6. <code>newArray.push()</code> will push all the elements out into chunks of smaller arrays with the length of <code>size</code>.</p>\n<h2>Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n\n  <span class="hljs-keyword">var</span> temp = [];\n  <span class="hljs-keyword">var</span> result = [];\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (a % size !== size - <span class="hljs-number">1</span>)\n      temp.push(arr[a]);\n    <span class="hljs-keyword">else</span> {\n      temp.push(arr[a]);\n      result.push(temp);\n      temp = [];\n    }\n  }\n\n  <span class="hljs-keyword">if</span> (temp.length !== <span class="hljs-number">0</span>)\n    result.push(temp);\n  <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n<h2>Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n  <span class="hljs-comment">// Break it up</span>\n  <span class="hljs-comment">// It\'s already broken :(</span>\n  arr = arr.slice();\n  <span class="hljs-keyword">var</span> arr2 = [];\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = arr.length; i &lt; len; i+=size) {\n    arr2.push(arr.slice(<span class="hljs-number">0</span>, size));\n    arr = arr.slice(size);\n  }\n  <span class="hljs-keyword">return</span> arr2;\n}\n</code></pre>\n<h2>Solution 3:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chunk</span>(<span class="hljs-params">arr, size</span>) </span>{\n  \n  <span class="hljs-comment">// Break it up.</span>\n    \n  <span class="hljs-keyword">var</span> newArr = [];\n  \n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i += size) {\n    \n    newArr.push(arr.slice(i, i + size));\n    \n  }\n  \n  <span class="hljs-keyword">return</span> newArr;\n}\n\nchunk([<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span>, <span class="hljs-string">"d"</span>], <span class="hljs-number">2</span>);\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @kirah1314 @Rafase282 @jsommamtek</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Confirm the Ending",order:5,body:'<p><img src="http://i.imgur.com/Z7vhddH.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>The function is a whole Boolean operation. You need to return true if the first argument ends with the second argument. This means that for the problem script, it should return true for the <code>end(\'Bastian\', \'n\'); case.</code></p>\n<h2>Hint: 1</h2>\n<p>Take a look at how substr() works. You will be trying to get the last Nth characters.</p>\n<h2>Hint: 2</h2>\n<p>To get the Nth-to-Last character you will use length() and turn it into a negative number.</p>\n<h2>Hint: 3</h2>\n<p>Check that you have the proper syntax and that you use <code>===</code> to compare.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params">str, target</span>) </span>{\n  <span class="hljs-keyword">return</span> str.substr(-target.length) === target;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>We use the subtring() with the negative value of the lengths of target. We could use -1 to get the last element but if the target is actually longer than one letter then the program will provide the wrong information. Then we return the value of this boolean expression.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Convert HTML Entities",order:5,body:'<p><img src="http://i.imgur.com/g7sWL1I.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>You have to create a program that will convert HTML entities from string to their corresponding HTML entities. There are only a few so you can use different methods.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You can use regular Expressions however I didn’t in this case.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will benefit form a chart with all the html entities so you know which ones are the right ones to put.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You should separate the string and work with each character to convert the right ones and then join everything back up.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Split by character to avoid problems.</span>\n\n  <span class="hljs-keyword">var</span> temp = str.split(<span class="hljs-string">\'\'</span>);\n\n  <span class="hljs-comment">// Since we are only checking for a few HTML elements I used a switch</span>\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; temp.length; i++) {\n    <span class="hljs-keyword">switch</span> (temp[i]) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&lt;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;lt;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&amp;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;amp;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'&gt;\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;gt;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'"\'</span>:\n        temp[i] = <span class="hljs-string">\'&amp;quot;\'</span>;\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">"\'"</span>:\n        temp[i] = <span class="hljs-string">\'&amp;apos;\'</span>;\n        <span class="hljs-keyword">break</span>;\n    }\n  }\n\n  temp = temp.join(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">return</span> temp;\n}\n</code></pre>\n<p>##Another Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n    \n    <span class="hljs-comment">//map of key:value pairs</span>\n    <span class="hljs-keyword">var</span> html = {\n       <span class="hljs-string">"&amp;"</span>:<span class="hljs-string">"&amp;amp;"</span>,\n       <span class="hljs-string">"&lt;"</span>:<span class="hljs-string">"&amp;lt;"</span>,\n       <span class="hljs-string">"&gt;"</span>:<span class="hljs-string">"&amp;gt;"</span>,\n       <span class="hljs-string">"\\""</span>:<span class="hljs-string">"&amp;quot;"</span>,\n       <span class="hljs-string">"\\\'"</span>:<span class="hljs-string">"&amp;apos;"</span>\n    };\n        str = str.replace(<span class="hljs-regexp">/&amp;|&lt;|&gt;|"|\'/gi</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">matched</span>)</span>{\n        <span class="hljs-keyword">return</span> html[matched];\n        });\n\n  <span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<p>##Another Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">str</span>) </span>{\n<span class="hljs-comment">//Chaining of replace method with different arguments</span>\n  str = str.replace(<span class="hljs-regexp">/&amp;/g</span>,<span class="hljs-string">\'&amp;amp;\'</span>).replace(<span class="hljs-regexp">/&lt;/g</span>,<span class="hljs-string">\'&amp;lt;\'</span>).replace(<span class="hljs-regexp">/&gt;/g</span>,<span class="hljs-string">\'&amp;gt;\'</span>).replace(<span class="hljs-regexp">/"/g</span>,<span class="hljs-string">\'&amp;quot;\'</span>).replace(<span class="hljs-regexp">/\'/g</span>,<span class="hljs-string">\'&amp;apos;\'</span>);\n<span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong> <strong><code>thanks @jhalls</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire DNA Pairing",order:5,body:'<p><img src="http://i.imgur.com/usiNBDU.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<ul>\n<li>You will get a DNA strand sequence and you need to get the pair and return it as a 2D array of the base pairs. Keep in mind that the provided strand should be first always.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>There are two base case, A-T and C-G, these go both way. You can use regular expression, if statements of anything that you can think of.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>I would recommend using a switch, as it makes things a lot smoother.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The result must be an array of arrays, so keep that in mind when pushing things.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>Solution 1</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pair</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Return each strand as an array of two elements, the original and the pair.</span>\n  <span class="hljs-keyword">var</span> paired = [];\n\n  <span class="hljs-comment">// Function to check with strand to pair.</span>\n  <span class="hljs-keyword">var</span> search = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">char</span>) </span>{\n    <span class="hljs-keyword">switch</span> (char) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'A\'</span>:\n        paired.push([<span class="hljs-string">\'A\'</span>, <span class="hljs-string">\'T\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'T\'</span>:\n        paired.push([<span class="hljs-string">\'T\'</span>, <span class="hljs-string">\'A\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'C\'</span>:\n        paired.push([<span class="hljs-string">\'C\'</span>, <span class="hljs-string">\'G\'</span>]);\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'G\'</span>:\n        paired.push([<span class="hljs-string">\'G\'</span>, <span class="hljs-string">\'C\'</span>]);\n        <span class="hljs-keyword">break</span>;\n    }\n  };\n\n  <span class="hljs-comment">// Loops through the input and pair.</span>\n  <span class="hljs-built_in">console</span>.log(char);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; str.length; i++) {\n    search(str[i]);\n  }\n\n  <span class="hljs-keyword">return</span> paired;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The program is very simple, the best solution that I have come up with is to use a switch to catch all the possible four elements. Using if statements would take too much code. You could also use Regular Expressions.</li>\n<li>Since we have to the original and the pair, I decided to take all four cases instead of the base two.</li>\n<li>Create an empty array and use the <code>search</code> function to push the right values to the array and return them.</li>\n</ul>\n<h3>Solution 2</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pair</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">//define a map object with all pair possibilities </span>\n  <span class="hljs-keyword">var</span> map = {T:<span class="hljs-string">\'A\'</span>, A:<span class="hljs-string">\'T\'</span>, G:<span class="hljs-string">\'C\'</span>, C:<span class="hljs-string">\'G\'</span>};\n  <span class="hljs-comment">//split str into a a char Array</span>\n  strArr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-comment">//replace each Array item with a 2d Array using map</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;strArr.length;i++){\n    strArr[i]=[strArr[i], map[strArr[i]]];\n  }\n <span class="hljs-keyword">return</span> strArr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read the comments</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Diff Two Arrays",order:5,body:'<p><img src="http://i.imgur.com/HkEgef5.gif" alt=""></p>\n<h1>Explanation:</h1>\n<p>Check two arrays and return a new array that contains only the items that are not in either of the original arrays.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>Merge the list to make it easy to compare functions.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Use filter to get the new array, you will need to create a callback function.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The best way to go about the callback function is to check if the number from the new merged array is not in <strong>both</strong> original arrays and return it.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diff</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-keyword">var</span> newArr = arr1.concat(arr2);\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">item</span>) </span>{\n    <span class="hljs-keyword">if</span> (arr1.indexOf(item) === -<span class="hljs-number">1</span> || arr2.indexOf(item) === -<span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">return</span> item;\n    }\n  }\n\n  <span class="hljs-keyword">return</span> newArr.filter(check);\n}\n</code></pre>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diff</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-comment">// Same, same; but different.</span>\n  <span class="hljs-keyword">var</span> newArr = arr1.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>{\n    <span class="hljs-keyword">return</span> arr2.indexOf(el) === -<span class="hljs-number">1</span>;\n    \n    <span class="hljs-comment">// concat the previous output of filter method</span>\n    <span class="hljs-comment">// with the next output of filter method</span>\n  }).concat(arr2.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>{\n    <span class="hljs-keyword">return</span> arr1.indexOf(el) === -<span class="hljs-number">1</span>;\n  }));\n  <span class="hljs-keyword">return</span> newArr;\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Drop it",order:5,body:'<p><img src="http://i.imgur.com/goyTFy2.png" alt=""></p>\n<h1>Explanation:</h1>\n<p>Basically while the second argument is not true, you will have to remove the first element from the left of the array that was passed as the first argument.</p>\n<h2>Hint: 1</h2>\n<p>You can use Array.shift() or filter that you should be more familiar with to solve this problem in a few lines of code.</p>\n<h2>Hint: 2</h2>\n<p>Shift returns the element that was removed which we don’t really need, all we need is the modified array that is left.</p>\n<h2>Hint: 3</h2>\n<p>If you still can’t figure out how to solve it with shift, then try solving it with filter, and check how filter works, if you become familiar with it, then you can make the code with shift.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drop</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-comment">// Drop them elements.</span>\n  <span class="hljs-keyword">var</span> times = arr.length;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; times; i++) {\n    <span class="hljs-keyword">if</span> (func(arr[<span class="hljs-number">0</span>])) {\n      <span class="hljs-keyword">break</span>;\n    } <span class="hljs-keyword">else</span> {\n      arr.shift();\n    }\n  }\n  <span class="hljs-keyword">return</span> arr;\n}\ndrop([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>{<span class="hljs-keyword">return</span> n &lt; <span class="hljs-number">3</span>; });\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a for loop to check each element.</li>\n<li>Then check for the function given if true then stop, otherwise remove that element.</li>\n<li>return the array.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code><span class="hljs-function">function <span class="hljs-title">drop</span><span class="hljs-params">(arr, func)</span> </span>{\n  <span class="hljs-keyword">return</span> arr.slice(arr.findIndex(func) &gt;= <span class="hljs-number">0</span> &amp;&amp; arr.findIndex(func), arr.length);\n}\n\ndrop([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], function(n) {<span class="hljs-keyword">return</span> n &gt;= <span class="hljs-number">3</span>;});\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Use ES6 <code>findIndex()</code> function to  find the index of the element that passes the condition</li>\n<li>Slice the array from the found index until the end</li>\n<li>There is one edge case! if the condition is not met against any of the elements ‘findIndex’ will return <code>-1</code> which messes up the input to <code>slice()</code>. In this case use a simple conditional operator to return <code>false</code> instead of <code>-1</code>. For more info see <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @sabahang</code></p>\n'}},function(e,n){e.exports={title:"Bonfire Everything be True",order:5,body:'<p><img src="http://i.imgur.com/oKEJJJI.jpg" alt=""></p>\n<h1>Explanation:</h1>\n<p>The program needs to check if the second argument is a <a href="https://freecodecamp.github.io/wiki/docs/js-truthy">truthy</a> element, and it must check this for each object in the first argument.</p>\n<h2>Hint: 1</h2>\n<p>Remember to iterate through the first argument to check each object.</p>\n<h2>Hint: 2</h2>\n<p>Only if all of them are truth will we return true, so make sure all of them check.</p>\n<h2>Hint: 3</h2>\n<p>You could use loops or callbacks functions, there are multiple ways to solve this problem.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">every</span>(<span class="hljs-params">collection, pre</span>) </span>{\n  <span class="hljs-comment">// Create a counter to check how many are true.</span>\n  <span class="hljs-keyword">var</span> counter = <span class="hljs-number">0</span>;\n  <span class="hljs-comment">// Check for each object</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> collection) {\n    <span class="hljs-comment">// If it is has property and value is truthy</span>\n    <span class="hljs-keyword">if</span> (collection[c].hasOwnProperty(pre) &amp;&amp; <span class="hljs-built_in">Boolean</span>(collection[c][pre])) {\n      counter++;\n    }\n  }\n  <span class="hljs-comment">// Outside the loop, check to see if we got true for all of them and return true or false</span>\n  <span class="hljs-keyword">return</span> counter == collection.length;\n}\n\nevery([{<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Tinky-Winky\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'male\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Dipsy\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'male\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Laa-Laa\'</span>,\n<span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'female\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Po\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'female\'</span>}], <span class="hljs-string">\'sex\'</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First I create a counter to check how many cases are actually true.</li>\n<li>Then check for each object if the value is truthy</li>\n<li>Outside the loop, I check to see if the counter variable has the same value as the length of <strong>collection</strong>, if true then return <strong>true</strong>, otherwise, return <strong>false</strong></li>\n</ul>\n<h2>Alternative Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">every</span>(<span class="hljs-params">collection, pre</span>) </span>{\n  <span class="hljs-keyword">return</span> collection.every(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">element</span>) </span>{\n    <span class="hljs-keyword">return</span> element.hasOwnProperty(pre) &amp;&amp; <span class="hljs-built_in">Boolean</span>(element[pre]);\n  });\n}\nevery([{<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Tinky-Winky\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'male\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Dipsy\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'male\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Laa-Laa\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'female\'</span>}, {<span class="hljs-string">\'user\'</span>: <span class="hljs-string">\'Po\'</span>, <span class="hljs-string">\'sex\'</span>: <span class="hljs-string">\'female\'</span>}], <span class="hljs-string">\'sex\'</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Uses the native “every” method to test whether all elements in the array pass the test.</li>\n<li>This link will help <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every">Array.prototype.every()</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 and @estevanmaito and @HermanFassett</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Exact Change",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You have to create a program that will handle when the register does not have enough cash or will have no cash after the transaction. Other than that it needs to return an array of the change in the form of an array, so that will be a 2D array.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Is easier to handle if you will have to close the register or if you will not have enough money to complete the transaction if you know beforehand how much money is on your register. For this it would be recommended to have a function get the information assigned to a variable.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Life is easier when you get to know the value of each currency type in the register instead of how much money is composed of that particular currency. So be sure to watch out for that.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will have to get as much change from one type before moving to the next from greater value to lesser, and keep going until you have covered the whole change.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawer</span>(<span class="hljs-params">price, cash, cid</span>) </span>{\n\n  <span class="hljs-comment">// Total Amount to return to client</span>\n  <span class="hljs-keyword">var</span> totalChange = +(cash - price).toFixed(<span class="hljs-number">2</span>);\n\n  <span class="hljs-comment">//Standard currency Value</span>\n  <span class="hljs-keyword">var</span> stdCurr = [<span class="hljs-number">0.01</span>, <span class="hljs-number">0.05</span>, <span class="hljs-number">0.10</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">100</span>];\n\n  <span class="hljs-comment">//Name of current currency</span>\n  <span class="hljs-keyword">var</span> currType;\n\n  <span class="hljs-comment">// How many of the current standard currency</span>\n  <span class="hljs-keyword">var</span> stdCurrAmount;\n  <span class="hljs-keyword">var</span> currCurrency;\n\n  <span class="hljs-comment">// Change to be returned in proper format.</span>\n  <span class="hljs-keyword">var</span> changeArr = [];\n\n  <span class="hljs-keyword">var</span> totalCash = +cid.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">money</span>) </span>{\n    <span class="hljs-comment">// Gets 1D array of values</span>\n    <span class="hljs-keyword">return</span> money[<span class="hljs-number">1</span>];\n  }).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">cash1, cash2</span>) </span>{\n    <span class="hljs-comment">// Reduces the values to one number</span>\n    <span class="hljs-keyword">return</span> cash1 + cash2;\n\n    <span class="hljs-comment">// Rounds to two decimal places</span>\n  }).toFixed(<span class="hljs-number">2</span>);\n\n  <span class="hljs-comment">// Handle the case where we don\'t have enough money or will be left without money.</span>\n  <span class="hljs-keyword">if</span> (totalChange &gt; totalCash) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">\'Insufficient Funds\'</span>;\n  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (totalChange === totalCash) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">\'Closed\'</span>;\n  }\n\n  <span class="hljs-comment">// Loops array from right to left.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = +cid.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) {\n    <span class="hljs-comment">// Gets the monetary value of the current array and the type.</span>\n    currCurrency = +cid[i][<span class="hljs-number">1</span>].toFixed(<span class="hljs-number">2</span>);\n    currType = cid[i][<span class="hljs-number">0</span>];\n\n    <span class="hljs-comment">//If the currency is less than the change left to hand then get the right amount from the current type of change.</span>\n    <span class="hljs-keyword">if</span> (+stdCurr[i].toFixed(<span class="hljs-number">2</span>) &lt;= +totalChange.toFixed(<span class="hljs-number">2</span>)) {\n\n      stdCurrAmount = <span class="hljs-built_in">Math</span>.floor(currCurrency / stdCurr[i]);\n\n      <span class="hljs-keyword">if</span> ((stdCurr[i] * stdCurrAmount) &gt;= totalChange) {\n        stdCurrAmount = <span class="hljs-built_in">Math</span>.floor(totalChange / stdCurr[i]);\n      }\n\n      <span class="hljs-comment">//Get the current currency to use and udate the amount left to hand out.</span>\n      currCurrency = +(stdCurr[i] * stdCurrAmount).toFixed(<span class="hljs-number">2</span>);\n      totalChange = +(totalChange - currCurrency).toFixed(<span class="hljs-number">2</span>);\n\n      <span class="hljs-comment">// Update the values so we always have the current amount left in the register.</span>\n      cid[i][<span class="hljs-number">1</span>] = currCurrency;\n\n      <span class="hljs-comment">//Push the change right change to hand out</span>\n      changeArr.push([currType, currCurrency]);\n    }\n  }\n\n  <span class="hljs-keyword">return</span> changeArr;\n};\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Factorialize a Number",order:5,body:'<h1>The problem</h1>\n<p>Return the factorial of the provided integer. If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.</p>\n<p>Factorials are often represented with the shorthand notation n!</p>\n<p>For example: <code>5! = 1 * 2 * 3 * 4 * 5 = 120f</code></p>\n<h2>Analysis</h2>\n<p>Return the factorial of the provided integer. If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n. Factorials are often represented with the shorthand notation n! For example: 5! = 1 _ 2 _ 3 _ 4 _ 5 = 120</p>\n<h2>Outline</h2>\n<p>This one is simple, since the factorials of both 0 and 1 is just 1, you can go ahead and return 1. The IF function here is responsible for breaking the loop I created using a <strong>recursive function</strong>, first it checks if the number you gave the function is 0 or 1 and then returns 1 if the condition passed; since there’s no ELSE, the rest of the function is executed.</p>\n<h2>Understanding recursion</h2>\n<p>Now, I put the references I studied to understand a <em>little bit</em> of how recursion works, and it’s when a function repeats itself. The first time I did this challenge I used a short but effective <strong>while loop</strong> but I wanted to make it shorter and more efficient, you know… because of reasons ;). Basically what this does is return the number you gave multiplied by the function itself but this time the value passed to the <em>num</em> parameter is <code>num-1</code> which ultimately translates to 4. The very function is going to <strong>run inside itself</strong> haha, funny eh? It’s like having functions that run inside themselves until they reach a very deep level (depends on how many times it runs itself).</p>\n<h2>Visualizing the flow</h2>\n<p><img src="http://i61.tinypic.com/28auvsw.jpg" alt="Recursion"></p>\n<p>The first <strong>returned</strong> value can be visualized better if you think about those parenthesis operations you did in secondary school where you do the math inside every parenthesis, bracket and square bracket until you get a final result (a total). This time it’s the same thing, look at the program flow:</p>\n<h2>During the first execution of the function:</h2>\n<p>[<strong>num</strong> = 5]</p>\n<p>Is 5 <em>equal</em> to 1 or 0? <strong>No</strong> —&gt; Oki doki, let’s continue…</p>\n<p><strong>Returns:</strong></p>\n<p>(<strong>5</strong> _ (<em>second execution</em>: <strong>4</strong> _ (<em>third execution</em>: <strong>3</strong> _ (<em>fourth execution</em>: <strong>2</strong> _ <em>fifth execution</em>: <strong>1</strong>))))</p>\n<p>What it returns can be viewed as <code>(5*(4*(3*(2*1))))</code> or just <code>5 * 4 * 3 * 2 * 1</code>, and the function will return the result of that operation: <code>120</code>. Now, let’s check what the rest of the executions do:</p>\n<h2>During the rest of the executions:</h2>\n<ul>\n<li><strong>Second Execution</strong>: <em>num</em> = 5-1 = <strong>4</strong> -&gt; is <em>num</em> 0 or 1? No --&gt; return the multiplication between 4 and the next result when <em>num</em> is now 4-1.</li>\n<li><strong>Third Execution</strong>: <em>num</em> = 4 - 1 = <strong>3</strong> -&gt; is <em>num</em> 0 or 1? No --&gt; return the multiplication between 3 and the next result when <em>num</em> is now 3-1.</li>\n<li><strong>Fourth Execution</strong>: <em>num</em> = 3-1 = <strong>2</strong> -&gt; is <em>num</em> 0 or 1? No --&gt; return the multiplication between 2 and the next result when <em>num</em> is now 2-1.</li>\n<li><strong>Fifth Execution</strong>: <em>num</em> = 2-1 = <strong>1</strong> -&gt; is <em>num</em> 0 or 1? Yep --&gt; return <strong>1</strong>. And this is where the recursion stops because there are no more executions.</li>\n</ul>\n<h2>:construction: My Solution is coming up!</h2>\n<p>Don’t scroll down if you don’t want to see it!</p>\n<p><img src="http://www.yourdrum.com/yourdrum/images/2007/10/10/red_warning_sign_2.gif" alt="warning"></p>\n<pre><code>           ,,,         ,,,\n          <span class="hljs-comment">;"   ^;     ;\'   ",</span>\n          <span class="hljs-comment">;    s$$$$$$$s     ;</span>\n          ,  ss$$$$$$$$$$s  ,\'\n          <span class="hljs-comment">;s$$$$$$$$$$$$$$$</span>\n          $$$$$$$$$$$$$$$$$$\n         $$$$P<span class="hljs-string">""</span>Y$$$Y<span class="hljs-string">""</span>W$$$$$      -{ Happy Camping! }\n         $$$$  p<span class="hljs-string">"$$$"</span>q  $$$$$\n         $$$$  .$$$$$.  $$$$\n          $$DcaU$$$$$$$$$$\n            <span class="hljs-string">"Y$$$"</span>*<span class="hljs-string">"$$$Y"</span>    \n                <span class="hljs-string">"$b.$$"</span>\n</code></pre>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">factorialize</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">if</span> (num === <span class="hljs-number">0</span> || num == <span class="hljs-number">1</span>) { <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; }\n  <span class="hljs-keyword">return</span> num * factorialize(num-<span class="hljs-number">1</span>);\n}\n\nfactorialize(<span class="hljs-number">5</span>);\n</code></pre>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">factorialize</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">var</span> factorial = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">2</span>; n &lt;= num; n++) {\n    factorial = factorial * n;\n  }\n\n  <span class="hljs-keyword">return</span> factorial;\n}\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><strong>Recursion</strong>: <a href="https://www.codecademy.com/es/courses/javascript-lesson-205/0/1">https://www.codecademy.com/es/courses/javascript-lesson-205/0/1</a></li>\n<li><strong>Factorialization</strong>: <a href="https://en.wikipedia.org/wiki/Factorial">https://en.wikipedia.org/wiki/Factorial</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @ luishendrix92 @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Falsey Bouncer",order:5,body:'<h1>The problem</h1>\n<p>Remove all falsy values from an array.\nFalsy values in javascript are false, null, 0, “”, undefined, and NaN.</p>\n<p>For example: <code>bouncer([7, &quot;ate&quot;, &quot;&quot;, false, 9], &quot;&quot;);</code> must return [7, “ate”, 9]</p>\n<p>We are encouraged to use these 2 links:</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">Boolean Objects</a></p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">Array.filter()</a></p>\n<h2>Analysis</h2>\n<p>We need to return an array that has been modified with the filter() method to remove the elements that we deem falsy values. We define these as false, null, 0, “”, undefined, and NaN.</p>\n<h2>Understanding the Boolean object</h2>\n<p>Passing an initial value to a Boolean object converts this value to a Boolean value. This Boolean value will be false if the value is 0, -0, null, false, NaN, undefined, or the empty string (&quot;&quot;). The Boolean value will be true for any other value. The false instances cover all the cases we must consider falsy values.</p>\n<h2>Understanding the filter() method</h2>\n<p>The filter method takes the argument of a custom callback functions. The filter method loops through all the elements of an array, and runs the custom callback function to determine whether or not to keep the element in the array. If your custom function returns true, it keeps the element in the array. If it returns false, it removes the element from the array.</p>\n<p>So build a custom callback function that tests if a particular element returns a Boolean object evaluating to false. Call this function from the filter() method.</p>\n<h2>:construction: My Solution is coming up!</h2>\n<p>Don’t scroll down if you don’t want to see it!</p>\n<p><img src="http://www.yourdrum.com/yourdrum/images/2007/10/10/red_warning_sign_2.gif" alt="warning"></p>\n<pre><code>           ,,,         ,,,\n          <span class="hljs-comment">;"   ^;     ;\'   ",</span>\n          <span class="hljs-comment">;    s$$$$$$$s     ;</span>\n          ,  ss$$$$$$$$$$s  ,\'\n          <span class="hljs-comment">;s$$$$$$$$$$$$$$$</span>\n          $$$$$$$$$$$$$$$$$$\n         $$$$P<span class="hljs-string">""</span>Y$$$Y<span class="hljs-string">""</span>W$$$$$      -{ Happy Camping! }\n         $$$$  p<span class="hljs-string">"$$$"</span>q  $$$$$\n         $$$$  .$$$$$.  $$$$\n          $$DcaU$$$$$$$$$$\n            <span class="hljs-string">"Y$$$"</span>*<span class="hljs-string">"$$$Y"</span>    \n                <span class="hljs-string">"$b.$$"</span>\n</code></pre>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// callback function for filter method</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">noFalsy</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-comment">// Retreive primitive Boolean value based on the element in array currently being tested via filter method</span>\n  <span class="hljs-comment">// This primitive Boolean value equates to false if the value being added is omitted or is 0, -0, null, false, NaN, undefined, or ""</span>\n  <span class="hljs-keyword">var</span> x = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(value);\n  <span class="hljs-keyword">if</span> (x == <span class="hljs-literal">false</span>)\n<span class="hljs-comment">//returning false to the filter method removes the element from the array</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  <span class="hljs-comment">//returning true to the filter method keeps the element in the array</span>\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n  <span class="hljs-comment">//return the array after modifying it with the filter method</span>\n  <span class="hljs-keyword">return</span> arr.filter(noFalsy); \n}\nbouncer([<span class="hljs-number">7</span>, <span class="hljs-string">"ate"</span>, <span class="hljs-string">""</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">9</span>], <span class="hljs-string">""</span>);\n</code></pre>\n<h2>Code Solution (Short Version):</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>)</span>{\n    <span class="hljs-keyword">var</span> x = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(value);\n    <span class="hljs-keyword">return</span> x != <span class="hljs-literal">false</span>;\n  }); \n}\n</code></pre>\n<h1>References</h1>\n<ul>\n<li>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean</a></p>\n</li>\n<li>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter</a></p>\n</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @jones-codes</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Falsy Bouncer",order:5,body:'<p><img src="http://i.imgur.com/GluUbAz.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<p>Remove all <a href="https://freecodecamp.github.io/wiki/docs/js-falsy">falsy</a> values from an array.</p>\n<h2>Hint: 1</h2>\n<p>Falsy is something which evaluates to FALSE. There are only six falsy values in JavaScript: undefined, null, NaN, 0, “” (empty string), and false of course.</p>\n<h2>Hint: 2</h2>\n<p>We need to make sure we have all the falsy values to compare, we can know it, maybe with a function with all the falsy values…</p>\n<h2>Hint: 3</h2>\n<p>Then we need to add a <code>filter()</code> with the falsy values function…</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Solution Code:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Don\'t show a false ID to this bouncer.</span>\n  <span class="hljs-comment">// I\'ve a hammer fist.</span>\n\n  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-built_in">Boolean</span>);\n}\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isTruthy</span>(<span class="hljs-params">arg</span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Boolean</span>(arg);\n  }\n\n  <span class="hljs-keyword">var</span> filteredArray = arr.filter(isTruthy);\n  <span class="hljs-keyword">return</span> filteredArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>The <code>Array.prototype.filter</code> method expects a function that returns a <code>Boolean</code> value which takes a single argument and returns <code>true</code> for <a href="https://freecodecamp.github.io/wiki/docs/js-truthy">truthy</a> value or <code>false</code> for <a href="https://freecodecamp.github.io/wiki/docs/js-falsy">falsy</a> value. Hence we pass the built-in <code>Boolean</code> function.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @renelis @abhisekp @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Find The Longest Word in a String",order:5,body:'<h1>Explanation:</h1>\n<p>You have to go through each word and figure out which one is the longest and return not the word, but how many characters it has.</p>\n<h2>Hint: 1</h2>\n<p>You should split the string into an array of words.</p>\n<h2>Hint: 2</h2>\n<p>You will need to figure out a way to keep track globally of the greatest current length.</p>\n<h2>Hint: 3</h2>\n<p>Remember how to get the length of elements on the array? <code>Array[index].length</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> words = str.split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">var</span> maxLength = <span class="hljs-number">0</span>;\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; words.length; i++) {\n    <span class="hljs-keyword">if</span> (words[i].length &gt; maxLength) {\n      maxLength = words[i].length;\n    }\n  }\n\n  <span class="hljs-keyword">return</span> maxLength;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>Take the string and convert it into an array of words. Declare a variable to keep track of the maximum length and loop from 0 to the length of the array of words.</p>\n<p>Then check for the longest word by comparing the current word to the previous one and storing the new longest word. At the end of the loop just return the number value of the variable maxLength.</p>\n<h2>Alternate Solution</h2>\n<p>Using <code>.reduce()</code></p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">s</span>) </span>{<span class="hljs-keyword">return</span> s.split(<span class="hljs-string">\' \'</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>)</span>{<span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(x, y.length)}, <span class="hljs-number">0</span>)}\n</code></pre>\n<p>for more information: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">Click.</a></p>\n<h2>Recursive Solution</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findLongestWord</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">//split the string into individual words (important!!, you\'ll see why later)</span>\n  str = str.split(<span class="hljs-string">" "</span>);\n  <span class="hljs-comment">//str only has 1 element left that is the longest element, return the length of that element</span>\n  <span class="hljs-keyword">if</span>(str.length == <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> str[<span class="hljs-number">0</span>].length;\n  }\n  <span class="hljs-comment">//if the first element\'s length is greater than the second element\'s (or equal) remeove the second element and recursively   call the function)</span>\n  <span class="hljs-keyword">if</span>(str[<span class="hljs-number">0</span>].length &gt;= str[<span class="hljs-number">1</span>].length){\n    str.splice(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> findLongestWord(str.join(<span class="hljs-string">" "</span>));\n  }\n  <span class="hljs-comment">//if the second element\'s length is greater thant the first element\'s start call the function past the first element </span>\n   <span class="hljs-keyword">if</span>(str[<span class="hljs-number">0</span>].length &lt;= str[<span class="hljs-number">1</span>].length){\n   <span class="hljs-comment">// from the first element to the last element inclusive.</span>\n    <span class="hljs-keyword">return</span> findLongestWord(str.slice(<span class="hljs-number">1</span>,str.length).join(<span class="hljs-string">" "</span>));\n  }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @shadowfool</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Finders Keepers",order:5,body:'<h1>Explanation:</h1>\n<p>The problem is quite simple to understand. You will check for each element in the array that is passed in the first argument, if the element plugged in to the function passed as the second argument returns true the first time. We do not care about the second or third one that is true, only the very first one if any. If there are none, then return undefined. This last bit is not explained but it is part of the tests used.</p>\n<h2>Hint: 1</h2>\n<p>You can use the function directly from the parameter, no need to rename it or anything.</p>\n<h2>Hint: 2</h2>\n<p>You need to pass an element and record it if the function returns true, for this you just have to pass the element as the parameter for the function.</p>\n<h2>Hint: 3</h2>\n<p>If no element satisfy the function then you must return <strong>undefined</strong></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">arr, func</span>) </span>{\n  <span class="hljs-comment">// Make num undefined by default</span>\n  <span class="hljs-keyword">var</span> num;\n\n  <span class="hljs-comment">// Loop thorugh the array and use the function to check</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (func(arr[a])) {\n      <span class="hljs-comment">// Store the first case and break the loop</span>\n      num = arr[a];\n      <span class="hljs-keyword">return</span> num;\n    }\n  }\n\n  <span class="hljs-comment">// otherwise return undefined</span>\n  <span class="hljs-keyword">return</span> num;\n}\n\nfind([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">return</span> num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>;\n});\n</code></pre>\n<h2>Another Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params">arr, func</span>) </span>{\n  filterArr = arr.filter(func); <span class="hljs-comment">//filter array with the function provided</span>\n  \n  <span class="hljs-keyword">return</span> filterArr[<span class="hljs-number">0</span>]; <span class="hljs-comment">//return the first element that returns true, or undefined if no elements return true</span>\n}\n\nfind([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>)</span>{ <span class="hljs-keyword">return</span> num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>; });\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>To make the code easier, create an undefined variable that will be returned.</li>\n<li>Loop through the array to check for each element if it satisfy the function. This is done by passing the arr[index of the loop] as the parameter for the function from the second argument.</li>\n<li>If true, then store the array element, and return it. This will stop the loop. No else needed.</li>\n<li>If the loop was not broken and it has ended, then return <strong>num</strong> which by default is undefined. This means that none of the elements from the array satisfied the function.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @JamesKee</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Friendly Date Ranges",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Create a program that will take two dates and convert them into a more easy to understand date such as <code>January 1st, 2017</code>. It will also check the difference between them, and handles cases with no difference, more than a day, more than a month, more than a year, and more than a month and less than a year respectively.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Split the string into an array where you get the “YYYY”, “MM”, “DD”</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You need to handle the case for “st”, “nd”, and “th”. Note that 13 is “th” not “rd”.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>If you are using <code>Date()</code> to create instances of dates to work with, then use UTC time to avoid errors due to time zone difference between servers.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">friendly</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-keyword">var</span> months = [<span class="hljs-string">\'January\'</span>, <span class="hljs-string">\'February\'</span>, <span class="hljs-string">\'March\'</span>, <span class="hljs-string">\'April\'</span>, <span class="hljs-string">\'May\'</span>, <span class="hljs-string">\'June\'</span>, <span class="hljs-string">\'July\'</span>, <span class="hljs-string">\'August\'</span>, <span class="hljs-string">\'September\'</span>, <span class="hljs-string">\'October\'</span>, <span class="hljs-string">\'November\'</span>, <span class="hljs-string">\'December\'</span>];\n\n  <span class="hljs-comment">// COnverst a YYYY-MM-DD string into a date object.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convertDate</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-comment">// Split the dates to work independently.</span>\n    <span class="hljs-keyword">var</span> dateStr = str.split(<span class="hljs-string">\'-\'</span>);\n\n    <span class="hljs-comment">// Force the dates into Universal time to avoid issues due to timezones.</span>\n    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">Date</span>.UTC(dateStr[<span class="hljs-number">0</span>], dateStr[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span>, dateStr[<span class="hljs-number">2</span>])));\n\n  }\n\n  <span class="hljs-comment">// Handles the case of the day\'s endings.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dateEnding</span>(<span class="hljs-params">val</span>) </span>{\n    <span class="hljs-keyword">switch</span> (val) {\n      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">21</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">31</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'st\'</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">22</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'nd\'</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:\n      <span class="hljs-keyword">case</span> <span class="hljs-number">23</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'rd\'</span>;\n      <span class="hljs-keyword">default</span>:\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">\'th\'</span>;\n    }\n  }\n\n  <span class="hljs-comment">// Checks for the real difference in months to avoid errors</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">monthDiff</span>(<span class="hljs-params">date1, date2</span>) </span>{\n    <span class="hljs-keyword">var</span> month2 = date2.getUTCFullYear() * <span class="hljs-number">12</span> + date2.getUTCMonth();\n    <span class="hljs-keyword">var</span> month1 = date1.getUTCFullYear() * <span class="hljs-number">12</span> + date1.getUTCMonth();\n    <span class="hljs-keyword">return</span> month2 - month1;\n  }\n\n  <span class="hljs-comment">// Get\'s the right month string.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMonth</span>(<span class="hljs-params">date</span>) </span>{\n    <span class="hljs-keyword">return</span> months[date.getUTCMonth()];\n  }\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayDate</span>(<span class="hljs-params"></span>) </span>{\n\n    <span class="hljs-comment">// Handles same day</span>\n    <span class="hljs-keyword">if</span> (date2.getTime() - date1.getTime() === <span class="hljs-number">0</span>) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()) + <span class="hljs-string">\', \'</span> + date1.getUTCFullYear()];\n    }\n\n    <span class="hljs-comment">// Handles same month</span>\n    <span class="hljs-keyword">if</span> (date1.getUTCMonth() === date2.getUTCMonth() &amp;&amp; date1.getUTCFullYear() === date2.getUTCFullYear()) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()), dateEnding(date2.getUTCDate())];\n    }\n\n    <span class="hljs-comment">// Handles more than a month of difference, but less than 12 months</span>\n    <span class="hljs-keyword">if</span> (monthDiff(date1, date2) &lt; <span class="hljs-number">12</span>) {\n      <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate())];\n    }\n\n    <span class="hljs-comment">// Handles cases with more than 12 months apaprt.</span>\n    <span class="hljs-keyword">return</span> [getMonth(date1) + <span class="hljs-string">\' \'</span> + dateEnding(date1.getUTCDate()) + <span class="hljs-string">\', \'</span> + date1.getUTCFullYear(), getMonth(date2) + <span class="hljs-string">\' \'</span> + dateEnding(date2.getUTCDate()) + <span class="hljs-string">\', \'</span> + date2.getUTCFullYear()];\n  }\n\n  <span class="hljs-keyword">var</span> date1 = convertDate(str[<span class="hljs-number">0</span>]);\n  <span class="hljs-keyword">var</span> date2 = convertDate(str[<span class="hljs-number">1</span>]);\n\n  <span class="hljs-keyword">return</span> displayDate();\n\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Inventory Update",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Look through an array of new products, in the format: <code>[quantity, name]</code></li>\n<li>Return an array containing updated quantities for each item that already existed, and any new products</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You need to work through each item of the new inventory to see if it exists in the current inventory or not.</li>\n<li>Remember that the product name is stored as the second element of each sub-array: <code>arr2[0][1] = &quot;Bowling Ball&quot;</code></li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If the item exists, you need to add the quantity from the new inventory</li>\n<li>If the item doesn’t exist, you need to add the entire item</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Return the completed inventory in alphabetical order</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inventory</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n\n    <span class="hljs-comment">// Variable for location of product</span>\n    <span class="hljs-keyword">var</span> index;\n\n    <span class="hljs-comment">// A helper method to return the index of a specified product (undefined if not found)</span>\n    <span class="hljs-keyword">var</span> getProductIndex = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">name</span>) </span>{\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.length; i++) {\n            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>[i][<span class="hljs-number">1</span>] === name) {\n                <span class="hljs-keyword">return</span> i;\n            }\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n    }\n\n    <span class="hljs-comment">// For each item of the new Inventory</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr2.length; i++) {\n\n        <span class="hljs-comment">// Invoke our helper function using arr1 as this</span>\n        index = getProductIndex.call(arr1, arr2[i][<span class="hljs-number">1</span>]);\n\n        <span class="hljs-comment">// If the item doesn\'t exist</span>\n        <span class="hljs-keyword">if</span> (index === <span class="hljs-literal">undefined</span>) {\n            <span class="hljs-comment">// Push the entire item</span>\n            arr1.push(arr2[i]);\n        } <span class="hljs-keyword">else</span> {\n            <span class="hljs-comment">// Add the new quantity of the current item</span>\n            arr1[index][<span class="hljs-number">0</span>] += arr2[i][<span class="hljs-number">0</span>];\n        }\n\n    }\n\n    <span class="hljs-comment">// Sort alphabetically, by the product name of each item</span>\n    arr1.sort(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) </span>{\n        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &gt; b[<span class="hljs-number">1</span>]) {\n            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;\n        }\n        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &lt; b[<span class="hljs-number">1</span>]) {\n            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n    });\n\n    <span class="hljs-keyword">return</span> arr1;\n}\n</code></pre>\n<p>Solution 2</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inventory</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n  <span class="hljs-comment">// All inventory must be accounted for or you\'re fired!</span>\n\n  <span class="hljs-keyword">var</span> index;\n  <span class="hljs-keyword">var</span> arrCurInvName = []; <span class="hljs-comment">// Names of arr1\'s items</span>\n  <span class="hljs-keyword">var</span> arrNeInvName = []; <span class="hljs-comment">// Names of arr2\'s items</span>\n\n  <span class="hljs-comment">// Same as using two for loops, this takes care of increasing the number of stock quantity.</span>\n  arr1.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item1</span>) </span>{\n    <span class="hljs-keyword">return</span> arr2.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item2</span>) </span>{\n      <span class="hljs-keyword">if</span> (item1[<span class="hljs-number">1</span>] === item2[<span class="hljs-number">1</span>]) {\n        item1[<span class="hljs-number">0</span>] = item1[<span class="hljs-number">0</span>] + item2[<span class="hljs-number">0</span>]; <span class="hljs-comment">//Increase number of stock</span>\n      }\n    });\n  });\n\n  <span class="hljs-comment">// Get item\'s name for new Inventory</span>\n  arr2.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    arrNeInvName.push(item[<span class="hljs-number">1</span>]);\n  });\n\n  <span class="hljs-comment">// Get item\'s name for Current Inventory</span>\n  arr1.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    arrCurInvName.push(item[<span class="hljs-number">1</span>]);\n  });\n\n  <span class="hljs-comment">// Add new inventory items to current inventory.</span>\n  arrNeInvName.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n    <span class="hljs-keyword">if</span> (arrCurInvName.indexOf(item) === -<span class="hljs-number">1</span>) {\n      index = arrNeInvName.indexOf(item);\n      arr1.push(arr2[index]);\n    }\n  });\n\n  <span class="hljs-comment">// Sort the array alphabetically using the second element of the array as base.</span>\n  arr1.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">currItem, nextItem</span>) </span>{\n\n    <span class="hljs-comment">//Ternary function to avoid using if else</span>\n    <span class="hljs-keyword">return</span> currItem[<span class="hljs-number">1</span>] &gt; nextItem[<span class="hljs-number">1</span>] ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>;\n  });\n\n  <span class="hljs-keyword">return</span> arr1;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Start by creating a variable to store the index in.  Define variables outside of loops</li>\n<li>Create a helper function to find the index of a product name</li>\n<li>The helper function iterates through each element of the array that it is called on, until it can either find the name parameter, or if it cannot find it then returns undefined</li>\n<li>Then, work through each item in the delivery, and set index to the result of invoking our helper function on the current inventory (IE: Search the new inventory for that product name, and return it’s index)</li>\n<li>If we can’t find that product, then we can add the entire product (Name and quantity) to the current inventory</li>\n<li>Otherwise, then we can add the quantity from the new inventory</li>\n<li>Then we sort the array by the product name (<code>arr1[x][1]</code> holds the name)</li>\n<li>Return the sorted array</li>\n<li>For Solution two, the explanation is on the code. Feel free to use different components on each solution to create your own if you like.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @guyjoseph @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n<h2>Related links</h2>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call">Function.prototype.call</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">Array.prototype.sort</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Bonfire Make a Person",order:5,body:'<h1>Explanation:</h1>\n<p>When I started the program I figured I just had to create the six functions mentioned in the details. However, it was not that simple. Creating them as a function was not the right way, I had to create them in a different way to make them a key.</p>\n<p>There is also a tricky part as you need six keys no more or less, so at first I had the variable that store the original name as a key too which was wrong.</p>\n<p>As for the usage of array, that is optional, you could also create new variable to hold the separated string if you wish but an array is easier to deal with as strings are immutable.</p>\n<p>Read the instructions carefully, it is always a good hint in itself to run the code and check what the test results were so you know what to expect but do not fixate yourself on that. Once you understand what you need to do, this problem is very easy and straightforward.</p>\n<h2>Hint: 1</h2>\n<p>Use the <strong>this</strong> notation to create the keys instead of regular functions: This means instead of <code>var varName = function() {/*...*/}</code> you should use <code>this.varName = function() {/*...*/}</code></p>\n<h2>Hint: 2</h2>\n<p>The program has a test that checks for how many keys you used, they have to be exactly six, the six mentioned in the details section. This means if you need to work with variables, make them local and not a key: <code>this.fullName = firstAndLast;</code></p>\n<h2>Hint: 3</h2>\n<p>Often the code would not work the way you expect it due to wrong variable names, make sure to check that you spell them the right way. This happens to all of us at some point.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<p>Please try hard before you check this solution.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Person = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">firstAndLast</span>) </span>{\n  <span class="hljs-keyword">var</span> fullName = firstAndLast;\n\n  <span class="hljs-keyword">this</span>.getFirstName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.getLastName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.getFullName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> fullName;\n  };\n\n  <span class="hljs-keyword">this</span>.setFirstName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = name + <span class="hljs-string">" "</span> + fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];\n  };\n\n  <span class="hljs-keyword">this</span>.setLastName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = fullName.split(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">" "</span> + name;\n  };\n  \n  <span class="hljs-keyword">this</span>.setFullName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n    fullName = name;\n  };\n};\n\n<span class="hljs-keyword">var</span> bob = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">\'Bob Ross\'</span>);\nbob.getFullName();\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable that will make a copy of the full name that was passed as a parameter.</li>\n<li>Then we can proceed to create the six methods needed and return what is asked for.</li>\n<li>For the individual setters, we can use the split to turn the fullname into an array of first and last names and concatenate the unchanged portion of the name with what was passed as a parameter.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @ltegman</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Map the Debris",order:5,body:'<p><img src="http://i.imgur.com/jSJ4E7L.jpg" alt=""></p>\n<h1>Problem Explanation:</h1>\n<p>The first thing to do is to get familiar with what the program is for, for this I would suggest you check the Wikipedia link as that is very important and from where you can also get the formula for the conversion. The hardest part are finding the formula, implementing it and for some modifying objects by the key. However, something that is not very clear is the fact that your program has to be able to check for any number of objects in the array which is what is tested on the second part.</p>\n<h2>Hint: 1</h2>\n<p>The formula needed is: T = 2_pi _ sqrt(earthRadius + avgAlt to the cube / GM)</p>\n<h2>Hint: 2</h2>\n<p>Use Math.round() to round up to the next whole number as requested. Using Math.ceil() will let you pass the first test but fail the second one.</p>\n<h2>Hint: 3</h2>\n<p>Find out how to remove and add key to an object</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">orbitalPeriod</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> GM = <span class="hljs-number">398600.4418</span>;\n  <span class="hljs-keyword">var</span> earthRadius = <span class="hljs-number">6367.4447</span>;\n  <span class="hljs-keyword">var</span> a = <span class="hljs-number">2</span> * <span class="hljs-built_in">Math</span>.PI;\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-keyword">var</span> getOrbPeriod = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">var</span> c = <span class="hljs-built_in">Math</span>.pow(earthRadius + obj.avgAlt, <span class="hljs-number">3</span>);\n    <span class="hljs-keyword">var</span> b = <span class="hljs-built_in">Math</span>.sqrt(c / GM);\n    <span class="hljs-keyword">var</span> orbPeriod = <span class="hljs-built_in">Math</span>.round(a * b);\n    <span class="hljs-keyword">delete</span> obj.avgAlt;\n    obj.orbitalPeriod = orbPeriod;\n    <span class="hljs-keyword">return</span> obj;\n  };\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> elem <span class="hljs-keyword">in</span> arr) {\n    newArr.push(getOrbPeriod(arr[elem]));\n  }\n\n  <span class="hljs-keyword">return</span> newArr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The GM and <code>earthRadius</code> is given to us.</li>\n<li>To make the code easier to edit and read, I separated each part of the equation.</li>\n<li>Create a new array to store the <code>orbPeriods</code>.</li>\n<li>a is 2 times pi. The part that is a constant is on the global scope while the rest is part of a function.</li>\n<li>Create a function that will do the required work for any amount of objects.</li>\n<li>c is the power of <code>earthRadius</code> + the value of <code>avgAlt</code> to the cube.</li>\n<li>b is the square root of c divided by GM.</li>\n<li>Create <code>orbPeriod</code> to store the product of a &amp; b, with the ceiling function applied to round up to the next whole number.</li>\n<li>Then we delete the key<code>avgAlt</code>, and add the new key and its value.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Meet Bonfire",order:5,body:'<h1>Explanation:</h1>\n<p>This is very simple, they just want you to get familiar with how their Bonfires work.</p>\n<h2>Hint: 1</h2>\n<p>Read details.</p>\n<h2>Hint: 2</h2>\n<p>Did you read all the details?</p>\n<h2>Hint: 3</h2>\n<p>You need to change the return statement to what they ask.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">meetBonfire</span>(<span class="hljs-params">argument</span>) </span>{\n  <span class="hljs-comment">// Good luck!</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"you can read this function\'s argument in the developer tools"</span>, argument);\n\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n\nmeetBonfire(<span class="hljs-string">"You can do this!"</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>All you had to do was change from false to true.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Missing letters",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that will find the missing letter from a string and add it. If there is not missing letter it will return undefined. There is currently no test case for it missing more than one letter, but if anything recursion can be implemented or a second or more calls to the same function as needed. Also the letters are always provided in order so there is no need to sort them.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will need to convert from character to ASCII code using the two methods provided in the description.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will have to check for the difference in ASCII code as they are in order. Using a chart would be very helpful.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to figure out where to insert the letter and how to do it, along with handling the case that there is not missing letter as it needs an specific return value.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<p>####First:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create our variables.</span>\n  <span class="hljs-keyword">var</span> firstCharacter = str.charCodeAt(<span class="hljs-number">0</span>);\n  <span class="hljs-keyword">var</span> valueToReturn = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> secondCharacter = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Function to find the missing letters</span>\n  <span class="hljs-keyword">var</span> addCharacters = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">while</span> (a - <span class="hljs-number">1</span> &gt; b) {\n      b++;\n      valueToReturn += <span class="hljs-built_in">String</span>.fromCharCode(b);\n    }\n\n    <span class="hljs-keyword">return</span> valueToReturn;\n  };\n\n  <span class="hljs-comment">// Check if letters are missing in between.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> index = <span class="hljs-number">1</span>; index &lt; str.length; index++) {\n    secondCharacter = str.charCodeAt(index);\n\n    <span class="hljs-comment">// Check if the diference in code is greater than one.</span>\n    <span class="hljs-keyword">if</span> (secondCharacter - firstCharacter &gt; <span class="hljs-number">1</span>) {\n      <span class="hljs-comment">// Call function to missing letters</span>\n      addCharacters(secondCharacter, firstCharacter);\n    }\n\n    <span class="hljs-comment">// Switch positions</span>\n    firstCharacter = str.charCodeAt(index);\n  }\n\n  <span class="hljs-comment">// Check whether to return undefined or the missing letters.</span>\n  <span class="hljs-keyword">if</span> (valueToReturn === <span class="hljs-string">\'\'</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> valueToReturn;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<p>####Second:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  \n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; str.length; i++) {\n    <span class="hljs-comment">/* code of current character */</span>\n    <span class="hljs-keyword">var</span> code = str.charCodeAt(i);\n    <span class="hljs-comment">/* if code of current character is not equal to first charcter + no of iteration\n    hence character has been escaped*/</span>\n    <span class="hljs-keyword">if</span> ( code !== str.charCodeAt(<span class="hljs-number">0</span>) + i) {\n      <span class="hljs-comment">/* if current character has escaped one character find previous char and return*/</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(code-<span class="hljs-number">1</span>);\n    }  \n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;\n}\n\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<p>####Third:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> strArr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> missingChars = [], i = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> nextChar = <span class="hljs-built_in">String</span>.fromCharCode(strArr[i].charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n  <span class="hljs-keyword">while</span> (i&lt;strArr.length - <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">if</span> (nextChar !== strArr[i+<span class="hljs-number">1</span>]){\n      missingChars.push(nextChar);\n      nextChar = <span class="hljs-built_in">String</span>.fromCharCode(nextChar.charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n    } <span class="hljs-keyword">else</span> {\n      i++;\n      nextChar = <span class="hljs-built_in">String</span>.fromCharCode(strArr[i].charCodeAt(<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>);\n    }\n  }\n  <span class="hljs-keyword">return</span> missingChars.join(<span class="hljs-string">\'\'</span>) === <span class="hljs-string">\'\'</span> ? <span class="hljs-literal">undefined</span> : missingChars.join(<span class="hljs-string">\'\'</span>) ;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Increase loop index only when you have found all the missing letters between current and next letter</li>\n<li>Every time you find a missing letter push it to <code>missingchars</code></li>\n</ul>\n<p>###Forth:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fearNotLetter</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> allChars = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> notChars = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">\'[^\'</span>+str+<span class="hljs-string">\']\'</span>,<span class="hljs-string">\'g\'</span>);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;allChars[allChars.length-<span class="hljs-number">1</span>] !== str[str.length-<span class="hljs-number">1</span>] ;i++)\n    allChars += <span class="hljs-built_in">String</span>.fromCharCode(str[<span class="hljs-number">0</span>].charCodeAt(<span class="hljs-number">0</span>)+i);\n  <span class="hljs-keyword">return</span> allChars.match(notChars) ? allChars.match(notChars).join(<span class="hljs-string">\'\'</span>) : <span class="hljs-literal">undefined</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a new String that consists all the letters in the range</li>\n<li>Create a Regular Expression for anything except <code>str</code></li>\n<li>Use <code>match()</code> to strip off the <code>str</code> letters from your newly created String</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong>\n<strong><code>thanks @rohitnwn @sabahang</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Mutations",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array…</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>If everything is lowercase it will be easier to compare.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Our strings might be easier to work with if they were arrays of characters.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>A loop might help. Use <code>indexOf()</code> to check if the letter of the second word is on the first.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mutation</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> test = arr[<span class="hljs-number">1</span>].toLowerCase();\n  <span class="hljs-keyword">var</span> target = arr[<span class="hljs-number">0</span>].toLowerCase();\n  test = test.split(<span class="hljs-string">\'\'</span>);\n  target = target.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>;i&lt;test.length;i++) {\n    <span class="hljs-keyword">if</span> (target.indexOf(test[i]) &lt; <span class="hljs-number">0</span>)\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n }\n</code></pre>\n<p>Second solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mutation</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> first = arr[<span class="hljs-number">0</span>].toLowerCase().split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> second = arr[<span class="hljs-number">1</span>].toLowerCase().split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-number">0</span>; s &lt; second.length; s++) {\n    <span class="hljs-keyword">if</span> (first.indexOf(second[s]) &gt; -<span class="hljs-number">1</span>) {\n      temp += <span class="hljs-number">0</span>;\n    } <span class="hljs-keyword">else</span>\n      temp += <span class="hljs-number">1</span>;\n  }\n\n  <span class="hljs-keyword">if</span> (temp === <span class="hljs-number">0</span>)\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n}\n</code></pre>\n<p>Third solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mutation</span>(<span class="hljs-params">arr</span>) </span>{\n  arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">0</span>].toLowerCase();\n  arr[<span class="hljs-number">1</span>]=arr[<span class="hljs-number">1</span>].toLowerCase();\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x <span class="hljs-keyword">in</span> arr[<span class="hljs-number">1</span>]){\n    <span class="hljs-keyword">if</span>(arr[<span class="hljs-number">0</span>].indexOf(arr[<span class="hljs-number">1</span>][x])&lt;<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First, we make the two strings in the array lowercase.</li>\n<li>Second, we split the individual strings in to 2 separate arrays of characters. test variable holds what we are looking for. target variable is where we are looking.</li>\n<li>Third, we loop through our test characters, and if they are not <em>all</em> found we return false.</li>\n</ul>\n<h4>Code Explanation(Third solution):</h4>\n<ul>\n<li>First, we convert the two strings of the array to the lowercase.</li>\n<li>Then, we loop through the letters of our second string of the array and\nsearch for it in the first string, if it’s not present we return false\nand our program terminates.</li>\n<li>If all the letters in the second string is present in the first, the\nloop ends without returning anything, and then we return true.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @sxmxc @Rafase282 @anuragaryan</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire No Repeats Please",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>\n<p>This task requires us to look at each possible permutation of a string. This is best done using a recursion function. Being able to build a function which collects all permutations of a string is a common interview question, so there is no shortage of tutorials out there on how to do this, in many different code languages.</p>\n</li>\n<li>\n<p>This task can still be daunting even after watching a tutorial. You will want to send each new use of the function  3 inputs: 1. a new string (or character array) that is being built, 2. a position in your new string that’s going to be filled next, and 3. an idea of what characters (more specifically positions) from the original string have yet to be used. The pseudo code will look something like this:</p>\n<pre><code>var str = ???;\nperm(current position <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, what\'s been used <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, current <span class="hljs-type">string</span> build thus far){\n<span class="hljs-keyword">if</span>(current <span class="hljs-type">string</span> <span class="hljs-keyword">is</span> finished) {\n  print current <span class="hljs-type">string</span>;\n}<span class="hljs-keyword">else</span>{\n  <span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>; i &lt; str.<span class="hljs-property">length</span>; i++) {\n    <span class="hljs-keyword">if</span>(str[i] has <span class="hljs-keyword">not</span> been used) {\n      <span class="hljs-keyword">put</span> str[i] <span class="hljs-keyword">into</span> <span class="hljs-keyword">the</span> current position;\n      mark str[i] <span class="hljs-keyword">as</span> used\n      perm(current position <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, what\'s been used <span class="hljs-keyword">in</span> original <span class="hljs-type">string</span>, current <span class="hljs-type">string</span> build thus far)\n      unmark str[i] <span class="hljs-keyword">as</span> used because another branch <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> tree <span class="hljs-keyword">for</span> i + <span class="hljs-number">1</span> will still likely use <span class="hljs-keyword">it</span>;\n    }\n  }\n}\n}\nperm(<span class="hljs-number">0</span>, nothing used yet, empty new <span class="hljs-type">string</span> (<span class="hljs-keyword">or</span> array <span class="hljs-keyword">the</span> same size <span class="hljs-keyword">as</span> str);\n</code></pre>\n</li>\n<li>\n<p>Another way to think about this problem is to start from an empty space. Introduce the first letter to the space. This space will now contain the first sub-permutation. Here’s a diagram illustrating the idea:</p>\n</li>\n</ul>\n<p><img src="http://i.imgur.com/zFm5gRx.png" alt="diagram"></p>\n<pre><code class="language-js"><span class="hljs-comment">// An approach to introduce a new character to a permutation</span>\n<span class="hljs-keyword">var</span> ch = <span class="hljs-string">\'?\'</span>;\n<span class="hljs-keyword">var</span> source = [<span class="hljs-string">\'?\'</span>, <span class="hljs-string">\'?\'</span>, <span class="hljs-string">\'?\'</span>];     <span class="hljs-comment">// Current sub-permutation</span>\n<span class="hljs-keyword">var</span> temp, dest = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;= source.length; ++i) {\n    temp = source.slice(<span class="hljs-number">0</span>);    <span class="hljs-comment">// Copy the array</span>\n    temp.splice(i, <span class="hljs-number">0</span>, ch);    <span class="hljs-comment">// Insert the new character</span>\n    dest.push(temp);    <span class="hljs-comment">// Store the new sub-permutation    </span>\n}\n</code></pre>\n<p>Finding each permutation could then be done non-recursively by including the above in a function taking a source array and returning a destination array. For each letter of the input string, pass that character, as well as the array  returned from the previous call of the function.</p>\n<p>A way to visualize this is by considering a tree that starts with the first character of your string: <img src="http://i.imgur.com/t8zNarc.png" alt="Permutation Tree"></p>\n<h2>Hint: 1</h2>\n<ul>\n<li>The easiest way is to use Heap’s algorithm to recursively get a list of all the permutations.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Once you have the list then just create a regular expression to catch the repeating characters.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will want to have the permutations as an array of joined strings instead of separated characters.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">permAlone</span>(<span class="hljs-params">str</span>) </span>{\n\n  <span class="hljs-comment">// Create a regex to match repeated consecutive characters.</span>\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/(.)\\1+/g</span>;\n\n  <span class="hljs-comment">// Split the string into an array of characters.</span>\n  <span class="hljs-keyword">var</span> arr = str.split(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">var</span> permutations = [];\n  <span class="hljs-keyword">var</span> tmp;\n\n  <span class="hljs-comment">// FUnction to swap variables\' content.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">index1, index2</span>) </span>{\n    tmp = arr[index1];\n    arr[index1] = arr[index2];\n    arr[index2] = tmp;\n  }\n\n  <span class="hljs-comment">//Generate arrays of permutations using the algorithm.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generate</span>(<span class="hljs-params">int</span>) </span>{\n    <span class="hljs-keyword">if</span> (int === <span class="hljs-number">1</span>) {\n      <span class="hljs-comment">// Make sure to join the characters as we create  the permutation arrays</span>\n      permutations.push(arr.join(<span class="hljs-string">\'\'</span>));\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i != int; ++i) {\n        generate(int - <span class="hljs-number">1</span>);\n        swap(int % <span class="hljs-number">2</span> ? <span class="hljs-number">0</span> : i, int - <span class="hljs-number">1</span>);\n      }\n    }\n  }\n\n  generate(arr.length);\n\n  <span class="hljs-comment">// Filter the array of repeated permutations.</span>\n  <span class="hljs-keyword">var</span> filtered = permutations.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">string</span>) </span>{\n    <span class="hljs-keyword">return</span> !string.match(regex);\n  });\n\n  <span class="hljs-comment">//Return how many have no repetitions.</span>\n  <span class="hljs-keyword">return</span> filtered.length;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Philosophist @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Pairwise",order:5,body:'<h1>Explanation:</h1>\n<p>The program should look for the numbers in the array which would add to make the number from the <strong>arg.</strong> Then instead of adding those numbers up, you will add their <strong>indices</strong> which is the reason why you get 11 on the example from detail.</p>\n<p>Remember that arrays start at index 0 and go from there so from [1,4,2,3,0,5] if we switch to their indices it would be [0,1,2,3,4,5] then we add indices 1 + 2 + 3 + 5 and we get 11. That is what we need to return.</p>\n<h2>Hint: 1</h2>\n<p>Remember to return the smaller sum if multiple are possible. This means <code>[1,1,1],1 should use 0 + 1 instead of 0+1 &amp; 1 +1 , etc</code></p>\n<h2>Hint: 2</h2>\n<p>Try using an array of indices to track when an index has been used or not.</p>\n<h2>Hint: 3</h2>\n<p>It is easy to confuse indices as being numbers, but since you will be interacting with them, make sure to work with them as integers to prevent the code from behaving erratically.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pairwise</span>(<span class="hljs-params">arr, arg</span>) </span>{\n  <span class="hljs-comment">// Create empty array to keep the arrays we will add.</span>\n  <span class="hljs-keyword">var</span> index = [];\n\n  <span class="hljs-comment">// Loop to check the first number.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> arr) {\n    <span class="hljs-comment">// temporal first number.</span>\n    <span class="hljs-keyword">var</span> temp = arr[a];\n\n    <span class="hljs-comment">// Second loop to check against the first number.</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; arr.length; i++) {\n      <span class="hljs-comment">// temporal secodn number.</span>\n      <span class="hljs-keyword">var</span> temp2 = arr[i];\n\n      <span class="hljs-comment">// Key element, this check to make sure that the numbers add to arg</span>\n      <span class="hljs-comment">// also that the second index is greater than the first, and that neither</span>\n      <span class="hljs-comment">// of those indices are already on the array.</span>\n      <span class="hljs-keyword">if</span> (temp + temp2 === arg &amp;&amp; i &gt; a &amp;&amp; index.indexOf(+a) === -<span class="hljs-number">1</span> &amp;&amp; index.indexOf(+i) === -<span class="hljs-number">1</span>) {\n        <span class="hljs-comment">// if true then add both indices as integers then stop checking to avoid repeats.</span>\n        index.push(+a, +i);\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n  }\n\n  <span class="hljs-comment">// After the two loops are done, check if index is empty to return 0</span>\n  <span class="hljs-comment">// or if it is not, then use Array.reduce(callbackFunc) to returnt he sum</span>\n  <span class="hljs-comment">// of the numbers.</span>\n  <span class="hljs-keyword">if</span> (index.length &gt;= <span class="hljs-number">1</span>) {\n    <span class="hljs-keyword">var</span> addAll = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n      <span class="hljs-keyword">return</span> a + b;\n    };\n\n    <span class="hljs-keyword">return</span> index.reduce(addAll);\n  } <span class="hljs-keyword">else</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First I create an empty array to store the indices that i will be adding.</li>\n<li>Then I create an outer loop to get the first number.</li>\n<li>Then get the second number from another inner loop.</li>\n<li>Then I check to make sure that the two numbers add to arg that was passed as a parameter to the function; we also have to make sure the index from the second loop is grater than the one from the first loop to avoid adding wrong indices. We also have to check to make sure the indices are not already part of the <strong>index</strong> array.</li>\n<li>If all that is true, then we add the two indices as integer by using ‘+’ or parseInt(), and then we stop the inner loop since everything else would be redundant and wrong.</li>\n<li>After all the loops are over, check in <strong>index</strong> is empty, if it is then return 0, otherwise return the addition of all the integers in it using Array.reduce(callbackFunc) to return the sum of the numbers.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Pig Latin",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You need to create a program that will translate from English to Pig Latin. Check the instructions for converting to Pig Latin from the initial description or the wiki page. It might not be obvious but you need to remove all the consonants up to the first vowel in the case there letter does not start with a vowel.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>You will probably want to use regular expressions. This will allow you to convert the words easily.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If the first character is a vowel, then take that whole word and add ‘way’ at the end. Otherwise comes the tricky part, take the consonant(s) before the first vowel and move it to the end and add ‘ay’. This is where I had trouble since it was not clear that it was not just the first consonant but all of them before the first vowel.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to use everything you know about string manipulation to get the last part right. However, it can be done with <code>substr</code> alone.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>First</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create variables to be used</span>\n  <span class="hljs-keyword">var</span> pigLatin = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/[aeiou]/gi</span>;\n  <span class="hljs-comment">// Check if the first character is a vowel</span>\n  <span class="hljs-keyword">if</span> (str[<span class="hljs-number">0</span>].match(regex)) {\n    pigLatin = str + <span class="hljs-string">\'way\'</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">// Find how many consonants before the firs vowel.</span>\n    <span class="hljs-keyword">var</span> vowelIndice = str.indexOf(str.match(regex)[<span class="hljs-number">0</span>]);\n    <span class="hljs-comment">// Take the string from the first vowel to the last char</span>\n    <span class="hljs-comment">// then add the consonants that were previously omitted and add the ending.</span>\n    pigLatin = str.substr(vowelIndice) + str.substr(<span class="hljs-number">0</span>, vowelIndice) + <span class="hljs-string">\'ay\'</span>;\n  }\n\n  <span class="hljs-keyword">return</span> pigLatin;\n}\n</code></pre>\n<h3>Second</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">translate</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">//finding all the consonants in the beginning of the str. </span>\n  <span class="hljs-comment">//by using &amp;&amp; below I\'m achiving a concept called Intersection of Regular Expressions</span>\n  <span class="hljs-comment">//where your pattern finds the union of two or more RegEx rules. </span>\n  <span class="hljs-comment">//In Java you can achive this with RegEx special character \'&amp;&amp;\' </span>\n  <span class="hljs-comment">//but in Javascript you can use the following instead. </span>\n  <span class="hljs-comment">//Credit goes to http://stackoverflow.com/q/6595477</span>\n  <span class="hljs-keyword">var</span> consChars = str.match(<span class="hljs-regexp">/^[a-z]/</span>) &amp;&amp; str.match(<span class="hljs-regexp">/[^aeiou]*/</span>).join(<span class="hljs-string">\'\'</span>);\n  \n  <span class="hljs-comment">//if no consonants found (i.e. str starts with vowels)</span>\n  <span class="hljs-comment">//use replace to remove consonants and construct newStr else add \'way\' in the end</span>\n  <span class="hljs-keyword">if</span> (consChars !== <span class="hljs-string">\'\'</span>){\n    newStr = str.replace(consChars, <span class="hljs-string">\'\'</span>) + consChars + <span class="hljs-string">"ay"</span>;\n  } <span class="hljs-keyword">else</span> {\n    newStr = str + <span class="hljs-string">"way"</span>;\n  }\n  <span class="hljs-keyword">return</span> newStr;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Repeat a String Repeat a String",order:5,body:'<h1>Explanation:</h1>\n<p>The program is very simple, we have to take a variable and return that variable being repeated certain amount of times. No need to add space or anything, just keep repeating it into one single string.</p>\n<h2>Hint: 1</h2>\n<p>You can’t edit strings, you will need to create a variable to store the new string.</p>\n<h2>Hint: 2</h2>\n<p>Create a loop to repeat the code as many times as needed.</p>\n<h2>Hint: 3</h2>\n<p>Make the variable created store the current value and append the word to it.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">var</span> accumulatedStr = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-keyword">while</span> (num &gt; <span class="hljs-number">0</span>) {\n    accumulatedStr += str;\n    num--;\n  }\n\n  <span class="hljs-keyword">return</span> accumulatedStr;\n}\n</code></pre>\n<p>Second Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">var</span> newstr = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; num; i++) {\n    newstr.push(str);\n  }\n  <span class="hljs-keyword">return</span> newstr.join(<span class="hljs-string">\'\'</span>);\n}\n\nrepeat(<span class="hljs-string">"abc"</span>, <span class="hljs-number">3</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable to store the repeated word.</li>\n<li>Use a while loop or for loop to repeat code as many times as needed according to <code>num</code></li>\n<li>The we just have to add the string to the variable created on step one. and increase or decrease num depending on how you set the loop.</li>\n<li>At the end of the loop, return the variable for the repeated word.</li>\n</ul>\n<p>Third Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">0</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">""</span>;\n  } \n  <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> str.repeat(num);\n  }\n}\n\nrepeat(<span class="hljs-string">"abc"</span>, <span class="hljs-number">3</span>);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First check if num is a negative number and return false if so</li>\n<li>as of ECMA Script 6 (ES6) the String object comes with a builtin function to repeat a string which we you can use</li>\n</ul>\n<p>##Recursive Solution</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">repeat</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">if</span>(num &lt;= <span class="hljs-number">0</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-string">""</span>;\n  }\n  <span class="hljs-keyword">if</span>(num = <span class="hljs-number">0</span>){\n  <span class="hljs-keyword">return</span> str;\n  }\n  <span class="hljs-keyword">else</span>{\n    <span class="hljs-keyword">return</span> str + repeat(str, num - <span class="hljs-number">1</span>);\n  }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @shadowfool</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Return Largest Numbers in Arrays",order:5,body:'<h1>Explanation:</h1>\n<p>You will get an array that contains sub arrays of numbers and you need to return an array with the largest number from each of the sub arrays.</p>\n<h2>Hint: 1</h2>\n<p>You will need to keep track of the array with the answer and the largest number of each sub-array.</p>\n<h2>Hint: 2</h2>\n<p>You can work with multidimensional arrays by <code>Array[Index][SubIndex]</code></p>\n<h2>Hint: 3</h2>\n<p>Pay close attention to the timing of the storing of variables when working with loops</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solutions ahead!</strong></p>\n<h2>Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">largestOfFour</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> results = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; arr.length; n++) {\n    <span class="hljs-keyword">var</span> largestNumber = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> sb = <span class="hljs-number">0</span>; sb &lt; arr[n].length; sb++) {\n      <span class="hljs-keyword">if</span> (arr[n][sb] &gt; largestNumber) {\n        largestNumber = arr[n][sb];\n      }\n    }\n\n    results[n] = largestNumber;\n  }\n\n  <span class="hljs-keyword">return</span> results;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable to store the results as an array.</li>\n<li>Create an outer loop to iterate through the main array.</li>\n<li>Before going into the inner loop, create a variable to hold the largest number. This must be outside the inner loop.</li>\n<li>Create another for loop to work with the sub-arrays.</li>\n<li>Check if the element of the sub array is larger than the current largest number. If so, then save the number.</li>\n<li>After the inner loop, save the largest number in the variable for the results.</li>\n</ul>\n<h2>Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">largestOfFour</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// You can do this!</span>\n  <span class="hljs-comment">// Yes, I can. :P</span>\n  <span class="hljs-keyword">return</span> arr.map(<span class="hljs-built_in">Function</span>.apply.bind(<span class="hljs-built_in">Math</span>.max, <span class="hljs-literal">null</span>));\n}\n\nlargestOfFour([[<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">13</span>, <span class="hljs-number">27</span>, <span class="hljs-number">18</span>, <span class="hljs-number">26</span>], [<span class="hljs-number">32</span>, <span class="hljs-number">35</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>], [<span class="hljs-number">1000</span>, <span class="hljs-number">1001</span>, <span class="hljs-number">857</span>, <span class="hljs-number">1</span>]]);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The <code>Function.apply.bind(Math.max, null)</code> makes a new function accepting the <code>arr.map</code> values i.e. the inner arrays.</li>\n</ul>\n<p>Now the new function needs to find the max of the input inner array.</p>\n<ul>\n<li>So we want to create a function that does the work of <code>Math.max</code> and accepts input as an array.</li>\n</ul>\n<p>e.g. wouldn’t be nice if the <code>Math.max</code> would be accepting inputs like this:<br>\n<code>Math.max([9, 43, 20, 6]); // 43</code>.</p>\n<ul>\n<li>To do the work of accepting params as array, there is this <code>Function.apply</code> method but it <em>invokes</em> the <em>context</em> function.</li>\n</ul>\n<p>i.e. <code>Math.max.apply(null, [9, 43, 20, 6]); // 43</code> would invoke the <code>Max.max</code> method.</p>\n<blockquote>\n<p>Here we’re passing <code>null</code> as the <em>context</em> of the <code>Function.apply</code> method as <code>Math.max</code> doesn’t need any context.</p>\n</blockquote>\n<p>But that’s not useful for <code>arr.map</code> which accepts a function value. So we create a function value using <code>Function.bind</code> method.</p>\n<ul>\n<li>Since, <code>Function.apply</code> is a static <em>method</em> of <code>Function</code> Object, so we can call <code>Function.prototype.bind</code> on <code>Function.apply</code> i.e. <code>Function.apply.bind</code>.</li>\n</ul>\n<p>Now we pass the <em>context</em> for <code>Function.apply.bind</code> call i.e. <code>Math.max</code> method as the 1st argument which would give us the functionality of <code>Math.max</code> method.</p>\n<ul>\n<li>Since <code>Function.apply</code> method takes a context as it’s 1st argument, hence, we need to pass a bogus <em>context</em> for <code>Function.apply</code> method.\n<ul>\n<li>So, we pass <code>null</code> as the 2nd param to <code>Function.apply.bind</code> which gives a <em>context</em> to the <code>Math.max</code> method.</li>\n<li>Since, <code>Math.max</code> is independent of any <em>context</em>, hence, it ignores the bogus <em>context</em> given by <code>Function.apply</code> method call.</li>\n</ul>\n</li>\n</ul>\n<p><strong>So in the end we get a function (using <code>Function.bind</code> method) that works like <code>Math.max</code> but accepts params as an array like <code>Function.apply</code></strong> :smiley:</p>\n<p><em>comprendido</em>? :neutral_face:</p>\n<blockquote>\n<p>NOTE: This is an advanced solution. NOT FOR BEGINNERS.</p>\n</blockquote>\n<p><strong>Reference:-</strong></p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+Math+max">http://devdocs.io/#q=js+Math+max</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+map">http://devdocs.io/#q=js+Array+map</a></li>\n<li><a href="http://devdocs.io/#q=js+Function+apply">http://devdocs.io/#q=js+Function+apply</a></li>\n<li><a href="http://devdocs.io/#q=js+Function+bind">http://devdocs.io/#q=js+Function+bind</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @abhisekp</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Reverse a String",order:5,body:'<h1>Problem Explanation:</h1>\n<p>You need to take the string and reverse it so if you had originally ‘hello’, it will turn into ‘olleh’. Because you will need to split it, you will be working with Arrays too.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>You should split the string by characters.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Find out about the built in function to reverse a string.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Once you have split and reversed, do not forget to join them back into one string.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reverseString</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> strReverse = str.split(<span class="hljs-string">\'\'</span>).reverse().join(<span class="hljs-string">\'\'</span>);\n  <span class="hljs-keyword">return</span> strReverse;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>This is a straightforward code. We create a variable that will hold the string split by characters, and then reversed and put back together.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Roman Numeral Converter",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that converts an integer to a roman numeral.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Creating an array with the Roman Numerals and one with the decimal equivalent for the new forms will be very helpful.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>If you add the numbers that go before the new letter is introduced, it will save you plenty of code, like values for 4, 9, and 40.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You can’t have more than three consecutive Roman numerals together.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h1>Code Solution:</h1>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> convert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{\n\n  <span class="hljs-comment">// Create arrays with default conversion with matching indices.</span>\n  <span class="hljs-keyword">var</span> decimalValue = [ <span class="hljs-number">1000</span>, <span class="hljs-number">900</span>, <span class="hljs-number">500</span>, <span class="hljs-number">400</span>, <span class="hljs-number">100</span>, <span class="hljs-number">90</span>, <span class="hljs-number">50</span>, <span class="hljs-number">40</span>, <span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span> ];\n  <span class="hljs-keyword">var</span> romanNumeral = [ <span class="hljs-string">\'M\'</span>, <span class="hljs-string">\'CM\'</span>, <span class="hljs-string">\'D\'</span>, <span class="hljs-string">\'CD\'</span>, <span class="hljs-string">\'C\'</span>, <span class="hljs-string">\'XC\'</span>, <span class="hljs-string">\'L\'</span>, <span class="hljs-string">\'XL\'</span>, <span class="hljs-string">\'X\'</span>, <span class="hljs-string">\'IX\'</span>, <span class="hljs-string">\'V\'</span>, <span class="hljs-string">\'IV\'</span>, <span class="hljs-string">\'I\'</span> ];\n\n  <span class="hljs-comment">//empty string variable for the final roman number</span>\n  \n  <span class="hljs-keyword">var</span> romanized = <span class="hljs-string">\'\'</span>;\n\n  <span class="hljs-comment">// Loop through the indices of the decimalValue array.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> index = <span class="hljs-number">0</span>; index &lt; decimalValue.length; index++) {\n    <span class="hljs-comment">// Continue to loop while the value at the current index will fit into numCopy</span>\n    <span class="hljs-keyword">while</span> (decimalValue[index] &lt;= num) {\n      <span class="hljs-comment">// Add the Roman numeral &amp; decrease numCopy by the decimal equivalent.</span>\n      romanized += romanNumeral[index];\n      num -= decimalValue[index];\n    }\n  }\n\n  <span class="hljs-keyword">return</span> romanized;\n};\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:\n<code>Thanks @Rafase282 @SaintPeter @benschac</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Search and Replace",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You will create a program that takes a sentence, then search for a word in it and replaces it for a new one while preserving the uppercase if there is one.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Find the index where <code>before</code> is in the string.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Check first letter case.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Strings are immutable, you will need to save the edits on another variable, even if you must reuse the same one just to make it look like the changes where done using just that one variable.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myReplace</span>(<span class="hljs-params">str, before, after</span>) </span>{\n  <span class="hljs-comment">// Find index where before is on string</span>\n  <span class="hljs-keyword">var</span> index = str.indexOf(before);\n  <span class="hljs-comment">// Check to see if the first letter is uppercase or not</span>\n  <span class="hljs-keyword">if</span> (str[index] === str[index].toUpperCase()) {\n    <span class="hljs-comment">// Change the after word to be capitalized before we use it.</span>\n    after = after.charAt(<span class="hljs-number">0</span>).toUpperCase() + after.slice(<span class="hljs-number">1</span>);\n  }\n  <span class="hljs-comment">// Now replace the original str with the edited one.</span>\n  str = str.replace(before, after);\n\n  <span class="hljs-keyword">return</span> str;\n}\n</code></pre>\n<h2>Another Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myReplace</span>(<span class="hljs-params">str, before, after</span>) </span>{\n<span class="hljs-comment">//Create a regular expression object</span>\n  <span class="hljs-keyword">var</span> re = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(before,<span class="hljs-string">"gi"</span>);\n<span class="hljs-comment">//Check whether the first letter is uppercase or not</span>\n  <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/[A-Z]/</span>.test(before[<span class="hljs-number">0</span>])){\n  <span class="hljs-comment">//Change the word to be capitalized</span>\n    after = after.charAt(<span class="hljs-number">0</span>).toUpperCase()+after.slice(<span class="hljs-number">1</span>);\n     }\n     <span class="hljs-comment">//Replace the original word with new one</span>\n  <span class="hljs-keyword">var</span>  newStr =  str.replace(re,after);\n\n <span class="hljs-keyword">return</span> newStr;\n\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments on program.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong> <strong><code>thanks @coded9</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Seek and Destroy",order:5,body:'<h1>Explanation:</h1>\n<p>This problem is a bit tricky because you have to familiarize yourself with Arguments, as you will have to work with two <strong>or more</strong> but on the script you only see two. Many people hardcode this program for three arguments. You will remove any number from the first argument that is the same as any other other arguments.</p>\n<h2>Hint: 1</h2>\n<p>You need to work with <code>arguments</code> as if it was a regular array. The best way is to convert it into one.</p>\n<h2>Hint: 2</h2>\n<p>You need to filter, this also means you need to create a callback function, one that checks if the element is on the <code>indexOf()</code></p>\n<h2>Hint: 3</h2>\n<p>To convert <code>arguments</code> into an array use this code <code>var args = Array.prototype.slice.call(arguments);</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">destroyer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n  args.splice(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>);\n  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">element</span>) </span>{\n    <span class="hljs-keyword">return</span> args.indexOf(element) === -<span class="hljs-number">1</span>;\n  });\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>The first line will turn the <code>arguments</code> variable into a full array instead of the limited array it currently is.</li>\n<li>Next I remove the first argument since I don’t need, since I only want the other arguments passed besides the first which is the array we are going to compare against.</li>\n<li>Then use the <code>filter()</code> to filter out the elements that are on the array and keep the ones that are not.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Slasher Flick",order:5,body:'<h1>The problem</h1>\n<p>Return the remaining elements of an array after chopping off n elements from the head. Factorials are often represented with the shorthand notation n!</p>\n<p>For example: <code>slasher([1, 2, 3], 2);</code> must return [3]</p>\n<h2>Analysis</h2>\n<p>Since we need only the remaining part of an array we can just remove what we don’t.</p>\n<h2>Understanding slicing</h2>\n<p>Slice allows to get only what you want from an array.</p>\n<h2>Understanding the splice</h2>\n<p>If you want the <strong>tail</strong> of a snake remove the head first. The splice() method changes the content of an array by removing existing elements and/or adding new elements. This can be handy. Get an array, remove the first part and return the remaining.</p>\n<h2>:construction: My Solution is coming up!</h2>\n<p>Don’t scroll down if you don’t want to see it!</p>\n<p><img src="http://www.yourdrum.com/yourdrum/images/2007/10/10/red_warning_sign_2.gif" alt="warning"></p>\n<pre><code>           ,,,         ,,,\n          <span class="hljs-comment">;"   ^;     ;\'   ",</span>\n          <span class="hljs-comment">;    s$$$$$$$s     ;</span>\n          ,  ss$$$$$$$$$$s  ,\'\n          <span class="hljs-comment">;s$$$$$$$$$$$$$$$</span>\n          $$$$$$$$$$$$$$$$$$\n         $$$$P<span class="hljs-string">""</span>Y$$$Y<span class="hljs-string">""</span>W$$$$$      -{ Happy Camping! }\n         $$$$  p<span class="hljs-string">"$$$"</span>q  $$$$$\n         $$$$  .$$$$$.  $$$$\n          $$DcaU$$$$$$$$$$\n            <span class="hljs-string">"Y$$$"</span>*<span class="hljs-string">"$$$Y"</span>    \n                <span class="hljs-string">"$b.$$"</span>\n</code></pre>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">slasher</span>(<span class="hljs-params">arr, howMany</span>) </span>{\n  <span class="hljs-comment">// remove the head</span>\n  arr.splice(<span class="hljs-number">0</span>,howMany);\n  <span class="hljs-comment">//return the remaining or the tail  \\__/(**)-&lt;</span>\n  <span class="hljs-keyword">return</span> arr;\n}\nslasher([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-number">2</span>);\n</code></pre>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">slasher</span>(<span class="hljs-params">arr, howMany</span>) </span>{\n  \n  <span class="hljs-comment">//Return string after the amount chopped off.</span>\n  <span class="hljs-keyword">return</span> arr.slice(howMany);\n\n}\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @clint74 @Rafase282 @M-Bowe</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Smallest Common Multiple",order:5,body:'<h1>Explanation:</h1>\n<p>This particular problem can be confusing because most people look for the smallest common multiple of the two number but forget the keyword <strong>range.</strong> This means that if you get <code>[1,5]</code> then you have to check for the smallest common multiple for all these numbers [1,2,3,4,5] that is evenly divisible by all of them.</p>\n<h2>Hint: 1</h2>\n<p>Create an array with all the numbers that are missing from the original array to make it easier to check when having to check for even division.</p>\n<h2>Hint: 2</h2>\n<p>You can use modulo <code>%</code> to check if the reminder is 0, which means it is evenly divisible.</p>\n<h2>Hint: 3</h2>\n<p>If you sort the array from greater to lowest then you can check for the first two numbers as it is more likely to the the smallest common multiple than the lower numbers.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Sort array from greater to lowest</span>\n  <span class="hljs-comment">// This line of code was from Adam Doyle (http://github.com/Adoyle2014)</span>\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">return</span> b - a;\n  });\n\n  <span class="hljs-comment">// Create new array and add all values from greater to smaller from the original array.</span>\n  <span class="hljs-keyword">var</span> newArr = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = arr[<span class="hljs-number">0</span>]; i &gt;= arr[<span class="hljs-number">1</span>]; i--) {\n    newArr.push(i);\n  }\n\n  <span class="hljs-comment">// Variables needed declared outside the loops.</span>\n  <span class="hljs-keyword">var</span> quot = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">var</span> loop = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">var</span> n;\n\n  <span class="hljs-comment">// run code while n is not the same as the array length.</span>\n  <span class="hljs-keyword">do</span> {\n    quot = newArr[<span class="hljs-number">0</span>] * loop * newArr[<span class="hljs-number">1</span>];\n    <span class="hljs-keyword">for</span> (n = <span class="hljs-number">2</span>; n &lt; newArr.length; n++) {\n      <span class="hljs-keyword">if</span> (quot % newArr[n] !== <span class="hljs-number">0</span>) {\n        <span class="hljs-keyword">break</span>;\n      }\n    }\n\n    loop++;\n  } <span class="hljs-keyword">while</span> (n !== newArr.length);\n\n  <span class="hljs-keyword">return</span> quot;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Because the possibility of the smallest common denominator being among the two biggest numbers, it makes sense to check those first, so sort the array.</li>\n<li>Create a new array to sore all the numbers.</li>\n<li>Use a descending for loop to add the numbers from the biggest to the smallest in the new array.</li>\n<li>Declare the variables for the quotient, the number of loops and the variable that we will use in a for loop on another scope, this will allow us access outside the loop.</li>\n<li>Use a do while loop to check what we need while <strong>n</strong> is not the same length as the new array.</li>\n<li>In the <strong>do</strong> part, we are going to multiply the very first number, times the number of loops, times the second number.</li>\n<li>The loop part will allows us to increase the number beyond the greatest number we have without having to change the algorithm.</li>\n<li>We enter a for loop that will go from n being 2 and going up by one while it is smaller than the array with all the numbers.</li>\n<li>If the quotient is not even then stop the loop. If it is even then it check for the next elements in the array until it is not even or we find our answer.</li>\n<li>Outside the loop, increase the value of loop.</li>\n<li>At the end of the loop return the quotient.</li>\n</ul>\n<p>If the array only has two elements then the for loop never gets used and the return value is the product of said numbers. Otherwise, from the third element and until n is the same and the array length check if the remainder of the quotient and the third value of the array is not 0, if it is not 0 then stop loop increases and then we start over. If the remainder was 0 then keep checking until the end of the array.</p>\n<h1>Alternate solution:</h1>\n<p>Note: The solution above requires over 2,000 loops to calculate the test case smallestCommons([1,13]), and over 4 million loops to calculate smallestCommons([1,25]). The alternate code below evaluates smallestCommons([1,13]) in around 20 loops and smallestCommons([1,25]) in 40, by using a more efficient algorithm.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">for</span>(i = <span class="hljs-built_in">Math</span>.max(...arr); i &gt;= <span class="hljs-built_in">Math</span>.min(...arr); i--) arr.push(i);\n  \n  <span class="hljs-keyword">return</span> arr.slice(<span class="hljs-number">2</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>)</span>{\n    <span class="hljs-keyword">var</span> a = x, b = y, t = <span class="hljs-number">0</span>;    \n    <span class="hljs-keyword">while</span>(a % b){a = a % b; t = a; a = b; b = t;}\n    <span class="hljs-keyword">return</span> x / b * y;\n  });\n}\n\n</code></pre>\n<p>If you have trouble understanding the .reduce() method, you can compare it to this code, which essentially does the same thing:</p>\n<pre><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallestCommons</span><span class="hljs-params">(arr)</span> {</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-built_in">i</span> = Math.max(...arr); <span class="hljs-built_in">i</span> &gt;= Math.min(...arr); <span class="hljs-built_in">i</span>--) arr.push(<span class="hljs-built_in">i</span>);\n  \n  var <span class="hljs-built_in">lcm</span> = arr<span class="hljs-matrix">[<span class="hljs-number">2</span>]</span>, a = <span class="hljs-number">0</span>, b = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>;\n  \n  <span class="hljs-keyword">for</span> (<span class="hljs-built_in">i</span> = <span class="hljs-number">3</span>; <span class="hljs-built_in">i</span> &lt; arr.<span class="hljs-built_in">length</span>; <span class="hljs-built_in">i</span>++)<span class="hljs-cell">{\n    a = lcm, b = arr[i];  \n    while(a % b){a = a % b; t = a; a = b; b = t;}</span>\n    <span class="hljs-built_in">lcm</span> = <span class="hljs-built_in">lcm</span> / b * arr<span class="hljs-matrix">[i]</span>;\n  }\n  \n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">lcm</span>;\n}\n</code></pre>\n<p>This code is based on the <a href="https://en.wikipedia.org/wiki/Euclidean_algorithm">Euclidean algorithm</a> for finding smallest common multiples.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @Adoyle2014</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Sorted Union",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>The program has to return a new array of unique values from two original arrays in the order they show up. So there is not sorting required, and no duplicates.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Since you have no idea how many parameters were passed, it would be best to loop through the <code>arguments</code> before looping through the arrays.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>I used loops, you can use something else like map, reduce or others if you want.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will have to check if the current value is already on the array to be returned for every value.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h4>First Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params">arr1, arr2, arr3</span>) </span>{\n  <span class="hljs-comment">// Creates an empty array to store our final result.</span>\n  <span class="hljs-keyword">var</span> finalArray = [];\n\n  <span class="hljs-comment">// Loop through the arguments object to truly made the program work with two or more arrays</span>\n  <span class="hljs-comment">// instead of 3.</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">arguments</span>.length; i++) {\n    <span class="hljs-keyword">var</span> arrayArguments = <span class="hljs-built_in">arguments</span>[i];\n\n    <span class="hljs-comment">// Loops through the array at hand</span>\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; arrayArguments.length; j++) {\n      <span class="hljs-keyword">var</span> indexValue = arrayArguments[j];\n\n      <span class="hljs-comment">// Checks if the value is already on the final array.</span>\n      <span class="hljs-keyword">if</span> (finalArray.indexOf(indexValue) &lt; <span class="hljs-number">0</span>) {\n        finalArray.push(indexValue);\n      }\n    }\n  }\n\n  <span class="hljs-keyword">return</span> finalArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Check comments in code.</li>\n</ul>\n<h4>Second Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> concatArr = [];\n  <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;\n  <span class="hljs-keyword">while</span> (<span class="hljs-built_in">arguments</span>[i]){\n    concatArr = concatArr.concat(<span class="hljs-built_in">arguments</span>[i]); i++;\n  }\n  uniqueArray = concatArr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item, pos</span>) </span>{\n    <span class="hljs-keyword">return</span> concatArr.indexOf(item) == pos;\n  }); \n  <span class="hljs-keyword">return</span> uniqueArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Number of arguments can change dynamically so we don’t need to bother providing our func with args at all</li>\n<li>we use a while loop to concatanate all the arguments into one Array called <code>concatArr</code></li>\n<li>we use <code>filter</code> to remove the duplicate elements by checking the index of each element and removing same elements with different positions</li>\n<li>ordering will be preserved as we didn’t mess with it</li>\n</ul>\n<h4>Third Solution:</h4>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unite</span>(<span class="hljs-params">arr1, arr2, arr3</span>) </span>{\n <span class="hljs-keyword">var</span> newArr;\n <span class="hljs-comment">//Convert the arguments object into an array</span>\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n  <span class="hljs-comment">//Use reduce function to flatten the array</span>\n  newArr = args.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arrA,arrB</span>)</span>{\n  <span class="hljs-comment">//Apply filter to remove the duplicate elements in the array</span>\n    <span class="hljs-keyword">return</span> arrA.concat(arrB.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)</span>{\n      <span class="hljs-keyword">return</span> arrA.indexOf(i) === -<span class="hljs-number">1</span>;\n    }));\n  });\n\n   <span class="hljs-keyword">return</span> newArr;                    \n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang @coded9</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Spinal Tap Case",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>Convert the given string to an all lowercase sentence joined by dashes.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Create a regex to for all white spaces and underscores.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You will also have to make everything lowercase.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>The tricky part is getting the regex part to work, once you do that then just turn the uppercase to lowercase and replace spaces with underscores using <code>replace()</code></li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">spinalCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Create a variable for the white space and underscores.</span>\n  <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/\\s+|_+/g</span>;\n\n  <span class="hljs-comment">// Replace low-upper case to low-space-uppercase</span>\n  str = str.replace(<span class="hljs-regexp">/([a-z])([A-Z])/g</span>, <span class="hljs-string">\'$1 $2\'</span>);\n\n  <span class="hljs-comment">// Replace space and underscore with -</span>\n  <span class="hljs-keyword">return</span> str.replace(regex, <span class="hljs-string">\'-\'</span>).toLowerCase();\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Steamroller",order:5,body:'<h1>Explanation:</h1>\n<p>This problem seems simple but you need to make sure to flatten any array, regardless of the level which is what adds a bit of difficulty to the problem.</p>\n<h2>Hint: 1</h2>\n<p>You need to check if an element is an array or not.</p>\n<h2>Hint: 2</h2>\n<p>If you are dealing with an array, then you need flatten it by getting the value inside of the array. This means if you have [[4]] then instead of returning [4] you need to return 4. If you get [[[4]]] then the same, you want the 4. You can access it with arr[index1][index2] to go a level deeper.</p>\n<h2>Hint: 3</h2>\n<p>You will definitely need recursion or another way to go beyond two level arrays to make the code flexible and not hard-coded to the answers needed. Have fun!</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">steamroller</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">var</span> flattenedArray = [];\n\n  <span class="hljs-comment">// Create function that adds an element if it is not an array.</span>\n  <span class="hljs-comment">// If it is an array, then loops through it and uses recursion on that array.</span>\n  <span class="hljs-keyword">var</span> flatten = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arg</span>) </span>{\n    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">Array</span>.isArray(arg)) {\n      flattenedArray.push(arg);\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> arg) {\n        flatten(arg[a]);\n      }\n    }\n  };\n\n  <span class="hljs-comment">// Call the function for each element in the array</span>\n  arr.forEach(flatten);\n  <span class="hljs-keyword">return</span> flattenedArray;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a new variable to keep flattened arrays.</li>\n<li>Create a function that will add non array elements to the new variable, and for the ones that are array it loops through them to get the element.</li>\n<li>It does that by using recursion, if the element is an array then call the function again with a layer of array deeper to check if it is an array or not. if it is not then push that non-array element to the variable that gets returned. Otherwise, keep going deeper.</li>\n<li>Invoke the function, the first time you will always pass it an array, so it always fall in to the isArray branch</li>\n<li>Return the flattened array.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">steamroller</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">flat, toFlatten</span>) </span>{\n    <span class="hljs-keyword">return</span> flat.concat(<span class="hljs-built_in">Array</span>.isArray(toFlatten) ? steamroller(toFlatten) : toFlatten);\n  }, []);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Use reduce to concatenate each element into the last element</li>\n<li>If the new element is an Array itself call the function recursively to flatten it before merging it with the rest of result</li>\n<li>Pass an empty array to reduce as initial value to make sure even the first element will be processed</li>\n<li>Credit goes to <a href="http://stackoverflow.com/a/15030117/1075499">http://stackoverflow.com/a/15030117/1075499</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @sabahang</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Style Guide",order:5,body:'<p><em>work in progress</em></p>\n<h1>Bonfire Style Guide</h1>\n<p>Writing Bonfire challenges is a great way to exercise your own problem solving and testing abilities. It is a simple three step process.</p>\n<ol>\n<li>Fill out the <a href="http://www.freecodecamp.com/bonfire-challenge-generator">generator</a> form and test your challenge.</li>\n<li>Once you have confirmed a working bonfire challenge in the generator, copy and paste the the fields into the <a href="http://www.freecodecamp.com/bonfire-json-generator">JSON generator.</a></li>\n<li>Copy the JSON, fork the freecodecamp repository, and submit a pull request with your addition to the <a href="https://github.com/FreeCodeCamp/freecodecamp/blob/master/seed_data/bonfires.json">bonfires.json.</a></li>\n</ol>\n<h2>Name</h2>\n<p>Name your challenge</p>\n<h2>Difficulty</h2>\n<p>Attempt to rate difficulty compared against existing bonfire challenges.</p>\n<p><em>TODO: add basic quantifiers for each difficulty level</em></p>\n<h2>Description</h2>\n<p>Separate paragraphs with a line break. Only the first paragraph is visible prior to a user clicking the “More information” button.</p>\n<p>All necessary information must be included in the first paragraph. Write this first paragraph as succinct as possible. Subsequent paragraphs should offer hints or details if needed.</p>\n<p>If your subject matter warrants deeper understanding, you may link to Wikipedia.</p>\n<h2>Challenge Seed</h2>\n<p>This is important.</p>\n<h2><s>Challenge Entry Point</s> (deprecated)</h2>\n<p><em>Leave this field blank. It will soon be removed from the generator.</em></p>\n<h2>Tests</h2>\n<p>These tests are what bring your challenge to life. Without them, we cannot confirm the accuracy of a user’s submitted answer. Choose your tests wisely.</p>\n<p>Bonfire tests are written using the <a href="http://chaijs.com/">Chai.js</a> assertion library. Please use the <code>should</code> and <code>expect</code> syntax for end user readability. As an example of what not do to, many of the original Bonfire challenges are written with <code>assert</code> syntax and many of the test cases are difficult to read.</p>\n<p>If your bonfire question has a lot of edge cases, you will need to write many tests for full coverage. If you find yourself writing more tests than you desire, you may consider simplifying the requirements of your bonfire challenge. For difficulty level 1 through 3, you will generally only need 2 to 4 tests.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @brandenbyers @Rafase282</code></p>\n'}},function(e,n){e.exports={title:"Bonfire Sum All Numbers in a Range",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>You need to create a program that will take an array of two numbers who are not necessarily in order, and then add not just those numbers but any numbers in between. For example, [3,1] will be the same as <code>1+2+3</code> and not just <code>3+1</code></li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>Use <code>Math.max()</code> to find the maximum value of two numbers.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Use <code>Math.min()</code> to find the minimum value of two numbers.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Remember to that you must add all the numbers in between so this would require a way to get those numbers.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution 1:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAll</span>(<span class="hljs-params">arr</span>) </span>{\n    <span class="hljs-keyword">var</span> max = <span class="hljs-built_in">Math</span>.max(arr[<span class="hljs-number">0</span>], arr[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">var</span> min = <span class="hljs-built_in">Math</span>.min(arr[<span class="hljs-number">0</span>], arr[<span class="hljs-number">1</span>]);\n    <span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=min; i &lt;= max; i++){\n        temp += i;\n    }\n  <span class="hljs-keyword">return</span>(temp);\n}\n\nsumAll([<span class="hljs-number">1</span>, <span class="hljs-number">4</span>]);\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First create a variable to store the max number between two.</li>\n<li>The same as before for the Smallest number.</li>\n<li>We create a temporary variable to add the numbers.</li>\n</ul>\n<p>Since the numbers might not be always in order, using max() and min() will help organize.</p>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAll</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Buckle up everything to one!</span>\n\n  <span class="hljs-comment">// Using ES6 arrow function (one-liner)</span>\n  <span class="hljs-keyword">var</span> sortedArr = arr.sort((a,b) =&gt; a-b);\n  <span class="hljs-keyword">var</span> firstNum = arr[<span class="hljs-number">0</span>];\n  <span class="hljs-keyword">var</span> lastNum = arr[<span class="hljs-number">1</span>];\n  <span class="hljs-comment">// Using Arithmetic Progression summing formula</span>\n  <span class="hljs-comment">// https://en.wikipedia.org/wiki/Arithmetic_progression#Sum</span>\n  <span class="hljs-keyword">var</span> sum = (lastNum - firstNum + <span class="hljs-number">1</span>) * (firstNum + lastNum) / <span class="hljs-number">2</span>;\n  <span class="hljs-keyword">return</span> sum;\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @abhisekp</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Sum All Odd Fibonacci Numbers",order:5,body:'<h1>Explanation:</h1>\n<p>You will need to gather all the <strong>Fibonacci</strong> numbers and then check for the odd ones. Once you get the odd ones then you will add them all. The last number should be the number given as a parameter if it actually happens to be an off Fibonacci number.</p>\n<h2>Hint: 1</h2>\n<p>To get the next number of the series, you need to add the current one to the previous and that will give you the next one.</p>\n<h2>Hint: 2</h2>\n<p>To check if a number is even all you have to check is if that number % 2 == 0.</p>\n<h2>Hint: 3</h2>\n<p>As you get the next odd one, don’t forget to add it to a global variable that can be returned at the end. <code>result += currNumber;</code> Will do the trick.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumFibs</span>(<span class="hljs-params">num</span>) </span>{\n    <span class="hljs-keyword">var</span> prevNumber = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">var</span> currNumber = <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">var</span> result = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">while</span> (currNumber &lt;= num) {\n        <span class="hljs-keyword">if</span> (currNumber % <span class="hljs-number">2</span> !== <span class="hljs-number">0</span>) {\n            result += currNumber;\n        }\n\n        currNumber += prevNumber;\n        prevNumber = currNumber - prevNumber;\n    }\n\n    <span class="hljs-keyword">return</span> result;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a variable to keep record of the current and previous numbers along with the result that will be returned.</li>\n<li>Use a while loop to make sure we do not go over the number given as parameter.</li>\n<li>We use the modulo operand to check if the current number is odd or even. If even add it to the result.</li>\n<li>Complete the Fibonacci circle by rotating getting the next number and swapping values after.</li>\n<li>Return the result.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @d3ddd</code></p>\n'}},function(e,n){e.exports={title:"Bonfire Sum All Primes",order:5,body:'<h1>Explanation:</h1>\n<p>The explanation for this problem is very simple. You will generate a list of prime numbers up to the number you are given as a parameter. Then you need to add them all up and return that value. The tricky part is on generating the list of prime numbers. I suggest you find a code or a good math algorithm that you can turn into code.</p>\n<h2>Hint: 1</h2>\n<p>Generate a list of all the numbers up to and including the one you got as a parameter. This will be needed to determine which numbers are prime or not.</p>\n<h2>Hint: 2</h2>\n<p>Check this <a href="http://stackoverflow.com/questions/11966520/how-to-find-prime-numbers-between-0-100">link</a> if you prefer to find a solution for finding primes, or try learning and implementing your own <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes">Sieve of Eratosthenes</a></p>\n<h2>Hint: 3</h2>\n<p>This problem is hard if you have to create your own code to check for primes, so don’t feel bad if you had to use someone’s code for that bit. Either way, you are most likely using array, so once you generate an array of primes, then just add them all up and return the number you get.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumPrimes</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-keyword">var</span> res = <span class="hljs-number">0</span>;\n\n  <span class="hljs-comment">// FUnction to get the primes up to max in an array</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPrimes</span>(<span class="hljs-params">max</span>) </span>{\n    <span class="hljs-keyword">var</span> sieve = [];\n    <span class="hljs-keyword">var</span> i;\n    <span class="hljs-keyword">var</span> j;\n    <span class="hljs-keyword">var</span> primes = [];\n    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= max; ++i) {\n      <span class="hljs-keyword">if</span> (!sieve[i]) {\n        <span class="hljs-comment">// i has not been marked -- it is prime</span>\n        primes.push(i);\n        <span class="hljs-keyword">for</span> (j = i &lt;&lt; <span class="hljs-number">1</span>; j &lt;= max; j += i) {\n          sieve[j] = <span class="hljs-literal">true</span>;\n        }\n      }\n    }\n\n    <span class="hljs-keyword">return</span> primes;\n  }\n\n  <span class="hljs-comment">// Add the primes</span>\n  <span class="hljs-keyword">var</span> primes = getPrimes(num);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-number">0</span>; p &lt; primes.length; p++) {\n    res += primes[p];\n  }\n\n  <span class="hljs-keyword">return</span> res;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Create a function that generates the numbers from 1 to <strong>num</strong> and check if they are prime along the way.</li>\n<li>Declare the variables that will be needed.</li>\n<li>Start with 2, if it has not been marked and added to the sieve array then it is a prime and we add it to the prime array.</li>\n<li>Add the others to the sieve array.</li>\n<li>Return the primes</li>\n<li>Loop through the returned array and add all the elements to then return the final value.</li>\n</ul>\n<h2>Recursive Solution:</h2>\n<pre><code class="language-JS"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumPrimes</span>(<span class="hljs-params">num</span>) </span>{\n  <span class="hljs-comment">// function to check if the number presented is prime</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPrime</span>(<span class="hljs-params">number</span>)</span>{\n      <span class="hljs-keyword">for</span> (i = <span class="hljs-number">2</span>; i &lt;= number; i++){\n          <span class="hljs-keyword">if</span>(number % i === <span class="hljs-number">0</span> &amp;&amp; number!= i){\n          <span class="hljs-comment">// return true if it is divisable by any number that is not itself. </span>\n             <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n          }\n       }\n       <span class="hljs-comment">// if it passes the for loops conditions it is a prime</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n  <span class="hljs-comment">// 1 is not a prime, so return nothing, also stops the recusrive calls.</span>\n  <span class="hljs-keyword">if</span> (num === <span class="hljs-number">1</span>){\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n  <span class="hljs-comment">// Check if your number is not prime</span>\n  <span class="hljs-keyword">if</span>(isPrime(num) === <span class="hljs-literal">false</span>){\n  <span class="hljs-comment">// for non primes check the next number down from your maximum number, do not add anything to your answer</span>\n    <span class="hljs-keyword">return</span> sumPrimes(num - <span class="hljs-number">1</span>);\n  }\n  \n  <span class="hljs-comment">// Check if your number is prime</span>\n  <span class="hljs-keyword">if</span>(isPrime(num) === <span class="hljs-literal">true</span>){\n  <span class="hljs-comment">// for primes add that number to the next number in the sequence through a recursive call to our sumPrimes function.</span>\n    <span class="hljs-keyword">return</span> num + sumPrimes(num - <span class="hljs-number">1</span>);\n  }\n}\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @shadowfool</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Symmetric Difference",order:5,body:'<h1>Problem Explanation:</h1>\n<p>Symmetric Difference is the difference between <strong>two</strong> sets.</p>\n<p>So in the Symmetric Difference Bonfire you would work through the arrays of numbers something like this -</p>\n<p><code>sym(A, B, C)</code> Translates to <code>sym(sym(A,B),C)</code></p>\n<p>Or in plain English - First find the Symmetric Difference of Set A and Set B. Then find the Symmetric Difference of this new set and Set C.</p>\n<p>So -</p>\n<p><code>sym([1, 2, 5], [2, 3, 5], [3, 4, 5])</code></p>\n<p>would equal</p>\n<p><code>[1,4,5]</code></p>\n<p>Here’s a nice video tutorial (with an awful fake British accent!) -</p>\n<p><a href="https://www.youtube.com/watch?v=PxffSUQRkG4">YouTube - Symmetric Difference</a></p>\n<h2>Hint: 1</h2>\n<p>The arguments object is not an Array. It is similar to an Array, but does not have any Array properties except length. For example, it does not have the pop method. However it can be converted to a real Array:</p>\n<p><code>var args = Array.prototype.slice.call(arguments);</code></p>\n<h2>Hint: 2</h2>\n<p>Write a function that returns the symmetric difference of array1 and array2.</p>\n<p><code>yourFunction([1, 2, 3], [2, 4, 6])</code> must return <code>[1, 3, 4, 6]</code></p>\n<h2>Hint: 3</h2>\n<p>Use <code>Array.prototype.reduce</code> along with yourFunction to repeat the process on multiple arguments</p>\n<p>Something a bit strange about the definition of symmetric difference is that if one identical item occurs in three different sets, it is a member of the symmetric difference.  An example is easier to explain:</p>\n<pre><code>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>]\nb = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>]\nc = [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]\n\nsym(a, b) = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]\nsym([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>], c) = [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]\n</code></pre>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sym</span>(<span class="hljs-params"></span>) </span>{\n\n  <span class="hljs-comment">// Convert the argument object into a proper array</span>\n  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n\n  <span class="hljs-comment">// Return the symmetric difference of 2 arrays</span>\n  <span class="hljs-keyword">var</span> getDiff = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n\n    <span class="hljs-comment">// Returns items in arr1 that don\'t exist in arr2</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filterFunction</span>(<span class="hljs-params">arr1, arr2</span>) </span>{\n      <span class="hljs-keyword">return</span> arr1.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) </span>{\n        <span class="hljs-keyword">return</span> arr2.indexOf(item) === -<span class="hljs-number">1</span>;\n      });\n    }\n\n    <span class="hljs-comment">// Run filter function on each array against the other then get unique values</span>\n    <span class="hljs-keyword">return</span> filterFunction(arr1, arr2)\n      .concat(filterFunction(arr2, arr1))\n      .filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item, idx, arr</span>) </span>{\n        <span class="hljs-comment">// Keep any items that are unique - the index of the current item === index of the first occurrence in the array</span>\n        <span class="hljs-keyword">return</span> arr.indexOf(item) === idx;\n      });\n  };\n\n  <span class="hljs-comment">// Reduce all arguments getting the difference of them</span>\n  <span class="hljs-keyword">return</span> args.reduce(getDiff, []);\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Read comments in code.</li>\n</ul>\n<h1>Related Links</h1>\n<ul>\n<li><a href="https://en.wikipedia.org/wiki/Symmetric_difference">Symmetric Difference</a></li>\n<li><a href="http://devdocs.io/javascript/global_objects/array/reduce">Array.reduce()</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph @jjmax75</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Title Case a Sentence",order:5,body:'<h1>Explanation:</h1>\n<p>We have to return a sentence with camel case. This means that the first letter will always be in uppercase and the rest lowercase.</p>\n<h2>Hint: 1</h2>\n<ul>\n<li>You should start by splitting the string into an array of words.</li>\n<li>Split the sentence.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>You should make the word lowercase before making the first letter uppercase.</li>\n<li>Use replace method on each word to capitalize the first letter of each word.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>You will need to create a new string with pieces of the previous one and at the end merge everything into a single string again.</li>\n<li>In replace method , give first argument as the position of the first letter using charAt. For second argument write a function to return the capitalized letter as the replacement.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-built_in">String</span>.prototype.replaceAt = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index, character</span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.substr(<span class="hljs-number">0</span>, index) + character + <span class="hljs-keyword">this</span>.substr(index+character.length);\n};\n\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n    <span class="hljs-keyword">var</span> newTitle = str.split(<span class="hljs-string">\' \'</span>);\n    <span class="hljs-keyword">var</span> updatedTitle = [];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> st <span class="hljs-keyword">in</span> newTitle) {\n        updatedTitle[st] = newTitle[st].toLowerCase().replaceAt(<span class="hljs-number">0</span>, newTitle[st].charAt(<span class="hljs-number">0</span>).toUpperCase());\n    }\n    <span class="hljs-keyword">return</span> updatedTitle.join(<span class="hljs-string">\' \'</span>);\n}\n</code></pre>\n<p>Second Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">var</span> newstr=str.toLowerCase().split(<span class="hljs-string">" "</span>);\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;newstr.length;i++){\n  <span class="hljs-keyword">var</span> f=newstr[i].charAt(<span class="hljs-number">0</span>);\n newstr[i]=newstr[i].replace(newstr[i].charAt(<span class="hljs-number">0</span>),<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">replace</span>(<span class="hljs-params">f</span>)</span>{\n   <span class="hljs-keyword">return</span> f.toUpperCase();\n });\n\n  }\n  <span class="hljs-built_in">console</span>.log(newstr);\n  <span class="hljs-keyword">return</span> newstr.join(<span class="hljs-string">" "</span>);\n}\n\ntitleCase(<span class="hljs-string">"hello world"</span>);\n</code></pre>\n<p>Third Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  str = str.toLowerCase().split(<span class="hljs-string">\' \'</span>);\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> str) {\n    str[i] = str[i].replace(str[i].charAt(<span class="hljs-number">0</span>), str[i].charAt(<span class="hljs-number">0</span>).toUpperCase());\n  };\n  <span class="hljs-keyword">return</span> str.join(<span class="hljs-string">\' \'</span>);\n}\n\ntitleCase(<span class="hljs-string">"I\'m a little tea pot"</span>, <span class="hljs-string">""</span>);\n</code></pre>\n<p>Minimal Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/\\w\\S*/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">word</span>)</span>{\n    <span class="hljs-keyword">return</span> word.charAt(<span class="hljs-number">0</span>).toUpperCase()+word.substr(<span class="hljs-number">1</span>).toLowerCase();}); \n}\n\ntitleCase(<span class="hljs-string">"I\'m a little tea pot"</span>, <span class="hljs-string">""</span>);\n</code></pre>\n<p>Minimaler Solution:</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">titleCase</span>(<span class="hljs-params">s</span>) </span>{<span class="hljs-keyword">return</span> s.toLowerCase().replace(<span class="hljs-regexp">/^[a-z]|\\s[a-z]/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m</span>)</span>{<span class="hljs-keyword">return</span> m.toUpperCase()})}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>We are modifying the <code>replaceAt</code> function using prototype to facilitate the use of the program.</p>\n<p>Split the string by whitespaces, and create a variable to track the updated title. Then we use a loop to turn turn the first character of the word to uppercase and the rest to lowercase. by creating concatenated string composed of the whole word in lowercase with the first character replaced by it’s uppercase.</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @PoojaKumar</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Truncate a String",order:5,body:'<h1>Explanation:</h1>\n<p>We need to reduce the length of the string or <strong>truncate</strong> it if it is longer than the given maximum lengths specified and add <code>...</code> to the end. If it is not that long then we keep it as is.</p>\n<h2>Hint: 1</h2>\n<p>Strings are immutable in JavaScript so we will need a new variable to store the truncated string.</p>\n<h2>Hint: 2</h2>\n<p>You will need to use slice and specify where to start and where to stop.</p>\n<h2>Hint: 3</h2>\n<p>Do not forget that when we truncate the word, we also must count the length added by <code>...</code></p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">truncate</span>(<span class="hljs-params">str, num</span>) </span>{\n  <span class="hljs-keyword">if</span> (str.length &lt;= num)\n    <span class="hljs-keyword">return</span> str;\n  \n  <span class="hljs-keyword">if</span> (num &lt;= <span class="hljs-number">3</span>)\n    <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num) + <span class="hljs-string">"..."</span>;\n  \n  <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num-<span class="hljs-number">3</span>) + <span class="hljs-string">"..."</span>;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<p>First we need an if-statement to test if the length of the full string passed in as the first argument already fits within the size limit passed in as the second argument. If so we can just return the string that was passed in.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (str.length &lt;= num)\n  <span class="hljs-keyword">return</span> str;\n</code></pre>\n<p>Then we need to check if the num fits into our special case, where the desired length is less than or equal to three. In this case we will return the string trimmed to our target length, followed by <code>&quot;...&quot;</code>. We don’t need to worry about the <code>&quot;...&quot;</code> being counted against the length of our output string in this case.</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (num &lt;= <span class="hljs-number">3</span>)\n  <span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num) + <span class="hljs-string">"..."</span>;\n</code></pre>\n<p>Finally, we write the return for what happens when neither of the previous if-statements have been true. This call to <code>substr()</code> gives us a string that is 3 less than the target length specified by <code>num</code>, which is done so that we have room to add on the <code>&quot;...&quot;</code> and fit within that target.</p>\n<pre><code class="language-js"><span class="hljs-keyword">return</span> str.substr(<span class="hljs-number">0</span>,num-<span class="hljs-number">3</span>) + <span class="hljs-string">"..."</span>;\n</code></pre>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 @richyvk @ltegman</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'
}},function(e,n){e.exports={title:"Bonfire Validate US Telephone Numbers",order:5,body:'<h1>Problem Explanation:</h1>\n<ul>\n<li>The task is not that hard to understand, implementing it is the hardest part. You have a to validate an US phone number. This means there is a certain amount of numbers required, while you don’t need to put the country code, you will still need the area code and use one of the few formats allowed.</li>\n</ul>\n<h2>Hint: 1</h2>\n<ul>\n<li>There is no way around it, you will need to brush up your regular expressions skills.</li>\n</ul>\n<h2>Hint: 2</h2>\n<ul>\n<li>Try using a site like <a href="http://regexpal.com/">http://regexpal.com/</a> to test the regex live while you create it.</li>\n</ul>\n<h2>Hint: 3</h2>\n<ul>\n<li>Start by trying to get it to validate each format from the example, each one should take a new line, once you get to select them all, then add examples that should not be selected and make sure they are not selected.</li>\n</ul>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">telephoneCheck</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Comprehensive regex from @dting </span>\n  <span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})$/</span>;\n\n  <span class="hljs-keyword">return</span> re.test(str);\n}\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">telephoneCheck</span>(<span class="hljs-params">str</span>) </span>{\n  <span class="hljs-comment">// Good luck!</span>\n  <span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^1?[\\(\\s]*\\d{3}[-\\)\\s]*\\d{3}[-\\s]?\\d{4}$/</span>;\n\n  <span class="hljs-keyword">return</span> re.test(str);\n}\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">telephoneCheck</span>(<span class="hljs-params">str</span>) </span>{\n<span class="hljs-comment">//provided by jhalls</span>\n   <span class="hljs-keyword">var</span> regex = <span class="hljs-regexp">/^1?\\s?(\\(\\d{3}\\)|\\d{3})?\\s?-?\\d{3}-?\\s?\\d{4}$/</span>;\n  \n   <span class="hljs-keyword">if</span> (str.match(regex)) {  \n       <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n   }\n   \n  <span class="hljs-keyword">else</span> {\n     <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n   }\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>While the answer works, there is a much shorter regex that will satisfy this problem. However the code provide is very good and robust when it comes to validating US phone numbers client side, a much better way would be to implement this library <a href="https://github.com/googlei18n/libphonenumber">libphonenumber.</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @Rafase282 @guyjoseph @dting @jhalls</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Where art thou",order:5,body:'<p><img src="http://i.imgur.com/IUY2p6Y.jpg" alt=""></p>\n<h1>Problem Explanation</h1>\n<p>Write an algorithm that will take an <code>array</code> for the first argument and return an <code>array</code> with all the  <code>object</code>s that matches all the properties and values in the <code>Object</code> passed as second parameter.</p>\n<h2>Hint: 1</h2>\n<p>You may use <code>for</code> loop or the <code>Array.prototype.filter</code> method.</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+for">http://devdocs.io/#q=js+for</a></li>\n<li><a href="http://devdocs.io/#q=js+Array+filter">http://devdocs.io/#q=js+Array+filter</a></li>\n</ul>\n<h2>Hint: 2</h2>\n<p>Try to use <code>Object.prototype.hasOwnProperty</code> method to know if the property name exists in an object (as its own property).</p>\n<ul>\n<li><a href="http://devdocs.io/#q=js+Object+hasOwnProperty">http://devdocs.io/#q=js+Object+hasOwnProperty</a></li>\n</ul>\n<h2>Hint: 3</h2>\n<p>Check equivalence of <code>Object</code> in <code>collection</code> with <code>Object</code> passed as second parameter to <code>where</code> function.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<h3>First</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; srcKeys.length; i++) {\n      <span class="hljs-comment">// check if obj in collection doesn\'t have the key</span>\n      <span class="hljs-comment">// or if it does have the key,</span>\n      <span class="hljs-comment">// then check if the property value doesn\'t match the value in source</span>\n      <span class="hljs-keyword">if</span>(!obj.hasOwnProperty(srcKeys[i]) || obj[srcKeys[i]] !== source[srcKeys[i]]) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  });\n}\n</code></pre>\n<h3>Second</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-comment">// return a Boolean value for `filter` method</span>\n    <span class="hljs-keyword">return</span> srcKeys.every(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">key</span>) </span>{\n      <span class="hljs-comment">// reduce to Boolean value to be returned for `every` method</span>\n      <span class="hljs-keyword">return</span> obj.hasOwnProperty(key) &amp;&amp; obj[key] === source[key];\n    });\n  });\n}\n</code></pre>\n<h3>Third</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n  <span class="hljs-comment">// "What\'s in a name? that which we call a rose</span>\n  <span class="hljs-comment">// By any other name would smell as sweet.”</span>\n  <span class="hljs-comment">// -- by William Shakespeare, Romeo and Juliet</span>\n  <span class="hljs-keyword">var</span> srcKeys = <span class="hljs-built_in">Object</span>.keys(source);\n\n  <span class="hljs-comment">// filter the collection</span>\n  <span class="hljs-keyword">return</span> collection.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>{\n    <span class="hljs-comment">// return a Boolean value for filter callback using reduce method</span>\n    <span class="hljs-keyword">return</span> srcKeys.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, key</span>) </span>{\n      <span class="hljs-comment">// reduce to Boolean value to be returned by reduce method</span>\n      <span class="hljs-keyword">return</span> obj.hasOwnProperty(key) &amp;&amp; obj[key] === source[key];\n    }, <span class="hljs-literal">false</span>);\n  });\n}\n</code></pre>\n<h3>Fourth</h3>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">collection, source</span>) </span>{\n<span class="hljs-comment">//Array for storing the matched objects</span>\n  <span class="hljs-keyword">var</span> arr = [];\n  <span class="hljs-comment">//For maintaining the number of key-value matches</span>\n  <span class="hljs-keyword">var</span> count ;\n  collection.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">collObj</span>) </span>{ \n  <span class="hljs-comment">//Initialize to zero for each object in collection</span>\n     count = <span class="hljs-number">0</span> ; \n     <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> source){\n     <span class="hljs-comment">//Check whether the key exists and the key-value is matched</span>\n        <span class="hljs-keyword">if</span>( collObj.hasOwnProperty(prop) &amp;&amp; collObj[prop] === source[prop])\n        <span class="hljs-comment">//Increase the count if matched</span>\n        count++; \n       }\n     <span class="hljs-comment">//Check whether all key-value pairs in source are matched</span>\n     <span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-built_in">Object</span>.keys(source).length){ \n        arr.push(collObj);\n      }\n    \n    });\n    <span class="hljs-keyword">return</span> arr;\n}\n</code></pre>\n<h2>Code Explanation:</h2>\n<blockquote>\n<p>Please read the comments in the source code.</p>\n</blockquote>\n<p>Check this <a href="http://repl.it/BFZQ/19">http://repl.it/BFZQ/19</a> for pretty debugging and code explanation</p>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @abhisekp @dting @coded9</code></p>\n'}},function(e,n){e.exports={title:"Bonfire Where do I belong",order:5,body:'<h1>Explanation:</h1>\n<p>This can be a tricky problem to understand. You need to find where in the array a number should be inserted by order, and return the index where it should go.</p>\n<h2>Hint: 1</h2>\n<p>The first thing to do is sort the array from lower to bigger, just to make the code easier. This is where sort comes in, it needs a callback function so you have to create it.</p>\n<h2>Hint: 2</h2>\n<p>Once the array is sorted, then just check for the first number that is bigger and return the index.</p>\n<h2>Hint: 3</h2>\n<p>If there is no index for that number then you will have to deal with that case too.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">arr, num</span>) </span>{\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n    <span class="hljs-keyword">return</span> a - b;\n  });\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; arr.length; a++) {\n    <span class="hljs-keyword">if</span> (arr[a] &gt;= num)\n      <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(a);\n  }\n\n  <span class="hljs-keyword">return</span> arr.length;\n}\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First I sort the array using <code>.sort(callbackFuntion)</code> to sort it by lowest to highest, from left to right.</li>\n<li>Then I use a for loop to compare the items in the array starting from the smallest one. When an item on the array is greater than the number we are comparing against, then we return the index as an integer.</li>\n</ul>\n<h2>Code Solution 2:</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">where</span>(<span class="hljs-params">arr, num</span>) </span>{\n  arr.push(num);\n  arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>)\n           </span>{<span class="hljs-keyword">return</span> a-b;}\n          );\n  <span class="hljs-keyword">return</span> arr.indexOf(num);\n }\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>First insert the number into the array using the <code>Array.push()</code> method.</li>\n<li>Then use the numerical sort method to sort the elements of the array. in the end just return the index value of the number that was push earlier using the <code>Array.indexOf()</code> method.</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat: <code>Thanks @Rafase282 and @rahul1992</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Bonfire Wiki Template",order:5,body:'<p><strong>Foundational Agile Principles:</strong></p>\n<p><strong><em>Individuals and interactions</em></strong> over processes and tools</p>\n<p>**_Working software _**over comprehensive</p>\n<p><em><strong>Customer collaboration</strong></em> over contract negotiation</p>\n<p><em>**Responding to change **</em> over following a plan</p>\n<h2>User-Stories</h2>\n<p>User stories help us tie the needs of our users directly to features we implement in a\nconversational format. They <strong>always</strong> follow this syntax: <em>“As a User/Stakeholder , I need/want to be able to Do Something”</em>. This can result in some awkward stories for the “obvious” features like <em>“As a user, I need to be able to trust that my credit card information is secure.”</em>, but it is imperative that ALL features tie back to a story in order to allow us to effectively break the work down into manageable pieces.</p>\n<h2>Sprints</h2>\n<p>A “Sprint” is a short (1-3 weeks) development cycle during which a number of stories or subtasks are targeted for completion by the end of the sprint. The idea behind “Sprinting” is to allow us to <strong>deliver</strong> a story to the project champion for feedback/approval. This iterative workflow ensures we get continuous buy-in from the project champion and we are delivering functionality that both works, and is valuable.</p>\n<h2>SCRUM</h2>\n<p>At a basic level, SCRUM helps us stay focused and informed about what the status is on each assigned task as well as break down communication barriers. In many professional settings the work day begins with a “Daily Scrum”.  We will be following a weekly scrum to align with our sprints.  A common scrum failure is to attempt to problem solve during a scrum. Troubleshooting and brainstorming should always be done as a separate task from SCRUM.</p>\n<h2>Spoiler Alert!</h2>\n<p><a href="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"><img src="https://files.gitter.im/FreeCodeCamp/Wiki/nlOm/thumb/687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></a></p>\n<p><strong>Solution ahead!</strong></p>\n<h2>Code Solution:</h2>\n<pre><code class="language-js">code here\n</code></pre>\n<h1>Code Explanation:</h1>\n<ul>\n<li>Explain your code here</li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:  <strong><code>thanks @username1 @username2 @yourusername</code></strong></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n<h2>Here you can add any other information that is helpful or related.</h2>\n<ul>\n<li>Right here.</li>\n</ul>\n<h3>Important notes about this template.</h3>\n<ul>\n<li>This template can also be used for regular pages.</li>\n<li>The author part has been removed. This is a collaboration page, while people can see who contributed by checking the revision, using the code for the credits will also benefits the contributors and your name will be there, so there is no longer any need to add your picture or links.</li>\n<li>If you have suggestions or comments about this template then feel free to contact <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Bonus SocketIO",order:5,body:'<p>If you’ve gotten to the Stock Charting basejump you may have noticed that the bonus criteria is to have your stock list live update across clients. This can be accomplished with SocketIO, but that’s not all SocketIO can do. Remember earlier, I mentioned that when using <em>$http.post</em> you had to update your local array with the database’s version of the item you were posting? SocketIO keeps a user’s browser environment synced with your database in realtime. This has two practical upshots:</p>\n<ol>\n<li>You no longer have to manually update your local data with database data; it is all managed automatically</li>\n<li>You can push database changes live to users on different machines all at the same time</li>\n</ol>\n<p>Even better, if you just include SocketIO when prompted during the yeoman angular-fullstack setup, there is absolutely no work involved to include it. It works out of the box, has a working demo on the <strong>main/</strong> route, and you can learn how to use it yourself by simply looking at how they include it in <strong>main.controller.js</strong> (so I won’t go any further into detail).</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/isLoggedInAsync()">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Epilogue">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Bootstrap",order:5,body:'<p>A frontend <a href="https://github.com/bothelpers/kbase/wiki/css">CSS</a> framework.</p>\n<p>You can find out more <a href="http://getbootstrap.com/">here</a></p>\n<blockquote>\n<p>related: css, frameworks</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Brownie Points",order:5,body:'<p>The number beside your picture on Free Code Camp tells you how many Brownie Points you have.</p>\n<p><img src="http://i.imgur.com/SsvbkDH.png" alt="A user profile picture next to a with Brownie Points score"></p>\n<p>There are three ways you can get Brownie Points:</p>\n<ol>\n<li>Complete challenges - you get one point per challenge you complete</li>\n<li>Post relevant links on <a href="https://freecodecamp.github.io/wiki/docs/Camper-News">Camper News</a> - you get 1 point for posting a link, and another point for each upvote your link gets</li>\n<li>Help other campers in chat - each time you help another camper and they thank you (by typing “thanks @yourname”), you will get a point</li>\n</ol>\n<blockquote>\n<p>Brownie Points help you look like the kind of person who codes a lot, shares relevant links, and helps people.</p>\n</blockquote>\n<p><em>They also add to your <a href="https://freecodecamp.github.io/wiki/docs/streak/">Streak</a>.</em></p>\n'}},function(e,n){e.exports={title:"Camper News",order:5,body:'<p>Camper News is a link sharing tool, based on popular collaborative filtering systems like Reddit and Hacker News.</p>\n<p><img src="https://www.evernote.com/l/AlwvYXoOf89EbYXWEXRfUw-_yHdBwx2jLr8B/image.png" alt="Screenshot of Camper News"></p>\n<p>Camper News is intentionally simple. You can:</p>\n<ol>\n<li>Browse and search through the camper-submitted links</li>\n<li>Upvote links</li>\n<li>Submit links of your own</li>\n</ol>\n<p>Our links are ranked in order of “hotness”, which is a combination of each link’s upvote count, and how recently the link was submitted.</p>\n'}},function(e,n){e.exports={title:"Campsites",order:5,body:'<p><img src="https://scontent.fphl1-1.fna.fbcdn.net/hphotos-xpf1/v/t1.0-0/p180x540/11053192_10207110849188137_979591694702042102_n.jpg?oh=608f68b3232d80608939091680efc4b9&amp;oe=568AE433" alt="Photograph from a Toronto Campsite Coffee-and-Code Session"></p>\n<p>Free Code Camp Campsites represent a localized experience of our community. These Facebook groups are the place to organize Coffee-and-Code style events, pair program locally in hack sessions, or share news about other coding-related events in your area.</p>\n<p>Whether you live in a major metropolitan area, or a small town, we encourage you to join or create your campsite to meet other busy people learning to code.</p>\n<p>Here are some helpful links:</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/List-of-Free-Code-Camp-city-based-Campsites">Complete Alphabetical List of Campsites</a></p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-create-a-Campsite-for-your-city">How to Create a New Campsite for your City</a></p>\n<p><a href="http://blog.freecodecamp.com/2015/09/jump-start-your-local-campsite-with-coffee-and-code.html">Jumpstart Your Campsite with Coffee-and-Code</a></p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/5-Steps-to-organizing-a-successful-Campsite-event.">5 Steps to a Successful Meetup</a></p>\n'}},function(e,n){e.exports={title:"Clear Your Browser's Local Storage",order:5,body:'<p>Removing all your locally stored challenges will solve many problems related to the browser crashing on FreeCodeCamp</p>\n<p>In Chrome:</p>\n<ul>\n<li>On ’<a href="http://freecodecamp.com">freecodecamp.com</a>’ open your console</li>\n<li>Windows: Ctrl + Shift + J</li>\n<li>Mac OS: Cmd + Opt + J</li>\n<li>Go to resources tab(chrome).</li>\n<li>There click on the localStorage link in the nav bar on the right.</li>\n<li>Delete all the entries on the right side.</li>\n<li>See if this solves your issue</li>\n</ul>\n<p><img src="https://cloud.githubusercontent.com/assets/6775919/9448820/911626ee-4a53-11e5-98c9-b2bf4ca50816.png" alt=""></p>\n<p>Alternatively, if you are having issues with a specific challenge freezing your browser, <a href="https://freecodecamp.github.io/wiki/docs/How-to-clear-specific-values-from-your-browser\'s-local-storage">find the name of that challenge in local storage and delete just that one</a>.</p>\n'}},function(e,n){e.exports={title:"Code of Conduct",order:5,body:'<p>Free Code Camp is friendly place to learn to code. We’re committed to keeping it that way.</p>\n<p>All campers are required to agree with the following code of conduct. We’ll enforce this code. We’re expecting cooperation from all campers in ensuring a friendly environment for everybody.</p>\n<p>In short: be nice to your fellow campers.</p>\n<p>Remember these 3 things and your fellow campers will like you:</p>\n<ul>\n<li>Compliment your fellow campers when they do good work. Congratulate them when they accomplish something (like completing one of our certifications or getting a job).</li>\n<li>Critique the work, not the camper doing it.</li>\n<li>Only argue about something if it’s important to the greater discussion.</li>\n</ul>\n<p>Free Code Camp should be a harassment-free experience for everyone, regardless of gender, gender identity and expression, age, sexual orientation, disability, physical appearance, body size, race, national origin, or religion (or lack thereof).</p>\n<p>We do not tolerate harassment of campers in any form, anywhere on Free Code Camp’s online media (Gitter, Twitch, Facebook, etc.) or during pair programming. Harassment includes sexual language and imagery, deliberate intimidation, stalking, unwelcome sexual attention, libel, and any malicious hacking or social engineering.</p>\n<p>If a camper engages in harassing behavior, our team will take any action we deem appropriate, up to and including banning them from Free Code Camp.</p>\n<p>We want everyone to feel safe and respected. If you are being harassed or notice that someone else is being harassed, say something! Message @quincylarson, @berkeleytrue, @brianamarie and @codenonprofit in Gitter (preferably with a screen shot of the offending language) so we can take fast action.</p>\n<p>If you have questions about this code of conduct, email us at <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a>.</p>\n'}},function(e,n){e.exports={title:"Coding Help",order:5,body:'<h1>Coding Help</h1>\n<p>I started this list while doing bonfires, noticing a few things that were common issues / questions but I think most of them are going to be useful to people coding in general. If you’ve got some tips to help people code I’d love to hear them.</p>\n<ol>\n<li>\n<p>If you don’t know where to start, write some pseudocode. Plan out the logic you’re trying to implement in your native language before you try to put it into code.</p>\n</li>\n<li>\n<p>Comment your code! Can’t stress that one enough, if you get lost or take a break then come back you need to know what your code is trying to do. It will also reinforce what the code means to you, and help other people understand what your code does if you get stuck and ask for help. If you’ve got a any other tips for campers I’d love to see them!</p>\n</li>\n<li>\n<p>Use the chrome javascript debugger console in conjunction with something like netbeans IDE or sublime text to write your code. Both are free to download. <br />\nThe free code camp window is great but you can get a lot more feedback on your code’s behaviour by using chrome’s JS debugger and a bunch of <strong>console.log(myVariableGoesHere);</strong> <br />\n<a href="https://developer.chrome.com/devtools/docs/console">https://developer.chrome.com/devtools/docs/console</a> <br />\n<a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a> <br />\n<a href="https://netbeans.org/downloads/">https://netbeans.org/downloads/</a></p>\n</li>\n<li>\n<p>Posting your code in gitter is as simple as adding a line consisting of only</p>\n</li>\n</ol>\n<blockquote>\n<p>```</p>\n<p>Then your code on the next lines, followed by a final</p>\n<p>```</p>\n</blockquote>\n<ol start="5">\n<li>Ask for help in gitter! I can personally relate to staring at a problem for hours, then seeing the solution as soon as I try to explain it to someone, or having someone say something like “typo on line 6” as soon as they see it.</li>\n</ol>\n'}},function(e,n){e.exports={title:"Contributions Guide   with Typo Demo",order:5,body:'<h1>Detailed Guide to Contributions.</h1>\n<p>===================================\nGuide first posted at <a href="https://natacseanc.wordpress.com/2015/09/07/beginners-guide-to-easy-contributions-to-free-code-camp/">Sean Campbell’s Blog</a></p>\n<p>The first 2 steps are <em>setting up</em> the environment.</p>\n<h3>Step 1: Fork, Clone, Upstream Setup</h3>\n<p>First - fork the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp">Free Code Camp repo</a> to your GitHub account. Done by clicking the fork button at the top right of the page. You see a little animated image of the \'forking\'. From there move to terminal. Running the commands below will create a copy of the Free Code Camp repo you just forked.</p>\n<pre><code class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/[USERNAME]/freecodecamp <span class="hljs-comment"># put in your [USERNAME]</span>\n<span class="hljs-built_in">cd</span> freecodecamp\ngit remote add upstream https://github.com/FreeCodeCamp/FreeCodeCamp\n</code></pre>\n<p>The first line clones the repo to your local machine; making a directory called <code>freecodecamp</code> in the current folder you are in. Then move inside that folder with <code>cd freecodecamp</code>. The last line adds the original Free Code Camp repo as a remote upstream. This allows you to pull in the changes that are made to the main project to keep you local copy up to date. This is done by running…</p>\n<pre><code class="language-bash">git fetch upstream\n</code></pre>\n<p>If there were changes then run the commands below to merge; if nothing happens then skip these 2 commands.</p>\n<pre><code class="language-bash">git checkout staging <span class="hljs-comment"># make sure I am on staging branch</span>\ngit merge upstream/staging <span class="hljs-comment"># merge the changing to my local machine</span>\n</code></pre>\n<p>Your local <code>staging</code> branch is up to date with the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp">Free Code Camp repo</a> now.</p>\n<h3>Step 2: Follow <a href="http://README.md">README.md</a> Instructions for more Setup.</h3>\n<p>This guide stresses importance of reading the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp#contributing">README.md</a> on contributing. Please have <a href="http://eslint.org/docs/user-guide/integrations.html">ESlinter</a> running, as the warning are there to help you.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href="http://www.mongodb.org/downloads">MongoDB</a></li>\n<li><a href="http://nodejs.org">Node.js</a></li>\n<li><a href="http://eslint.org/docs/user-guide/integrations.html">ESlinter</a></li>\n</ul>\n<p>These commands are straight from the FCC directions on the <a href="http://README.md">README.md</a></p>\n<pre><code class="language-bash"><span class="hljs-comment"># Install NPM dependencies</span>\nnpm install\n\n<span class="hljs-comment"># Install bower globally</span>\nnpm install -g bower\n\n<span class="hljs-comment"># Install Bower dependencies</span>\nbower install\n\n<span class="hljs-comment"># Install Gulp globally</span>\nnpm install -g gulp\n\n<span class="hljs-comment"># Create a .env file</span>\ntouch .env\n</code></pre>\n<p>What goes in the .env file?? Well first if you do not have a <a href="https://mandrill.com/signup/?_ga=1.36983655.693747097.1440924471">Mandrill account</a> you will need to set one up.\nMandrill is an email service that is beyond the scope of this guide. A quick note; this file will not be included when pushing to GitHub as it will be listed in the <code>.gitignore</code> file.</p>\n<h4>.env file contents</h4>\n<pre><code><span class="hljs-constant">\nMONGOHQ_URL</span>=\'mongodb:<span class="hljs-comment">//localhost:27017/freecodecamp\' // do not change</span>\n<span class="hljs-constant">\nFACEBOOK_ID</span>=stuff\n<span class="hljs-constant">FACEBOOK_SECRET</span>=stuff\n<span class="hljs-constant">\nGITHUB_ID</span>=stuff\n<span class="hljs-constant">GITHUB_SECRET</span>=stuff\n<span class="hljs-constant">\nGOOGLE_ID</span>=stuff\n<span class="hljs-constant">GOOGLE_SECRET</span>=stuff\n<span class="hljs-constant">\nLINKEDIN_ID</span>=stuff\n<span class="hljs-constant">LINKEDIN_SECRET</span>=stuff\n<span class="hljs-constant">\nMANDRILL_PASSWORD</span>=stuff <span class="hljs-comment">// Your mandrill password</span>\n<span class="hljs-constant">MANDRILL_USER</span>=stuff <span class="hljs-comment">// Your mandrill username</span>\n<span class="hljs-constant">\nTRELLO_KEY</span>=stuff\n<span class="hljs-constant">TRELLO_SECRET</span>=stuff\n<span class="hljs-constant">\nTWITTER_KEY</span>=stuff\n<span class="hljs-constant">TWITTER_SECRET</span>=stuff\n<span class="hljs-constant">TWITTER_TOKEN</span>=stuff\n<span class="hljs-constant">TWITTER_TOKEN_SECRET</span>=stuff\n<span class="hljs-constant">\nBLOGGER_KEY</span>=stuff\n<span class="hljs-constant">\nSESSION_SECRET</span>=secretstuff <span class="hljs-comment">// any word you like in small case I believe.</span>\n<span class="hljs-constant">COOKIE_SECRET</span>=\'this is a secret\'\n<span class="hljs-constant">\nPEER</span>=stuff\n<span class="hljs-constant">DEBUG</span>=<span class="hljs-literal">true</span>\n\n</code></pre>\n<h3>Setup is complete - next - the workflow of contributions</h3>\n<p>=============================================================</p>\n<h1>Start of issue fixing</h1>\n<h3>Part 3: Start MongoDB</h3>\n<p>Open up two terminal windows, one to run the mongodb:</p>\n<pre><code class="language-bash">mongod\n</code></pre>\n<p>Then minimize this terminal and move to the other which will be the one to complete the workflow.</p>\n<pre><code class="language-bash"><span class="hljs-comment"># run mongodb</span>\nmongo\n\n<span class="hljs-comment"># switch to the free code camp database</span>\nuse freecodecamp\n\n<span class="hljs-comment"># exit mongo</span>\npress Crtl + d\n</code></pre>\n<h3>Step 4: Finding Issue in the Code Base</h3>\n<p>The issue on GitHub will look something like this.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/issue1.png"><img class="alignnone wp-image-161" src="https://natacseanc.files.wordpress.com/2015/09/issue1.png?w=300" alt="issue" width="456" height="205" /></a></p>\n<p>To find out what file the challenge will be in go to the FCC Map to find out which section the challenge is a part of; the example is <a href="http://freecodecamp.com/challenges/waypoint-learn-how-script-tags-and-document-ready-work">Learn how Script Tags and Document Ready Work</a> and it is a part of the jQuery section.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/section.png"><img class="alignnone size-medium wp-image-164" src="https://natacseanc.files.wordpress.com/2015/09/section.png?w=300" alt="section" width="300" height="262" /></a></p>\n<p>The actual data for each challenge is located in the <code>seed/challenges/</code> directory. In this folder there are <code>.json</code> files. Each file is named for the section of challenges. So for this demo you need to be in the <code>jQuery.json</code> file.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/files.png"><img src="https://natacseanc.files.wordpress.com/2015/09/files.png?w=287" alt="files" width="287" height="300" class="alignnone size-medium wp-image-171" /></a></p>\n<p>The file itself is of an object that has a <code>challenges</code> attribute which is a list of challenge objects. These have key/value pairs of the title, description, test, and other info that is needed for the other code to build the actual challenge.<a href="https://natacseanc.files.wordpress.com/2015/09/json1.png"><img class="alignnone size-large wp-image-159" src="https://natacseanc.files.wordpress.com/2015/09/json1.png?w=809" alt="JSON" width="809" height="665" /></a></p>\n<p>To fix a simple typo in the test output you should do a search for the challenge then navigate to the <code>&quot;test&quot;:</code> key to find the error. The test is explained in the next part. Any text wrapped in the <code>&lt;code&gt;</code> tags will appear in the red text that you see in the challenge description or test output.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/codetag.png"><img class="alignnone size-full wp-image-140" src="https://natacseanc.files.wordpress.com/2015/09/codetag.png" alt="codeTag" width="384" height="206" /></a></p>\n<h3>Step 5: Making the Change</h3>\n<p>Go to your terminal and run the command below to make sure that nothing has changed to the main code base</p>\n<pre><code class="language-bash">git fetch upstream\n</code></pre>\n<p>If there was a change then merge in like Step 1. Create a branch that explains the change ie <code>fix/typo-jquery-challenge-test</code>. Include a brief description of the changes you have made. Include <code>closes #1337</code> for each issue that this pull request intends to close.</p>\n<pre><code class="language-bash"><span class="hljs-comment"># create and move to branch</span>\ngit checkout -b fix/typo-jquery-challange-test\n</code></pre>\n<p>Open the <code>jQuery.json</code> file; the issue that you is that there is parenthesis in the test output that should not be there. Each test has two parts to the <code>assert()</code> method. The first is the test(s), the second part which is separated by a comma is the output description. Please note this picture shows after the change has been made.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/test.png"><img class="alignnone size-full wp-image-131" src="https://natacseanc.files.wordpress.com/2015/09/test.png" alt="test" width="809" height="18" /></a></p>\n<p>The test is the <code>editor.match(/\\\\.parent\\\\(\\\\)\\\\.css/g)</code>, where the description section is <code>\'You should use the &lt;code&gt;.parent()&lt;/code&gt; function to modify this element.\'</code>. The issue is that in the description section there are actual <code>(</code> and <code>)</code>. Meaning the code used to be.</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/testbad.png"><img class="alignnone size-full wp-image-130" src="https://natacseanc.files.wordpress.com/2015/09/testbad.png" alt="testbad" width="809" height="17" /></a></p>\n<p>This causes the strange outputs that occur in the tests. By using the right <a href="http://character-code.com/">character code</a> you will be able to replace the parenthesis and the period. At this point save the file but do <strong>not</strong> stage or commit anything with Git yet; you <strong>will want</strong> to run the app locally and see if the changes worked!</p>\n<h3>Step 6: Run Free Code Camp App Locally</h3>\n<p>Mental check that part 3 was done if not do it now. Then:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># Seed database with the challenges</span>\nnode seed/\n\n<span class="hljs-comment"># start the application</span>\ngulp\n</code></pre>\n<p>The gulp command will take a second or too then there will be a IP address that I right click and open in my browser. Now I will navigate to that challenge to verify the changes were what I expected. This is the purple local URL:</p>\n<p><a href="https://natacseanc.files.wordpress.com/2015/09/ipadress.png"><img class="alignnone size-full wp-image-137" src="https://natacseanc.files.wordpress.com/2015/09/ipadress.png" alt="ipadress" width="674" height="100" /></a></p>\n<h3>Step 7: Creating Pull Request</h3>\n<p>After making changes and verification of you work run:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># check status for piece of mind to see unstaged changes</span>\ngit status\n\n<span class="hljs-comment">#check if anything changed in upstream</span>\ngit fetch upstream\n<span class="hljs-comment"># ASSUMING no changes I can proceed.</span>\n<span class="hljs-comment"># if there are changes see Appendix A about stash.</span>\n<span class="hljs-comment"># DO NOT continue if there are changes as you may create conflicts</span>\n\n<span class="hljs-comment"># stage the file</span>\ngit add [FILENAME]\n\n<span class="hljs-comment"># commit changes</span>\ngit commit\n</code></pre>\n<p>You can have <a href="https://help.github.com/articles/associating-text-editors-with-git/">Git open up Sublime when you want to commit a message.</a>. This allows and encourages meaningful commit messages. Make a title on the first line then go into more detail on new lines. So for this demo the message would be something like:</p>\n<pre><code>fix typo on [CHALLENGE]\n\nthere were unnecessary parenthesis <span class="hljs-keyword">in</span> the test outputs\ncloses <span class="hljs-hexcolor">#133</span>7\n</code></pre>\n<p>You are able to auto <a href="https://help.github.com/articles/closing-issues-via-commit-messages/">close the issue when the PR is merged into the code base</a>. Save and close the commit message file; brings you back to the terminal</p>\n<pre><code class="language-bash">git push -u origin fix/typo-jquery-test\n<span class="hljs-comment"># where the part after origin is what ever you called the local branch</span>\n</code></pre>\n<p>Now the changes are on both you local machine and you GitHub account. Opening up a browser you can navigate to the forked copy on your GitHub account. There will be a green button just above the listing of files on the right that read Compare &amp; Pull Request.</p>\n<img class="alignnone size-full wp-image-139" src="https://natacseanc.files.wordpress.com/2015/09/compare.png" alt="compare" width="500" height="203" />\n<p>Clicking this takes you to the screen where you can review the changes once again and finalize the commit message. Then wait for the code to be merged in or possibly some tips on how to improve the changes.</p>\n<img class="alignnone size-full wp-image-132" src="https://natacseanc.files.wordpress.com/2015/09/pr.png" alt="pr" width="600" height="489" />\n<p>Guide written by: <a href="https://github.com/natac13">@natac13</a> on Twitter <a href="https://twitter.com/?lang=en">@natac1311</a></p>\n<h3>Appendix A: Stash</h3>\n<p>Short explanation on what happens if during the time you were making changes there were some merged into the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp"><code>upstream</code></a>. Meaning your local copy is not up to date. This puts you right <strong>before</strong> adding any files to be <em>staged</em> or <em>committed</em>. So:</p>\n<pre><code class="language-bash"><span class="hljs-comment"># check changes to upstream</span>\ngit fetch upstream\n<span class="hljs-comment"># changes have happened</span>\n\n<span class="hljs-comment"># stash your changes</span>\ngit stash\n\n<span class="hljs-comment"># merge upstream into the working branch</span>\ngit merge upstream/staging\n\n<span class="hljs-comment"># reapply you changes</span>\ngit stash apply\n</code></pre>\n<p>You are now back up to date with your changes ready to be staged and committed. <a href="https://git-scm.com/book/en/v1/Git-Tools-Stashing">Git docs on stash</a>.</p>\n'
}},function(e,n){e.exports={title:"Create, Upload and Link Animated GIF Image",order:5,body:'<ol>\n<li>Download <a href="http://www.cockos.com/licecap/">LICEcap</a> and install.</li>\n<li>Open and start recording to create animated GIF.</li>\n<li>Upload the <code>.gif</code> file in <a href="http://ezgif.com/optimize">EZGIF.com</a>.\n<ul>\n<li>Crop, Resize and Optimize as many times or as required.</li>\n</ul>\n</li>\n<li>Download animated GIF.</li>\n<li>Upload image to <a href="http://imgur.com">imgur.com</a>.</li>\n<li>Link image using <code>![image title](http://i.imgur.com/RqgGcf5.gif)</code>.</li>\n</ol>\n'}},function(e,n){e.exports={title:"Creating a New Github Issue",order:5,body:'<p>Before submitting an issue try <a href="https://freecodecamp.github.io/wiki/docs/Searching-for-Your-Issue-on-Github">Searching for Your Issue on Github</a></p>\n<p>Crafting a good issue will make it much easier for the dev team to replicate and resolve your problem. Follow these steps to do it right:</p>\n<ol>\n<li>Go to FreeCodeCamp’s <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/issues">Github Issues</a> page and click on <code>New Issue</code>.</li>\n</ol>\n<ul>\n<li><strong>Have a useful title</strong></li>\n<li>Write a meaningful title that describes the issue. Some good examples are <code>Logging in from the News and Field Guide pages doesn\'t redirect properly (using e-mail)</code> and <code>Typo: &quot;for&quot; instead of &quot;while&quot; loop</code>; bad examples include <code>A bug, HELP!!!11</code> and <code>I found this bug in a waypoint</code>.</li>\n<li>Keep the title relatively short, the description is for further information. One example is to shorten long waypoint names, so instead of writing <code>Test case bug in \'Waypoint: Check Radio Buttons and Checkboxes by Default\'</code>, you might want to write <code>Test case bug in \'Radio Buttons\' waypoint</code>.</li>\n<li>In the body, <strong>provide a link</strong> to the page on which you encountered this issue.</li>\n<li><strong>Describe the problem</strong> and <strong>provide steps</strong> so that a developer can try to replicate the issue.  Include your operating system and browser version.</li>\n<li>When referencing other issues or pull requests, simply write #issue/pr-number.</li>\n<li>Paste in any relevant code using proper <a href="https://freecodecamp.github.io/wiki/docs/code-formatting">Code Formatting</a></li>\n<li><strong>Take a screenshot</strong> of the issue and include it in the post.</li>\n<li>Click <code>Submit New Issue</code> and you are done! You will be automatically subscribed to notifications for any updates or future comments.</li>\n</ul>\n'}},function(e,n){e.exports={title:"Creating a new API endpoint",order:5,body:'<pre><code>&gt;&gt; yo angular-fullstack:endpoint whatsit\n</code></pre>\n<p>Using this line, you get Yeoman to automatically generate another API endpoint and new kind of collection for your database. Now we have <em>things</em> as well as <em>whatsits</em>! Feel free to open up <strong>/server/api/whatsit/whatsit.model.js</strong> and define your whatsit however you like.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Backend-file-structure">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Fixing-exports.update">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Creating a new directive",order:5,body:'<p>Do you remember custom directives from the shaping up with angular course? You can also make a custom directive!</p>\n<pre><code>&gt;&gt; yo angular-fullstack:directive newdirective\n</code></pre>\n<p>And if you need an html template for your custom directive (maybe you’re just making a directive to clean up your HTML code), tell it to make an html file when it prompts you to and you’ll be able to include the contents of that template anywhere in your app with:</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-title">newdirective</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">newdirective</span>&gt;</span>\n</code></pre>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-route">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Grunt">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Creating a new route",order:5,body:'<pre><code>&gt;&gt; yo angular-fullstack:route newpage \n</code></pre>\n<p>Typing the above into your command-line will generate a <strong>newpage/</strong> route for your app! It automatically generates all the necessary files within your <strong>/client/app/newpage</strong> folder, like your <strong>/client/app/main</strong> folder, with a <strong>newpage.controller.js</strong>, <strong>newpage.controller.spec.js</strong>, <strong>newpage.js</strong>, and <strong>newpage.html</strong>. These all pretty much behave like the ones in the <strong>main/</strong> route. If you’re accessing the database in your newpage controller, you’ll want to add <em>$http</em> to the list of dependencies in <strong>newpage.controller.js</strong> the same way it’s included in <strong>main.controller.js</strong>:</p>\n<pre><code class="language-javascript">angular.module(<span class="hljs-string">\'myApp\'</span>)\n  .controller(<span class="hljs-string">\'MainCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $http</span>) </span>{ ...\n</code></pre>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Frontend-file-structure">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-directive">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Develop BaseJump locally and run on c9.io",order:5,body:"<p>If you like me develop basejump locally and want it run on c9, this may help you.</p>\n<ol>\n<li>push your project to github</li>\n<li>create a new workspace in c9 and set ‘Clone from Git or Mercurial URL (optional)’ with your github repository URL. After submit your create page, c9 will clone your project for you.</li>\n<li>run <code>echo &quot;export NODE_PATH=$NODE_PATH:/home/ubuntu/.nvm/v0.10.35/lib/node_modules&quot; &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</code> in your c9 terminal window</li>\n<li>run <code>bower install &amp;&amp; sudo npm install</code></li>\n<li>run <code>mkdir data &amp;&amp; echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest &quot;$@&quot;' &gt; mongod &amp;&amp; chmod a+x mongod &amp;&amp; ./mongod</code></li>\n<li>run <code>grunt serve</code> in another terminal window</li>\n</ol>\n"}},function(e,n){e.exports={title:"Disable Code Auto Run",order:5,body:"<p>By default, the Free Code Camp site automatically loads and runs your last recorded solution.  If you have accidentally created an infinite loop or other irrecoverable error or simply don’t trust the code, you can disable code auto-run by putting the following in your URL:<br>\n<code>run=disabled</code></p>\n<h4>Example:</h4>\n<p>URL: <code>http://www.freecodecamp.com/challenges/bonfire-meet-bonfire#?solution=function%20meetBonfire(argument)</code></p>\n<p>No-Run URL: <code>http://www.freecodecamp.com/challenges/bonfire-meet-bonfire#?run=disabled&amp;solution=function%20meetBonfire(argument)</code></p>\n"}},function(e,n){e.exports={title:"Dynamic URLs using $routeParams",order:5,body:'<p>What if you have a lot of users posting <em>things</em> to your website? Maybe your users want to have a profile, or a wall, of the <em>things</em> they’ve posted, and they want to be able to share it with their friends with a url? You can do that, no biggie!</p>\n<p>Let’s say you used</p>\n<pre><code><span class="hljs-prompt">&gt;&gt;</span> yo angular-<span class="hljs-symbol">fullstack:</span>route wall\n</code></pre>\n<p>to generate a <a href="#">http://myapp.wherever.com/wall/</a> route for your users. You want a link to <a href="#">http://myapp.wherever.com/wall/someUsername</a> to show a specific user’s <em>things</em>.<br>Browse to <strong>/client/app/wall/wall.js</strong> and notice that it detects what URL the user is requesting before acting on it:</p>\n<pre><code class="language-javascript">$routeProvider.when(<span class="hljs-string">\'/wall\'</span>, …\n</code></pre>\n<p>You can customize that path to catch when a user is trying to see a profile associated with a specific username like so:</p>\n<pre><code class="language-javascript">$routeProvider.when(<span class="hljs-string">\'/wall/:username\'</span>, …\n</code></pre>\n<p>The colon before “username” indicates that this is a variable, which is then passed to the <em>$routeParams</em> module. In <strong>wall.controller.js</strong>, include <em>$routeParams</em>:</p>\n<pre><code class="language-javascript">.controller(<span class="hljs-string">\'WallCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $routeParams</span>) </span>{ …\n</code></pre>\n<p>Then later on in <strong>wall.controller.js</strong>, you can see what username was requested in the URL by referring to the variable generated by <em>$routeProvider</em> using something like</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> wallOwner = $routeParams.username;\n</code></pre>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Quick-tip-keep-data-in-sync">PREVIOUS</a> <a href="https://freecodecamp.github.io/wiki/docs/More-useful-APIs">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Edit or Delete message",order:5,body:'<blockquote>\n<p>Editing or Deleting a previous message within 10 mins. of posting</p>\n</blockquote>\n<p><img src="http://i.imgur.com/gDivlLJ.gif" alt="How to delete message"></p>\n'}},function(e,n){e.exports={title:"Epilogue",order:5,body:'<p>If you have any issues not covered in this guide:</p>\n<ol>\n<li>google google google google duckduckgo</li>\n<li>bug @freecodecamp and me (@clnhll) on twitter</li>\n<li>did you miss a semicolon? a comma?</li>\n<li>make a big loud stink in the freecodecamp help gitter.</li>\n</ol>\n<p>If you notice any inaccuracies or bad coding practices in this guide, please let me know ASAP!</p>\n<p>I believe in you!\n-<a href="https://github.com/clnhll">clnhll</a></p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Bonus-SocketIO">PREVIOUS</a></p>\n'}},function(e,n){e.exports={title:"Fixing exports.update",order:5,body:'<p>As it turns out, in <strong>thing.controller.js</strong> as well as in any other endpoints you may generate, the <em>exports.update</em> function that is called when you make an <em>$http.put</em> call from your frontend to modify an existing database object is broken. This is a <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues/310">known issue</a>, and can be fixed by changing the following line:</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// Updates an existing thing in the DB.</span>\nexports.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>{ \n...    \n    <span class="hljs-keyword">var</span> updated = _.extend(thing, req.body); \n    <span class="hljs-comment">// change _.merge to _.extend</span>\n... \n };\n</code></pre>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-API-endpoint">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Accessing-the-database-from-your-frontend">NEXT</a></p>\n'}},function(e,n){e.exports={title:"For loops Explained",order:5,body:'<h2>For Loops</h2>\n<p>The for statement creates a loop that consists of three optional expressions, enclosed in parentheses and separated by semicolons, followed by a statement or a set of statements executed in the loop.</p>\n<p>The for loop has the following syntax:</p>\n<p>for ([initialization]; [condition]; [final-expression]) {<br>\ncode block to be executed<br>\n}</p>\n<p>[initialization] is executed before the loop (the code block) starts.</p>\n<p>[condition] defines the condition for running the loop (the code block).</p>\n<p>[final-expression] is executed each time after the loop (the code block) has been executed.</p>\n<p>Example in Javascript:</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> ourArray</span> = [];\n<span class="hljs-keyword">for</span> (<span class="hljs-variable"><span class="hljs-keyword">var</span> i</span> = <span class="hljs-number">0</span>; i <span class="hljs-type">&lt; 5; i++) {\n	ourArray.push(i);\n}\n</span></code></pre>\n<p>From the example above, you can read:</p>\n<p>[initialization] sets a variable before the loop starts (var i = 0).</p>\n<p>[condition] defines the condition for the loop to run (i must be less than 5).</p>\n<p>[final-expression] increases a value (i++) each time the code block in the loop has been executed.</p>\n<h3>Why we need “for loops”?</h3>\n<p>For loops is used to loop through a block of code a known number of times. Sometimes it is the computer that knows how many times, not you, but it is still known. Also, check out other loops (While and Do While).</p>\n'}},function(e,n){e.exports={title:"Free Code Camp's Privacy Policy",order:5,body:'<p>Free Code Camp is committed to respecting the privacy of visitors to our web sites and web applications. The guidelines below explain how we protect the privacy of visitors to <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> and its features.</p>\n<h3>Personally Identifiable Information</h3>\n<p>Free Code Camp protects the identity of visitors to <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> by limiting the collection of personally identifiable information.</p>\n<p>Free Code Camp does not knowingly collect or solicit personally identifiable information from or about children under 13, except as permitted by law. If we discover we have received any information from a child under 13 in violation of this policy, we will delete that information immediately. If you believe Free Code Camp has any information from or about anyone under 13, please email us at <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a>.</p>\n<p>All personally identifiable information you provide to us is used by Free Code Camp and its team to process and manage your account, analyze the demographic of our users, or to deliver services through the site.</p>\n<p>If you choose to provide personally identifiable information to us, you may receive occasional emails from us that are relevant to Free Code Camp, getting a job, or learning to code in general.\nFree Code Camp may also use other third-party providers to facilitate the delivery of the services described above, and these third-party providers may be supplied with or have access to personally identifiable information for the sole purpose of providing these services, to you on behalf of Free Code Camp.</p>\n<p>Free Code Camp may also disclose personally identifiable information in special legal circumstances. For instance, such information may be used where it is necessary to protect our copyright or intellectual property rights, or if the law requires us to do so.</p>\n<h3>Anonymous Information</h3>\n<p>Anonymous aggregated data may be provided to other organizations we associate with for statistical purposes. For example, we may report to an organization that a certain percentage of our site’s visitors are adults between the ages of 25 and 35.</p>\n<h3>Cookies and Beacons—Use by Free Code Camp; Opting Out</h3>\n<p>We use cookies and software logs to monitor the use of <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> and to gather non-personal information about visitors to the site. Cookies are small files that Free Code Camp transfers to the hard drives of visitors for record-keeping purposes. These monitoring systems allow us to track general information about our visitors, such as the type of browsers (for example, Firefox or Internet Explorer), the operating systems (for instance, Windows or Macintosh), or the Internet providers (for instance, Comcast) they use. This information is used for statistical and market research purposes to tailor content to usage patterns and to provide services requested by our customers. To delete these cookies, please see your browser’s privacy settings.</p>\n<p>A beacon is an electronic file object (typically a transparent image) placed in the code of a Web page. We use third party beacons to monitor the traffic patterns of visitors from one Free Code <a href="http://Camp.com">Camp.com</a> page to another and to improve site performance.\nNone of the information we gather in this way can be used to identify any individual who visits our site.</p>\n<h3>Security</h3>\n<p>Any personally identifiable information collected through this site is stored on limited-access servers. We will maintain safeguards to protect these servers and the information they store.</p>\n<h3>Surveys</h3>\n<p>We may occasionally conduct on-line surveys. All surveys are voluntary and you may decline to participate.</p>\n<h3>Copyright</h3>\n<p>All of the content on <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> is copyrighted by Free Code Camp. If you’d like to redistribute it beyond simply sharing it through social media, please contact us at <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a>.</p>\n<h3>Contacting Us</h3>\n<p>If you have questions about Free Code Camp, or to correct, update, or remove personally identifiable information, please email us at <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a>.</p>\n<h3>Links to Other Web sites</h3>\n<p>Free Code Camp’s sites each contain links to other Web sites. Free Code Camp is not responsible for the privacy practices or content of these third-party Web sites. We urge all <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> visitors to follow safe Internet practices: Do not supply Personally Identifiable Information to these Web sites unless you have verified their security and privacy policies.</p>\n<h3>Data Retention</h3>\n<p>We retain your information for as long as necessary to permit us to use it for the purposes that we have communicated to you and comply with applicable law or regulations.</p>\n<h3>Business Transfers</h3>\n<p>As we continue to develop our business, we might sell or buy subsidiaries, or business units. In such transactions, customer information generally is one of the transferred business assets but remains subject to the promises made in any pre-existing Privacy Policy (unless, of course, the customer consents otherwise). Also, in the unlikely event that Free Code Camp, or substantially all of its assets are acquired, customer information will be one of the transferred assets, and will remain subject to our Privacy Policy.</p>\n<h3>Your California Privacy Rights</h3>\n<p>If you are a California resident, you are entitled to prevent sharing of your personal information with third parties for their own marketing purposes through a cost-free means. If you send a request to the address above, Free Code Camp will provide you with a California Customer Choice Notice that you may use to opt-out of such information sharing. To receive this notice, submit a written request to <a href="mailto:team@freecodecamp.com" target="_blank">team@freecodecamp.com</a>, specifying that you seek your “California Customer Choice Notice.” Please allow at least thirty (30) days for a response.</p>\n<h3>Acceptance of Privacy Policy Terms and Conditions</h3>\n<p>By using this site, you signify your agreement to the terms and conditions of this <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> Privacy Policy. If you do not agree to these terms, please do not use this site. We reserve the right, at our sole discretion, to change, modify, add, or remove portions of this policy at any time. All amended terms automatically take effect 30 days after they are initially posted on the site. Please check this page periodically for any modifications. Your continued use of <a href="http://FreeCodeCamp.com">FreeCodeCamp.com</a> following the posting of any changes to these terms shall mean that you have accepted those changes.</p>\n<p>If you have any questions or concerns, please send an email to <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a>.</p>\n'}},function(e,n){e.exports={title:"Free Code Camp Deployment Workflow",order:5,body:'<ol>\n<li>All code is written and pushed to a branch on the developers’ own fork of Free Code Camp.</li>\n<li>Developers create pull requests, pulling code from their branch to Free Code Camp’s staging branch.</li>\n<li>Someone other than the person who submitted the pull request QA’s the pull request and accepts it if everything is perfect. Otherwise they close the pull request with an explanation of why it isn’t perfect, and the developer opens another pull request once they’ve fixed things.</li>\n<li>Staging is deployed to <a href="http://beta.freecodecamp.com">beta.freecodecamp.com</a> by @berkeleytrue, @benmcmahon100 or @quincylarson periodically.</li>\n<li>Master is deployed to <a href="http://freecodecamp.com">freecodecamp.com</a> once the staging itself is fully QA’d.</li>\n</ol>\n<p>Notes:</p>\n<ul>\n<li>Currently <a href="http://freecodecamp.com">freecodecamp.com</a> and <a href="http://beta.freecodecamp.com">beta.freecodecamp.com</a> share a database, so we must be careful about seeding data and manipulating it on beta.</li>\n<li>This is subject to change once we get better test coverage and continuous integration working.</li>\n</ul>\n'}},function(e,n){e.exports={title:"Free Code Camp Front End Development Certificate",order:5,body:'<h3>Here’s how to earn our verified Front End Development Certificate:</h3>\n<p><img src="http://i.imgur.com/UrU2ki8.png" alt="An image of a sample Front End Development Certificate"></p>\n<ol>\n<li>Complete all of our current Basic Bonfires</li>\n<li>Complete all of our current Basic Ziplines</li>\n<li>Complete all of our current Intermediate Bonfires</li>\n<li>Complete all of our current Intermediate Ziplines</li>\n</ol>\n<p>Once you’ve completed all of the above, you can complete our “Claim your Front End Development Certificate” challenge, which will require you to sign our Academic Honesty Pledge. Then we will instantly issue your verified certificate, which will become accessible from your portfolio page.</p>\n'}},function(e,n){e.exports={title:"Free Code Camp Full Stack Development Certificate",order:5,body:'<p>In order to participate in our nonprofit projects, you first need to earn our Full Stack Development Certificate. This certificate signifies that you’ve completed the first 800 hours of our curriculum.</p>\n<p><img src="http://i.imgur.com/Dlv4qSZ.png" alt="An image of a sample Front End Development Certificate"></p>\n<h3>Here’s how to earn our verified Full Stack Development Certificate:</h3>\n<ol>\n<li>Complete all our current Bonfire Challenges</li>\n<li>Complete all our current Zipline Challenges</li>\n<li>Complete all our current Basejump Challenges</li>\n</ol>\n<p>Once you’ve completed all of the above, you can complete our “Claim your Full Stack Development Certificate” challenge, which will require you to sign our Academic Honesty Pledge. Then we will instantly issue your verified certificate, which will become accessible from your portfolio page.</p>\n'}},function(e,n){e.exports={title:"Free Code Camp JavaScript Style Guide",order:5,body:'<h1>Free Code Camp Javascript Style Guide</h1>\n<p><small>or How Cool People Write JavaScript.</small></p>\n<h2>Indent</h2>\n<p>#alwaysUseTwoSpaces</p>\n<p>no hard tabs, ever. No really, just don’t do it.</p>\n<h2>Curly Braces</h2>\n<p>Always use curly braces when using the keywords <code>if/else/else if</code>. This prevents a lot of ambiguity and will prevent syntax errors in some edge cases.</p>\n<p>Bad:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (foo) bar();\n</code></pre>\n<p>Good:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (foo) { bar(); }\n</code></pre>\n<p>#curlyBracesEverywhere!</p>\n<h2>Space After <code>function</code> Keyword, Except in Anonymous Functions</h2>\n<p>Good:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> foo = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// ...</span>\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params"></span>) </span>{\n}\n\n</code></pre>\n<p>Bad:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> foo = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// ...</span>\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span> (<span class="hljs-params"></span>)\n</span>{\n  <span class="hljs-comment">// ...</span>\n}\n</code></pre>\n<h2>Comments</h2>\n<ul>\n<li>no inline comments</li>\n<li>single space after <code>//</code></li>\n<li>Do not use multiline comment <code>/* */</code>, we are reserving these for use with jsDocs.</li>\n</ul>\n<h2>Keywords</h2>\n<ul>\n<li>space immediately after if, else, while, etc</li>\n<li>opening curly brace should always be on the same line.</li>\n</ul>\n<p>Good:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span>) {\n <span class="hljs-comment">// do the thing</span>\n}\n</code></pre>\n<p>Bad:</p>\n<pre><code class="language-js"><span class="hljs-keyword">if</span>(<span class="hljs-literal">true</span>)\n{\n <span class="hljs-comment">// do the thing</span>\n}\n</code></pre>\n<h2>Else</h2>\n<p>Avoid else and “end early”. In JavaScript there is often a lot of indenting (usually when dealing with async code and named “callback hell”). Anything you can do reduce the number of indents should be done. One thing is to <a href="http://blog.timoxley.com/post/47041269194/avoid-else-return-early">avoid the else</a> keyword.</p>\n<p>This also has the side effect of making code cleaner and easier to read.</p>\n<p>Bad:</p>\n<pre><code class="language-js">someAsynFunc(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) </span>{\n  <span class="hljs-keyword">if</span> (err) {\n    callback(err);\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-comment">// do stuff with data</span>\n  }\n});\n</code></pre>\n<p>Good:</p>\n<pre><code class="language-js">someAsynFunc(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) </span>{\n  <span class="hljs-keyword">if</span> (err) {\n    <span class="hljs-keyword">return</span> callback(err);\n  }\n  <span class="hljs-comment">// do stuff with data</span>\n  <span class="hljs-comment">// saves one indent</span>\n});\n</code></pre>\n<h2>Long Strings</h2>\n<p>Long multiline strings should be in one of two forms:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> longString =\n  ‘long strings should ‘ +\n  ‘be <span class="hljs-keyword">in</span> <span class="hljs-keyword">this</span> form, <span class="hljs-keyword">with</span> the ‘ +\n  ‘operator ending the line’;\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> foo = <span class="hljs-string">\'bar\'</span>;\n\n<span class="hljs-keyword">var</span> longString = [\n  <span class="hljs-string">\'long strings with variables such as \'</span>,\n  foo,\n  <span class="hljs-string">\'should \'</span>,\n  <span class="hljs-string">\'be in this form, an array of strings \'</span>,\n  <span class="hljs-string">\'that are joined with the join array instance method\'</span>,\n].join(<span class="hljs-string">\'\'</span>);\n</code></pre>\n<p>…more to come</p>\n'}},function(e,n){e.exports={title:"Free Code Camp completion language requirements",order:5,body:"<p>The last 800 hours of free code camp involve building projects for nonprofits. These nonprofit projects will involve lots of meetings, correspondence, and pair programming, all of which will be conducted in English.</p>\n<p>You will need to be good enough with English to be able to participate in these meetings.</p>\n<p>We are translating our challenges into native languages so that you can focus on learning to code, rather than focusing on learning English.</p>\n<p>Many non-native English speakers have succeeded in our nonprofit project program. With some effort, you can, too.</p>\n"}},function(e,n){e.exports={title:"Free Code Camp is an open source community distributed across many platforms",order:5,body:'<p>Free Code Camp is an open source community. We have a free, self-paced web development curriculum located at <a href="http://freecodecamp.com">http://freecodecamp.com</a>, but we are much larger than just that.</p>\n<p>We leverage the power of these existing platforms to connect with one another and learn to code together:</p>\n<p><a href="https://github.com/freecodecamp/freecodecamp">GitHub</a> - for collaborating on open source projects and improving <a href="http://www.freecodecamp.com">FreeCodeCamp.com</a><br>\n<a href="https://gitter.im/freecodecamp/freecodecamp">Gitter</a> - for real time chatting and getting immediate help on our challenges<br>\n<a href="http://freecodecamp.com/news">Camper News</a> - for sharing coding resources<br>\n<a href="https://www.facebook.com/groups/free.code.campers">Facebook Campsites</a> - for meeting campers in your city and coordinating events<br>\n<a href="https://medium.freecodecamp.com">Medium</a> - for publishing your long-form content<br>\n<a href="https://twitch.tv/freecodecamp">Twitch</a> - for live-streaming coding<br>\n<a href="https://www.youtube.com/freecodecamp">YouTube</a> - for publishing instructional videos</p>\n'}},function(e,n){e.exports={title:"Free Code Camp logo",order:5,body:'<h3>Free Code Camp’s logo</h3>\n<p><img src="https://i.vimeocdn.com/video/520129377_1280x720.jpg" alt="Free Code Camp\'s logo"></p>\n<p>It uses the typeface ‘saxmono’.</p>\n<p>Like most of Free Code Camp’s design assets, it was created by <a href="https://gitter.im/rybar">@rybar</a> with help from <a href="https://gitter.im/iheartkode">@iheartkode</a>.</p>\n<p>You can download all of our assets, which are Creative Commons licensed, from our <a href="https://github.com/FreeCodeCamp/FCCAssets">Free Code Camp Assets repository</a>.</p>\n'}},function(e,n){e.exports={title:"Frontend file structure",order:5,body:'<p>First things first: All your user-facing files and angular files are in <strong>/client/app/</strong></p>\n<ol>\n<li><strong>app.js</strong>: defines your app and includes some basic app-wide functions, you probably don’t really need to mess with it unless you’re trying to add more dependencies to your app. We’re not gonna worry about that right now.</li>\n<li><strong>app.css</strong>: an app-wide stylesheet, you can put styles here if you want but I’d recommend you put them in <strong>main/main.css</strong>, as these styles are also app-wide.</li>\n<li><strong>main/</strong>: this folder contains what the user sees first when they load up your site. <strong>main.html</strong> is the page template, <strong>main.js</strong> routes the user to <strong>main.html</strong> when the user goes to the top level directory of your website—that is, <a href="#">http://yourapp.wherever.itis/</a> with no <a href="#">/other/url/hierarchy</a>. You’ll also learn soon that you can define your app’s <a href="#">/url/heirarchy/fairly/arbitrarily</a>. You won’t really need to edit <strong>main.js</strong> or <strong>main.controller.spec.js</strong>, so let’s not worry about those right now. If you look through the <strong>main.html</strong> file you’ll see it uses <em>ng-repeat</em> to show <em>things</em> in <em>awesomeThings</em>. Where does it get <em>awesomeThings</em>?</li>\n<li><strong>main/main.controller.js</strong>: all of the javascript functions you want to use to interact directly with the user go here! You’ll put functions here to interact with your API, refresh views for your user, etc. Here, <em>awesomeThings</em> are pulled from your database and added to the local scope so your HTML view can display them! How cool! We’ll get to adding custom objects to your database in a minute.</li>\n</ol>\n<p>Great! Now you know how to interact with the user! But what if you want your app to have another page that does something else? Maybe <strong>main.html</strong> shows the home page, but you want a page that shows a form to add a poll? maybe <a href="#">http://yourapp.wherever.itis/newpage</a>? This is where the yeoman generator comes in handy.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Guide-to-Basejumps-Table-of-Contents/">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-route">NEXT</a></p>\n'
}},function(e,n){e.exports={title:"Functional Programming   Higher Order Functions",order:5,body:'<h3>Links to help with functional programming!</h3>\n<p>####Workshops\n(<a href="https://github.com/timoxley/functional-javascript-workshop">https://github.com/timoxley/functional-javascript-workshop</a>)</p>\n<p>A node package workshop. More can be found at <a href="http://nodeschool.io/">nodeschool</a></p>\n<p>####Reading and videos\n(<a href="https://github.com/timoxley/functional-javascript-workshop">https://github.com/timoxley/functional-javascript-workshop</a>)</p>\n'}},function(e,n){e.exports={title:"Get info about the current user",order:5,body:'<p>You may have noticed if you opened up <strong>/client/app/admin/admin.controller.js</strong> that it calls the <em>Auth</em> module like so:</p>\n<pre><code class="language-javascript">.controller(<span class="hljs-string">\'AdminCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $http, Auth …\n</span></span></code></pre>\n<p>You can include Auth in your other controllers the same way. It’s pretty useful to have <em>Auth</em> available in your controller to detect if a user is logged in, or to get information about the current user. In the body of your controller you can add</p>\n<pre><code class="language-javascript">$scope.getCurrentUser = Auth.getCurrentUser;\n$scope.isLoggedIn = Auth.isLoggedIn;\n</code></pre>\n<p>And then you can use <em>isLoggedIn()</em> or <em>getCurrentUser()</em> in the HTML view for your controller!</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/More-useful-APIs">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Restrict-a-page-to-authenticated-users">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Getting a coding job",order:5,body:'<p>Free Code Camp will help you prepare for a coding job.</p>\n<p><img src="https://www.evernote.com/shard/s116/sh/55c128c7-5d99-41cc-b03d-b3de22611c8d/b43e467b3889f646fec34bb4c161e2a2/deep/0/What\'s-wrong-with-this-picture----Code.org.png" alt=""></p>\n<p>Here are the facts:</p>\n<ul>\n<li>There are hundreds of thousands of unfilled coding jobs.</li>\n<li>Employers and the US government have joined together to promote nontraditional coding programs like Free Code Camp.</li>\n<li>Full stack JavaScript is one of best paying skill sets, and has a ton of job openings.</li>\n<li>The best proof that you’re an employable developer is a portfolio filled with real apps that real people are using.</li>\n</ul>\n<p>You’ll still need to develop basic interviewing skills and soft skills (if you’ve been working a knowledge-worker type job for a few years, you probably already have these).</p>\n<p>You’ll also need to work hard to network with coders in your city. You can do this by joining <a href="https://freecodecamp.github.io/wiki/docs/List-of-Free-Code-Camp-city-based-Campsites">your city’s Campsite</a> and participating in as many events as possible.</p>\n'}},function(e,n){e.exports={title:"Git Blame",order:5,body:'<blockquote>\n<p>Shows what revision and author last modified each line of a file and blame them.</p>\n</blockquote>\n<p>:point_right: :no_good: — :see_no_evil: :hear_no_evil: :speak_no_evil:</p>\n<p><img src="http://i.imgur.com/Ywpucz6.png" alt=""></p>\n<p><strong>Reference:</strong> <a href="https://git-scm.com/docs/git-blame">https://git-scm.com/docs/git-blame</a></p>\n<h2><a href="http://i.imgur.com/xancoby.png"></a></h2>\n'}},function(e,n){e.exports={title:"Git Resources",order:5,body:'<blockquote>\n<p>Resources for working with Git VCS</p>\n</blockquote>\n<h1>Books and Tutorials</h1>\n<ul>\n<li><a href="https://git-scm.com/book">Pro Git</a></li>\n<li><a href="https://www.atlassian.com/git/tutorials/">Become a git guru - Atlassian</a></li>\n</ul>\n<h1>Other Resources</h1>\n<ul>\n<li><a href="http://gitready.com">Git Ready</a></li>\n<li><a href="https://hub.github.com/">Hub</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Gitter Moderation Policy",order:5,body:'<h2>Here’s how our chatroom moderators deal with inappropriate behavior.</h2>\n<ol>\n<li>\n<p>Moderators will ban the following people immediately:<br>\nSpammers<br>\nPeople who violate our <a href="https://freecodecamp.github.io/wiki/docs/Code-of-Conduct">code of conduct</a> (trolls)<br>\nPeople who come across as excessively negative</p>\n</li>\n<li>\n<p>Moderators will then send them this message:</p>\n</li>\n</ol>\n<pre><code>Hey, I\'m sorry but I had to temporarily ban you.\n\nI can consider unbanning you, but I need you to do something first.\n\n<span class="hljs-bullet">1. </span>Read our [<span class="hljs-link_label">Code of Conduct</span>](<span class="hljs-link_url">https://freecodecamp.github.io/wiki/docs/Code-of-Conduct</span>).    \n<span class="hljs-bullet">2. </span>Please confirm that you\'ve read it.    \n<span class="hljs-bullet">3. </span>Explain to me why you think I banned you.    \n</code></pre>\n<ol start="3">\n<li>\n<p>Based on their reply, moderators can decide whether to unban the offender. If the offender hasn’t been banned by that moderator before, and if they seem respectful and apologetic, the moderator can unban them. As a matter of policy, moderators will be polite during this process, no matter how poorly the offender has behaved.</p>\n</li>\n<li>\n<p>Moderators will summarize the event for other moderators.</p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"Gitter",order:5,body:'<h3>Gitter is a chat room system popular with open source projects.</h3>\n<p><img src="https://www.evernote.com/l/AntJzLbImEFNbaLfG7YQnWWBbqLliTKTYeoB/image.png" alt="A screenshot from Gitter"></p>\n<p><a href="https://gitter.im">Gitter.im</a> is a rapidly growing startup based in London.</p>\n<p>Free Code Camp has hundreds of Gitter rooms. These are accessible through Gitter’s website, as well as <a href="https://gitter.im/apps">desktop and mobile apps</a>.</p>\n<p>Gitter allows you to share <a href="https://freecodecamp.github.io/wiki/docs/Pasting-Code-in-Gitter">formatted code</a> with fellow campers.</p>\n'}},function(e,n){e.exports={title:"Grunt",order:5,body:'<p>Whenever you create a new route or directive, you have to use <code>control+c</code> in your <em>grunt</em> terminal window to quit the grunt process and re-run <code>grunt serve</code> for your new route/directive to be included in your project’s <strong>index.html</strong>. Sometimes <em>grunt</em> can be a little finnicky and refuses to run if it thinks something is wrong with your project. Obviously you should try to fix the problem, but grunt’s errors aren’t very helpful so don’t worry too much—grunt usually will still run totally fine with the command <code>grunt serve --force</code>.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-directive">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Backend-file-structure">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Guide to Basejumps Table of Contents",order:5,body:'<p>###Table of contents</p>\n<ul>\n<li>Part 1: Frontend\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Frontend-file-structure">Frontend file structure</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-route">Creating a new route</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-directive">Creating a new directive</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Grunt">Grunt</a></li>\n</ul>\n</li>\n<li>Part 2: Backend\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Backend-file-structure">Backend file structure</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-new-API-endpoint">Creating a new API endpoint</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Fixing-exports.update">Fixing exports.update</a></li>\n</ul>\n</li>\n<li>Part 3: Interfacing Between Frontend &amp; Backend\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Accessing-the-database-from-your-frontend">Accessing the database from your frontend</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Seed-data">Seed Data</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Quick-tip-keep-data-in-sync">Quick tip: keep data in sync</a></li>\n</ul>\n</li>\n<li>Part 4: Dynamic URLs using $routeParams, more useful APIs\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Dynamic-URLs-using-$routeParams">Dynamic URLS using $routeParams</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/More-useful-APIs">More Useful APIs</a></li>\n</ul>\n</li>\n<li>Part 5: Auth, isLoggedInAsync()\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Get-info-about-the-current-user">Get info about the current user</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Restrict-a-page-to-authenticated-users">Restrict a page to authenticated users</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/isLoggedInAsync()">isLoggedInAsync()</a></li>\n</ul>\n</li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonus-SocketIO">Bonus: SocketIO</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Epilogue">Epilogue</a></li>\n</ul>\n<p>###Legend\n<strong>/bolded/names/with.extensions</strong> are directories and files in the project file structure<br>\n<a href="#">highlighted.items/are/hypothetical</a> URLs that allow access to different pages in your app<br>\n<em>italicizedItems</em> are function and object names within your code</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Intro-to-Yeoman-Angular-Fullstack-Basejumps">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Frontend-file-structure">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Guide to Submitting Posts to Free Code Camp Medium Publication",order:5,body:'<p>Thousands of people read our <a href="https://medium.freecodecamp.com">Medium publication</a>. Here’s how to submit posts, and what we look for in posts that we ultimately publish.</p>\n<ol>\n<li>Create a Medium account</li>\n<li>Add a headshot and bio</li>\n<li>Email <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a> to request to become a writer for our publication</li>\n<li>Start submitting posts to us for us to review and potentially publish</li>\n</ol>\n<p>##Content tips:</p>\n<ul>\n<li>Read through articles that have already been published on our publication and write about things we haven’t covered yet.</li>\n<li>Autobiographical posts need a unique perspective or a non-obvious takeaway.</li>\n<li>Technical articles are welcome, and should be written so that most people who have only been coding for a year can still understand them</li>\n<li>Humorous posts do quite well with our community, and even serious articles can be lightened up with humor</li>\n<li><a href="https://medium.com/data-lab/the-optimal-post-is-7-minutes-74b9f41509b#.jxmxzdrfa">7 minutes is technically the optimal post length</a>, but don’t dilute your content to reach that length</li>\n<li>Keep your tone positive, and keep any criticism you may have metered and objective</li>\n<li>Good writing takes time. A 7-minute medium post takes me (Quincy Larson) around 4 - 6 hours</li>\n</ul>\n<p>##Style tips:</p>\n<ul>\n<li>Feature a large, exciting image at the top of the page</li>\n<li>Break up text with good, relevant images throughout</li>\n<li>Break points down and use headlines and sub headlines where necessary</li>\n<li>Avoid the “wall of text” affect by keeping paragraphs between 1 - 4 sentences</li>\n<li>Use exclamation points and ellipsis sparingly</li>\n<li>Avoid profanity and any statements that Lisa (the character from The Simpsons) would find offensive</li>\n<li>Avoid using more than one conjunction in a sentence</li>\n<li>Re-read your post to make sure there aren’t any obvious typos</li>\n</ul>\n<p>##Our goal is to publish as many camper submissions as possible while maintaining a baseline level of quality.</p>\n<p>We get a lot of submissions. Please don’t take offense if we don’t publish your submission immediately. Instead, <a href="https://gitter.im/quincylarson">message @QuincyLarson in Gitter</a> and I can give you the status of your submission and quick feedback.</p>\n<p>Happy writing and coding!</p>\n'}},function(e,n){e.exports={title:"Help I've Found a Bug",order:5,body:'<p>Thank you for taking the effort to report an issue with FreeCodeCamp.</p>\n<p>If you think you’ve found a bug on FreeCodeCamp, please follow these steps to resolve your problem:</p>\n<ol>\n<li>If the page seems broken in any way, try to do a <a href="https://freecodecamp.github.io/wiki/docs/Refresh-Your-Browser-Cache">Hard Refresh</a> of the page.  This will update any old code that may have been cached in your browser.</li>\n</ol>\n<ul>\n<li>If your code crashes your browser, also try <a href="https://freecodecamp.github.io/wiki/docs/Clear-Your-Browser\'s-Local-Storage">Clearing Your Browser’s Local Storage</a>.</li>\n</ul>\n<ol start="2">\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-Get-Help-on-Gitter">Ask for Help on Gitter</a>.  You can usually get a quick response from a helpful community member there.</p>\n</li>\n<li>\n<p>If your problem has baffled everyone in Gitter, try <a href="https://freecodecamp.github.io/wiki/docs/Searching-for-Your-Issue-on-Github">Searching for Your Issue on GitHub</a> for anyone who has posted about a similar issue. If someone has, you can upvote the issue by replying to it with “+1” as your message.</p>\n</li>\n<li>\n<p>If you can’t find any relevant issues on GitHub, then <a href="https://freecodecamp.github.io/wiki/docs/Creating-a-New-Github-Issue">Create a New Issue</a> and our development team will take a look at your problem.</p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"Help Rooms",order:5,body:'<p>There are official help rooms for each major section of FCC content:</p>\n<table>\n<thead>\n<tr>\n<th>Chat Room</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/Help">Help</a></td>\n<td>get help with our Waypoint challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpBonfires">HelpBonfires</a></td>\n<td>get help with our Bonfire challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpZiplines">HelpZiplines</a></td>\n<td>get help with our Zipline challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpBasejumps">HelpBasejumps</a></td>\n<td>get help with our Basejump challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/NonprofitProjects">NonprofitProjects</a></td>\n<td>get help with your Nonprofit Projects from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/CodeReview">CodeReview</a></td>\n<td>get constructive criticism and advice on finished code from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/YouCanDoThis">YouCanDoThis</a></td>\n<td>learning to code is hard - share your feelings and get moral support here</td>\n</tr>\n</tbody>\n</table>\n<p>Choose the right room for your question!</p>\n'}},function(e,n){e.exports={title:"Higher Order functions",order:5,body:'<p>Functions that are higher!</p>\n<p><a href="https://www.youtube.com/watch?v=BMUiFMZr7vk">https://www.youtube.com/watch?v=BMUiFMZr7vk</a></p>\n'}},function(e,n){e.exports={title:"Home",order:5,body:'<p>##Welcome to the Free Code Camp Wiki!</p>\n<p>Our open source community’s Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:</p>\n<ul>\n<li>Curriculum</li>\n<li>Local Campsite Communities</li>\n<li>Nonprofit Projects</li>\n</ul>\n<p><img src="http://i.imgur.com/gyJwzkx.png" alt="An illustration of CamperBot"></p>\n<p>The best way to access this wiki is via <a href="https://freecodecamp.github.io/wiki/docs/camperbot">CamperBot</a>, located in our Gitter channels. CamperBot is a community designed tool useful for accessing our wiki content without ever leaving Gitter.</p>\n<p>To contribute a wiki article for any of the bonfires, please use this <a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Wiki-Template">template</a>. This is essential for <a href="https://github.com/camperbot">@CamperBot</a> to retrieve the article. Bonfire articles that do not use this template will be removed.</p>\n<p>You will then need to clone the <a href="https://github.com/FreeCodeCamp/wiki">wiki</a> and create a branch where you will make your changes and submmit a pull request to be merged before the changes goes live on the wiki. This is to filter any spam content or damage to <strong>our</strong> wiki.</p>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a>.</p>\n<p>We look forward to collaborating with you on expanding and improving this wiki!</p>\n'}},function(e,n){e.exports={title:"How Free Code Camp works",order:5,body:'<p>Free Code Camp offers you a free, self-paced, browser-based program that takes about 1,600 hours to complete.</p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-waypoints.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<h2>how it works</h2>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-bonfires.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-ziplines.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-basejumps.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-nonprofit-projects.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/curriculum-diagram-full.jpg" alt="An image of a table showing the different segments of Free Code Camp"></p>\n'}},function(e,n){e.exports={title:"How FreeCodeCamp Nonprofit Projects work",order:5,body:'<p>Building nonprofit projects is the main way that our campers learn full stack JavaScript and agile software development. Once you’ve earned both your Front End Development Certification and your Full Stack Development Certification, you’ll begin this process.</p>\n<h2>Starting with the end in mind</h2>\n<p>Our goal at Free Code Camp is to help you land a job as a junior software developer (or, if you prefer, a ‘pivot job’ that leads your current career in a more technical direction).</p>\n<p>You’ll continue to work on nonprofit projects until you’ve built a sufficiently impressive portfolio and references to start your job search. Your portfolio will ultimately have four nonprofit projects. We estimate that the 800 hours of nonprofit projects you’re going to complete, in addition to the 800 hours of challenges you’ve already completed, will be enough to qualify you for your first coding job. This will produce a much broader portfolio than a traditional coding bootcamp, which generally only has one or two capstone projects.</p>\n<h2>Choosing your first Nonprofit Project</h2>\n<p>We’ve categorized all the nonprofit projects by estimated time investment per camper: 100 hours, 200 hours, and 300 hours. These are only rough estimates.</p>\n<p>Example: if you and the camper you’re paired up with (your pair) each stated you could work 20 hours per week. If the project is a 100 hour per camper project, you should be able to complete it in about 5 weeks.\nOur Nonprofit Project team will match you and your pair based on:</p>\n<ul>\n<li>Your estimated time commitment (10, 20 or 40 hours per week)</li>\n<li>Your time zone</li>\n<li>The nonprofit projects you’ve chosen</li>\n<li>Prior coding experience (we’d like both campers to be able to contribute equally)</li>\n</ul>\n<p>We won’t take age or gender into account. This will provide you with valuable experience in meshing with diverse teams, which is a reality of the contemporary workplace.</p>\n<p>You’ll only work on one project at a time. Once you start a nonprofit project, we’ll remove you from all other nonprofit project you’ve expressed interest in. There’s a good chance those projects will no longer be available when you finish your current project, anyway. Don’t worry, though - we get new nonprofit project requests every day, so there will be plenty more projects for you to consider after you finish your current one.</p>\n<h3>Finalizing the Project</h3>\n<p>Before you can start working on the project, our team of Nonprofit Project Coordinators will go through the following process:</p>\n<ul>\n<li>We’ll wait until there are two campers who have chosen the same project and look like they’re a good match for one another based on the factors mentioned above.</li>\n<li>We’ll call the stakeholder to confirm once again that he or she agrees with our <a href="http://freecodecamp.com/nonprofits">terms</a> and has signed our [Nonprofit Project Stakeholder Pledge] (<a href="http://goo.gl/forms/0YKkd9bpcR">http://goo.gl/forms/0YKkd9bpcR</a>).</li>\n<li>We’ll set an initial meeting with representatives from Free Code Camp, the two campers, and the stakeholder.</li>\n<li>If the stakeholder and both campers shows up promptly, and seem enthusiastic and professional, we’ll start the project.</li>\n</ul>\n<p>This lengthy process serves an important purpose: it reduces the likelihood that any of our campers or stakeholders will waste their precious time.</p>\n<h3>Nonprofit Stakeholders</h3>\n<p>Each nonprofit project was submitted by a nonprofit. A representative from this nonprofit has agreed to serve as a “stakeholder” - an authorative person who understands the organization and its needs for this particular project.</p>\n<p>Stakeholders have a deep understanding of their organizations’ needs. Campers will work with them to figure out the best solutions to these needs.</p>\n<p>When you and your pair partner first speak with your nonprofit stakeholder, you’ll:</p>\n<ul>\n<li>talk at length to better understand their needs.</li>\n<li>create a new Trello board and use it to prioritize what needs to be built.</li>\n<li>and establish deadlines based on your weekly time commitment, and how long you think each task will take.</li>\n</ul>\n<p>It’s notoriously difficult to estimate how long building software projects will take, so feel free to ask our volunteer team for help.</p>\n<p>You’ll continue to meet with your stakeholder at least twice a month in your project’s Gitter channel.\nYou should also ask questions in your project’s Gitter channel as they come up throughout the week, and your stakeholder can answer them asynchronously.</p>\n<p>Getting “blocked” on a task can take away your sense of forward momentum, so be sure to proactively seek answers to any ambiguities you encounter.</p>\n<p>Ultimately, the project will be considered complete once both the stakeholder’s needs have been met, and you and your pair are happy with the project. Then you can add it to your portfolio!</p>\n<h3>Working with your Pair</h3>\n<p>You and your pair will pair program (code together on the same computer virtually) about half of the time, and work independently the other half of the time.</p>\n<p>Here are our recommended ways of collaborating:</p>\n<ul>\n<li>Gitter has robust private messaging functionality. It’s the main way our team communicates, and we recommend it over email.</li>\n<li>Trello is great for managing projects. Work with your stakeholder to create Trello cards, and update these cards regularly as you make progress on them.</li>\n<li>Screen Hero or Team Viewer - These are the ideal way to pair program. Tools like TMUX are good, but difficult to use. We discourage you from using screen sharing tools where only one person has control of the keyboard and mouse - that isn’t real pair programming.</li>\n<li>Write clear and readable code, commit messages, branch names, and pull request messages.</li>\n</ul>\n<h3>Hosting Apps</h3>\n<p>Unless your stakeholder has an existing modern host (AWS, Digital Ocean), you’ll need to transition them over to a new platform. We believe Heroku is the best choice for a vast majority of web projects. It’s free, easy to use, and has both browser and command line interfaces. It’s owned by Salesforce and used by a ton of companies, so it’s accountable and unlikely to go away.</p>\n<p>If you need help convincing your stakeholder that Heroku is the ideal platform, we’ll be happy to talk with them.</p>\n<h3>Maintaining Apps</h3>\n<p>Once you complete a nonprofit project, your obligation to its stakeholder is finished. Your goal is to leave behind a well documented solution that can be easily maintained by a contract JavaScript developer (or even a less-technical “super user”).</p>\n<p>While you will no longer need to help with feature development, we encourage you to consider helping your stakeholder with occasional patches down the road. After all, this project will be an important piece of your portfolio, and you’ll want it to remain in good shape for curious future employers.</p>\n<h3>Pledging to finish the project</h3>\n<p>Your nonprofit stakeholder, your pair partner, and our volunteer team are all counting on you to finish your nonprofit project. If you walk away from an unfinished nonprofit project, you’ll become ineligible to ever be assigned another one.</p>\n<p>To confirm that you understand the seriousness of this commitment, we require that all campers <a href="http://goo.gl/forms/ZMn96z2QqY">sign this pledge</a> before starting on their nonprofit projects.</p>\n<p>There will likely be times of confusion or frustration. This is normal in software development. The most important thing is that you do not give up and instead persevere through these setbacks. As Steve Jobs famously said, “Real artists ship.” And you are going to ship one successful nonprofit project after another until you feel ready to take the next step in your promising career.</p>\n'}},function(e,n){e.exports={title:"How GitHub Issue Moderators AKA Issue Mods Work",order:5,body:'<p>GitHub Issue Moderators, or “issue mods”, are volunteers who have the ability to close issues and accept or deny pull requests.</p>\n<p>In order to become an issue mod, you must first prove your helpfulness by leaving useful comments on outstanding issues, and submitting pull requests of your own to fix these issues.</p>\n<p>If you’ve been doing these things, and want the additional power/responsibility that comes with helping Free Code Camp as an issue mod, please contact <a href="https://gitter.im/berkeleytrue">@berkeleytrue</a> in Gitter.</p>\n<p>If you are approved, we will add you to a GitHub Team, <code>Issue mods</code>.</p>\n<p>Though you will have write access to Free Code Camp’s repository, <strong>you should never write directly to the Free Code Camp repository</strong>. All code should enter Free Code Camp’s codebase in the form of a pull request.</p>\n<p>Please note that we will frequently remove issue mods whom we think are inactive. If you are removed, please do not take this personally - we can add you back to the team, just message us and let us know you’re still active.</p>\n<p>Also note, the number of issue moderators will always remain small due to the nature of Github permissions.</p>\n<p>Happy Coding!</p>\n'}},function(e,n){e.exports={title:"How JSONP is different from JSON",order:5,body:'<h2>JSONP is just JSON wrapped in a callback function.</h2>\n<p>JSONP is useful for making cross domain requests, which are often otherwise forbidden by browsers for security reasons.</p>\n<pre><code> <span class="hljs-comment">// an example of JSON</span>\n {<span class="hljs-string">"weapon"</span>:<span class="hljs-string">"nunchucks"</span>,<span class="hljs-string">"headband"</span>:<span class="hljs-string">"yellow"</span>}\n\n <span class="hljs-comment">// an example of JSONP</span>\n myCallback({<span class="hljs-string">"weapon"</span>:<span class="hljs-string">"nunchucks"</span>,<span class="hljs-string">"headband"</span>:<span class="hljs-string">"yellow"</span>});\n</code></pre>\n<p>Then to access the data stored in your JSONP, you define the callback function:</p>\n<pre><code>myCallback = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span></span>{\n  alert(<span class="hljs-type">data</span>.weapon);\n};\n</code></pre>\n'}},function(e,n){e.exports={title:"How Long Free Code Camp Takes",order:5,body:"<p>It takes about 1,600 hours to complete Free Code Camp.</p>\n<p>Free Code Camp is fully online, and there will always be other people at your skill level that you can pair program with, so you can learn at your own pace. Here are some example coding schedules:</p>\n<table>\n<thead>\n<tr>\n<th>Time budgeted</th>\n<th>Hours per week</th>\n<th>Weeks to complete</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Weekends</td>\n<td>10 hours/week</td>\n<td>160 weeks (36 months)</td>\n</tr>\n<tr>\n<td>Nights and Weekends</td>\n<td>20 hours/week</td>\n<td>80 weeks (18 months)</td>\n</tr>\n<tr>\n<td>Full time</td>\n<td>40 hours/week</td>\n<td>40 weeks (9 months)</td>\n</tr>\n<tr>\n<td>Traditional Bootcamp Pacing</td>\n<td>80 hours/week</td>\n<td>20 weeks (5 months)</td>\n</tr>\n</tbody>\n</table>\n"}},function(e,n){e.exports={title:"How To Create A Pull Request for Free Code Camp",order:5,body:'<h1>Overview</h1>\n<h3>What is a Pull Request?</h3>\n<p>A pull request (PR) is a method of submitting proposed changes to the Free Code Camp Repo (or any Repo, for that matter).  You will make changes to copies of the files which make up Free Code Camp in a personal fork, then apply to have them accepted by Free Code Camp proper.</p>\n<h3>Need Help?</h3>\n<p>Free Code Camp Issue Mods and staff are on hand to assist with Pull Request related issues on our <a href="https://gitter.im/FreeCodeCamp/HelpContributors">Help Contributors Chat Room</a></p>\n<h3>Methods</h3>\n<p>There are two methods of creating a Pull for Free Code Camp:</p>\n<ol>\n<li>Editing files via the GitHub Interface</li>\n<li>Editing files on a local clone</li>\n</ol>\n<h1>Important: ALWAYS EDIT ON A BRANCH</h1>\n<p>Take away only one thing from this document, it should be this:  Never, EVER make edits to the <code>staging</code> branch.  ALWAYS make a new branch BEFORE you edit files.  This is critical, because if your PR is not accepted, your copy of <code>staging</code> will be forever sullied and the only way to fix it is to delete your fork and re-fork.</p>\n<h1>Editing via your Local Fork (Recommended)</h1>\n<p>This is the recommended method.  Read about <a href="https://freecodecamp.github.io/wiki/docs/How-To-Fork-And-Maintain-a-Local-Instance-of-Free-Code-Camp">How to Setup and Maintain a Local Instance of Free Code Camp</a>.</p>\n<ol>\n<li>Perform the maintenance step of rebasing <code>staging</code></li>\n<li>Ensure you are on the <code>staging</code> branch using <code>git status</code>:</li>\n</ol>\n<pre><code>$ git status\n<span class="hljs-keyword">On</span> branch staging\nYour branch <span class="hljs-keyword">is</span> up-<span class="hljs-keyword">to</span>-<span class="hljs-built_in">date</span> <span class="hljs-keyword">with</span> <span class="hljs-comment">\'origin/staging\'.</span>\n\n<span class="hljs-literal">nothing</span> <span class="hljs-keyword">to</span> commit, working directory clean\n</code></pre>\n<ol start="3">\n<li>If you are not on staging or your working directory is not clean, resolve any outstanding files/commits and checkout staging\n<code>git checkout staging</code></li>\n<li>Create a branch off of <code>staging</code> with git:\n<code>git checkout -B branch/name-here</code>\nNote: Branch naming is important.\nUse a name like <code>fix/short-fix-description</code> or <code>feature/short-feature-description</code>\nReview the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Contribution Guidelines</a> for more detail.</li>\n<li>Edit your file(s) locally with the editor of your choice</li>\n<li>Check your <code>git status</code> to see unstaged files.</li>\n<li>Add your edited files:\n<code>git add path/to/filename.ext</code>\nYou can also do:\n<code>git add .</code>\nto add all unstaged files.  Take care, though, because you can accidentially add files you don’t want added.  Review your <code>git status</code> first.</li>\n<li>Commit your edits:\n<code>git commit -m &quot;Brief Description of Commit&quot;</code></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/git-rebase#squashing-multiple-commits-into-one">Squash your commits</a>, if there are more than one.</li>\n<li>Push your commits to your GitHub Fork:\n<code>git push -u origin branch/name-here</code></li>\n<li>Go to <a href="https://freecodecamp.github.io/wiki/docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp#common-steps">Common Steps</a></li>\n</ol>\n<h1>Editing via the GitHub Interface</h1>\n<p><strong>Note:</strong> Editing via the GitHub Interface is not recommended, since it is not possible to update your fork via GitHub’s interface without deleting and recreating your fork.</p>\n<ol>\n<li>Create a Fork of the FCC Repo</li>\n<li><a href="https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/">Create a branch</a> within your fork.\nNote: Branch naming is important.\nUse a name like <code>fix/short-fix-description</code> or <code>feature/short-feature-description</code>\nReview the <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Contribution Guidelines</a> for more detail.</li>\n<li>Edit the file and commit the changes.</li>\n<li>Continue to <a href="https://freecodecamp.github.io/wiki/docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp#common-steps">Common Steps</a></li>\n</ol>\n<h1>Common Steps</h1>\n<ol>\n<li>Once the edits have been committed, you will be prompted to create a pull request on your fork’s Github Page.</li>\n<li>By default, all pull requests should be against the FCC main repo, <code>staging</code> branch.</li>\n<li>Make a clear title for your PR which succinctly indicates what is being fixed.  Do not add the issue number in the title.\nExamples:\n<code>Add Test Cases to Bonfire Drop It</code>\n<code>Correct typo in Waypoint Size Your Images</code></li>\n<li>In the body of your PR include a more detailed summary of the changes you made and why.</li>\n<li>Indicate if you have tested on a local copy of the site or not.</li>\n<li>If your PR is due to an issue, you can <a href="https://help.github.com/articles/closing-issues-via-commit-messages/">reference and close that issue</a> automatically by adding a keyword like <code>Closes #xxxx</code>, where <code>xxxx</code> is the issue number.</li>\n</ol>\n<h1>Next Steps</h1>\n<h3>If Changes are Requested</h3>\n<p>Don’t worry, many PRs, especially first PRs, require correction or updating.  If you have used the GitHub interface to create your PR, you will need to close your PR, create a new branch, and re-submit.  This is because you cannot squash your commits via the GitHub interface.</p>\n<p>If you have a local copy of the repo, you can make the requested changes and amend your commit with:\n<code>git commit --amend</code>\nThis will update your existing commit.  When you push it to your fork you will need to do a force push to overwrite your old commit:\n<code>git push --force</code></p>\n<p>Be sure to post in the PR conversation that you have made the requested changes.</p>\n<h3>If your PR is accepted</h3>\n<p>Once your PR is accepted, you may delete the branch you created to submit it.  This keeps your working fork clean.  You can do this with a press of a button on the GitHub PR interface.\nYou can delete the local copy of the branch with:\n<code>git branch -D branch/to-delete-name</code></p>\n<h3>If your PR is rejected</h3>\n<p>Don’t despair!  You should receive solid feedback from the Issue Moderators as to why it was rejected and what is needed.  Please, keep contributing.</p>\n'
}},function(e,n){e.exports={title:"How To Fork And Maintain a Local Instance of Free Code Camp",order:5,body:'<h1>Overview</h1>\n<p>If you plan to write a <a href="https://freecodecamp.github.io/wiki/docs/How-To-Create-A-Pull-Request-for-Free-Code-Camp">Pull Request for Free Code Camp</a>, you will almost certainly need a local copy of the site. Having a local copy of the site will give you additional capability with Git that are not available via the GitHub browser interface, including updating your fork and rebasing/squashing commits.</p>\n<p>This guide will cover how to fork the FCC project, clone a local copy, and how to maintain your fork. All Git commands will be given for the command line, which we strongly recommend that you use, but most commands can be executed in a graphical Git environment as well.</p>\n<h3>Need Help?</h3>\n<p>Free Code Camp Issue Mods and staff are on hand to assist with Pull Request related issues on our <a href="https://gitter.im/FreeCodeCamp/HelpContributors">Help Contributors Chat Room</a></p>\n<h1>Initial Setup</h1>\n<h3>Setting Up your System</h3>\n<ol>\n<li>Install <a href="https://git-scm.com/">Git</a> or your favorite Git client</li>\n<li>(Optional) <a href="https://help.github.com/articles/generating-ssh-keys/">Setup an SSH Key</a> for Github.<br>\nUsing SSH can greatly speed up your interactions with GitHub, since you will not be prompted for your password.</li>\n<li>Create a parent projects directory on your system.  For the purposes of this document we will assume it is <code>/mean/</code></li>\n</ol>\n<h3>Forking Free Code Camp</h3>\n<ol>\n<li>Navigate to the top level Free Code Camp repository:<br>\n<a href="https://github.com/FreeCodeCamp/freecodecamp">https://github.com/FreeCodeCamp/freecodecamp</a></li>\n<li>Click the “Fork” Button in the upper right hand corner of the interface. <a href="https://help.github.com/articles/fork-a-repo/">More Details Here</a>.</li>\n<li>After the project is forked, you will be taken to your copy of the FCC repo at <code>username/freecodecamp</code></li>\n</ol>\n<h3>Cloning Your Fork</h3>\n<ol>\n<li>From your fork of FCC, copy the HTTPS or SSH (if you installed SSH Keys) clone URL</li>\n<li>Open a Bash Shell/Command Line/Terminal to your projects directory (IE: <code>/mean/</code>)</li>\n<li>Clone your fork of git:<br>\n<code>git clone https://github.com/yourUserName/FreeCodeCamp.git</code><br>\nThis will download the entire FCC repo to your projects directory.</li>\n</ol>\n<pre><code>    $ git clone <span class="hljs-string">https:</span><span class="hljs-comment">//github.com/yourUserName/FreeCodeCamp.git</span>\n    Cloning into <span class="hljs-string">\'FreeCodeCamp\'</span>...\n<span class="hljs-label">    remote:</span> Counting <span class="hljs-string">objects:</span> <span class="hljs-number">37294</span>, done.\n<span class="hljs-label">    remote:</span> Compressing <span class="hljs-string">objects:</span> <span class="hljs-number">100</span>% (<span class="hljs-number">13</span>/<span class="hljs-number">13</span>), done.\n<span class="hljs-label">    remote:</span> Total <span class="hljs-number">37294</span> (delta <span class="hljs-number">5</span>), reused <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>), pack-reused <span class="hljs-number">37281</span>\n    Receiving <span class="hljs-string">objects:</span> <span class="hljs-number">100</span>% (<span class="hljs-number">37294</span><span class="hljs-regexp">/37294), 18.69 MiB | 3.99 MiB/</span>s, done.\n    Resolving <span class="hljs-string">deltas:</span> <span class="hljs-number">100</span>% (<span class="hljs-number">26053</span>/<span class="hljs-number">26053</span>), done.\n    Checking connectivity... done.\n    Checking out <span class="hljs-string">files:</span> <span class="hljs-number">100</span>% (<span class="hljs-number">573</span>/<span class="hljs-number">573</span>), done.\n</code></pre>\n<h3>Setting up your Upstream</h3>\n<ol>\n<li>Change directory to the new <code>FreeCodeCamp</code> directory</li>\n<li>Add a remote to the official FCC repo:<br>\n<code>git remote add upstream https://github.com/FreeCodeCamp/FreeCodeCamp.git</code></li>\n</ol>\n<p>Congradulations, you now have a local copy of the FCC repo!</p>\n<h1>Maintaining your Fork</h1>\n<p>Now that you have a copy of your fork, there is work you will need to do to keep it current.</p>\n<h3>Rebasing from Upstream</h3>\n<p>Do this every time prior to creating a branch for a PR:</p>\n<ol>\n<li>Make sure you are in the <code>staging</code> branch</li>\n</ol>\n<pre><code>$ git status\n<span class="hljs-keyword">On</span> branch staging\nYour branch <span class="hljs-keyword">is</span> up-<span class="hljs-keyword">to</span>-<span class="hljs-built_in">date</span> <span class="hljs-keyword">with</span> <span class="hljs-comment">\'origin/staging\'.</span>\n</code></pre>\n<ol>\n<li>If you are not on staging, resolve any outstanding files/commits and checkout staging<br>\n<code>git checkout staging</code></li>\n<li>Do a pull with rebase against <code>upstream</code><br>\n<code>git pull --rebase upstream staging</code><br>\nThis will pull down all of the changes on the official staging without making an additional commit in your local repo.</li>\n<li>(Optional) Force push your updated staging to your GitHub fork<br>\n<code>git push origin staging --force</code>\nThis will overwrite the staging branch on your fork.</li>\n</ol>\n<pre><code>$ git push origin staging --force\nCounting objects: <span class="hljs-number">99</span>, done.\nDelta compression <span class="hljs-keyword">using</span> up to <span class="hljs-number">12</span> threads.\nCompressing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">38</span>/<span class="hljs-number">38</span>), done.\nWriting objects: <span class="hljs-number">100</span>% (<span class="hljs-number">38</span>/<span class="hljs-number">38</span>), <span class="hljs-number">16.14</span> KiB | <span class="hljs-number">0</span> bytes/s, done.\nTotal <span class="hljs-number">38</span> (delta <span class="hljs-number">25</span>), reused <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>)\nTo git@github.com:yourUserName/FreeCodeCamp.git\n   f7a525c.<span class="hljs-number">.8</span>a2271d  staging -&gt; staging\n</code></pre>\n'}},function(e,n){e.exports={title:"How to Get Help on Gitter",order:5,body:'<p>Sorry that you are stuck. Luckily there are many campers who hang out on Gitter and can help you resolve most issues! Follow these simple steps to get help fast:</p>\n<ol>\n<li>Go to the <a href="https://gitter.im/FreeCodeCamp/Help">Help Room</a></li>\n</ol>\n<ul>\n<li>If the problem is code related, paste the problematic code in the chat room with the <a href="https://freecodecamp.github.io/wiki/docs/code-formatting">Proper Formatting</a> and a description of the issue.</li>\n<li>If the problem seems to be with the site itself, post a screenshot of the issue or describe it well.</li>\n</ul>\n<ol start="2">\n<li>\n<p>Remember that the people there are campers just like you, so be courteous!</p>\n</li>\n<li>\n<p>If your problem has baffled everyone in Gitter, try <a href="https://freecodecamp.github.io/wiki/docs/Searching-for-Your-Issue-on-Github">Searching for Your Issue on Github</a> for anyone who has posted about a similar issue.</p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"How to add Free Code Camp to my LinkedIn profile",order:5,body:'<p>LinkedIn recognizes Free Code Camp as a university.</p>\n<p>You can explore our alumni activity <a href="https://www.linkedin.com/edu/school?id=166029">here</a>.</p>\n<p>You should add Free Code Camp to your LinkedIn profile. Here’s how:</p>\n<ul>\n<li>Follow this link: <a href="https://www.linkedin.com/profile/edit-education?school=Free+Code+Camp">https://www.linkedin.com/profile/edit-education?school=Free+Code+Camp</a></li>\n<li>Follow these instructions:<img src="https://www.evernote.com/l/AHRnpH-PN-JPQa9_u8FSOzejNG-tX40h1fkB/image.png" alt=""></li>\n</ul>\n<p>Once you complete our curriculum (or complete at least one Nonprofit Project and then get a coding job), we will issue you an official Full Stack Web Development certificate that you can also add to your LinkedIn profile.</p>\n'}},function(e,n){e.exports={title:"How to best use the Global Control Shortcuts for Mac",order:5,body:'<p>These Global Control Shortcuts for Mac will save you hours by speeding up your typing.</p>\n<p><a href="https://player.vimeo.com/video/107073108">https://player.vimeo.com/video/107073108</a></p>\n<p>These global shortcuts work everywhere on a Mac:</p>\n<ul>\n<li>Control + F = Forward</li>\n<li>Control + B = Backward</li>\n<li>Control + N = Next Line</li>\n<li>Control + P = Previous Line</li>\n<li>Control + H = Backspace</li>\n<li>Control + D = Delete</li>\n<li>Control + A = Beginning of Line</li>\n<li>Control + E = End of Line</li>\n<li>Control + K = Kill line</li>\n</ul>\n'}},function(e,n){e.exports={title:"How to clear specific values from your browser's local storage",order:5,body:'<p>Removing specific values from your browser’s local storage will solve many problems related to the browser crashing or freezing on FreeCodeCamp.</p>\n<p>This solves, as example, a common problem with browser hanging out in a challenge’s page after saving a response with an infinite loop.</p>\n<p>When this happens, you must delete the value in <code>localStorage</code> storing that response.</p>\n<p>In Chrome:</p>\n<ul>\n<li>On <strong><a href="http://freecodecamp.com">freecodecamp.com</a></strong>, open your developer tools.\n<ul>\n<li>More tools &gt; Developer tools (or <code>Ctrl</code> + <code>Shift</code> + <code>I</code> (Windows), <code>Cmd</code> + <code>Opt</code> + <code>I</code> (Mac))</li>\n</ul>\n</li>\n<li>Navigate to the <code>Resources</code> tab</li>\n<li>Expand the <code>Local Storage</code> item in the left pane</li>\n<li>Select <code>http://www.freecodecamp.com</code></li>\n<li>Find the challenge you wish to delete data in the right pane\n<img src="http://i.imgur.com/O57tcuN.png" alt="Finding a key in localStorage Chrome Developer Tools"></li>\n<li>Right click the desired challenge and select <code>Delete</code></li>\n</ul>\n<p>In Firefox:</p>\n<ul>\n<li>On <strong><a href="http://freecodecamp.com">freecodecamp.com</a></strong>, open your web console with\n<ul>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>K</code></li>\n</ul>\n</li>\n<li>From there, using directly the console:\n<ul>\n<li>Type <code>console.log(localStorage);</code> and hit <code>Enter</code>.</li>\n<li>Click in <code>Storage</code> link.\n<img src="http://i.imgur.com/AsflWtv.png" alt="Print the localStorage Object from web console and show the Storage"></li>\n<li>The <strong>Storage</strong> panel will appear at right.</li>\n<li>Filter the results to find the bonfire, zipline or waypoint causing the problem.</li>\n<li>When located, mouse over it and click the <code>x</code> at right.\n<img src="http://i.imgur.com/3URr4jQ.png" alt="Click the x for deleting the value entry."></li>\n<li>Once removed, check if the problem was solved. Refresh or close and open the browser if necessary.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Note:</strong> This can also be done with the <a href="https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector">Storage Inspector</a>, but seems like Firefox hangs out when there are so many values.</p>\n'}},function(e,n){e.exports={title:"How to clone the FreeCodeCamp website on a Windows pc",order:5,body:'<h1>How to clone and setup the FreeCodeCamp website on a Windows pc</h1>\n<p>This list works with the FreeCodeCamp site and have been tested on this Angular tutorial <a href="https://docs.angularjs.org/tutorial">https://docs.angularjs.org/tutorial</a> as well. Setting up the dev environment on a Windows pc is easy although it will give a ton of errors first in the process. The important part is to correct these errors.</p>\n<h2>Toolchain</h2>\n<ol>\n<li>Git bash <a href="https://msysgit.github.io/">https://msysgit.github.io/</a></li>\n<li>Node.js <a href="https://nodejs.org/">https://nodejs.org/</a></li>\n<li>MongoDB <a href="https://www.mongodb.org/downloads">https://www.mongodb.org/downloads</a></li>\n<li>Python 2.7.10 <a href="https://www.python.org/downloads/release/python-2710/">https://www.python.org/downloads/release/python-2710/</a></li>\n</ol>\n<p>Install the 4 downloaded prerequsites. When installing Python and Node it is important to check\nthe option add to the path variable. The Node installer does that by default. It is optional to add Mongo to the path. Python should be installed in a subfolder in %programfiles%</p>\n<ol>\n<li>Open a command prompt with admin rights</li>\n<li>Verify that Node is in th path with node -v</li>\n<li>Verify that npm is in the path with npm -v</li>\n<li><code>npm install npm -g</code>\n<code>npm install bower -g</code><br>\n<code>npm install gulp -g</code>\n<code>npm install node-gyp -g</code>\n<code>npm install babel -g</code></li>\n<li>If you want to spare the time in explorer finding Mongo when it has to be started create a .cmd file on your desktop and write the path to Mongo. Probably  %programfiles%\\MongoDB\\Server\\3.0\\bin\\mongod.exe.</li>\n<li>Create the default folder for mongo to store databases: C:\\data\\db</li>\n</ol>\n<p><strong>Every command from now on has to be executed from Git Bash. npm install and bower install is downloading components from Git repos and MUST have access to the Git commands</strong></p>\n<ol>\n<li>Follow the instructions here <a href="https://github.com/FreeCodeCamp/freecodecamp">https://github.com/FreeCodeCamp/freecodecamp</a> and clone the project.</li>\n<li>Run <code>npm install</code> This will produce some warnings and maybe some errors. The warnings and some of the errors can be disregarded. Stackoverflow has large\nresources to solve the errors if they still come up the 2. time you run npm install.</li>\n<li>Run <code>bower install</code>, <code>npm install</code> again and <code>bower install</code>again</li>\n<li>Start mongo from the desktop shortcut and run <code>node seed</code>. You should now see a lot of activity in the window where you started mongo.</li>\n<li>Run <code>gulp</code> and note what port it starts the site on. (Should be 3000) Open localhost:3000 (or whatever port it started)</li>\n</ol>\n<p><strong>you’re good to go</strong></p>\n'}},function(e,n){e.exports={title:"How to create a Campsite for your city",order:5,body:'<p>If you didn’t see your city on <a href="https://freecodecamp.github.io/wiki/docs/List-of-Free-Code-Camp-city-based-Campsites">our list of Campsites</a>, you should create your own Facebook group for your city.</p>\n<p>Please follow these steps:</p>\n<ul>\n<li>Sign in to Facebook.</li>\n<li>Click the down arrow in the upper right corner of the screen, then choose “Create Group” from the options.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/d01bb2bc-6260-4987-bedf-b2ce4c31972f/3eecbcff3109036cf90b69589360f407/deep/0/Facebook.png" alt="A screenshot of Facebook showing the drop down menu that appears when you click the down arrow, with an arrow pointing to the &amp;quot;Create Group&amp;quot; option"></p>\n<ul>\n<li>Set the group name as “Free Code Camp” plus the proper name of your city. Avoid using slang terms such as “Philly” for “Philadelphia”. If your city is not the biggest city that uses its name, also include the state or province. For example, the Free Code Camp group in Paris, France should be called “Free Code Camp Paris”. The Free Code Camp group in Paris, Texas should be called “Free Code Camp Paris, Texas”.</li>\n<li>Set your group to public.</li>\n<li>You’ll need to add at least one friend from your city to this group in order to create the group.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/4ed3197c-db1b-4103-a040-b42482ad232a/6c34948ebe12c57f0b7a54d7b2222ab3/deep/0/Facebook.png" alt="A screenshot of the Facebook group creation modal saying that your group name should be Free Code Camp plus your city name, that your group should be public, and that you need to invite at least one Facebook friend."></p>\n<ul>\n<li>Choose the graduation cap icon to indicate that this group is related to a school.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/00e461b3-e0a8-4ecd-9cbf-8b0ae9de75d1/59c4e9f25672b1b2ca2d7e6b06d55e0b/deep/0/Facebook.png" alt="a screenshot telling you to choose the graduation icon, which is on the forth row of icons, seven icons from the left."></p>\n<ul>\n<li>Click the “…” menu, then click “Edit group settings” in the dropdown menu.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/ae9a22e2-19a5-4309-b46c-f05a6be5644c/0870b25572d37d4d650cca1a0d59e407/deep/0/Free-Code-Camp-Testland.png" alt="a screenshot telling you to click the &amp;quot;...&amp;quot; button then choose the &amp;quot;Edit group settings&amp;quot; option"></p>\n<ul>\n<li>Set the group’s privacy setting to public.</li>\n<li>Set your group’s membership approval to where any member can add or approve members ![a screenshot showing the Facebook settings panel and where you can click to set the group to public and allow all members to be able to add or approve members&gt;</li>\n<li>Click the “Customize Address” button.</li>\n</ul>\n<p><img src="https://www.evernote.com/l/AHTs6Ec_hylKyYWVhpZonOHPn8j8I5ydgv4B/image.png" alt="A screen shot showing you the group description box on the Facebook page."></p>\n<ul>\n<li>Enter &quot;<a href="http://free.code.camp.your.city.name">free.code.camp.your.city.name</a>&quot; with each word separated by periods.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/357b1bd9-7c40-4f72-8a9a-d918e632a5e8/c4714ca59360b2517dfffe90c60b1556/deep/0/Free-Code-Camp-Testland.png" alt="a screenshot telling you to enter free.code.camp.your.city.name with each word seperated by periods."></p>\n<ul>\n<li>Please feel free to personalize your city’s group description, but be sure to include a link to Free Code Camp: &quot;<a href="http://www.freecodecamp.com">http://www.freecodecamp.com</a>&quot;.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/e13808ea-f084-46f1-95bc-63db524383d5/0586484d44360e73e9acda956dad7f6a/deep/0/Free-Code-Camp-Testland.png" alt="A screen shot showing you the group description box on the Facebook page."></p>\n<ul>\n<li>Click the &quot;Upload a photo button. To start out, you’ll probably just want to use Free Code Camp’s banner (download it <a href="https://s3.amazonaws.com/freecodecamp/wide-social-banner.png">here</a>), or a scenic shot of your city. Later you can update this with a picture from one of your city’s Free Code Camp events.</li>\n</ul>\n<p><img src="https://www.evernote.com/shard/s116/sh/fabe226a-5a26-4508-b015-1dac35192a21/37f8119dc57845a31e972217714b038b/deep/0/Free-Code-Camp-Testland.png" alt="A screenshot showing the &amp;quot;Upload a photo&amp;quot; button."></p>\n<ul>\n<li><a href="https://gitter.im/QuincyLarson">message @quincylarson in Gitter</a> with a link to your city’s group page. He’ll include it on this list.</li>\n<li>Join our <a href="https://www.facebook.com/groups/freecodecampers/">Local Leaders Facebook group</a>, where we share ideas about involving campers in your city.</li>\n</ul>\n<p>If you don’t have a Facebook account, we strongly recommend you create one, even if it’s just for the purpose of coordinating with campers in your city through this group.</p>\n'}},function(e,n){e.exports={title:"How to deploy a website without writing any code at all",order:5,body:'<p>It’s possible to build dynamic, mobile-responsive websites without writing any code at all, in just a few minutes.</p>\n<p><a href="https://player.vimeo.com/video/115194017">https://player.vimeo.com/video/115194017</a></p>\n<p>Here are the technologies we used here:</p>\n<ul>\n<li><a href="http://www.atom.io/">atom.io</a> a free code editor</li>\n<li><a href="http://www.startbootstrap.com/">startbootstrap.com</a> a collection of free responsive (Bootstrap) templates</li>\n<li><a href="http://www.powr.io/">powr.io</a> a collection of free JavaScript plugins</li>\n<li><a href="http://www.bitballoon.com/">bitballoon.com</a> a tool for drag and drop website deployment</li>\n</ul>\n<p>You will quickly reach the limits of what you can do without actually coding, but it’s nice to be able to rapidly build working prototype websites like this.</p>\n'}},function(e,n){e.exports={title:"How to get help when you get stuck",order:5,body:'<p>When you get stuck, remember: Read-Search-Ask.</p>\n<ol>\n<li><strong>Read</strong> the documentation or error</li>\n<li><strong>Search</strong> Google</li>\n<li><strong>Ask</strong> your friends for help</li>\n</ol>\n<p>This is the most time-efficient way to handle being stuck, and it’s the most respectful of other people’s time, too.</p>\n<p>Most of the time, you’ll solve your problem after just one or two steps of this algorithm.</p>\n<p>We have a special chat room just for getting help: <a href=\'https://gitter.im/freecodecamp/help/\' target=\'_blank\'>https://gitter.im/freecodecamp/help/</a></p>\n<p>Camper Bianca Mihai has also written a 3 article series on what she does when she gets stuck:</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(I)">How to start when you are stuck (I)</a></p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></p>\n<p>Learning to code is hard. But it’s a lot easier if you ask for help when you need it!</p>\n'}},function(e,n){e.exports={title:"How to get the MEAN stack running locally on OSX",order:5,body:'<h2>Requirements</h2>\n<p>To install MongoDB, you should have Mac OS X 10.6 (Snow Leopard) or above. To find out which version of OS X you own, click the  icon in the top left corner of your screen and select <code>About This Mac</code>.</p>\n<p>:warning: <strong>WARNING:</strong> do a Time Machine backup before carrying out any of the following steps!</p>\n<h2>Step 1: installing MongoDB</h2>\n<p>The easiest way to install MongoDB on OS X is using <a href="http://brew.sh/">HomeBrew</a>. If you haven’t used HomeBrew before, simply execute the following command in a Terminal window:</p>\n<pre><code class="language-sh">ruby <span class="hljs-operator">-e</span> <span class="hljs-string">"<span class="hljs-variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span>\n</code></pre>\n<p>After HomeBrew is successfully installed, follow up with this command:</p>\n<pre><code class="language-sh">brew update &amp;&amp; brew install mongodb\n</code></pre>\n<p>HomeBrew will automatically install all the dependencies for you.</p>\n<h2>Step 2: installing Node.js</h2>\n<p>Again, we’ll let HomeBrew do the heavy lifting:</p>\n<pre><code class="language-sh">brew install node\n</code></pre>\n<p>The npm executable is already included in the Node.js package.</p>\n<p>Before continuing, let’s make sure Node.js modules can be found by others (:warning: <strong>CAUTION</strong>: it’s best to copy and paste these commands, as you’d lose the original contents of your <code>.bashrc</code> file if you typed <code>&gt;</code> in place of <code>&gt;&gt;</code>):</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">\'export NODE_PATH="./node_modules:/usr/local/lib/node_modules"\'</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="hljs-built_in">source</span> ~/.bashrc\n</code></pre>\n<p>To check if the configuration is in effect, execute:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$NODE_PATH</span>\n</code></pre>\n<p>You should see <code>./node_modules:/usr/local/lib/node_modules</code> printed out below your command.</p>\n<p>If you use a different shell than Bash, simply replace <code>~/.bashrc</code> with your shell configuration file.</p>\n<h2>Step 3: installing fullstack tools</h2>\n<pre><code class="language-sh">npm install -g express yo grunt grunt-cli generator-angular-fullstack bower\n</code></pre>\n<h2>Step 4: generating a fullstack app</h2>\n<p>Make a directory for your Basejump projects. Assuming your desktop is your de facto workspace:</p>\n<pre><code class="language-sh">mkdir ~/Desktop/basejumps &amp;&amp; <span class="hljs-built_in">cd</span> ~/Desktop/basejumps\n</code></pre>\n<p>Now that all the preparations are in place, it’s time for the main event:</p>\n<pre><code class="language-sh">yo angular-fullstack\n</code></pre>\n<p>Answer the questions according to checklist items #13-23 of <a href="http://www.freecodecamp.com/challenges/waypoint-get-set-for-basejumps">Waypoint: Get Set for Basejumps</a>. Consult #24-27 if you run into errors. This will download ~350MB worth of files into your current directory.</p>\n<p>Before going any further, we need to fix a <a href="https://github.com/clnhll/guidetobasejumps#fixing-exportsupdate">known issue</a> in some generated files:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">"sed -i \'\' -e \'s/_.merge/_.extend/\' server/api/*/*.controller.js"</span> &gt; \\\nfix-exports-update.sh &amp;&amp; chmod +x fix-exports-update.sh &amp;&amp; \\\n./fix-exports-update.sh\n</code></pre>\n<p>You need to run <code>./fix-exports-update.sh</code> every time you generate a new API endpoint (until they fix this upstream, that is).</p>\n<h2>Step 5: initialising local Git repository</h2>\n<p>Tell Git not to track your database:</p>\n<pre><code class="language-sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">"data"</span> &gt;&gt; .gitignore\n</code></pre>\n<p>Turn the directory in which your application is located into a Git repository by running the following commands:</p>\n<pre><code class="language-sh">git init &amp;&amp; git add . &amp;&amp; git commit -am <span class="hljs-string">\'initial commit\'</span>\n</code></pre>\n<h2>Step 6: starting MongoDB</h2>\n<p>To start MongoDB for the first time in your app’s directory, run the following commands in your terminal:</p>\n<pre><code class="language-sh">mkdir data &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">\'mongod --config /usr/local/etc/mongod.conf --dbpath=data --rest "$@" --httpinterface\'</span> &gt; mongod.sh &amp;&amp; chmod a+x mongod.sh &amp;&amp; ./mongod.sh\n</code></pre>\n<p>From this point on you can simply start MongoDB by executing <code>./mongod.sh</code>. A few things to note:</p>\n<ul>\n<li>The <code>.conf</code> file directs <code>mongod</code> to write messages to a log file instead of stdout. To view the log, run the following in a separate Terminal tab: <code>less /usr/local/var/log/mongodb/mongo.log</code>.</li>\n<li>Since we’re not on Cloud9, we don’t need the <code>--nojournal</code> option. Journaling lets you recover the database in case of a <code>mongod</code> crash.</li>\n<li>You have to make a clean database for each project. If you copied the <code>data</code> directory over from an earlier project, <code>mongod</code> will fail to start. If that’s the case, just <code>rm -rf data &amp;&amp; mkdir data &amp;&amp; ./mongod.sh</code>.</li>\n</ul>\n<h2>Step 7: starting Grunt</h2>\n<p>Open a new Terminal tab by pressing <code>⌘T</code>, and run the following command:</p>\n<pre><code class="language-sh">grunt serve\n</code></pre>\n<p>Grunt should automatically open your new Angular site’s index page as soon as it finishes starting up.</p>\n<p>Now you should be able to follow the rest of the Waypoint instructions to push to GitHub and Heroku. Just ignore the part about SSH key (#33-36) and replace <code>~/workspace</code> with your app directory’s path.</p>\n<hr>\n<h5>Footnote</h5>\n<p>The above steps were tested under the following configuration:</p>\n<ul>\n<li>OS X 10.10.5</li>\n<li>zsh 5.0.8 (x86_64-apple-darwin14.3.0)</li>\n<li>node v0.12.7</li>\n<li>npm 2.11.3</li>\n</ul>\n'}},function(e,n){e.exports={title:"How to install Screenhero",order:5,body:'<p><a href="http://links.screenhero.com/e/c/eyJlbWFpbF9pZCI6Ik1qQTNNem9XQkNJQ1pBQUNjd0FYQVZrVEdnRkxNamtfX0JWZEdGVEpSZkVCWlRwbFpXRTBNamM0WVMxaE56SmlMVEV4WlRRdE9HUXpZUzFpWXpVNE1HRTJNalkxTldNNk1UUTJNVEEyQUE9PSIsInBvc2l0aW9uIjowLCJocmVmIjoiaHR0cDovL2RsLnNjcmVlbmhlcm8uY29tL3NtYXJ0ZG93bmxvYWQvZklYQU1UUUJBTEtQQkhQTC9TY3JlZW5oZXJvLnppcD9zb3VyY2U9d2ViIn0=">Download for Mac</a></p>\n<p><a href="http://links.screenhero.com/e/c/eyJlbWFpbF9pZCI6Ik1qQTNNem9XQkNJQ1pBQUNjd0FYQVZrVEdnRkxNamtfX0JWZEdGVEpSZkVCWlRwbFpXRTBNamM0WVMxaE56SmlMVEV4WlRRdE9HUXpZUzFpWXpVNE1HRTJNalkxTldNNk1UUTJNVEEyQUE9PSIsInBvc2l0aW9uIjoxLCJocmVmIjoiaHR0cDovL2RsLnNjcmVlbmhlcm8uY29tL3NtYXJ0ZG93bmxvYWQvZklYQU1UUUJBTEtQQkhQTC9TY3JlZW5oZXJvLXNldHVwLmV4ZSJ9">Download for Windows</a></p>\n<p>You’ll use Screenhero to pair program on the Bonfires and Zipline challenges.</p>\n<p>Here are other alternatives to Screenhero as suggested by our fellow campers:</p>\n<ul>\n<li>TeamViewer (also works for Linux)</li>\n<li>Skype + ScreenLeap</li>\n<li><a href="http://Codeshare.io">Codeshare.io</a></li>\n<li><a href="http://Kobra.io">Kobra.io</a></li>\n<li>Google Hangouts</li>\n<li>jsbin</li>\n<li>Cloud 9</li>\n<li><a href="http://Appear.in">Appear.in</a></li>\n<li><a href="http://tmate.io">tmate</a> + some communication tool, e.g, Google Hangouts, Skype, <a href="http://appear.in">appear.in</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"How to know who is in charge of your Campsite on Facebook",order:5,body:'<p>Local communities are ever-changing, and there can be more than one Volunteer Community Manager for your city. To become an Admin in the Facebook group, follow the steps below.</p>\n<p>How to find out who is an Admin for your Campsite:</p>\n<ul>\n<li>First, click the Members tab below the cover photo. Then the click on the dropdown box that says “all members”**</li>\n</ul>\n<p><img src="http://i.imgur.com/qLx6kVZ.png?1" alt=""></p>\n<ul>\n<li>Next, use the drop down box to select “Admins”**</li>\n</ul>\n<p><img src="http://i.imgur.com/pfB2pDP.png?1" alt=""></p>\n<ul>\n<li>You should now be able to see who is designated as an Admin for your Campsite.</li>\n</ul>\n<p><img src="http://i.imgur.com/AwoYT01.png?1" alt=""></p>\n<p>Message this person to introduce yourself and let them know you’re interested in being an admin. After this, go schedule your first meetup.</p>\n'}},function(e,n){e.exports={title:"How to share your workspace selfie with FreeCodeCamp on instagram",order:5,body:'<h1>FreeCodecamp is on instagram! Here is how to take a workspace selfie and share it with us.</h1>\n<h2>Take a selfie of you at your workspace with Free Code Camp open.</h2>\n<p><img src="https://www.evernote.com/l/AkpdrY2nGrtBO69RoxdNq8rluri5K7B367YB/image.png" alt=""></p>\n<h2>Share it on Instagram, Twitter or Facebook with the hashtag #freecodecamp.</h2>\n<h2>Social media not your thing? No problem! Email your workspace selfie to <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a></h2>\n'}},function(e,n){e.exports={title:"How to start when you are stuck (I)",order:5,body:'<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></strong></p>\n<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n<p>You are a camper just like me, you get to an exercise and you get stuck … just like anyone else. You have no idea how to start, you stare at your editor and you think you must have a problem, surely you are not developer material … well you’re wrong!  Perhaps you are just like me? I’m a visual person, I like a drawing better than a text. Everytime the same problem put down in a schema makes more sense to me than if you gave me a text. So … what do I do when I have problems solving/understanding an exercise? I start to draw. After I have my drawing in place if I need more to translate it to code I can also write it in pseudocode. After that transposing it to code should not be very hard.</p>\n<h3>So what are this flowcharts (the drawings) and pseudocode?</h3>\n<p>During my first semester in college, we had a course about introduction to algorithms. This is where we first learned about this stuff. We learned that a good algorithm and good logical programing is developed using flowcharts and pseudocode.</p>\n<p>A <strong>flowchart</strong> represents your program flow from top to bottom. Each command is represented on this. Depending on the nature of the command there are different shapes you can use. A few of them that I mostly use (you can google more on this, google is your friend when you know what to google for) are:</p>\n<p><img src="http://biancamihai.github.io/img/flowchart-theory.png" alt=""></p>\n<p>More information about this you can find here <a href="https://en.wikipedia.org/wiki/Flowchart">https://en.wikipedia.org/wiki/Flowchart</a>.</p>\n<p><strong>Pseudocode</strong> is an informal language that helps developers write algorithms. It is a text-based design tool and it uses a human readable language. It’s a structured english text that describes an algorithm.</p>\n<p>Every bonfire in Free Code Camp curriculum can be solved using pseudocode and after that translated using javascript in a functional javascript code.</p>\n<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></strong></p>\n'
}},function(e,n){e.exports={title:"How to start when you are stuck (II)",order:5,body:'<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(I)">How to start when you are stuck (I)</a></strong></p>\n<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n<p>Let’s try an example. If we take a look at one of the Free Code Camp exercices, and let’s choose a more simple one: <a href="http://www.freecodecamp.com/challenges/bonfire-find-the-longest-word-in-a-string">find the longest word in a string</a>. We can start and draw a flowchart for it and write a first solution in pseudocode.</p>\n<p><img src="http://biancamihai.github.io/img/bonfire-1.png" alt=""></p>\n<p>So what does Free Code Camp want from us with this problem? Well it wants as to create a function that gets a string as a parameter and returns an integer. This integer should represent the length of the longest word in this string. Usually you can solve a problem on Free Code Camp by just looking at the <strong>More information</strong> text. In this case Free code camp is giving us some very good tips:</p>\n<pre><code>Return the length of the longest word in the provided sentence.\nYour response should be a number.\nRemember to use RSAP if you get stuck. Try to pair program. Write your own code.\nHere are some helpful links: String.split(), String.length\n</code></pre>\n<p>If we take a look at the Free Code Camp suggestions we’ll see that String.split() can be used to split a string into an array and String.length gives us the length of a string. This helps us think of an algorithm. What if we split the string into an array, we loop through it and using the length attribute we find out the length of the longest word. Hmm, doesn’t seem very complicated but how to start this? Well … take a look at the image below.</p>\n<p><img src="http://biancamihai.github.io/img/flowchart.png" alt=""></p>\n<p>If we follow the schema AND/OR the pseudocode, writing the function that gives us the length of the longest word in a string shouldn’t be very hard now … in any language … not just in javascript.</p>\n<p><img src="http://biancamihai.github.io/img/bonfire-2.png" alt=""></p>\n<p>Now that we have this first working version, we can try and rewrite it using a for loop. Or we can take a look at forEach and if we really want to go wild we can rewrite this using the functional programming way. So let’s challenge ourselves to write a “one line” solution for the problem.</p>\n<p>Searching through the MDN documentation you’ll find out that you can use the max function on arrays and that there is a map function that helps us change the current array. Hmm … that should should help us … right? Yes! the idea remains the same, you get a string, split it into an array and you return an integer but here is how:</p>\n<p><img src="http://biancamihai.github.io/img/bonfire-3.png" alt=""></p>\n<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(III)">How to start when you are stuck (III)</a></strong></p>\n'}},function(e,n){e.exports={title:"How to start when you are stuck (III)",order:5,body:'<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(I)">How to start when you are stuck (I)</a></strong></p>\n<p><strong><a href="https://freecodecamp.github.io/wiki/docs/How-to-start-when-you-are-stuck-(II)">How to start when you are stuck (II)</a></strong></p>\n<h3>Tips</h3>\n<ul>\n<li>Always look at your logs, keep your console open. You can spot errors faster this way. To open the console log on chrome: click right -&gt; inspect -&gt; console There are so many errors that come from typos and so much time lost that you can save just by developing this very simple habit</li>\n<li>Pair with other programmers as much as you can</li>\n<li>Read the documentation. You can install a very helpful <a href="https://chrome.google.com/webstore/detail/mdn-search/ffpifaemeofjmncjdbegmbpcdaemkeoc">MDN Chrome Extension</a> and use it as much and often as you need to</li>\n<li>Follow the help tips provided by Free Code Camp in the “More informations” section. The answer is there!</li>\n<li>Try to solve the problem in more than one way, always try to make it better, more readable, a lower complexity time, less memory</li>\n<li>If none of the above steps work, ask for help :)</li>\n</ul>\n<p><img src="http://biancamihai.github.io/img/console.png" alt=""></p>\n'}},function(e,n){e.exports={title:"How to use the Free Code Camp Wiki",order:1,body:'<p>The Free Code Camp wiki exists to provide clear answers to common questions about Free Code Camp, learning to code, and getting a coding job. Please feel free to add relevant content to the wiki. Just be sure to search for a topic and see if it already exists before starting a new page.</p>\n<p>Individual Wiki’s can be accessed from the main page, or from other linked Wiki pages.</p>\n<p>You can also access them from Gitter using Camperbot</p>\n<ul>\n<li>\n<h4><strong><code>help $topic</code></strong></h4>\n<p>find related materials to that topic, usually a page from the <a href="https://github.com/FreeCodeCamp/freecodecamp/wiki">wiki</a><br>\nexamples: <code>help css</code> <code>help bootstrap</code></p>\n</li>\n<li>\n<h4><code>topics</code></h4>\n<p>show the list of topics.</p>\n</li>\n<li>\n<h4><code>find $topic</code></h4>\n<p>this will search for entries that include <code>$topic</code> in the title. We’ll add fulltext search in<br>\nfuture.<br>\nexamples: <code>find wiki</code></p>\n</li>\n</ul>\n'}},function(e,n){e.exports={title:"How you can get to Inbox Zero with Gmail shortcuts",order:5,body:'<blockquote>\n<p>These Gmail Shortcuts will save you hours and help you get to Inbox Zero.</p>\n</blockquote>\n<p>See <a href="https://player.vimeo.com/video/115194016">https://player.vimeo.com/video/115194016</a></p>\n<h3>Gmail Shortcuts</h3>\n<p>| shortcut 	| description 	|\n|----------	|------------:	|\n| j        	|   move down 	|\n| k        	|     move up 	|\n| o        	|        open 	|\n| r        	|       reply 	|\n| a        	|   reply all 	|\n| f        	|     forward 	|\n| c        	|     compose 	|\n| x        	|      select 	|\n| e        	|     archive 	|\n| !        	|   mark spam 	|\n| z        	|        undo 	|\n| #       	|     *delete 	|</p>\n<p>* This may not work on some EU Mac keyboards where # is accessed with, <code>ALT + 3</code>. Workaround <a href="http://toodlepip.co.uk/2010/blog-2010-09-gmail-delete-key-shortcut-uk-apple-users/">here</a>.</p>\n'}},function(e,n){e.exports={title:"How you can help to stimulate your city's Campsite on Facebook",order:5,body:"<h2>A great way to stimulate your Campsite is by asking questions.</h2>\n<p><strong>You can ask questions like</strong></p>\n<ul>\n<li>What is everyone working on this week?</li>\n<li>How did you approach a specific waypoint, bonfire, zipline, basejump?</li>\n<li>Would anyone be interested in meeting up to pair program together this week?</li>\n<li>Did everyone hear about “insert recent announcement”</li>\n<li>What are some parts of free code camp you’d like to give additional focus to?</li>\n</ul>\n<p><strong>You can also provide useful links for other members to relevant resources that you find helpful.</strong></p>\n"}},function(e,n){e.exports={title:"How you can reach the Free Code Camp team to interview them for your publication",order:5,body:'<p>We’re happy to do a quick interview for your publication or show. Here’s whom you should contact about what, and how to best reach them:</p>\n<ul>\n<li>Want to talk to about Free Code Camp’s curriculum or long-term vision? Reach out to Quincy Larson. He’s <a href="https://twitter.com/ossia">@ossia on Twitter</a></a> and @quincylarson on Gitter.</li>\n<li>Want to talk about Free Code Camp’s open source codebase, infrastructure, or JavaScript in general? Talk to Berkeley Martinez. He’s <a href="https://twitter.com/berkeleytrue">@berkeleytrue on Twitter</a> and @berkeleytrue on Gitter.</li>\n<li>Want to explore our efforts to empower nonprofits with code? Michael D. Johnson eats, sleeps and breathes that. He’s <a href="https://twitter.com/figitalboy">@figitalboy on Twitter</a> and @codenonprofit on Gitter.</li>\n<li>Want to get a camper’s perspective on our community? Talk with Bianca Mihai. She’s <a href="https://twitter.com/bubuslubu">@bubuslubu on Twitter</a> and @biancamihai on Gitter. Or you can talk with Suzanne Atkinson. She’s <a href="https://twitter.com/SteelCityCoach">@steelcitycoach on Twitter</a> and @adventurebear on Gitter.</li>\n</ul>\n<p>We strive to be helpful and transparent in everything we do. We’ll do what we can to help you share our community with your audience.</p>\n'}},function(e,n){e.exports={title:"Html and CSS Cheat Sheet",order:5,body:'<h1>This a page that (hopefully) in time will grow to cover the basic and simple HTML and CSS solutions.</h1>\n<h3>Please add to your alternate solutions if you know a different way.</h3>\n<h2><hr> making a <code>&lt;hr&gt;</code> horizontal rule smaller</h2>\n<pre><code>hr {\n  width: 75%;\n  margin-left: auto;\n  margin-right: auto;\n}\n</code></pre>\n<hr>\n### Giving a `<div>` non scrolling background \n<pre><code>#divName {\n  padding-top: 50px;\n  height: 500px;\n  color: #fff;\n  background-image: url(&quot;your_url.jpg&quot;);\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: 100%;\n}\n</code></pre>\n<p>try different values to see the how it affects the div<br>\nand over in the html<br>\n<code>&lt;div id=&quot;divName&quot; class=&quot;container-fluid&quot;&gt;</code></p>\n<hr>\n### Center a horizontal list\n<p><a href="http://csswizardry.com/2011/01/create-a-centred-horizontal-navigation/">http://csswizardry.com/2011/01/create-a-centred-horizontal-navigation/</a></p>\n<hr>'}},function(e,n){e.exports={title:"IIFE",order:5,body:'<blockquote>\n<p>IIFE — initialism for Immediately Invoked Function Expression</p>\n</blockquote>\n<p>Keep your data inside the <a href="https://freecodecamp.github.io/wiki/docs/js-closures">closure</a>!</p>\n<pre><code class="language-js">(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-comment">//add your magic here</span>\n})();\n</code></pre>\n'}},function(e,n){e.exports={title:"If Free Code Camp is free, how does it make money",order:5,body:"<p>We will always be completely free for both students and for nonprofits.</p>\n<p>Our name is Free Code Camp. We are a free code camp. If you had to pay us (or sign over future earnings), we’d have to change our name. And we are not going to do that.</p>\n<p>Everyone working on our community and our open source projects is a volunteer.</p>\n<p>We plan to eventually cover our operational costs by earning job placement bonuses from companies who hire our graduates. Note that we will not actually garnish any wages from our graduates - employers are already paying recruiters thousands of dollars to find successful candidates. Employers will simply pay the recruitment bonus to Free Code Camp instead of paying a recruiter.</p>\n"}},function(e,n){e.exports={title:"Intro to Yeoman Angular Fullstack Basejumps",order:5,body:'<blockquote>\n<p>Hey FreeCodeCampers! This guide is here to help you navigate creating your first basejump. When I encountered the first basejump, I had no idea what was going on and spent weeks learning all of these things myself. Everything here is stuff I wish I had known coming into the basejumps. Oh and by the way, if you have a question that isn’t answered by this guide, that’s an issue, and you should report it as an issue to this repository! —<a href="http://twitter.com/clnhll">@clnhll</a></p>\n</blockquote>\n<p>Yeoman is a tool that allows you to generate barebones apps based on different software stacks using “generator” packages made by developers who want to make your life easier. These packages streamline your time developing and deploying websites using your platform of choice. We’re using a full-stack MEAN (MongoDB, ExpressJS, AngularJS, NodeJS) generator called generator-angular-fullstack by DaftMonk (<a href="https://github.com/DaftMonk/generator-angular-fullstack">https://github.com/DaftMonk/generator-angular-fullstack</a>).</p>\n<p>Once you’ve completed the Waypoint: Get Set for Basejumps, use this guide to navigate the base structure of your new app and learn how to interact with the database as well as the user.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Guide-to-Basejumps-Table-of-Contents">NEXT</a></p>\n<p>Sourced from (<a href="https://github.com/clnhll/guidetobasejumps">https://github.com/clnhll/guidetobasejumps</a>) with permission.</p>\n'}},function(e,n){e.exports={title:"JS Regex Resources",order:5,body:'<blockquote>\n<p>Links to useful RegEx resources.</p>\n</blockquote>\n<ul>\n<li><strong>Getting Started Tutorial:</strong> <a href="http://regexone.com">http://regexone.com</a> (FCC recommended)</li>\n<li><strong>RegEx 101:</strong> <a href="https://regex101.com">https://regex101.com</a></li>\n</ul>\n<p>See also: :clipboard: <a href="https://freecodecamp.github.io/wiki/docs/JS-Regex-Resources#regex-tutorial--guides"><strong>Tutorials</strong></a> | :syringe: <a href="https://freecodecamp.github.io/wiki/docs/JS-Regex-Resources#regex-testing-ground"><strong>Testing</strong></a> | :soccer: <a href="https://freecodecamp.github.io/wiki/docs/JS-Regex-Resources#regex-gameplay">Games</a> | :newspaper: <a href="https://freecodecamp.github.io/wiki/docs/JS-Regex-Resources#regex-blog">Blogs</a> | :package: <a href="https://freecodecamp.github.io/wiki/docs/JS-Regex-Resources#regex-software-aids">Software</a></p>\n<h2>RegEx Tutorial &amp; Guides</h2>\n<ul>\n<li><strong>RegEx Tutorial:</strong> <a href="http://www.regular-expressions.info/tutorial.html">http://www.regular-expressions.info/tutorial.html</a> (detailed explanation)</li>\n<li><strong>RegEx Cheatsheet:</strong> <a href="http://www.cheatography.com/davechild/cheat-sheets/regular-expressions">http://www.cheatography.com/davechild/cheat-sheets/regular-expressions</a></li>\n<li><strong>MDN RegEx Guide:</strong> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions</a></li>\n<li><strong>StackOverflow RegEx FAQ:</strong> <a href="http://stackoverflow.com/a/22944075/1262108">http://stackoverflow.com/a/22944075/1262108</a></li>\n<li><strong>RegEx Video Tutorial:</strong> <a href="https://www.youtube.com/watch?v=EkluES9Rvak">https://www.youtube.com/watch?v=EkluES9Rvak</a></li>\n</ul>\n<h2>RegEx Testing Ground</h2>\n<ul>\n<li><strong>RegEx Visualizer:</strong> <a href="https://www.debuggex.com/?flavor=javascript">https://www.debuggex.com/?flavor=javascript</a></li>\n<li><strong>RegEx Challenges in Hackerrank:</strong> <a href="https://www.hackerrank.com/domains/algorithms/regex">https://www.hackerrank.com/domains/algorithms/regex</a> (practice)</li>\n<li><strong>RegEx Regexplained:</strong> <a href="https://leaverou.github.io/regexplained/">https://leaverou.github.io/regexplained/</a></li>\n</ul>\n<h2>RegEx Gameplay</h2>\n<ul>\n<li><strong>RegEx Golf:</strong> <a href="http://regex.alf.nu">http://regex.alf.nu</a></li>\n<li><strong>RegEx Crossword:</strong> <a href="http://regexcrossword.com">http://regexcrossword.com</a></li>\n</ul>\n<h2>RegEx Blog</h2>\n<ul>\n<li><strong>Rex Egg:</strong> <a href="http://www.rexegg.com">http://www.rexegg.com</a></li>\n</ul>\n<h2>RegEx Software Aids</h2>\n<ul>\n<li><strong>RegExBuddy:</strong> <a href="http://www.regexbuddy.com">http://www.regexbuddy.com</a> (proprietary)</li>\n<li><strong>Expresso:</strong> <a href="http://www.ultrapico.com/expresso.htm">http://www.ultrapico.com/expresso.htm</a> (free)</li>\n<li><strong>RegEx Coach:</strong> <a href="http://www.weitz.de/regex-coach/">http://www.weitz.de/regex-coach/</a> (free)</li>\n</ul>\n'}},function(e,n){e.exports={title:"JS Resources",order:5,body:'<h3>Tutorials</h3>\n<ul>\n<li><a href="http://jsforcats.com/">JavaScript for Cats</a></li>\n<li><a href="https://github.com/DrBoolean/mostly-adequate-guide">Professor Frisby’s Mostly Adequate Guide to Functional Programming</a></li>\n<li><a href="http://www.eloquentjavascript.net">Eloquent Javascript</a> (<a href="https://watchandcode.com/courses/eloquent-javascript-the-annotated-version"><em>annotated</em></a>)</li>\n<li><a href="http://speakingjs.com/es5/">Speaking Javascript</a></li>\n<li><a href="http://exploringjs.com/es6/">Exploring ES6</a></li>\n<li><a href="https://www.youtube.com/watch?v=Bv_5Zv5c-Ts">Udemy - Javascript Understanding the Weird Parts (<em>first 3.5 hrs</em>)</a></li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href="http://devdocs.io">DevDocs</a></li>\n<li><a href="http://overapi.com/javascript/">OverAPI JavaScript Cheat Sheet</a></li>\n<li><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262</a></li>\n</ul>\n<p>Find javascript libraries at <a href="http://jster.net">http://jster.net</a></p>\n<p>See Also: :loop: <a href="https://freecodecamp.github.io/wiki/docs/js-resources#quick-js"><strong>Quick JS</strong></a> | :watch: <a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#challenges"><strong>Challenges</strong></a> | :wrench: <a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#exercises"><strong>Exercises</strong></a> | :clipboard: <a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#editors">Editors</a> | :newspaper: <a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#blogs">Blogs</a> | :books: <a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#books">Books</a></p>\n<h2><a href=""></a></h2>\n<h3>Quick JS</h3>\n<ul>\n<li><a href="https://repl.it/languages/Javascript">REPL</a> (<a href="https://repl.it/languages/iojs/"><em>node</em></a>)</li>\n<li><a href="http://jsbin.com">JSBin</a></li>\n<li><a href="http://codepen.io">CodePen</a></li>\n<li><a href="http://coderpad.io">CoderPad (<em>pair programming</em>)</a> (<a href="https://freecodecamp.github.io/wiki/docs/JS-Resources#coderpad-demo-access-forever"><em>Get Demo access forever</em></a> :smile: )</li>\n<li><a href="http://c9.io">C9 (<em>IDE</em>, <em>pair programming</em>)</a></li>\n<li><a href="http://www.objectplayground.com/">Object Playground (<em>visualize objects</em>)</a></li>\n<li><a href="http://plnkr.co">Plunker</a></li>\n</ul>\n<h3>Challenges</h3>\n<ul>\n<li><a href="http://codewars.com">Code Wars</a></li>\n<li><a href="https://hackerrank.com">Hacker Rank</a></li>\n<li><a href="http://codingame.com">Coding Game</a></li>\n</ul>\n<h3>Exercises</h3>\n<ul>\n<li><a href="https://codility.com/programmers/lessons/">Codility</a></li>\n<li><a href="http://coderbyte.com">Coderbyte</a></li>\n<li><a href="http://exercism.io">Exercism</a></li>\n</ul>\n<h3>Editors</h3>\n<ul>\n<li><a href="http://brackets.io">Brackets</a></li>\n<li><a href="http://atom.io">Atom</a></li>\n</ul>\n<h3>Blogs</h3>\n<ul>\n<li><a href="http://perfectionkills.com">Perfection Kills</a></li>\n<li><a href="http://www.2ality.com/">2ality</a></li>\n</ul>\n<h3>Books</h3>\n<ul>\n<li><a href="https://www.manning.com/books/secrets-of-the-javascript-ninja">Secrets of the JavaScript Ninja</a></li>\n<li><a href="http://ericleads.com/javascript-applications/">Programming JavaScript Applications</a></li>\n<li><a href="http://shop.oreilly.com/product/0636920025245.do">Maintainable JavaScript</a></li>\n<li><a href="http://addyosmani.com/resources/essentialjsdesignpatterns/book/">Learning JavaScript Design Patterns</a></li>\n<li><a href="https://github.com/airbnb/javascript">Airbnb JavaScript Style Guide</a></li>\n<li><a href="http://usejsdoc.org/">JSDoc</a></li>\n</ul>\n<hr>\n<h3>CoderPad Demo Access Forever</h3>\n<p><a href="http://i.imgur.com/PQQjg9k.gif"><img src="http://i.imgur.com/PQQjg9k.gif" alt=""></a></p>\n<ul>\n<li>\n<p><a href="http://www.eloquentjavascript.net">Eloquent Javascript</a><br>\nFantastic, thorough introduction to the basics and features of Javascript, complete with in-browser interactive code</p>\n</li>\n<li>\n<p><a href="https://watchandcode.com/courses/eloquent-javascript-the-annotated-version">Eloquent Javascript - The Annotated Version</a><br>\nAn annotated version of the above Eloquent Javascript with additional helpful comments and discussions to help clarify some sections that might be confusing to newcomers to programming</p>\n</li>\n</ul>\n<ul>\n<li><a href="https://github.com/DrBoolean/mostly-adequate-guide">Professor Frisby’s Mostly Adequate Guide to Functional Programming</a><br>\nQuite in-depth guide to Functional Programming in Javascript</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>Edit this page to add your own suggested reading here</em></p>\n</blockquote>\n'}},function(e,n){e.exports={title:"JavaScript Truth Table",order:5,body:'<p><img src="http://i.stack.imgur.com/35MpY.png" alt="A table showing which JavaScript arguments are true and false."></p>\n<p>This is why you should always use <code>===</code> and <code>!==</code>.</p>\n<p>Source: <a href="https://dorey.github.io/JavaScript-Equality-Table/">https://dorey.github.io/JavaScript-Equality-Table/</a></p>\n'}},function(e,n){e.exports={title:"Know it all",order:5,body:'<p><img src="http://i.imgur.com/cDz9HzV.jpg" alt="Know it all"></p>\n'}},function(e,n){e.exports={title:"Learn the basics of the VIM editor",order:5,body:"<p>Follow these steps to learn the basics of the powerful VIM command line text editor:</p>\n<ol>\n<li>Start Terminal on a Mac or Command Prompt on Windows.</li>\n<li>Type: vimtutor [ENTER].</li>\n<li>Press [ENTER] again and the VIM tutor is displayed.</li>\n<li>Complete the tutor by reading and following each of the 7 lessons.</li>\n</ol>\n"}},function(e,n){e.exports={title:"Linking Your Account with GitHub",order:5,body:'<p>In August 2015, we pushed some changes that caused trouble for many of our campers.</p>\n<p>If you are unable to link your GitHub account to your current account, here is what we recommend doing:</p>\n<ol>\n<li>Sign out with your current account and try signing in with GitHub.</li>\n<li>Check your challenge map. Your account should have no progress. Delete that account here: <a href="http://freecodecamp.com/account">http://freecodecamp.com/account</a></li>\n<li>Sign into Free Code Camp the way you normally do (Facebook, email, etc). You should see your original progress.</li>\n<li>Now add GitHub to that account, and you should be all set.</li>\n</ol>\n'}},function(e,n){e.exports={title:"List of Free Code Camp city based Campsites",order:5,body:'<p>If your city isn’t listed here, you should [[create a Campsite for your city|How-to-create-a-Campsite-for-your-city]].</p>\n<ul>\n<li>Albania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tirana/">Tirana</a></li>\n</ul>\n</li>\n<li>Algeria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Algiers/">Algiers</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mansoura/">Mansoura</a></li>\n</ul>\n</li>\n<li>Angola\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.luanda/">Luanda</a></li>\n</ul>\n</li>\n<li>Argentina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buenos.aires/">Buenos Aires</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cordoba/">Cordoba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.apucarana.parana/">Parana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.rosa/">Santa Rosa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ticino/">Ticino</a></li>\n</ul>\n</li>\n<li>Armenia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.armenia/">Yerevan</a></li>\n</ul>\n</li>\n<li>Australia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.adelaide/">Adelaide</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bellingham/">Bellingham</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brisbane/">Brisbane</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.canberra/">Canberra</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Gold.Coast/">Gold Coast</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hobart/">Hobart</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Melbourne/">Melbourne</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perth/">Perth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sydney.au/">Sydney</a></li>\n</ul>\n</li>\n<li>Austria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vienna.austria/">Vienna</a></li>\n</ul>\n</li>\n<li>Azerbaijan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baku/">Baku</a></li>\n</ul>\n</li>\n<li>Bangladesh\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ctg/">Chittagong</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dhaka/">Dhaka</a></li>\n</ul>\n</li>\n<li>Belarus\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Minsk/">Minsk</a></li>\n</ul>\n</li>\n<li>Belgium\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brussels/">Brussels</a></li>\n</ul>\n</li>\n<li>Belize\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belize.city/">Belize City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belize/">Belize</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Louisville">Louisville</a></li>\n</ul>\n</li>\n<li>Benin\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cotonou/">Cotonou</a></li>\n</ul>\n</li>\n<li>Bermuda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.george/">Saint George</a></li>\n</ul>\n</li>\n<li>Bolivia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.La.Paz/">La Paz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.SC/">Santa Cruz</a></li>\n</ul>\n</li>\n<li>Bosnia and Herzegovina\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.banja.luka/">Banja Luka</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bijeljina/">Bijeljina</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sarajevo">Sarajevo</a></li>\n</ul>\n</li>\n<li>Brazil\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.americana/">Americana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.apucarana.parana/">Apucarana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.aracaju/">Aracaju</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belem/">Belem</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belo.horizonte/">Belo Horizonte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.blumenau/">Blumenau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brasilia/">Brasilia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.campinas/">Campinas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caxias.do.sul/">Caxias Do Sul</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.curitiba/">Curitiba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.florianopolis/">Florianopolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.group.fortaleza/">Fortaleza</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goiania/">Goiania</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guarapuava/">Guarapuava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.paulo.jacarei/">Jacarei</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.joao.pessoa/">Joao Pessoa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.joinville/">Joinville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.londrina/">Londrina</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.natal">Natal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.olinda/">Olinda</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.porto.alegre.rs/">Porto Alegre</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.recife">Recife</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rio.de.janeiro/">Rio de Janeiro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salvador/">Salvador</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sao.paulo/">Sao Paulo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sorocaba.sp/">Sorocaba</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vitoria.e.regiao.metropolitana.es/">Vitória</a></li>\n</ul>\n</li>\n<li>Bulgaria\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sofia/">Sofia</a></li>\n</ul>\n</li>\n<li>Cambodia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.phnompenh.cambodia/">Phnom Penh</a></li>\n</ul>\n</li>\n<li>Cameroon\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yaounde">Yaounde</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.douala/">Douala</a></li>\n</ul>\n</li>\n<li>Canada\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Barrie.Ontario/">Barrie</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.calgary/">Calgary</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Cambridge.ON.Canada/">Cambridge, ON</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charlottetown/">Charlottetown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.edmonton/">Edmonton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.farmville.va/">Farmville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.halifax/">Halifax</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hazelton.britishcolumbia/">Hazelton, BC</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kingston.ontario/">Kingston, ON</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.london.on/">London, ON</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montreal/">Montreal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moosejaw/">Moose Jaw</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.westminster/">New Westminster</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ottawa/">Ottawa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sydney.ns/">Sydney, Nova Scotia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.to/">Toronto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vancouver.bc.canada/">Vancouver</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.winnipeg/">Winnipeg</a></li>\n</ul>\n</li>\n<li>Chile\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santiago/">Santiago</a></li>\n</ul>\n</li>\n<li>China\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.beijing/">Beijing</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Shanghai/">Shanghai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.shenzhen/">Shenzhen</a></li>\n</ul>\n</li>\n<li>Colombia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.barranquilla.co/">Barranquilla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bogota/">Bogota</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bucaramanga/">Bucaramanga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cali/">Cali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Medellin.col/">Medellin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pasto/">Pasto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quibdo/">Quibdo</a></li>\n</ul>\n</li>\n<li>Costa Rica\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.francisco">San Francisco</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.jose">San Jose</a></li>\n</ul>\n</li>\n<li>Croatia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zagreb/">Zagreb</a></li>\n</ul>\n</li>\n<li>Cuba\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.havana/">Havana</a></li>\n</ul>\n</li>\n<li>Cyprus\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.limassol/">Limassol</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nicosia/">Nicosia</a></li>\n</ul>\n</li>\n<li>Czech Republic\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brno/">Brno</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.prague/">Prague</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.znojmo/">Znojmo</a></li>\n</ul>\n</li>\n<li>Denmark\n<ul>\n<li><a href="https://www.facebook.com/groups/FreeCodeCampAarhus">Aarhus</a></li>\n</ul>\n</li>\n<li>Dominican Republic\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dr/">Santo Domingo</a></li>\n</ul>\n</li>\n<li>Ecuador\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cuenca/">Cuenca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quito/">Quito</a></li>\n</ul>\n</li>\n<li>Egypt\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almansoura/">Al Mansoura</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.alex/">Alexandria</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cairo/">Cairo</a></li>\n</ul>\n</li>\n<li>Estonia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tallinn/">Tallinn</a></li>\n</ul>\n</li>\n<li>Ethiopia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.addis.abeba/">Addis Ababa</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Nazareth.Israel/">Nazareth</a></li>\n</ul>\n</li>\n<li>Fiji\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.suva/">Suva</a></li>\n</ul>\n</li>\n<li>Finland\n<ul>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Tampere/">Tampere</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.helsinki/">Helsinki</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.turku/">Turku</a></li>\n</ul>\n</li>\n<li>France\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.grenoble/">Grenoble</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.macon/">Macon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montpellier/">Montpellier</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nantes/">Nantes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.paris/">Paris</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.poitiers/">Poitiers</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toulouse/">Toulouse</a></li>\n</ul>\n</li>\n<li>Germany\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berlin/">Berlin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frankfurt.main/">Frankfurt</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.goettingen/">Göttingen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamburg/">Hamburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.koblenz/">Koblenz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.koeln/">Koeln</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leipzig/">Leipzig</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.munich/">Munich</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cork.munster/">Munster</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stuttgart/">Stuttgart</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wuerzburg/">Wuerzburg</a></li>\n</ul>\n</li>\n<li>Ghana\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.accra/">Accra</a></li>\n</ul>\n</li>\n<li>Greece\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.athens.greece/">Athens</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.thessaloniki/">Thessaloniki</a></li>\n</ul>\n</li>\n<li>Guatemala\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guatemala/">Guatemala City</a></li>\n</ul>\n</li>\n<li>Honduras\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.barbara/">Santa Barbara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Honduras/">Tegucigalpa</a></li>\n</ul>\n</li>\n<li>Hong Kong\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hk/">Hong Kong</a></li>\n</ul>\n</li>\n<li>Hungary\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.budapest/">Budapest</a></li>\n</ul>\n</li>\n<li>Iceland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reykjavik/">Reykjavik</a></li>\n</ul>\n</li>\n<li>India\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ahmedabad/">Ahmedabad</a></li>\n<li><a href="https://www.facebook.com/groups/1622011571406263/">Aligarh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.allahabad/">Allahabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.itanagar.arunachalpradesh/">Arunachalpradesh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bali/">Bali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bengaluru/">Bengaluru</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhubaneswar/">Bhubaneswar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bikaner/">Bikaner</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chennai/">Chennai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coimbatore">Coimbatore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.delhi/">Delhi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dharwad/">Dharwad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guntur/">Guntur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gurgaon/">Gurgaon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Gwalior/">Gwalior</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hyderabad/">Hyderabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Indore/">Indore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.itanagar.arunachalpradesh/">Itanagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jaipur/">Jaipur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jalgaon/">Jalgaon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jamnagar.guj.in/">Jamnagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jamnagar.guj.in/">Jamnagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kolkata/">Kolkata</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kozhikode/">Kozhikode</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mangalore/">Mangalore</a></li>\n<li><a href="https://www.facebook.com/groups/frre.code.camp.mumbai/">Mumbai</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mysore/">Mysore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.nashik/">Nashik</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.noida/">Noida</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pondicherry/">Pondicherry</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pune/">Pune</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ranchi/">Ranchi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.srinagar/">Srinagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surat">Surat</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tirupur/">Tirupur</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecamp.trivandrum/">Trivandrum</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vizag/">Vizag</a></li>\n</ul>\n</li>\n<li>Indonesia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bandung/">Bandung</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jakarta/">Jakarta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.medan/">Medan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nusajaya.malaysia//">Nusajaya</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sidoarjo/">Sidoarjo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surabaya/">Surabaya</a></li>\n</ul>\n</li>\n<li>Iran\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.isfahan/">Isfahan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tehran/">Tehran</a></li>\n</ul>\n</li>\n<li>Ireland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dublin/">Dublin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.waterford/">Waterford</a></li>\n</ul>\n</li>\n<li>Israel\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Haifa/">Haifa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jerusalem/">Jerusalem</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tel.Aviv/">Tel Aviv</a></li>\n</ul>\n</li>\n<li>Italy\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.catania/">Catania</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.firenze/">Firenze</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lecce/">Lecce</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milan/">Milan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.napoli">Napoli</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pavia">Pavia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perugia.it/">Perugia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.roma/">Roma</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.torino/">Torino</a></li>\n</ul>\n</li>\n<li>Jamaica\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kingston.jamaica/">Kingston</a></li>\n</ul>\n</li>\n<li>Japan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sasebo/">Sasebo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tokyo/">Tokyo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tsukuba/">Tsukuba</a></li>\n</ul>\n</li>\n<li>Jordan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.amman/">Amman</a></li>\n</ul>\n</li>\n<li>Kazakhstan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.astana/">Astana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kulsary/">Kulsary</a></li>\n</ul>\n</li>\n<li>Kenya\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Kisumu/">Kisumu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nairobi/">Nairobi</a></li>\n</ul>\n</li>\n<li>Kosovo\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ferizaj/">Ferizaj</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pristina/">Pristina</a></li>\n</ul>\n</li>\n<li>Kuwait\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kuwait.city/">Kuwait City</a></li>\n</ul>\n</li>\n<li>Kyrgyzstan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bishkek/">Bishkek</a></li>\n</ul>\n</li>\n<li>Latvia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.perlis.malaysia">Perlis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.riga/">Riga</a></li>\n</ul>\n</li>\n<li>Lebanon\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.beirut/">Beirut</a></li>\n</ul>\n</li>\n<li>Liberia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Greenville/">Greenville</a></li>\n</ul>\n</li>\n<li>Lithuania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vilnius.lt/">Vilnius</a></li>\n</ul>\n</li>\n<li>Libya\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Tripoli.Libya/">Tripoli</a></li>\n</ul>\n</li>\n<li>Macedonia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.skopje/">Skopje</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.struga/">Struga</a></li>\n</ul>\n</li>\n<li>Malaysia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nusajaya.malaysia/">Johor</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.malaysia.kl/">Kuala Lumpur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.penang/">Penang</a></li>\n</ul>\n</li>\n<li>Maldives\n<ul>\n<li><a href="https://www.facebook.com/groups/freecodemv/">Male</a></li>\n</ul>\n</li>\n<li>Mexico\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.juarezchi/">Ciudad Juárez</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coatzacoalcos/">Coatzacoalcos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.culiacan/">Culiacan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.durango/">Durango</a></li>\n<li><a href="https://www.facebook.com/groups/fcc.guadalajara">Guadalajara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Hermosillo/">Hermosillo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mexico.df/">Mexico City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.monterrey/">Monterrey</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pueblaMX/">Puebla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tijuana/">Tijuana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tuxtla.gutierrez/">Tuxtla Gutierrez</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zacatecas/">Zacatecas</a></li>\n</ul>\n</li>\n<li>Moldova\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Chisinau/">Chisinau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tiraspol/">Tiraspol</a></li>\n</ul>\n</li>\n<li>Mongolia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.ulaanbaatar/">Ulaanbaatar</a></li>\n</ul>\n</li>\n<li>Morocco\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.casablanca/">Casablanca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.marrakesh/">Marrakesh</a></li>\n</ul>\n</li>\n<li>Myanmar [Burma]\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.myanmar">Yangon</a></li>\n</ul>\n</li>\n<li>Nepal\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhaktapur/">Bhaktapur</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bhimdattanagar/">Bhimdattanagar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dhangadhi/">Dhangadi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kathmandu/">Kathmandu</a></li>\n</ul>\n</li>\n<li>Netherlands\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.amsterdam/">Amsterdam</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rotterdam/">Rotterdam</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.the.hague/">The Hague</a></li>\n</ul>\n</li>\n<li>New Zealand\n<ul>\n<li><a href="https://www.facebook.com/groups/awesome.code.camp/">Auckland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.christchurch/">Christchurch</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.richmond/">Richmond</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wellington.nz/">Wellington</a></li>\n</ul>\n</li>\n<li>Nicaragua\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.granada/">Granada</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.managua/">Managua</a></li>\n</ul>\n</li>\n<li>Nigeria\n<ul>\n<li><a href="https://www.facebook.com/groups/abuja.free.code.camp/">Abuja</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.calabar/">Calabar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kaduna/">Kaduna</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lagos/">Lagos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.port.harcourt/">Port Harcourt</a></li>\n</ul>\n</li>\n<li>Norway\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trondheim/">Trondheim</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stavanger/">Stavanger</a></li>\n</ul>\n</li>\n<li>Pakistan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gujrat/">Gujrat City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.islamabad/">Islamabad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.karachi/">Karachi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lahore/">Lahore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mianwali/">Mianwali</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.multan">Multan</a></li>\n<li><a href="https://www.facebook.com/groups/1505677729748974/">Sahiwal</a></li>\n</ul>\n</li>\n<li>Panama\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.panama.city">Panama City</a></li>\n</ul>\n</li>\n<li>Papua New Guinea\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.papua.new.guinea.lae/">Lae</a></li>\n</ul>\n</li>\n<li>Paraguay\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.asuncion/">Asuncion</a></li>\n</ul>\n</li>\n<li>Peru\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.aichi/">Aichi</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Lima/">Lima</a></li>\n</ul>\n</li>\n<li>Philippines\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cagayandeoro.city/">Cagayan de Oro</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cebu/">Cebu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.makati/">Makati</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manila/">Manila</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quezon.city/">Quezon City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surigao/">Surigao</a></li>\n</ul>\n</li>\n<li>Poland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bialystok/">Bialystok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bydgoszcz/">Bydgoszcz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trojmiasto/">Gdańsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trojmiasto">Gdynia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.krakow/">Krakow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lodz/">Lodz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.poznan/">Poznan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.trojmiasto/">Sopot</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.szczecin/">Szczecin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.warsaw/">Warsaw</a></li>\n</ul>\n</li>\n<li>Portugal\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.braga/">Braga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lisbon/">Lisbon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.porto/">Porto</a></li>\n</ul>\n</li>\n<li>Puerto Rico\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sanjuan.pr/">San Juan</a></li>\n</ul>\n</li>\n<li>Qatar\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.doha/">Doha</a></li>\n</ul>\n</li>\n<li>Romania\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bacau.romania/">Bacau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brasov">Brasov</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bucharest/">Bucharest</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buzau/">Buzau</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cluj">Cluj</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.iasi.romania/">Iasi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oradea/">Oradea</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sibiu/">Sibiu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.suceava/">Suceva</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.targu.mures/">Targu Mures</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.timisoara/">Timisoara</a></li>\n</ul>\n</li>\n<li>Russia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cheljabinsk/">Cheljabinsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.irkutsk/">Irkutsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kemerovo/">Kemerovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kosovo/">Kosovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.krasnodar/">Krasnodar</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moscow/">Moscow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.omsk/">Omsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orenburg/">Orenburg</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Pavlovo/">Pavlovo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rostovondon/">Rostovondon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.petersburg/">Saint Petersburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vladivostok/">Vladivostok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yaroslavl/">Yaroslavl</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.yekaterinburg">Yekaterinburg</a></li>\n</ul>\n</li>\n<li>Rwanda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kigali/">Kigali</a></li>\n</ul>\n</li>\n<li>Réunion\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.louis/">Saint Louis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.saint.paul.mn/">Saint Paul</a></li>\n</ul>\n</li>\n<li>Saudi Arabia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Riyadh/">Riyadh</a></li>\n<li><a href="https://www.facebook.com/groups/girlscodeksa/">Riyadh (women only group)</a></li>\n</ul>\n</li>\n<li>Serbia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.belgrade/">Belgrade</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nis/">Nis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.novi.sad/">Novi Sad</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.subotica/">Subotica</a></li>\n</ul>\n</li>\n<li>Seychelles\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.victoria.bc/">Victoria</a></li>\n</ul>\n</li>\n<li>Singapore\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.singapore/">Singapore</a></li>\n</ul>\n</li>\n<li>Slovakia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bratislava/">Bratislava</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kosice/">Kosice</a></li>\n</ul>\n</li>\n<li>Slovenia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ljubljana/">Ljubljana</a></li>\n</ul>\n</li>\n<li>South Africa\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cape.town/">Cape Town</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.durban.kwazulunatal/">Durban</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.johannesburg/">Johannesburg</a></li>\n</ul>\n</li>\n<li>South Korea\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.busan/">Busan</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.seoul/">Seoul</a></li>\n</ul>\n</li>\n<li>Spain\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.almeria/">Almeria</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.barcelona/">Barcelona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caceres/">Caceres</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cadiz/">Cadiz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fuengirola/">Fuengirola</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.madrid/">Madrid</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salamanca/">Salamanca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sevilla.spain/">Sevilla</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tarragona/">Tarragona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.vlc/">Valencia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zaragoza/">Zaragoza</a></li>\n</ul>\n</li>\n<li>Sri Lanka\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.batticaloa/">Batticaloa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.colombo/">Colombo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jaffna/">Jaffna</a></li>\n</ul>\n</li>\n<li>Sweden\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stockholm.sweden/">Stockholm</a></li>\n</ul>\n</li>\n<li>Switzerland\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.basel/">Basel</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.geneva/">Geneva</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zurich/">Zurich</a></li>\n</ul>\n</li>\n<li>Taiwan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.taipei/">Taipei</a></li>\n</ul>\n</li>\n<li>Thailand\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bangkok/">Bangkok</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chiang.mai/">Chiang Mai</a></li>\n</ul>\n</li>\n<li>Tunisia\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tunisia/">Tunis</a></li>\n</ul>\n</li>\n<li>Turkey\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ankara/">Ankara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.istanbul/">Istanbul</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.izmir">Izmir</a></li>\n</ul>\n</li>\n<li>Uganda\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kampala/">Kampala</a></li>\n</ul>\n</li>\n<li>Ukraine\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chernivtsi.chernivetska.oblast.u/">Chernivtsi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dnipropetrovsk">Dnipropetrovsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ivano.frankivsk/">Ivano Frankivsk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kerch/">Kerch</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kharkiv/">Kharkiv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kiev/">Kiev</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kryvyi.rih/">Kryvyi Rih</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lviv/">Lviv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mykolaiv/">Mykolaiv</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.city.odessa.ukraine/">Odessa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.zhytomyr/">Zhytomyr</a></li>\n</ul>\n</li>\n<li>United Arab Emirates\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.abu.dhabi/">Abu Dhabi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dubai/">Dubai</a></li>\n</ul>\n</li>\n<li>United Kingdom\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.birmingham.uk/">Birmingham</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brighton/">Brighton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bristol.uk/">Bristol</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bury.St.Edmunds/">Bury St Edmunds</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cardiff/">Cardiff</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coventry/">Coventry</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.derby/">Derby</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.edinburgh/">Edinburgh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.exeter.uk/">Exeter</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.glasgowcity/">Glasgow</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hove">Hove</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ipswich.qld/">Ipswich</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leeds/">Leeds</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.london/">London</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manchester/">Manchester</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milton.keynes/">Milton Keynes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reading/">Reading</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sheffield/">Sheffield</a></li>\n<li><a href="https://www.facebook.com/groups/FCC.Southampton/">Southampton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stoke.on.trent/">Stoke-on-Trent</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.warrington/">Warrington</a></li>\n</ul>\n</li>\n<li>United States\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Alameda</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.albany.ny/">Albany</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.albuquerque/">Albuquerque</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ames.iowa/">Ames</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.anacortes/">Anacortes</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.anchorage/">Anchorage</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ann.arbor/">Ann Arbor</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.appleton/">Appleton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.asheville/">Asheville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.athens.ohio/">Athens, Ohio</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.atlanta/">Atlanta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.auburn.maine/">Auburn, Maine</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.augusta/">Augusta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.austin/">Austin</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bakersfield.california/">Bakersfield</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.baltimore/">Baltimore</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bellevue/">Bellevue</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Berkeley</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bigrapids/">Big Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oxford.al/">Birmingham, Alabama</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bismarck.north.dakota/">Bismarck, ND</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bloomington.normal/">Bloomington, IL</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bloomington.in/">Bloomington, IN</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boise">Boise</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Bonita.Springs/">Bonita Springs</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boston/">Boston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.boulder/">Boulder</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.brooksville.florida/">Brooksville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bryan.college.station/">Bryan College Station</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.buffalo/">Buffalo</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Bushkill.PA/">Bushkill</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.butte.montana/">Butte, MT</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cape.cod/">Cape Cod</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cedar.rapids/">Cedar Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.central.mississippi/">Central Mississippi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.olympia/">Centralia, WA</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.champaign.urbana/">Champaign-Urbana</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charleston.wv">Charleston, WV</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.charlotte.nc/">Charlotte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chattanooga/">Chattanooga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.chicago/">Chicago</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cincinnati/">Cincinnati</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.clarksville.TN/">Clarksville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cleveland/">Cleveland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.cottagegrove/">Coattage Grove</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampcoloradosprings/">Colorado Springs</a></li>\n<li><a href="https://www.facebook.com/groups/190253084650546/">Columbia, MD</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbus/">Columbus, OH</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbus.georgia/">Columbus</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.columbus/">Columbus</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.coram.ny/">Coram</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dallas/">Dallas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.dayton.ohio/">Dayton</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.denver/">Denver</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.des.moines/">Des Moines</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.detroit/">Detroit</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.duluth/">Duluth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.el.paso">El Paso</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.eugene/">Eugene</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.evansville.in/">Evansville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fayetteville.arkansas/">Fayetteville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Flagstaff</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.floyd.virginia/">Floyd, VA</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.folsom">Folsom</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fort.collins/">Fort Collins</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ftlauderdale/">Fort Lauderdale</a></li>\n<li><a href="https://www.facebook.com/groups/freecodecampfortworth/">Fort Worth</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frankfort.kentucky/">Frankfort</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.frederick.md">Frederick, MD</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fredericksburg/">Fredericksburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.freehold/">Freehold</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fremont/">Fremont</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.fresno/">Fresno</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.gainesville.fla/">Gainesville, FL</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.galveston/">Galveston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Glendora.California/">Glendora</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.grand.rapids/">Grand Rapids</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hagerstown/">Hagerstown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hamptonroads/">Hampton Roads</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.harrisburg.pa/">Harrisburg, PA</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hartford.connecticut/">Hartford</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hickory.nc">Hickory</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.houston/">Houston</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.huntsville/">Huntsville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.idaho.falls.idaho/">idaho Falls</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.indianapolis.in/">Indianapolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.ithaca/">Ithaca</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jackson.ms">Jackson, MS</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.jacksonville/">Jacksonville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kalamazoo/">Kalamazoo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.kansascity/">Kansas City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.killeen.texas/">Killeen</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.knoxville.tn/">Knoxville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.la.crosse">La Crosse</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.Lakeland.Florida/">Lakeland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lc.nm/">Las Cruces</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.las.vegas.nv/">Las Vegas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lawrence">Lawrence</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lebanon.nh">Lebanon, NH</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leesburg/">Leesburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.leesville.la/">Leesville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lehi/">Lehi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lexington/">Lexington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lincoln/">Lincoln, NE</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lindsay/">Lindsay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.little.rock/">Little Rock</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.los.alamos.nm/">Los Alamos</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.los.angeles/">Los Angeles</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.lubbock/">Lubbock</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.LYH/">Lynchburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.madison.wisconsin/">Madison</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.manassas/">Manassas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Memphis/">Memphis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.miami/">Miami</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.milwaukee/">Milwaukee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.minneapolis/">Minneapolis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mission.texas/">Mission, TX</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.mississauga/">Mississauga</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.msgulfcoast/">Mississippi Gulf Coast</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.missoula/">Missoula</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.modesto/">Modesto</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montgomery.alabama/">Montgomery</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.morgan.ciry.la/">Morgan City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.morgantown/">Morgantown</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.moss.point.mississippi/">Moss Point</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.muskegon/">Muskegon</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.napa/">Napa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.nashville/">Nashville</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.brunswick.new.jersey/">New Brunswick</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.haven/">New Haven</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.neworleans/">New Orleans</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.paltz/">New Paltz</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.new.york.city/">New York City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.newport.or/">Newport, OR</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.norfolk">Norfolk</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.bloomington.normal/">Normal</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.mississippi/">North Mississippi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.north.platte/">North Platte</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oahu.hawaii/">Oahu</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.berkeley/">Oakland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oklahoma.city/">Oklahoma City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.olympia/">Olympia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.omaha/">Omaha</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.oradell/">Oradell</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orange.county/">Orange County</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.orlando/">Orlando</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.owatonna/">Owatonna</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.palisadespark/">Palisades Park</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pasadena.ca/">Pasadena</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pensacola/">Pensacola</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.philadelphia/">Philadelphia</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Phoenix</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pittsburgh.pa/">Pittsburgh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.port.orchard/">Port Orchard</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.portland/">Portland</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Prescott</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.providence/">Providence</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.provo/">Provo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.pueblo/">Pueblo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.quadcities/">Quad Cities, IL</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.raleigh/">Raleigh</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.remond.oregon/">Redmond, OR</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.reno/">Reno</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.rice.lake.wi/">Rice Lake</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.riverside.ca/">Riverside, CA</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.Rochester.New.York/">Rochester, NY</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sacramento/">Sacramento</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salisbury.maryland/">Salisbury, MD</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.salt.lake.city/">Salt Lake City</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.antonio">San Antonio</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.bernardino/">San Bernardino</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.san.diego/">San Diego</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.SLO/">San Luis Obispo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.santa.clarita/">Santa Clarita</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sarasota.florida/">Sarasota</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.savannah/">Savannah</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Scottsdale</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.seattle/">Seattle</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Sedona</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.sierra.vista/">Sierra Vista</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.silverspring/">Silver Spring</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.solo/">Solo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.south.bend/">South Bend</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.southlosangeles/">South Los Angeles</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.spartanburg/">Spartanburg</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.spokane/">Spokane</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.springfield.missouri/">Springfield, MO</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.stcloud/">St Cloud</a></li>\n<li><a href="https://www.facebook.com/groups/Free.Code.Camp.StLouis/">St. Louis</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.surrey/">Surrey</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tacoma/">Tacoma</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tallahassee.florida/">Tallahassee</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tampa/">Tampa Bay</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.temecula/">Temecula</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tempe.phoenix.scottsdale/">Tempe</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toledo/">Toledo</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.toms.river/">Toms River, New Jersey</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tricitieswa/">Tri-Cities, Washington</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tucson/">Tucson</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tulsa/">Tulsa</a></li>\n<li><a href="https://www.facebook.com/groups/148780962143254/">Tupelo, Mississippi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tuscaloosa/">Tuscaloosa</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.university.center/">University Center</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valdosta/">Valdosta</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.northern.arizona/">Verde Valley</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.virginia.beach/">Virginia Beach</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.washington.dc/">Washington, D.C.</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wichita/">Wichita</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.wilmington.nc/">Wilmington, NC</a></li>\n</ul>\n</li>\n<li>Uruguay\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.montevideo/">Montevideo</a></li>\n</ul>\n</li>\n<li>Uzbekistan\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.tashkent/">Tashkent</a></li>\n</ul>\n</li>\n<li>Venezuela\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.caracas/">Caracas</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.guacara/">Guacara</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.valencia.venezuela/">Valencia</a></li>\n</ul>\n</li>\n<li>Vietnam\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.your.Da.Nang/">Da Nang</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hanoi/">Hanoi</a></li>\n<li><a href="https://www.facebook.com/groups/free.code.camp.hochiminhcity/">Ho Chi Minh City</a></li>\n</ul>\n</li>\n<li>Zimbabwe\n<ul>\n<li><a href="https://www.facebook.com/groups/free.code.camp.harare/">Harare</a></li>\n</ul>\n</li>\n</ul>\n'
}},function(e,n){e.exports={title:"Loop Protect",order:5,body:'<p>The Free Code Camp code runner has a built in Infinite Loop Protect feature, leveraged from <a href="https://github.com/jsbin/loop-protect">JSBin’s Loop Protect</a>.  The loop protect injects some code into user created loops to allow a safe exit if more than ~500ms has passed without exiting the loop.  Loop protect will catch many, but not all infinite loop issues.\nIf you see this message:<br>\n<code>Error: Potential infinite loop at line X</code><br>\nIt means you have been protected from an infinite loop.<br>\n<strong>Note:</strong> Loop Protect cannot detect infinite recursion.</p>\n<h3>Disable Loop Protect</h3>\n<p>In some cases - a slow computer or a long loop - you may get an incorrect loop protect.  In order to disable loop protect, add the following comment over the line the loop protection message lists:<br>\n<code>//noprotect</code></p>\n<p><strong>Warning:</strong> Disabling loop protect means you may potentially allow your code to go into an infinite loop, causing your browser to be unresponsive.</p>\n<h3>Recovering Unresponsive Code</h3>\n<p>If you have erred and incorrectly disabled loop protection and now have an unresponsive solution, you can <a href="https://freecodecamp.github.io/wiki/docs/Disable-Code-Auto-Run">Disable Code Auto-Run</a>.</p>\n'}},function(e,n){e.exports={title:"Map",order:5,body:'<h1>HTML5 and CSS</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Say-Hello-to-HTML-Elements">Waypoint: Say Hello to HTML Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Headline-with-the-h2-Element">Waypoint: Headline with the h2 Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Inform-with-the-Paragraph-Element">Waypoint: Inform with the Paragraph Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Unique-Objects-by-Passing-Parameters-to-our-Constructor">Waypoint: Make Unique Objects by Passing Parameters to our Constructor</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Uncomment-HTML">Waypoint: Uncomment HTML</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Comment-out-HTML">Waypoint: Comment out HTML</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Fill-in-the-Blank-with-Placeholder-Text">Waypoint: Fill in the Blank with Placeholder Text</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Delete-HTML-Elements">Waypoint: Delete HTML Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Change-the-Color-of-Text">Waypoint: Change the Color of Text</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-CSS-Selectors-to-Style-Elements">Waypoint: Use CSS Selectors to Style Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-a-CSS-Class-to-Style-an-Element">Waypoint: Use a CSS Class to Style an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Style-Multiple-Elements-with-a-CSS-Class">Waypoint: Style Multiple Elements with a CSS Class</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Change-the-Font-Size-of-an-Element">Waypoint: Change the Font Size of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Set-the-Font-Family-of-an-Element">Waypoint: Set the Font Family of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Import-a-Google-Font">Waypoint: Import a Google Font</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Specify-How-Fonts-Should-Degrade">Waypoint: Specify How Fonts Should Degrade</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Images-to-your-Website">Waypoint: Add Images to your Website</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Size-your-Images">Waypoint: Size your Images</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Borders-Around-your-Elements">Waypoint: Add Borders Around your Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Rounded-Corners-with-a-Border-Radius">Waypoint: Add Rounded Corners with a Border Radius</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Circular-Images-with-a-Border-Radius">Waypoint: Make Circular Images with a Border Radius</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Link-to-External-Pages-with-Anchor-Elements">Waypoint: Link to External Pages with Anchor Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Nest-an-Anchor-Element-within-a-Paragraph">Waypoint: Nest an Anchor Element within a Paragraph</a>)</li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Dead-Links-using-the-Hash-Symbol">Waypoint: Make Dead Links using the Hash Symbol</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Turn-an-Image-into-a-Link">Waypoint: Turn an Image into a Link</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Alt-Text-to-an-Image-for-Accessibility">Waypoint: Add Alt Text to an Image for Accessibility</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Bulleted-Unordered-List">Waypoint: Create a Bulleted Unordered List</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-an-Ordered-List">Waypoint: Create an Ordered List</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Text-Field">Waypoint: Create a Text Field</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Placeholder-Text-to-a-Text-Field">Waypoint: Add Placeholder Text to a Text Field</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Form-Element">Waypoint: Create a Form Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-a-Submit-Button-to-a-Form">Waypoint: Add a Submit Button to a Form</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-HTML5-to-Require-a-Field">Waypoint: Use HTML5 to Require a Field</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Set-of-Radio-Buttons">Waypoint: Create a Set of Radio Buttons</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Set-of-Checkboxes">Waypoint: Create a Set of Checkboxes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Check-Radio-Buttons-and-Checkboxes-by-Default">Waypoint: Check Radio Buttons and Checkboxes by Default</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Nest-Many-Elements-within-a-Single-Div-Element">Waypoint: Nest Many Elements within a Single Div Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Give-a-Background-Color-to-a-Div-Element">Waypoint: Give a Background Color to a Div Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Set-the-ID-of-an-Element">Waypoint: Set the ID of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-an-ID-Attribute-to-Style-an-Element">Waypoint: Use an ID Attribute to Style an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Adjusting-the-Padding-of-an-Element">Waypoint: Adjusting the Padding of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Adjust-the-Margin-of-an-Element">Waypoint: Adjust the Margin of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-a-Negative-Margin-to-an-Element">Waypoint: Add a Negative Margin to an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Different-Padding-to-Each-Side-of-an-Element">Waypoint: Add Different Padding to Each Side of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Different-Margins-to-Each-Side-of-an-Element">Waypoint: Add Different Margins to Each Side of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Padding-of-an-Element">Waypoint: Use Clockwise Notation to Specify the Padding of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Clockwise-Notation-to-Specify-the-Margin-of-an-Element">Waypoint: Use Clockwise Notation to Specify the Margin of an Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Style-the-HTML-Body-Element">Waypoint: Style the HTML Body Element</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Inherit-Styles-from-the-Body-Element">Waypoint: Inherit Styles from the Body Element Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Prioritize-One-Style-Over-Another">Waypoint: Prioritize One Style Over Another Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Override-Styles-in-Subsequent-CSS">Waypoint: Override Styles in Subsequent CSS Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Override-Class-Declarations-by-Styling-ID-Attributes">Waypoint: Override Class Declarations by Styling ID Attributes Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Override-Class-Declarations-with-Inline-Styles">Waypoint: Override Class Declarations with Inline Styles Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Override-All-Other-Styles-by-using-Important">Waypoint: Override All Other Styles by using Important Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-for-Specific-Colors">Waypoint: Use Hex Code for Specific Colors Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-White">Waypoint: Use Hex Code to Color Elements White Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red">Waypoint: Use Hex Code to Color Elements Red Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Green">Waypoint: Use Hex Code to Color Elements Green Complete</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Blue">Waypoint: Use Hex Code to Color Elements Blue</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Mix-Colors">Waypoint: Use Hex Code to Mix Colors</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Gray">Waypoint: Use Hex Code to Color Elements Gray</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-for-Specific-Shades-of-Gray">Waypoint: Use Hex Code for Specific Shades of Gray</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Abbreviated-Hex-Code">Waypoint: Use Abbreviated Hex Code</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-values-to-Color-Elements">Waypoint: Use RGB values to Color Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Color-Elements-White">Waypoint: Use RGB to Color Elements White</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Color-Elements-Red">Waypoint: Use RGB to Color Elements Red</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Color-Elements-Green">Waypoint: Use RGB to Color Elements Green</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Color-Elements-Blue">Waypoint: Use RGB to Color Elements Blue</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Mix-Colors">Waypoint: Use RGB to Mix Colors</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-RGB-to-Color-Elements-Gray">Waypoint: Use RGB to Color Elements Gray</a></li>\n</ol>\n<h1>Responsive Design with Bootstrap</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Responsive-Design-with-Bootstrap-Fluid-Containers">Waypoint: Use Responsive Design with Bootstrap Fluid Containers</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Images-Mobile-Responsive">Waypoint: Make Images Mobile Responsive</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Center-Text-with-Bootstrap">Waypoint: Center Text with Bootstrap</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Bootstrap-Button">Waypoint: Create a Bootstrap Button</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Block-Element-Bootstrap-Button">Waypoint: Create a Block Element Bootstrap Button</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Taste-the-Bootstrap-Button-Color-Rainbow">Waypoint: Taste the Bootstrap Button Color Rainbow</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Call-out-Optional-Actions-with-Button-Info">Waypoint: Call out Optional Actions with Button Info</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Warn-your-Users-of-a-Dangerous-Action">Waypoint: Warn your Users of a Dangerous Action</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-the-Bootstrap-Grid-to-Put-Elements-Side-By-Side">Waypoint: Use the Bootstrap Grid to Put Elements Side By Side</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Ditch-Custom-CSS-for-Bootstrap">Waypoint: Ditch Custom CSS for Bootstrap</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Spans-for-Inline-Elements">Waypoint: Use Spans for Inline Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Custom-Heading">Waypoint: Create a Custom Heading</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Font-Awesome-Icons-to-our-Buttons">Waypoint: Add Font Awesome Icons to our Buttons</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Font-Awesome-Icons-to-all-of-our-Buttons">Waypoint: Add Font Awesome Icons to all of our Buttons</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Responsively-Style-Radio-Buttons">Waypoint: Responsively Style Radio Buttons</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Responsively-Style-Checkboxes">Waypoint: Responsively Style Checkboxes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Style-Text-Inputs-as-Form-Controls">Waypoint: Style Text Inputs as Form Controls</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Line-up-Form-Elements-Responsively-with-Bootstrap">Waypoint: Line up Form Elements Responsively with Bootstrap</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Bootstrap-Headline">Waypoint: Create a Bootstrap Headline</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-House-our-page-within-a-Bootstrap-Container-Fluid-Div">Waypoint: House our page within a Bootstrap Container Fluid Div</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Bootstrap-Row">Waypoint: Create a Bootstrap Row</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Split-your-Bootstrap-Row">Waypoint: Split your Bootstrap Row</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-Bootstrap-Wells">Waypoint: Create Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Elements-within-your-Bootstrap-Wells">Waypoint: Add Elements within your Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Apply-the-Default-Bootstrap-Button-Style">Waypoint: Apply the Default Bootstrap Button Style</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-Class-to-Target-with-jQuery-Selectors">Waypoint: Create a Class to Target with jQuery Selectors</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-ID-Attributes-to-Bootstrap-Elements">Waypoint: Add ID Attributes to Bootstrap Elements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Label-Bootstrap-Wells">Waypoint: Label Bootstrap Wells</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Give-Each-Element-a-Unique-ID">Waypoint: Give Each Element a Unique ID</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Label-Bootstrap-Buttons">Waypoint: Label Bootstrap Buttons</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Comments-to-Clarify-Code">Waypoint: Use Comments to Clarify Code</a></li>\n</ol>\n<h1>Gear up for Success</h1>\n<ol>\n<li><a href="http://freecodecamp.com/challenges/waypoint-browse-camper-news">Waypoint: Browse Camper News Incomplete</a></li>\n<li><a href="http://freecodecamp.com/challenges/waypoint-reference-our-wiki">Waypoint: Reference our Wiki Incomplete</a></li>\n<li><a href="http://freecodecamp.com/challenges/waypoint-join-our-linkedin-alumni-network">Waypoint: Join our LinkedIn Alumni Network Incomplete</a></li>\n<li><a href="http://freecodecamp.com/challenges/waypoint-commit-to-a-goal-and-a-nonprofit">Waypoint: Commit to a Goal and a Nonprofit</a></li>\n</ol>\n<h1>jQuery</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Learn-how-Script-Tags-and-Document-Ready-Work">Waypoint: Learn how Script Tags and Document Ready Work</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-HTML-Elements-with-Selectors-Using-jQuery">Waypoint: Target HTML Elements with Selectors Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-Elements-by-Class-Using-jQuery">Waypoint: Target Elements by Class Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-Elements-by-ID-Using-jQuery">Waypoint: Target Elements by ID Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Delete-your-jQuery-Functions">Waypoint: Delete your jQuery Functions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-the-same-element-with-multiple-jQuery-Selectors">Waypoint: Target the same element with multiple jQuery Selectors</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Remove-Classes-from-an-element-with-jQuery">Waypoint: Remove Classes from an element with jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Change-the-CSS-of-an-Element-Using-jQuery">Waypoint: Change the CSS of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Disable-an-Element-Using-jQuery">Waypoint: Disable an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Change-Text-Inside-an-Element-Using-jQuery">Waypoint: Change Text Inside an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Remove-an-Element-Using-jQuery">Waypoint: Remove an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-appendTo-to-Move-Elements-with-jQuery">Waypoint: Use appendTo to Move Elements with jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Clone-an-Element-Using-jQuery">Waypoint: Clone an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-the-Parent-of-an-Element-Using-jQuery">Waypoint: Target the Parent of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-the-Children-of-an-Element-Using-jQuery">Waypoint: Target the Children of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-a-Specific-Child-of-an-Element-Using-jQuery">Waypoint: Target a Specific Child of an Element Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Target-Even-Numbered-Elements-Using-jQuery">Waypoint: Target Even Numbered Elements Using jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-jQuery-to-Modify-the-Entire-Page">Waypoint: Use jQuery to Modify the Entire Page</a></li>\n</ol>\n<h1>Basic JavaScript</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Comment-your-JavaScript-Code">Waypoint: Comment your JavaScript Code</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Understand-Boolean-Values">Waypoint: Understand Boolean Values</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Declare-JavaScript-Variables">Waypoint: Declare JavaScript Variables</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Declare-String-Variables">Waypoint: Declare String Variables</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Check-the-Length-Property-of-a-String-Variable">Waypoint: Check the Length Property of a String Variable</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Bracket-Notation-to-Find-the-First-Character-in-a-String">Waypoint: Use Bracket Notation to Find the First Character in a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-Character-in-a-String">Waypoint: Use Bracket Notation to Find the Nth Character in a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Last-Character-in-a-String">Waypoint: Use Bracket Notation to Find the Last Character in a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Bracket-Notation-to-Find-the-Nth-to-Last-Character-in-a-String">Waypoint: Use Bracket Notation to Find the Nth-to-Last Character in a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-Two-Numbers-with-JavaScript">Waypoint: Add Two Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Subtract-One-Number-from-Another-with-JavaScript">Waypoint: Subtract One Number from Another with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Multiply-Two-Numbers-with-JavaScript">Waypoint: Multiply Two Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Divide-One-Number-by-Another-with-JavaScript">Waypoint: Divide One Number by Another with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-Decimal-Numbers-with-JavaScript">Waypoint: Create Decimal Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Perform-Arithmetic-Operations-on-Decimals-with-JavaScript">Waypoint: Perform Arithmetic Operations on Decimals with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Store-Multiple-Values-in-one-Variable-using-JavaScript-Arrays">Waypoint: Store Multiple Values in one Variable using JavaScript Arrays</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Nest-one-Array-within-Another-Array">Waypoint: Nest one Array within Another Array</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Access-Array-Data-with-Indexes">Waypoint: Access Array Data with Indexes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Modify-Array-Data-With-Indexes">Waypoint: Modify Array Data With Indexes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Manipulate-Arrays-With-pop()">Waypoint: Manipulate Arrays With pop()</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Manipulate-Arrays-With-push()">Waypoint: Manipulate Arrays With push()</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Manipulate-Arrays-With-shift()">Waypoint: Manipulate Arrays With shift()</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Manipulate-Arrays-With-unshift()">Waypoint: Manipulate Arrays With unshift()</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Write-Reusable-JavaScript-with-Functions">Waypoint: Write Reusable JavaScript with Functions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Build-JavaScript-Objects">Waypoint: Build JavaScript Objects</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Manipulate-JavaScript-Objects">Waypoint: Manipulate JavaScript Objects</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Iterate-with-JavaScript-For-Loops">Waypoint: Iterate with JavaScript For Loops</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Iterate-with-JavaScript-While-Loops">Waypoint: Iterate with JavaScript While Loops</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Generate-Random-Fractions-with-JavaScript">Waypoint: Generate Random Fractions with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Generate-Random-Whole-Numbers-with-JavaScript">Waypoint: Generate Random Whole Numbers with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range">Waypoint: Generate Random Whole Numbers within a Range</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-New-Properties-to-a-JavaScript-Object">Waypoint: Add New Properties to a JavaScript Object</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Delete-Properties-from-a-JavaScript-Object">Waypoint: Delete Properties from a JavaScript Object</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Iterate-with-JavaScript-For-Loops">Waypoint: Iterate with JavaScript For Loops</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Iterate-Odd-Numbers-With-a-For-Loop">Waypoint: Iterate Odd Numbers With a For Loop</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Count-Backwards-With-a-For-Loop">Waypoint: Count Backwards With a For Loop</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Conditional-Logic-with-If-Else-Statements">Waypoint: Use Conditional Logic with If-Else Statements</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Sift-through-Text-with-Regular-Expressions">Waypoint: Sift through Text with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Find-Numbers-with-Regular-Expressions">Waypoint: Find Numbers with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Find-White-Space-with-Regular-Expressions">Waypoint: Find White Space with Regular Expressions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Invert-Regular-Expression-Matches-with-JavaScript">Waypoint: Invert Regular Expression Matches with JavaScript</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Create-a-JavaScript-Slot-Machine">Waypoint: Create a JavaScript Slot Machine</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Add-your-JavaScript-Slot-Machine-Slots">Waypoint: Add your JavaScript Slot Machine Slots</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Bring-your-JavaScript-Slot-Machine-to-Life">Waypoint: Bring your JavaScript Slot Machine to Life</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Give-your-JavaScript-Slot-Machine-some-stylish-images">Waypoint: Give your JavaScript Slot Machine some stylish images</a></li>\n</ol>\n<h1>Object Oriented and Functional Programming</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Declare-JavaScript-Objects-as-Variables">Waypoint: Declare JavaScript Objects as Variables</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Construct-JavaScript-Objects-with-Functions">Waypoint: Construct JavaScript Objects with Functions</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Object-Properties-Private">Waypoint: Make Object Properties Private</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Make-Instances-of-Objects-with-a-Constructor-Function">Waypoint: Make Instances of Objects with a Constructor Function</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Iterate-over-Arrays-with-map">Waypoint: Iterate over Arrays with .map</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Condense-arrays-with-reduce">Waypoint: Condense arrays with .reduce</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Filter-Arrays-with-filter">Waypoint: Filter Arrays with .filter</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Sort-Arrays-with-sort">Waypoint: Sort Arrays with .sort</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Reverse-Arrays-with-reverse">Waypoint: Reverse Arrays with .reverse</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Concatenate-Strings-with-.concat">Waypoint: Concatenate Strings with .concat</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Split-Strings-with-split">Waypoint: Split Strings with .split</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Join-Strings-with-.join">Waypoint: Join Strings with .join</a></li>\n</ol>\n<h1>Basic Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Meet-Bonfire">Bonfire: Meet Bonfire</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Reverse-a-String">Bonfire: Reverse a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Factorialize-a-Number">Bonfire: Factorialize a Number</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Check-for-Palindromes">Bonfire: Check for Palindromes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-find-the-longest-word-in-a-string">Bonfire: Find the Longest Word in a String</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-title-case-a-sentence">Bonfire: Title Case a Sentence</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-return-largest-numbers-in-arrays">Bonfire: Return Largest Numbers in Arrays</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Confirm-the-Ending">Bonfire: Confirm the Ending</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-repeat-a-string-repeat-a-string">Bonfire: Repeat a string repeat a string</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-truncate-a-string">Bonfire: Truncate a string</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Chunky-Monkey">Bonfire: Chunky Monkey</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-slasher-flick">Bonfire: Slasher Flick</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-mutations">Bonfire: Mutations</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Falsy-Bouncer">Bonfire: Falsey Bouncer</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Seek-and-Destroy">Bonfire: Seek and Destroy</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Where-do-I-belong">Bonfire: Where do I belong</a></li>\n</ol>\n<h1>Intermediate Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Sum-All-Numbers-in-a-Range">Bonfire: Sum All Numbers in a Range</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Diff-Two-Arrays">Bonfire: Diff Two Arrays</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-roman-numeral-converter">Bonfire: Roman Numeral Converter</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Where-art-thou">Bonfire: Where art thou</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Search-and-Replace">Bonfire: Search and Replace</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Pig-Latin">Bonfire: Pig Latin</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-DNA-Pairing">Bonfire: DNA Pairing</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Missing-letters">Bonfire: Missing letters</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Boo-who">Bonfire: Boo who</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Sorted-Union">Bonfire: Sorted Union</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-convert-HTML-entities">Bonfire: Convert HTML Entities</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Spinal-Tap-Case">Bonfire: Spinal Tap Case</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-sum-all-odd-fibonacci-numbers">Bonfire: Sum All Odd Fibonacci Numbers</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-sum-all-primes">Bonfire: Sum All Primes</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Smallest-Common-Multiple">Bonfire: Smallest Common Multiple</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-finders-keepers">Bonfire: Finders Keepers</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Drop-it">Bonfire: Drop it</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-steamroller">Bonfire: Steamroller</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Binary-Agents">Bonfire: Binary Agents</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Everything-be-True">Bonfire: Everything Be True</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Arguments-Optional">Bonfire: Arguments Optional</a></li>\n</ol>\n<h1>JSON APIs and Ajax</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Trigger-Click-Events-with-jQuery">Waypoint: Trigger Click Events with jQuery</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Change-Text-with-Click-Events">Waypoint: Change Text with Click Events</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Get-JSON-with-the-jQuery-getJSON-Method">Waypoint: Get JSON with the jQuery getJSON Method</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Convert-JSON-Data-to-HTML">Waypoint: Convert JSON Data to HTML</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Render-Images-from-Data-Sources">Waypoint: Render Images from Data Sources</a></li>\n<li>Waypoint: Prefilter JSON</li>\n<li>Waypoint: Get Geo-location Data</li>\n</ol>\n<h1>Upper Intermediate Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-make-a-person">Bonfire: Make a Person</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-map-the-debris">Bonfire: Map the Debris</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-pairwise">Bonfire: Pairwise</a></li>\n</ol>\n<h1>Automated Testing and Debugging</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-the-Javascript-Console">Waypoint: Use the Javascript Console</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Using-typeof">Waypoint: Using typeof</a></li>\n</ol>\n<h1>Advanced Algorithm Scripting</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Validate-US-Telephone-Numbers">Bonfire: Validate US Telephone Numbers</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Symmetric-Difference">Bonfire: Symmetric Difference</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Exact-Change">Bonfire: Exact Change</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-inventory-update">Bonfire: Inventory Update</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/bonfire-no-repeats-please">Bonfire: No repeats please</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Friendly-Date-Ranges">Bonfire: Friendly Date Ranges</a></li>\n</ol>\n<h1>AngularJS</h1>\n<ol>\n<li>Waypoint: Get Started with Angular.js</li>\n<li>Waypoint: Apply Angular.js Directives</li>\n<li>Waypoint: Power Forms with Angular.js</li>\n<li>Waypoint: Customize Angular.js Directives</li>\n<li>Waypoint: Create Angular.js Services</li>\n</ol>\n<h1>Git</h1>\n<ol>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Save-your-Code-Revisions-Forever-with-Git">Waypoint: Save your Code Revisions Forever with Git</a></li>\n</ol>\n<h1>Node.js and Express.js</h1>\n<ol>\n<li>Waypoint: Manage Packages with NPM</li>\n<li>Waypoint: Start a Node.js Server</li>\n<li>Waypoint: Continue working with Node.js Servers</li>\n<li>Waypoint: Finish working with Node.js Servers</li>\n<li>Waypoint: Build Web Apps with Express.js</li>\n</ol>\n<h1>MongoDB</h1>\n<ol>\n<li>Waypoint: Store Data in MongoDB</li>\n</ol>\n'
}},function(e,n){e.exports={title:"Math.max",order:5,body:'<h1>Math.max()</h1>\n<p>The <code>Math.max()</code> function returns the largest of zero or more numbers.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Math</span>.max(value1, value2, ...)\n</code></pre>\n<h3>Parameters</h3>\n<p><code>value1</code>, <code>value2</code> and other arguments should be numbers. All arguments are optional.</p>\n<p>If no arguments are given, the result is Infinity.\nIf at least one of arguments cannot be converted to a number, the result is NaN.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/dxcwky7y%28v=vs.94%29.aspx">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Math</span>.max();         <span class="hljs-comment">// Infinity</span>\n<span class="hljs-built_in">Math</span>.max(<span class="hljs-string">\'a\'</span>);      <span class="hljs-comment">// NaN</span>\n<span class="hljs-built_in">Math</span>.max(<span class="hljs-literal">NaN</span>);      <span class="hljs-comment">// NaN</span>\n<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">5</span>);        <span class="hljs-comment">// 5</span>\n<span class="hljs-built_in">Math</span>.max(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>);   <span class="hljs-comment">//  20</span>\n<span class="hljs-built_in">Math</span>.max(-<span class="hljs-number">10</span>, -<span class="hljs-number">20</span>); <span class="hljs-comment">// -10</span>\n<span class="hljs-built_in">Math</span>.max(-<span class="hljs-number">10</span>, <span class="hljs-number">20</span>);  <span class="hljs-comment">//  20</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> x = <span class="hljs-built_in">Math</span>.max(<span class="hljs-number">107</span> - <span class="hljs-number">3</span>,  <span class="hljs-number">48</span> * <span class="hljs-number">90</span>);\n<span class="hljs-built_in">document</span>.write(x);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 4320</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Math.min",order:5,body:'<h1>Math.min()</h1>\n<p>The <code>Math.min()</code> function returns the smallest of zero or more numbers.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Math</span>.min(value1, value2, ...)\n</code></pre>\n<h3>Parameters</h3>\n<p><code>value1</code>, <code>value2</code> and other arguments should be numbers. All arguments are optional.</p>\n<p>If no arguments are given, the result is Infinity.\nIf at least one of arguments cannot be converted to a number, the result is NaN.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/7x8968dh%28v=vs.94%29.aspx">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Math</span>.min();         <span class="hljs-comment">// Infinity</span>\n<span class="hljs-built_in">Math</span>.min(<span class="hljs-string">\'a\'</span>);      <span class="hljs-comment">// NaN</span>\n<span class="hljs-built_in">Math</span>.min(<span class="hljs-literal">NaN</span>);      <span class="hljs-comment">// NaN</span>\n<span class="hljs-built_in">Math</span>.min(<span class="hljs-number">5</span>);        <span class="hljs-comment">// 5</span>\n<span class="hljs-built_in">Math</span>.min(-<span class="hljs-number">1</span>, <span class="hljs-number">10</span>);   <span class="hljs-comment">// -1</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> x = <span class="hljs-built_in">Math</span>.min(<span class="hljs-number">107</span> - <span class="hljs-number">3</span>,  <span class="hljs-number">48</span> * <span class="hljs-number">90</span>);\n<span class="hljs-built_in">document</span>.write(x);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 104</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Math.pow",order:5,body:'<h1>Math.pow()</h1>\n<p>The Math.pow() returns the <code>base</code> to the <code>exponent</code> power.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Math</span>.pow(base, exponent);\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>base</strong></p>\n<p>The base number</p>\n<p><strong>exponent</strong></p>\n<p>The exponent with which to raise the base number.</p>\n<p>###Description</p>\n<p>.pow() is a static method of the Math object, so you must always use it as <code>Math.pow()</code></p>\n<h3>Examples</h3>\n<pre><code class="language-js"><span class="hljs-comment">// Simple exponents</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);          <span class="hljs-comment">// 4</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);          <span class="hljs-comment">// 8</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">2</span>, <span class="hljs-number">10</span>);         <span class="hljs-comment">// 1024</span>\n\n<span class="hljs-comment">//Fractional exponents</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">9</span>, <span class="hljs-number">0.5</span>);        <span class="hljs-comment">// 3 (the square root of 9)</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">24</span>, <span class="hljs-number">1</span>/<span class="hljs-number">3</span>);       <span class="hljs-comment">// 8 (the cubed root of 24)</span>\n\n<span class="hljs-comment">//Signed exponents</span>\n<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">5</span>, -<span class="hljs-number">2</span>);         <span class="hljs-comment">// .04 (1/25)</span>\n\n<span class="hljs-comment">//Signed bases</span>\n<span class="hljs-built_in">Math</span>.pow(-<span class="hljs-number">5</span>, <span class="hljs-number">2</span>);         <span class="hljs-comment">// 25 (squares are positive)</span>\n<span class="hljs-built_in">Math</span>.pow(-<span class="hljs-number">5</span>, <span class="hljs-number">3</span>);         <span class="hljs-comment">// -125 (cubes can be negative)</span>\n<span class="hljs-built_in">Math</span>.pow(-<span class="hljs-number">5</span>, <span class="hljs-number">0.5</span>);       <span class="hljs-comment">// NaN because negative numbers don\'t have a real square root</span>\n\n<span class="hljs-comment">//Due to limits in the precision of floating point numbers, </span>\n<span class="hljs-comment">//a negative base with a fractional exponent will always return NaN</span>\n\n<span class="hljs-built_in">Math</span>.pow(-<span class="hljs-number">5</span>, <span class="hljs-number">1</span>/<span class="hljs-number">2</span>);       <span class="hljs-comment">// NaN</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow">MDN</a></p>\n'}},function(e,n){e.exports={title:"More useful APIs",order:5,body:'<p>There are two more things you have to do before this to be useful to you, however. Say you want to show all the <em>things</em> associated with the username requested with that page: you must first</p>\n<ol>\n<li>Have a “username” or “owner” field in your <em>thing</em> schema at <strong>/server/api/thing/thing.model.js</strong></li>\n<li>Write a custom route in <strong>/server/api/thing/index.js</strong> to catch a request for a specific username. The request from your frontend might look something like:</li>\n</ol>\n<pre><code class="language-javascript">\n$http.get(<span class="hljs-string">\'/api/things/\'</span> + username).success( …\n</code></pre>\n<p>so you’ll add a line into your <strong>index.js</strong> like:</p>\n<pre><code class="language-javascript">\nrouter.get(<span class="hljs-string">\'/:user\'</span>, controller.indexUser);\n</code></pre>\n<p>and then in <strong>thing.controller.js</strong> you’ll write an <em>exports.indexUser</em> function like so:</p>\n<pre><code class="language-javascript">exports.indexUser = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>{\n    Thing.find({owner:req.params.user}, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, things</span>) </span>{\n        <span class="hljs-keyword">if</span>(err) <span class="hljs-keyword">return</span> res.send(<span class="hljs-number">500</span>, err);\n        res.json(<span class="hljs-number">200</span>, things);\n    });\n};\n</code></pre>\n<p>Warning!!! this method only works right if usernames are absolutely unique between users. The default authentication system that comes with the angular-fullstack generator does not have unique usernames, so you’re probably better off using the _user.<em>id</em> field to determine unique users in your database for now, unless you want to implement unique user names yourself by altering your <strong>/api/user/user.model.js</strong>, <strong>/api/user/user.controller.js</strong>, and your <strong>/app/client/account/signup/signup.controller.js</strong>. Thankfully, you should know how to go about doing all that after reading this guide!</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Dynamic-URLs-using-%24routeParams">PREVIOUS</a> <a href="https://freecodecamp.github.io/wiki/docs/Get-info-about-the-current-user">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Mostaganem",order:5,body:"<p>Mostaganem FreeCodeCamp</p>\n"}},function(e,n){e.exports={title:"Object.getOwnPropertyNames",order:5,body:'<h1>Object.getOwnPropertyNames()</h1>\n<p>The <code>Object.getOwnPropertyNames()</code> method returns an array of all properties (enumerable or not) found directly upon a given object.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Object</span>.getOwnPropertyNames(obj)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>obj</strong></p>\n<p>The object whose enumerable <em>and non-enumerable</em> own properties are to be returned.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff688126%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\n<code>Object.getOwnPropertyNames()</code> returns an array whose elements are strings corresponding to the enumerable <em>and non-enumerable</em> properties found directly upon object. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a <code>for...in</code> loop (or by <code>Object.keys()</code>) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>, <span class="hljs-string">\'c\'</span>];\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.getOwnPropertyNames(arr).sort()); <span class="hljs-comment">// logs \'0,1,2,length\'</span>\n\n<span class="hljs-comment">// Array-like object</span>\n<span class="hljs-keyword">var</span> obj = { <span class="hljs-number">0</span>: <span class="hljs-string">\'a\'</span>, <span class="hljs-number">1</span>: <span class="hljs-string">\'b\'</span>, <span class="hljs-number">2</span>: <span class="hljs-string">\'c\'</span> };\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.getOwnPropertyNames(obj).sort()); <span class="hljs-comment">// logs \'0,1,2\'</span>\n\n<span class="hljs-comment">// Logging property names and values using Array.forEach</span>\n<span class="hljs-built_in">Object</span>.getOwnPropertyNames(obj).forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val, idx, array</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(val + <span class="hljs-string">\' -&gt; \'</span> + obj[val]);\n});\n<span class="hljs-comment">// logs</span>\n<span class="hljs-comment">// 0 -&gt; a</span>\n<span class="hljs-comment">// 1 -&gt; b</span>\n<span class="hljs-comment">// 2 -&gt; c</span>\n\n<span class="hljs-comment">// non-enumerable property</span>\n<span class="hljs-keyword">var</span> my_obj = <span class="hljs-built_in">Object</span>.create({}, {\n  getFoo: {\n    value: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.foo; },\n    enumerable: <span class="hljs-literal">false</span>\n  }\n});\nmy_obj.foo = <span class="hljs-number">1</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.getOwnPropertyNames(my_obj).sort()); <span class="hljs-comment">// logs \'foo,getFoo\'</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Pasta</span>(<span class="hljs-params">grain, size, shape</span>) </span>{\n    <span class="hljs-keyword">this</span>.grain = grain; \n    <span class="hljs-keyword">this</span>.size = size; \n    <span class="hljs-keyword">this</span>.shape = shape; \n}\n\n<span class="hljs-keyword">var</span> spaghetti = <span class="hljs-keyword">new</span> Pasta(<span class="hljs-string">"wheat"</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"circle"</span>);\n\n<span class="hljs-keyword">var</span> names = <span class="hljs-built_in">Object</span>.getOwnPropertyNames(spaghetti).filter(CheckKey);\n<span class="hljs-built_in">document</span>.write(names); \n\n<span class="hljs-comment">// Check whether the first character of a string is \'s\'. </span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckKey</span>(<span class="hljs-params">value</span>) </span>{\n    <span class="hljs-keyword">var</span> firstChar = value.substr(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>); \n    <span class="hljs-keyword">if</span> (firstChar.toLowerCase() == <span class="hljs-string">\'s\'</span>)\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; \n    <span class="hljs-keyword">else</span>\n         <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; \n}\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// size,shape</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Object.keys",order:5,body:'<h1>Object.keys()</h1>\n<p>The <code>Object.keys()</code> method returns an array of a given object’s own enumerable properties, in the same order as that provided by a <code>for...in</code> loop (the difference being that a <code>for-in</code> loop enumerates properties in the prototype chain as well).</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">Object</span>.keys(obj)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>obj</strong></p>\n<p>The object whose enumerable own properties are to be returned.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff688127%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\n<code>Object.keys()</code> returns an array whose elements are strings corresponding to the enumerable properties found directly upon object. The ordering of the properties is the same as that given by looping over the properties of the object manually.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>, <span class="hljs-string">\'c\'</span>];\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(arr)); <span class="hljs-comment">// console: [\'0\', \'1\', \'2\']</span>\n\n<span class="hljs-comment">// array like object</span>\n<span class="hljs-keyword">var</span> obj = { <span class="hljs-number">0</span>: <span class="hljs-string">\'a\'</span>, <span class="hljs-number">1</span>: <span class="hljs-string">\'b\'</span>, <span class="hljs-number">2</span>: <span class="hljs-string">\'c\'</span> };\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(obj)); <span class="hljs-comment">// console: [\'0\', \'1\', \'2\']</span>\n\n<span class="hljs-comment">// array like object with random key ordering</span>\n<span class="hljs-keyword">var</span> an_obj = { <span class="hljs-number">100</span>: <span class="hljs-string">\'a\'</span>, <span class="hljs-number">2</span>: <span class="hljs-string">\'b\'</span>, <span class="hljs-number">7</span>: <span class="hljs-string">\'c\'</span> };\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(an_obj)); <span class="hljs-comment">// console: [\'2\', \'7\', \'100\']</span>\n\n<span class="hljs-comment">// getFoo is property which isn\'t enumerable</span>\n<span class="hljs-keyword">var</span> my_obj = <span class="hljs-built_in">Object</span>.create({}, { getFoo: { value: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.foo; } } });\nmy_obj.foo = <span class="hljs-number">1</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(my_obj)); <span class="hljs-comment">// console: [\'foo\']</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Create a constructor function.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Pasta</span>(<span class="hljs-params">grain, width, shape</span>) </span>{\n    <span class="hljs-keyword">this</span>.grain = grain;\n    <span class="hljs-keyword">this</span>.width = width;\n    <span class="hljs-keyword">this</span>.shape = shape;\n\n    <span class="hljs-comment">// Define a method.</span>\n    <span class="hljs-keyword">this</span>.toString = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">this</span>.grain + <span class="hljs-string">", "</span> + <span class="hljs-keyword">this</span>.width + <span class="hljs-string">", "</span> + <span class="hljs-keyword">this</span>.shape);\n    }\n}\n\n<span class="hljs-comment">// Create an object.</span>\n<span class="hljs-keyword">var</span> spaghetti = <span class="hljs-keyword">new</span> Pasta(<span class="hljs-string">"wheat"</span>, <span class="hljs-number">0.2</span>, <span class="hljs-string">"circle"</span>);\n\n<span class="hljs-comment">// Put the enumerable properties and methods of the object in an array.</span>\n<span class="hljs-keyword">var</span> arr = <span class="hljs-built_in">Object</span>.keys(spaghetti);\n<span class="hljs-built_in">document</span>.write (arr);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// grain,width,shape,toString</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"October 2015 Improvements",order:5,body:'<p>Our open source community has been hard at work throughout September on some major improvements. We’re going to keep up this tempo, and do a special live stream for our first birthday (October 15, 2015). Here are the improvements we just pushed to production:</p>\n<p>###Certification</p>\n<ul>\n<li>New challenges have appeared called “Claim your Front End Developer Certificate” and “Claim your Full Stack Developer Certificate”.</li>\n<li>We’ve built acceptance of our <a href="https://freecodecamp.github.io/wiki/docs/Academic-Honesty-Policy">Academic Honesty Policy</a> into these certificate challenges.</li>\n<li>Certificates are issued programmatically once you meet their requirements.</li>\n<li>Certificates are available right from your Code Portfolio, and publicly viewable to all as long as you haven’t hidden your solutions.</li>\n<li>Each certificate has a unique verifiable URL that employers can check. This makes it is impossible to forge our certificates without access to our production servers.</li>\n</ul>\n<p>###Code Portfolios</p>\n<ul>\n<li>All challenges and their solutions now show up on your code portfolio, including Waypoints.</li>\n<li>You can hide your solutions from other people.</li>\n</ul>\n<p>###Unauthenticated Campers</p>\n<ul>\n<li>You can complete all of our challenges without being hassled to log in.</li>\n<li>Once you complete a challenge, you will be redirected to the next logical challenge, even if you aren’t logged in.</li>\n</ul>\n<p>###Improved challenges</p>\n<ul>\n<li>@berkeleytrue figured out a way to make all challenge solutions 100% sharable. You can copy a URL directly from your browser and share it with others, and they will be able to run your code against the challenge’s tests. URLs update automatically when you run a challenge’s tests.</li>\n<li>We completely rewrote all Bonfire tests to be as transparent as possible. By popular request, we no longer show the Chai tests themselves - just a message clearly explaining what each test is testing.</li>\n<li>By popular request, we added gif-style challenges, and are replacing our video-style challenges with these. All of our old videos will remain available on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">YouTube channel</a>.</li>\n</ul>\n<p>###Wiki improvements</p>\n<ul>\n<li>@rafase282 has nearly finished creating <a href="https://freecodecamp.github.io/wiki/docs/Map">notes for every single challenge in Free Code Camp’s curriculum</a>, including hints and solutions.</li>\n<li>@codenonprofit has started creating “portal” style wiki articles that serve as better entry points into our tangle of 400+ articles.</li>\n</ul>\n<p>###Resolved experiments</p>\n<ul>\n<li><a href="http://Plug.dj">Plug.dj</a> shut down, and our <a href="http://plug.dj">plug.dj</a> room with it. Some of our campers are working on building an open source music app to replace it.</li>\n<li>We delisted several low-traffic casual Gitter rooms from our wiki and created a catch-all <a href="https://gitter.im/freecodecamp/casual">Casual chat room</a> for non-coding-related chat.</li>\n<li>We now recommend campers use their Campsite’s Facebook group for chatting instead of their campsite’s Gitter chatroom. Only a few of our Campsite Gitter chatroooms had active synchronous discussions, and about 1/3rd of all conversations consisted of someone saying “hello” and not getting a response. We’ve delisted all our Campsite Gitter rooms from our Campsite directory. Still, we will keep them open for archival purposes, and you can keep using it if you’d like. Here’s a short <a href="http://blog.freecodecamp.com/2015/09/jump-start-your-local-campsite-with-coffee-and-code.html">blog post</a> about how our Campsites are evolving and growing.</li>\n</ul>\n<p>###Other exciting developments</p>\n<ul>\n<li>We just launched our first-ever <a href="https://teespring.com/get-free-code-camp-t-shirt">t-shirt campaign</a> and added a second campaign for <a href="https://teespring.com/free-code-camp-shirt-eu">EU fulfillment</a>.</li>\n<li>We just launched Commit. Rather than going into detail on it here, read <a href="http://blog.freecodecamp.com/2015/10/commit-to-yourself-commit-to-nonprofit.html">@codenonprofit’s blog post</a>.</li>\n<li>We launched <a href="http://freecodecamp.com/labs">Free Code Camp Labs</a> to showcase some unique projects our campers are building.</li>\n<li>We started gathering <a href="http://freecodecamp.com/stories">Stories from campers</a> and putting them all in one place. These are just a fraction of the campers who’ve advanced their careers and gotten coding jobs after learning with Free Code Camp, but it’s a pretty representative sample.</li>\n</ul>\n<p>###Improvements coming in the next few weeks:</p>\n<ul>\n<li>A clickable hint button on each challenge that cycles through a series of increasingly helpful hints.</li>\n<li>Recommended solutions that you can compare your solution with once you complete each challenge.</li>\n<li>We’ll re-record some of our dated-looking gifs.</li>\n<li>We’ll finish the Get Set for Basejumps with Clementine.js (gif-style challenge)</li>\n<li>We’ll finish the new Get Set for Ziplines (gif-style challenge)</li>\n<li>We’ll move all Zipline and Basejump challenges to gif-style.</li>\n<li>We’ll add a back button to our gif-style challenges.</li>\n<li>We’ll launch our job board.</li>\n<li>We’ll publish several new JSON API and AJAX-related challenges</li>\n<li>We’ll finish a leaderboard creation mechanic designed for teachers to track students and campers to track their friends.</li>\n<li>We’ll finish the Hikes interface (Hikes are Briana Swift’s <a href="https://www.youtube.com/watch?v=q7tlgZg4Q1o&amp;list=PLWKjhJtqVAbmfoj2Th9fvxhHIeqFO7wOy">computer science theory challenges</a>)</li>\n<li>We’ll close the ~30 pull requests that have piled up (thanks, contributors!)</li>\n</ul>\n<p>###And longer term goals we still haven’t forgotten:</p>\n<ul>\n<li>Support for major world languages (<a href="https://trello.com/b/m7zhwXka/fcc-translation">translation is still underway</a>)</li>\n<li>Turning Free Code Camp into a single-page isomorphic app</li>\n<li>Creating a browser-based replacement for Screen Hero / Team Viewer that is well suited to pairing on Free Code Camp.</li>\n<li>React.js curriculum</li>\n<li>D3.js curriculum and data visualization Ziplines</li>\n</ul>\n<p>##Our codebase is improving quickly. If you see something that looks funky or broken, please click that “bug” button and create a GitHub issue for us. Thanks for your patience and support.</p>\n<p>#Happy coding!</p>\n'}},function(e,n){e.exports={title:"October 2015 Summit Agenda",order:5,body:'<p>Our October 3, 2015 Summit will begin at noon EST on Saturday on <a href="http://twitch.tv/freecodecamp">twitch.tv channel</a> and be available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>During this 1 hour live stream, we’ll:</p>\n<ul>\n<li>launch our free Front End and Full Stack Development Certificate programs</li>\n<li>demo our new, more comprehensive portfolio pages</li>\n<li>demo a new way that all our campers can immediately start helping nonprofits</li>\n<li>talk with camper Blake Johnston, who created the Clementine.js boilerplate that Free Code Camp will use for our full stack Basejump challenges</li>\n<li>launch our first-ever t-shirt campaign on <a href="http://teespring.com">teespring.com</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Official Free Code Camp Chat Rooms",order:5,body:'<p>The following are our official chat rooms.</p>\n<p><strong>Please note that all chat rooms listed here are publicly accessible and indexed by search engines, so only share email addresses or other sensitive information in private messages.</strong></p>\n<table>\n<thead>\n<tr>\n<th>Chat Room</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/FreeCodeCamp">FreeCodeCamp</a></td>\n<td>our main chat room - hang out and chat about life and learning to code</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/Help">Help</a></td>\n<td>get help with our Waypoint challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpZiplines">HelpZiplines</a></td>\n<td>get help with our Zipline challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpBonfires">HelpBonfires</a></td>\n<td>get help with our Bonfire challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HelpBasejumps">HelpBasejumps</a></td>\n<td>get help with our Basejump challenges from your fellow campers</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/CodingJobs">CodingJobs</a></td>\n<td>chat about the process of getting a coding job, such as portfolios, networking, and interviewing</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/YouCanDoThis">YouCanDoThis</a></td>\n<td>learning to code is hard - share your feelings and get moral support here</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/PairProgrammingWomen">PairProgrammingWomen</a></td>\n<td>this women-only chat room helps women talk coding with other women if they so desire</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/CodeReview">CodeReview</a></td>\n<td>give and receive constructive feedback from your fellow campers on your projects</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/HalfWayClub">Half Way Club</a></td>\n<td>once you’ve earned your Full Stack Development Certification, prep for nonprofit projects here</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/Casual">Casual</a></td>\n<td>you can chat about your non-coding interests with other campers here</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/LiveCoding">LiveCoding</a></td>\n<td>get set up to code live on our popular <a href="http://twitch.tv">twitch.tv</a> channel</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/CurriculumDevelopment">CurriculumDevelopment</a></td>\n<td>help us improve our open source curriculum</td>\n</tr>\n<tr>\n<td><a href="https://gitter.im/freecodecamp/DataScience">DataScience</a></td>\n<td>help us understand our gigs and gigs of public data</td>\n</tr>\n</tbody>\n</table>\n<p>By joining these chat rooms, you accept our <a href="https://freecodecamp.github.io/wiki/docs/Code-of-Conduct">Code of Conduct</a>.</p>\n'}},function(e,n){e.exports={title:"Other resources that Free Code Camp recommends to nonprofits",order:5,body:'<p>Please note that Free Code Camp is not partnered with, nor do we receive a referral fee from, any of the following providers. We simply want to help guide you toward a solution for your organization.</p>\n<h3>Skills-based Volunteer Organizations:</h3>\n<ul>\n<li><a href="http://www.volunteermatch.com">http://www.volunteermatch.com</a></li>\n<li><a href="http://www.catchafire.org">http://www.catchafire.org</a></li>\n</ul>\n<h3>Building a website:</h3>\n<ul>\n<li><a href="http://www.wix.com/">http://www.wix.com/</a></li>\n<li><a href="https://wordpress.com/">https://wordpress.com/</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/How-to-deploy-a-website-without-writing-any-code-at-all">Build it yourself for free with no code</a></li>\n<li><a href="https://xprs.imcreator.com">XPRS - another tool for building websites for free with no code</a></li>\n</ul>\n<h3>Donor and Volunteer Management Systems</h3>\n<ul>\n<li><a href="http://causesignal.com">http://causesignal.com</a></li>\n<li><a href="https://www.thedatabank.com/">https://www.thedatabank.com/</a></li>\n<li><a href="http://www.donorsnap.com/">http://www.donorsnap.com/</a></li>\n<li><a href="http://www.donorperfect.com/">http://www.donorperfect.com/</a></li>\n<li><a href="https://www.blackbaud.com/fundraising-crm/etapestry-donor-management">https://www.blackbaud.com/fundraising-crm/etapestry-donor-management</a></li>\n<li><a href="http://www.z2systems.com/">http://www.z2systems.com</a></li>\n<li><a href="http://www.regpacks.com/volunteer-management/">http://www.regpacks.com/volunteer-management</a></li>\n<li><a href="http://sumac.com/">http://sumac.com</a></li>\n<li><a href="http://www.volgistics.com">http://www.volgistics.com</a></li>\n</ul>\n<h3>Inventory Management Systems</h3>\n<ul>\n<li><a href="https://www.ezofficeinventory.com/industries/non-profits">https://www.ezofficeinventory.com/industries/non-profits</a></li>\n<li><a href="https://www.ordoro.com">https://www.ordoro.com</a></li>\n<li><a href="http://www.unleashedsoftware.com">http://www.unleashedsoftware.com</a></li>\n</ul>\n<h3>E-Learning platforms</h3>\n<ul>\n<li><a href="http://www.dokeos.com/">http://www.dokeos.com</a></li>\n<li><a href="http://www.efrontlearning.net/">http://www.efrontlearning.net/</a></li>\n<li><a href="https://moodle.org/">https://moodle.org/</a></li>\n<li><a href="https://sakaiproject.org/">https://sakaiproject.org/</a></li>\n</ul>\n<h3>Community Management</h3>\n<ul>\n<li><a href="https://civicrm.org/">https://civicrm.org/</a></li>\n<li><a href="http://tcmgr.com/">http://tcmgr.com/</a></li>\n</ul>\n<h3>Electronic Forms</h3>\n<ul>\n<li><a href="http://www.google.com/forms">http://www.google.com/forms</a></li>\n<li><a href="http://www.typeform.com">http://www.typeform.com</a></li>\n</ul>\n'
}},function(e,n){e.exports={title:"Pair programming and why it is special",order:5,body:"<p>Pair Programming is an Agile Development practice that was born out of the <strong>Extreme Programming</strong> movement.</p>\n<p>Working as a team of [exactly] two, at a single computer, the pair will slide the keyboard and mouse back-and-forth throughout a “pairing session”.  This increases the code quality by providing a “greater than the sum of its parts” effect of two developers working on a single problem domain.</p>\n<p>The increase in quality of the code, combined with the effect of knowledge and understanding on the project being spread across multiple developers, can produce a large savings in cost on the project as a whole.</p>\n<p>In a Test Driven Development (TDD) shop, it is most common for each member of the pair to take turns a) writing a test and b) writing code to pass the test.  This “ping pong” yields a cumulative effect on the overall quality of the final product.</p>\n<p>To be most effective it is important that pairs are intermixed; not the same couple of developers <strong>always</strong> working together.</p>\n<p>Pair programming is considered to be very “social”. It can be akin to a marriage because you learn to cooperate with a peer in a close, give-and-take relationship.  As such it is often very difficult to become comfortable with pair programming.  Some developers simply NEVER feel quite at-home.  In the end, the willingness to share, be a bit vulnerable and work cooperatively toward a better product will make you a far better developer (and a better person overall).</p>\n"}},function(e,n){e.exports={title:"Programming Fundamental",order:5,body:'<blockquote>\n<p>First do it, then do it right, then do it better. This is one fundamental I always keep in mind when developing anything.\nIf you’re a developer wishing to learn something new, regardless of skill-level, remember that as important as it is to read, it’s equally as important to get out there and <em>do</em>.\nCreate a new gist or JSBin, pop open the console and experiment. It’s effing fun.\n— <a href="http://addyosmani.com">Addy Osmani</a></p>\n</blockquote>\n'}},function(e,n){e.exports={title:"Promises",order:5,body:'<p>A new feature of ES6 to help with async programming.</p>\n<h2>syntax</h2>\n<pre><code class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(executor);\n<span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{ ... });\n</code></pre>\n<p><img src="https://mdn.mozillademos.org/files/8633/promises.png" alt="MDN image"></p>\n<p>read more at <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">MDN</a></p>\n'}},function(e,n){e.exports={title:"Pseudoclassical class definition OOp",order:5,body:'<p>###Overview</p>\n<p>Pseudoclassical class definition happens in 2 code blocks instead of one, which happens in other languages like Python and PHP.</p>\n<p>The first block is called the “Constructor Function” which is where attributes of the class is declared. These are the aspects of the class that are unique to each new instance. Example with cars is that brand, color, and location can differ. In the second block of code you declare the methods that will be shared by each instance of the class. Examples are things the car can do, drive forward, stop, open door.</p>\n<h3>Example</h3>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> Car = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">brand, color, location</span>) </span>{\n <span class="hljs-keyword">this</span>.brand = brand;\n <span class="hljs-keyword">this</span>.color = color;\n <span class="hljs-keyword">this</span>.location = location\n};\n\nCar.prototype = {\n move: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">this</span>.location++; },\n stop: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">this</span>.location = <span class="hljs-number">0</span>; },\n};\n</code></pre>\n<p>###Explanation</p>\n<p>The reason for declaring the entire class in 2 blocks is to save on memory when you start creating instances of the class. If the class declaration was “Functional” style then there is a new copy of the method(s) made for <strong>each</strong> instance. By declaring the class “Pseudoclassical” style only a <em>single</em> of copy of the methods are stored in memory.</p>\n<p>When a instance of the class attempt to access a method:</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> x_car = <span class="hljs-keyword">new</span> Car(<span class="hljs-string">\'lexus\'</span>, <span class="hljs-string">\'white\'</span>, <span class="hljs-number">0</span>);\nx_car.move();\n</code></pre>\n<p>The interpreter will actually <em>first</em> fail to find the called method in the object itself since it was made from the Car constructor function. As you can see above there is no reference to any of the methods in the Car constructor function. From there the interpreter searches to the <code>Car.prototype</code> which is now shared between all instances. There the interpreter find the method that was called!</p>\n<p>####Further reading:\n<a href="https://natacseanc.wordpress.com/2015/08/04/javascript-object-create-and-classes/">Natac’s Blog</a></p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript">MDN Classes</a></p>\n'}},function(e,n){e.exports={title:"Pull Request Contribute",order:5,body:'<blockquote>\n<p>A (PR)pull request is a method of submitting contributions to an open source project. It is often the preferred way of submitting contributions to a project using a Distributed Version Control System (DVCS) such as Git.</p>\n</blockquote>\n<p>FreeCodeCamp is an Open Source project and all of the contents are freely editable.</p>\n<ul>\n<li><a href="https://help.github.com/articles/fork-a-repo/">Fork</a> the project on GitHub.</li>\n<li><a href="https://help.github.com/articles/cloning-a-repository/">Clone</a> it to a local machine.  Do not edit online in <a href="http://github.com">github.com</a>, as the editor may cause issues with JSON formatted data.</li>\n<li><a href="https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/">Create a branch</a> with the form <code>fix/some-bug</code> or <code>feature/add-cool-thing</code> and make your changes in that branch and commit them.</li>\n<li><a href="https://help.github.com/articles/pushing-to-a-remote/">Push</a> the branch online (if editing locally).</li>\n<li><a href="https://help.github.com/articles/creating-a-pull-request/">Create a pull request</a> against the <strong>“staging”</strong> branch.</li>\n<li>The title (also called the subject) of your PR should be descriptive of your changes. i.e. <code>fix typo in basic-javascript challenge</code></li>\n<li>If the PR is meant to fix a specific issue, append to the end of your PR’s commit message <code>closes #1337</code>. This tells GitHub to close that issue if the PR is merged.</li>\n<li>Do NOT add issue numbers to the PR’s title. i.e. <code>minor improvements in basic-javascript challenge</code></li>\n</ul>\n<p>These are general guidelines for PR’s that work across most projects. It gives everyone a quick guide to your changes when looking at the commit history of a project.</p>\n<p><em>Note:  Not all pull requests are accepted. FCC project maintainers will explain the reason of non-acceptance.</em></p>\n<h2>Further Reading</h2>\n<ul>\n<li><a href="https://www.youtube.com/playlist?list=PLg7s6cbtAD15G8lNyoaYDuKZSKyJrgwB-">GitHub &amp; Git Foundations Training</a> - How to use Git and GitHub</li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp#contributing">FreeCodeCamp Contribution Guidelines</a></li>\n<li><a href="http://chris.beams.io/posts/git-commit/">How to write Git commit messages</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/How-to-clone-the-FreeCodeCamp-website-on-a-Windows-pc">How to Clone FCC to a Windows PC</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Quick tip keep data in sync",order:5,body:'<p>Say you want something to show up on the user view when you add it to the database. A new <em>thing</em> object will instantly show up in an <em>ng-repeat</em> loop in your HTML view if you simply add it to your local array with</p>\n<pre><code class="language-javascript">\n$scope.awesomeThings.push(newThing);\n</code></pre>\n<p>But you’ll still need to add it to your database collection. Add it to your collection with</p>\n<pre><code class="language-javascript">\n$http.post(<span class="hljs-string">\'/api/things\'</span>, newThing);	\n\n</code></pre>\n<p>But wait! You’ll soon realize that while all the other things in your <em>$scope.awesomeThings</em> array have unique ids assigned by MongoDB (under the <em>thing._id</em> property), your <em>newThing</em> object will not, which will make it hard for you at some point to make database actions on it (deleting it from your database requires you to use its <em>._id</em> property). So what you’ll want to do after you add it to your <em>$scope.awesomeThings</em> array (because we want it to show up on the user’s page immediately). Altogether, your code to add a newThing to your local array and database will look like:</p>\n<pre><code class="language-javascript">$scope.awesomeThings.push(newThing);\n$http.post(<span class="hljs-string">\'/api/things\'</span>, newThing).success(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">thatThingWeJustAdded</span>) </span>{\n	$scope.awesomeThings.pop(); <span class="hljs-comment">// let\'s lose that id-lacking newThing </span>\n	$scope.awesomeThings.push(thatThingWeJustAdded); <span class="hljs-comment">// and add the id-having newThing!</span>\n};\n</code></pre>\n<p>This updates the local array for seemingly instant results for your user and then syncs it to your database and updates the local array in the background with the database’s version of your <em>newThing</em> object, unique <em>._id</em> and all. Notice the callback we pass to the <em>success</em> function receives the new <em>thing</em> back from the database as an argument! This way you can easily add it back to your local scope without too much overhead.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Seed-data">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Dynamic-URLs-using-$routeParams">NEXT</a></p>\n'}},function(e,n){e.exports={title:"RTFM",order:5,body:'<h2>RTFM comments generally useless</h2>\n<blockquote>\n<p>If everybody read the fine manual, most of the questions asked on the internet would go away!</p>\n</blockquote>\n<p><a href="http://meta.stackexchange.com/a/167765">RTFM</a></p>\n<p><strong>“RTFM”</strong> is <strong>rude</strong>, no doubt about it. However, <strong>links to the manual in comments are perfectly acceptable</strong>, and sometimes the only appropriate response to a question.</p>\n<p>So when posting a manual link, be smart. <strong>Drop the RTFM and use nicer wording</strong> so the link survives. Suggestions:</p>\n<ul>\n<li>Check out the manual page: (link)</li>\n<li>See the manual: (link)</li>\n<li>This is explained in the manual: (link)</li>\n</ul>\n<p>If the OP was really lazy:</p>\n<ul>\n<li>Your question is answered in the manual: (link) For future reference, please always remember to look in the manual first. Thanks!</li>\n</ul>\n'}},function(e,n){e.exports={title:"Refresh Your Browser Cache",order:5,body:'<p>You may have to do a “hard refresh” of a page in your browser if you have an out of date, cached version of that website.</p>\n<p>While on the problematic site use the key combination below to trigger a hard refresh depending on your operating system:</p>\n<ul>\n<li>Windows: CTRL + F5</li>\n<li>Mac/Apple: Apple + Shift + R or Command + Shift + R</li>\n<li>Linux: F5</li>\n</ul>\n<p>To learn more about this read: <a href="http://refreshyourcache.com/en/cache/">http://refreshyourcache.com/en/cache/</a></p>\n<p>If a hard refresh doesn’t work, try opening the problematic page in your browser’s private browsing mode.</p>\n'}},function(e,n){e.exports={title:"Registering your Nonprofit to Raise Donations through Free Code Camp Commit",order:5,body:'<p>Our commit program will feature a single nonprofit by default, and give campers the option of browsing through a list of other nonprofits they can pledge toward if they want.</p>\n<p>If you’d like to be added to our list of nonprofits that our campers can commit to, please email us at <a href="mailto:team@freecodecamp.com">team@freecodecamp.com</a> with the following information:</p>\n<ul>\n<li>the URL of a square photo of at least 300x300px that represents your organization (preferably an action shot of what your organization does with people in it)</li>\n<li>a direct link to your donate page, or a page with a an embedded donation button (your donation page needs to have the option of recurring monthly payment, and allow increments of $5, $10, $25 and $50).</li>\n</ul>\n<p>If we accept you, we will give you a special URL that leads directly to your nonprofit’s Commit page. You can share in your social media to spur people to pledge to your nonprofit through Free Code Camp Commit.</p>\n'}},function(e,n){e.exports={title:"Restrict a page to authenticated users",order:5,body:'<p>Let’s say you have a route that you want to restrict to logged-in users; maybe you have a <a href="#">/profile</a> page that lets your users fill in some information about themselves, but it wouldn’t work if they weren’t logged in. Open <strong>/client/app/profile/profile.js</strong>, and add <code>authenticate: true</code> to the options passed to <em>$routeProvider.when</em> like so:</p>\n<pre><code class="language-javascript">    $routeProvider\n      .when(<span class="hljs-string">\'/profile\'</span>, {\n        templateUrl: <span class="hljs-string">\'app/profile/profile.html\'</span>,\n        controller: <span class="hljs-string">\'ProfileCtrl\'</span>,\n        authenticate: <span class="hljs-literal">true</span> <span class="hljs-comment">// restrict to authenticated users</span>\n      });\n</code></pre>\n<p>This way, if the user isn’t authenticated when they try to access the <A href="#">/profile</a> page, they’ll be redirected to your login screen to authenticate before continuing to their profile page.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Get-info-about-the-current-user">PREVIOUS</a> <a href="https://freecodecamp.github.io/wiki/docs/isLoggedInAsync">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Saturday Summit August 2015",order:5,body:'<h3>Free Code Camp’s [August Live Stream] (<a href="https://youtu.be/UhoxoYrJ6Qs">https://youtu.be/UhoxoYrJ6Qs</a>) was the largest yet.</h3>\n<h2>The agenda included:</h2>\n<ul>\n<li>Opening words from Michael</li>\n<li>New front end challenges [3:00] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=3m">https://youtu.be/UhoxoYrJ6Qs?t=3m</a>)</li>\n<li>Newly configured full-stack challenges</li>\n<li>New Nonprofit Projects [12:32] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=12m32s">https://youtu.be/UhoxoYrJ6Qs?t=12m32s</a>)</li>\n<li>Wiki [22:49] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=22m49s">https://youtu.be/UhoxoYrJ6Qs?t=22m49s</a>)</li>\n<li>New chat rooms [29:40] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=29m40s">https://youtu.be/UhoxoYrJ6Qs?t=29m40s</a>)</li>\n<li>New Live Streams [35:34] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=35m34s">https://youtu.be/UhoxoYrJ6Qs?t=35m34s</a>)</li>\n<li>New Internet Radio Station DJ’d by campers [36:30] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=36m30s">https://youtu.be/UhoxoYrJ6Qs?t=36m30s</a>)</li>\n<li>FCC Bot [39:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=39m24s">https://youtu.be/UhoxoYrJ6Qs?t=39m24s</a>)</li>\n<li>Matt Yamamoto Zipline Demo [54:24] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=54m24s">https://youtu.be/UhoxoYrJ6Qs?t=54m24s</a>)</li>\n<li>Closing from Quincy [1:04:15] (<a href="https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s">https://youtu.be/UhoxoYrJ6Qs?t=1h4m15s</a>)</li>\n<li>[Pull Request After Party with Quincy] (<a href="https://youtu.be/r0lCJ_TFYlI">https://youtu.be/r0lCJ_TFYlI</a>)</li>\n</ul>\n<p><a href="http://www.youtube.com/watch?feature=player_embedded&v=UhoxoYrJ6Qs\n" target="_blank">&lt;img src=“https://www.evernote.com/l/AnvmsUWWNeJFNbfm7fDa7SRLmnbn7jafRL4B/image.png”\nalt=“Screen shot from our twitch feed on August 1 2015” width=“560” height=&quot;315&quot;border=“10” /&gt;</a></p>\n'}},function(e,n){e.exports={title:"Saturday Summit November 2015",order:5,body:'<p>Our November 7, 2015 Summit began at noon EDT on <a href="http://twitch.tv/freecodecamp">our twitch.tv channel</a> and was available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>This one-hour live-stream featured:</p>\n<ol>\n<li>Quincy showcasing <a href="https://medium.freecodecamp.com">our new Medium publication</a></li>\n<li>Berkeley explaining our recent curriculum improvements, and how you can contribute, too</li>\n<li>Ben introducing the Challenge-o-matic 1000 tool for creating challenges</li>\n<li>Mike demoing a way to get FCC running on your computer with just a few commands using Vagrant</li>\n<li>Kristian demoing a <a href="http://musare.com/">collaborative modern music app built by campers</a></li>\n<li>Questions from our community</li>\n</ol>\n'}},function(e,n){e.exports={title:"Saturday Summit October 2015",order:5,body:'<p>Our October 3, 2015 Summit began at noon EST on Saturday on <a href="http://twitch.tv/freecodecamp">twitch.tv channel</a> and be available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>During this 1 hour live stream, we’ll:</p>\n<ul>\n<li>launch our free Front End and Full Stack Development Certificate programs</li>\n<li>demo our new, more comprehensive portfolio pages</li>\n<li>demo a new way that all our campers can immediately start helping nonprofits</li>\n<li>talk with camper Blake Johnston, who created the Clementine.js boilerplate that Free Code Camp will use for our full stack Basejump challenges</li>\n<li>launch our first-ever t-shirt campaign on <a href="http://teespring.com">teespring.com</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Searching for Your Issue on Github",order:5,body:'<p>If you still see problems after <a href="https://freecodecamp.github.io/wiki/docs/How-to-Get-Help-on-Gitter">Getting Help on Gitter</a>, you will want to try to see if anyone else has posted about a similar problem.</p>\n<p><img src="http://i.imgur.com/MdrSdQW.gif" alt="gif walking through the subsequent steps to search GitHub for the issue"></p>\n<ol>\n<li>\n<p>Go to FreeCodeCamp’s <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/issues">Github Issues</a> page.</p>\n</li>\n<li>\n<p>Use the search bar to search for already filed issues that may be related to your problem.</p>\n</li>\n</ol>\n<ul>\n<li>If you find one, read it! You can subscribe to get updates about that specific issue by clicking on <code>Subscribe</code> in the sidebar.  You can also comment on the issue if you have something to add.</li>\n<li>If you cannot find any relevant issues you should <a href="https://freecodecamp.github.io/wiki/docs/Creating-a-New-Github-Issue">Create a New Github Issue</a>.</li>\n</ul>\n'}},function(e,n){e.exports={title:"Seed data",order:5,body:'<p>The <em>things</em> that show up on your app’s main view are part of some seed data that is added to your database (including your test and admin users) every time you restart your app (by running <code>grunt serve</code> in the command line). This data is defined in <strong>/server/config/seed.js</strong>.</p>\n<p>You can add, remove, or change data in this file, and it will be written to your database, overwriting any duplicates the next time you run <code>grunt serve</code>. If an object defined in <strong>seed.js</strong> is overwritten, the database will assign a new <em>._id</em> property to it (we’ll cover <em>._id</em> properties in the next section), which may give you some issues later on in testing. To avoid this, you can turn off seeding by setting <code>seedDB: false</code> in <strong>/server/config/environment/development.js</strong>.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Accessing-the-database-from-your-frontend">PREVIOUS</a>\n<a href="https://freecodecamp.github.io/wiki/docs/Quick-tip-keep-data-in-sync">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Select Issues for Contributing Using Labels",order:5,body:'<p>Interested in contributing to FreeCodeCamp (FCC)? Looking for an issue to work on, but not sure where to start? Issue labels can be your guide. These are labels (see table below) used to categorize the variety of issues submitted to FCC. The labels range from <strong>bugs</strong> to <strong>questions</strong> to <strong>curriculum requests</strong>. For example, if an issue has a <strong><em>Wiki</em></strong> label, you can create a Wiki article about that issue - after reading the <a href="https://freecodecamp.github.io/wiki/docs/Wiki-Style-Guide">Wiki Style Guide</a>.</p>\n<p>You can use labels to help you choose which issues to click on, rather than randomly clicking to find one of interest to you. Of course, you can work on and submit PRs for issues without labels. How ever you choose an issue, please be sure to read <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/CONTRIBUTING.md">Guidelines for Contributing</a> before submitting any pull requests.</p>\n<p>Check out the table below for the list of FreeCodeCamp issue labels, along with descriptions (work in progress). Thanks @bugron, @ahstro, @benschenker, for compiling this list of labels and descriptions.</p>\n<p>Note: The labels <strong><em>blocked</em></strong>, <strong><em>confirmed</em></strong>, and <strong><em>QA</em></strong> are also tied to <a href="https://waffle.io/freecodecamp/freecodecamp">Waffle</a>, a management system for FCC (GitHub) issues, and are automatically added and removed by it.</p>\n<table>\n<thead>\n<tr>\n<th>Label</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>accessibility</td>\n<td>This is used for issues that don’t necessarily break the site, but make it harder to use (like when tests used to evaluate while you typed would flicker the whole screen). Also, relevant to enabling the site to be usable for those who may have vision impairment or disabilities.</td>\n</tr>\n<tr>\n<td>accounts</td>\n<td>Camper has a problem with his/her FCC account, such as login problems, losing progress, or profile page is missing some solutions.</td>\n</tr>\n<tr>\n<td>beta</td>\n<td>The issue is related to FCC’s beta site.</td>\n</tr>\n<tr>\n<td>blocked</td>\n<td>When an issue should not be worked on, due to waiting for the creator’s response, more information, or the issue is stale.</td>\n</tr>\n<tr>\n<td>bug</td>\n<td>Confirmed and reproducible bug in FCC’s code and not only, for example, in Internet Explorer.</td>\n</tr>\n<tr>\n<td>chrome</td>\n<td>The issue can only be reproduced in Google Chrome.</td>\n</tr>\n<tr>\n<td>confirmed</td>\n<td>The reported issue has been verified. (It basically says the issue creator has successfully communicated how to replicate the issue, but no one has started working toward a fix).</td>\n</tr>\n<tr>\n<td>curriculum request</td>\n<td>Relates to everything that is requested to be added to current curriculum. The issue requests a new challenge, adding more explanation to a challenge, etc.</td>\n</tr>\n<tr>\n<td>device specific</td>\n<td>The issue presents only for a particular device (smartphone, tablet, desktop, etc).</td>\n</tr>\n<tr>\n<td>Discussing</td>\n<td>The issue is currently on discussion stage.</td>\n</tr>\n<tr>\n<td>duplicate</td>\n<td>The issue is a duplicate of another issue and most likely will be closed.</td>\n</tr>\n<tr>\n<td>easy</td>\n<td>This is used to flag issues that aren’t critical, but should be easy for a camper to fix for their first couple of PRs. Think of these as the camper gateway to becoming a contributor.</td>\n</tr>\n<tr>\n<td>enhancement</td>\n<td>Similar to a Feature Request, but more related to improving existing features rather than adding new ones.</td>\n</tr>\n<tr>\n<td>feature request</td>\n<td>A request to add a feature to FCC. For example, ability to edit or remove bonfires from campers profile page.</td>\n</tr>\n<tr>\n<td>firefox</td>\n<td>The issue can only be reproduced in Mozilla Firefox.</td>\n</tr>\n<tr>\n<td>help wanted</td>\n<td>Owners or issue moderators need campers’ help to investigate or fix the issue.</td>\n</tr>\n<tr>\n<td>hikes</td>\n<td>The issue is related to Hikes (they are currently not available in curriculum).</td>\n</tr>\n<tr>\n<td>ie/edge</td>\n<td>The issue can only be reproduced in Internet Explorer or Microsoft Edge. FCC officially supports only Google Chrome.</td>\n</tr>\n<tr>\n<td>in progress</td>\n<td>Someone is currently making a fix for the issue.</td>\n</tr>\n<tr>\n<td>QA</td>\n<td>(Quality Assurance) When a fix has been submitted and it needs to be reviewed before merging.</td>\n</tr>\n<tr>\n<td>question</td>\n<td>The issue is a question.</td>\n</tr>\n<tr>\n<td>reactify</td>\n<td>Issues related to moving to reactjs.</td>\n</tr>\n<tr>\n<td>resolved</td>\n<td>The issue is resolved/fixed.</td>\n</tr>\n<tr>\n<td>tests</td>\n<td>The issue should be fixed with a test improvement, meaning someone needs to fix asserts.</td>\n</tr>\n<tr>\n<td>todo</td>\n<td>Something that needs to be done in future.</td>\n</tr>\n<tr>\n<td>ux</td>\n<td>(User Experience) Similar to accessibility, but focuses on an issue where campers share their experience or with an issue that leads to a negative user experience. For example, tag is used when something may be too complicated or how to use a feature is difficult to understand.</td>\n</tr>\n<tr>\n<td>wiki</td>\n<td>Relates to FCC’s GitHub Wiki articles. May be a request to create one.</td>\n</tr>\n<tr>\n<td>wontfix</td>\n<td>The issue is not fixable or will not be fixed in near future. An example of could be MS Edge browser support.</td>\n</tr>\n</tbody>\n</table>\n'}},function(e,n){e.exports={title:"Site Improvements August 2015",order:5,body:'<h2>Sunday’s Improvements</h2>\n<ul>\n<li>replaced our getting-started videos with a simple 10-minute process (using GIFs instead of videos)</li>\n<li>doubled the number of our HTML5 and Bootstrap challenges</li>\n<li>replaced Codecademy’s JavaScript and jQuery challenges with our own challenges</li>\n<li>added our own Object-oriented Programming and Functional Programming challenges</li>\n<li>added two new Zipline front end challenges (Personal Portfolio and Simon game), and moved our Ziplines to much earlier in our curriculum</li>\n<li>completely replaced our Field Guide with a searchable, and easily-editable open-source wiki</li>\n<li>made it so your Bonfire code is stored in your browser, so if you leave the page, your code will be there when you come back</li>\n<li>simplified our portfolio pages. You can now click a single button to mirror your Free Code Camp profile with your GitHub profile. Bonfire solutions are no longer shown here, but they’ll eventually be accessible through our API.</li>\n<li>fixed some issues with Brownie Points and Streaks</li>\n<li>improved our Camper News page by removing the (mostly unused) comments and adding one-click upvoting</li>\n<li>added a Creative Commons license to literally all of our images and text</li>\n<li>thanks to Loopback, everything is now an API, and we will soon publish cool ways to interact with Free Code Camp’s (non-sensitive) data</li>\n</ul>\n<h2>FAQ</h2>\n<h3>The challenge I was most recently doing disappeared.</h3>\n<p>You can just keep going. If you have time to go back and try our new challenges, they should be a quick review for you. Otherwise, keep moving forward.</p>\n<h3>Why are you deploying all these improvements at once?</h3>\n<p>We’ve been working on some of the features for months on our Staging branch. Most of them were held up by a single task: our transition to <a href="http://loopback.io/">Loopback</a>. @BerkeleyTrue started working on this back in March.</p>\n<h3>Was deploying everything at once necessary?</h3>\n<p>Probably not. Going forward, we will deploy new code several times a day (as we did prior to the Loopback feature). We plan to start using a <a href="https://en.wikipedia.org/wiki/Continuous_integration">continuous integration</a> and other agile best practices as we reduce our <a href="https://en.wikipedia.org/wiki/Technical_debt">technical debt</a>.</p>\n'}},function(e,n){e.exports={title:"Site Improvements October 2015",order:5,body:'<p>Our open source community has been hard at work throughout September on some major improvements. We’re going to keep up this tempo, and do a special live stream for our first birthday (October 15, 2015). Here are the improvements we just pushed to production:</p>\n<p>###Certification</p>\n<ul>\n<li>New challenges have appeared called “Claim your Front End Developer Certificate” and “Claim your Full Stack Developer Certificate”.</li>\n<li>We’ve built acceptance of our <a href="https://freecodecamp.github.io/wiki/docs/Academic-Honesty-Policy">Academic Honesty Policy</a> into these certificate challenges.</li>\n<li>Certificates are issued programmatically once you meet their requirements.</li>\n<li>Certificates are available right from your Code Portfolio, and publicly viewable to all as long as you haven’t hidden your solutions.</li>\n<li>Each certificate has a unique verifiable URL that employers can check. This makes it is impossible to forge our certificates without access to our production servers.</li>\n</ul>\n<p>###Code Portfolios</p>\n<ul>\n<li>All challenges and their solutions now show up on your code portfolio, including Waypoints.</li>\n<li>You can hide your solutions from other people.</li>\n</ul>\n<p>###Unauthenticated Campers</p>\n<ul>\n<li>You can complete all of our challenges without being hassled to log in.</li>\n<li>Once you complete a challenge, you will be redirected to the next logical challenge, even if you aren’t logged in.</li>\n</ul>\n<p>###Improved challenges</p>\n<ul>\n<li>@berkeleytrue figured out a way to make all challenge solutions 100% sharable. You can copy a URL directly from your browser and share it with others, and they will be able to run your code against the challenge’s tests. URLs update automatically when you run a challenge’s tests.</li>\n<li>We completely rewrote all Bonfire tests to be as transparent as possible. By popular request, we no longer show the Chai tests themselves - just a message clearly explaining what each test is testing.</li>\n<li>By popular request, we added gif-style challenges, and are replacing our video-style challenges with these. All of our old videos will remain available on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">YouTube channel</a>.</li>\n</ul>\n<p>###Wiki improvements</p>\n<ul>\n<li>@rafase282 has nearly finished creating <a href="https://freecodecamp.github.io/wiki/docs/Map">notes for every single challenge in Free Code Camp’s curriculum</a>, including hints and solutions.</li>\n<li>@codenonprofit has started creating “portal” style wiki articles that serve as better entry points into our tangle of 400+ articles.</li>\n</ul>\n<p>###Resolved experiments</p>\n<ul>\n<li><a href="http://Plug.dj">Plug.dj</a> shut down, and our <a href="http://plug.dj">plug.dj</a> room with it. Some of our campers are working on building an open source music app to replace it.</li>\n<li>We delisted several low-traffic casual Gitter rooms from our wiki and created a catch-all <a href="https://gitter.im/freecodecamp/casual">Casual chat room</a> for non-coding-related chat.</li>\n<li>We now recommend campers use their Campsite’s Facebook group for chatting instead of their campsite’s Gitter chatroom. Only a few of our Campsite Gitter chatroooms had active synchronous discussions, and about 1/3rd of all conversations consisted of someone saying “hello” and not getting a response. We’ve delisted all our Campsite Gitter rooms from our Campsite directory. Still, we will keep them open for archival purposes, and you can keep using it if you’d like. Here’s a short <a href="http://blog.freecodecamp.com/2015/09/jump-start-your-local-campsite-with-coffee-and-code.html">blog post</a> about how our Campsites are evolving and growing.</li>\n</ul>\n<p>###Other exciting developments</p>\n<ul>\n<li>We just launched our first-ever <a href="https://teespring.com/get-free-code-camp-t-shirt">t-shirt campaign</a> and added a second campaign for <a href="https://teespring.com/free-code-camp-shirt-eu">EU fulfillment</a>.</li>\n<li>We just launched Commit. Rather than going into detail on it here, read <a href="http://blog.freecodecamp.com/2015/10/commit-to-yourself-commit-to-nonprofit.html">@codenonprofit’s blog post</a>.</li>\n<li>We launched <a href="http://freecodecamp.com/labs">Free Code Camp Labs</a> to showcase some unique projects our campers are building.</li>\n<li>We started gathering <a href="http://freecodecamp.com/stories">Stories from campers</a> and putting them all in one place. These are just a fraction of the campers who’ve advanced their careers and gotten coding jobs after learning with Free Code Camp, but it’s a pretty representative sample.</li>\n</ul>\n<p>###Improvements coming in the next few weeks:</p>\n<ul>\n<li>A clickable hint button on each challenge that cycles through a series of increasingly helpful hints.</li>\n<li>Recommended solutions that you can compare your solution with once you complete each challenge.</li>\n<li>We’ll re-record some of our dated-looking gifs.</li>\n<li>We’ll finish the Get Set for Basejumps with Clementine.js (gif-style challenge)</li>\n<li>We’ll finish the new Get Set for Ziplines (gif-style challenge)</li>\n<li>We’ll move all Zipline and Basejump challenges to gif-style.</li>\n<li>We’ll add a back button to our gif-style challenges.</li>\n<li>We’ll launch our job board.</li>\n<li>We’ll publish several new JSON API and AJAX-related challenges</li>\n<li>We’ll finish a leaderboard creation mechanic designed for teachers to track students and campers to track their friends.</li>\n<li>We’ll finish the Hikes interface (Hikes are Briana Swift’s <a href="https://www.youtube.com/watch?v=q7tlgZg4Q1o&amp;list=PLWKjhJtqVAbmfoj2Th9fvxhHIeqFO7wOy">computer science theory challenges</a>)</li>\n<li>We’ll close the ~30 pull requests that have piled up (thanks, contributors!)</li>\n</ul>\n<p>###And longer term goals we still haven’t forgotten:</p>\n<ul>\n<li>Support for major world languages (<a href="https://trello.com/b/m7zhwXka/fcc-translation">translation is still underway</a>)</li>\n<li>Turning Free Code Camp into a single-page isomorphic app</li>\n<li>Creating a browser-based replacement for Screen Hero / Team Viewer that is well suited to pairing on Free Code Camp.</li>\n<li>React.js curriculum</li>\n<li>D3.js curriculum and data visualization Ziplines</li>\n</ul>\n<p>##Our codebase is improving quickly. If you see something that looks funky or broken, please click that “bug” button and create a GitHub issue for us. Thanks for your patience and support.</p>\n<p>#Happy coding!</p>\n'
}},function(e,n){e.exports={title:"Slack",order:5,body:'<h3>Slack is a popular chatroom service that Free Code Camp outgrew</h3>\n<p><img src="https://www.evernote.com/l/AHRvSgBsEqZMBqugb3gWNG9jSKhPT8Dj5FAB/image.png" alt="Free Code Camp\'s Slack usage stats"></p>\n<p>As much as we enjoyed using this service, it is a poor fit for large open source communities. This said, many open source communities still use Slack, and Slack does nothing to discourage this practice.</p>\n<p>If you’re curious, you can read about <a href="http://blog.freecodecamp.com/2015/06/so-yeah-we-tried-slack-and-we-deeply-regretted-it.html">Slack’s false advertising and the debacle this caused in June 2015</a>.</p>\n<p>Free Code Camp now uses <a href="https://freecodecamp.github.io/wiki/docs/Gitter">Gitter</a>.</p>\n'}},function(e,n){e.exports={title:"Spanish Translation Terminology",order:5,body:"<p>#Spanish terminology alignment</p>\n<p>Para evitar confusión para otros Campers necesitamos alinearnos todos los traductores con la misma terminología. Para ello, hemos creado una lista con las palabras más comúnes y las traducciones que hemos estado utilizando hasta ahora.</p>\n<p>Vale recalcar que todos los términos están abiertos a discusión. En caso se tenga que hacer algún cambio, nos pueden enviar un mensaje directo a través de Slack a @miya o @eabedrapo.</p>\n<p>##FCC terminology</p>\n<p>###Untranslated</p>\n<ul>\n<li>Free Code Camp</li>\n<li>Waypoint</li>\n<li>Bonfire</li>\n<li>Zipline</li>\n<li>Basejump</li>\n<li>Top menu buttons.</li>\n<li>Camper</li>\n<li>Full Stack</li>\n<li>Bug</li>\n</ul>\n<p>##CS terminology</p>\n<p>###Untranslated</p>\n<ul>\n<li>Hardware</li>\n<li>Software</li>\n<li>Bit</li>\n<li>Byte</li>\n<li>Front-end</li>\n<li>Link</li>\n<li>Framework</li>\n<li>Query</li>\n</ul>\n<p>###Translated</p>\n<ul>\n<li>Boolean Logic: Lógica Booleana</li>\n<li>Loop: Búcle</li>\n<li>Computer Science: Informática</li>\n<li>Run (a program): Ejecutar</li>\n<li>Click: Darle click</li>\n<li>Responsive: Adaptable</li>\n</ul>\n<p>##General terminology</p>\n<p>###Translated</p>\n<ul>\n<li>Non-profit: Empresas sin fines de lucro</li>\n<li>Self-paced: Manejados a tu propio ritmo</li>\n</ul>\n<p>##HTML / CSS terminology</p>\n<p>###Non-Traslated</p>\n<ul>\n<li>Web</li>\n<li>Tests &amp; challengeSeeds (they shouldn’t be translated, at least for this first version).</li>\n</ul>\n<p>####To do\nVideo para mostrar a otras personas como colaborar con la traducción y revisión de los archivos.</p>\n<p>####To discuss\nGénero a usar? ejem: “Una de las mejores maneras de mantenerte <strong>motivado</strong> cuando estás aprendiendo…”</p>\n<ul>\n<li>“motivado o motivada” (ambos?)</li>\n</ul>\n"}},function(e,n){e.exports={title:"Start Here",order:5,body:'<h2>If you’re new to Free Code Camp, or just new to the wiki, start here:</h2>\n<h3>Curriculum</h3>\n<ul>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/What-you-will-learn,-and-in-what-sequence-you-will-learn-it">What you will learn, and in what sequence you will learn it</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-Long-Free-Code-Camp-Takes">How long does Free Code Camp take?</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Brownie-Points">What are these brownie points?</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Free-Code-Camp-Front-End-Development-Certificate">The Front End Development Certificate</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Free-Code-Camp-Full-Stack-Development-Certificate">The Full Stack Development Certificate</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Guide-to-Basejumps-Table-of-Contents">Guide to Basejumps</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Basejump-Resources">Basejump Resources</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python">Why JavaScript?</a></p>\n</li>\n</ul>\n<h3>Community</h3>\n<ul>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Code-of-Conduct">Code of Conduct</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Camper-News">Camper News</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Campsites">Campsites</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Official-Free-Code-Camp-Chat-Rooms">Official Chat Rooms</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/camperbot">How to use CamperBot</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile">Join the LinkedIn Community and Find Alumni</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-you-can-stream-your-live-coding-sessions-on-the-Free-Code-Camp-Twitch.tv-channel">Stream your Coding Session on our Twitch.tv page</a></p>\n</li>\n</ul>\n<h3>Nonprofit</h3>\n<ul>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/How-FreeCodeCamp-Nonprofit-Projects-work">How Nonprofit Projects Work</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Free-Code-Camp-completion-language-requirements">Natural Language Requirements</a></p>\n</li>\n<li>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits">Resources that Free Code Camp recommends to Nonprofits Who Don’t Qualify</a></p>\n</li>\n</ul>\n'}},function(e,n){e.exports={title:"Streaks",order:5,body:'<p>Your user profile displays your recent activity. If you get <a href="https://freecodecamp.github.io/wiki/docs/Brownie-Points/">Brownie Points</a> on several consecutive days, you will start a streak.</p>\n<p><img src="https://www.evernote.com/l/AlyDvfhZplROUZxyMN8dIGGd-DQT7Bn8S9oB/image.png" alt="A picture of a camper\'s streak readout showing a 21-day streak"></p>\n<p>This shows everyone that you are highly active in our community, and that you code a lot. When you’re learning to code, it’s important that you <a href="http://www.quora.com/How-does-one-become-a-great-coder/answer/Quincy-Larson">code at least some everyday</a>.</p>\n'}},function(e,n){e.exports={title:"Stream Your Coding Sessions on Twitch.tv",order:5,body:'<p>Live streaming your code is an educational and invigorating experience for the streamer and the audience. If you’ve never seen live coding, check out the popular <a href="http://twitch.tv/freecodecamp">twitch.tv channel</a>. We are actively looking for more streamers of all levels to code JavaScript on the Free Code Camp channel.</p>\n<p>If you…</p>\n<ul>\n<li>Want the immediate positive help and feedback of other coders</li>\n<li>Aren’t afraid to try something new</li>\n<li>Code JavaScript, HTML, or CSS\n<em>you should give it a try!</em></li>\n</ul>\n<p><strong>Please follow these steps to get started:</strong></p>\n<ol>\n<li>\n<p>Get your computer set up to stream. This process varies depending on your operating system, and it usually involves downloading software to integrate with Twitch. Most Free Code Camp users use <a href="https://obsproject.com/forum/resources/setting-up-obs-with-twitch.117/">OBS</a>, but you can find all of the supported software on <a href="http://www.twitch.tv/broadcast">Twitch’s site</a>. Another helpful tutorial connecting OBS and Twitch can be found <a href="http://www.hdpvrcapture.com/wordpress/?p=5951">here</a>.</p>\n</li>\n<li>\n<p>Contact Briana via <a href="https://gitter.im/septimus">gitter</a> or <a href="https://twitter.com/brianamarie132">twitter</a>. She can help you get the stream key to get set up on the Free Code Camp Channel.</p>\n</li>\n<li>\n<p>Have fun streaming!</p>\n</li>\n</ol>\n<p><strong>General rules/guidelines:</strong></p>\n<ul>\n<li>JavaScript, HTML, and CSS only (including libraries and frameworks of course).</li>\n<li>Language and content must be safe-for-work.</li>\n<li>Before streaming, check the channel to see if someone’s already up and give a heads up about your plan to stream in the <a href="https://gitter.im/FreeCodeCamp/LiveCoding">Twitch.tv chat room on gitter</a>.</li>\n<li>Please use a webcam at the same time - the audience wants to see you!</li>\n<li>Use the chat room almost as a pair-programmer. Interact as much as possible and work together for best results.</li>\n<li>Think out-loud as much as possible so that your viewers can understand what you’re thinking and doing.</li>\n<li>No music please. If you need music while you code, use earbuds so it’s not on the stream.</li>\n</ul>\n<p>Please contact Briana via <a href="https://gitter.im/septimus">gitter</a> or <a href="https://twitter.com/brianamarie132">twitter</a> and get started today!</p>\n'}},function(e,n){e.exports={title:"String.fromCharCode",order:5,body:'<h1>String.fromCharCode()</h1>\n<p>The static <code>String.fromCharCode()</code> method returns a string created by using the specified sequence of Unicode values.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">String</span>.fromCharCode(num1[, ...[, numN]])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>num1, …, numN</strong></p>\n<p>A sequence of numbers that are Unicode values.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/wb4w0k66%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nThis method returns a string and not a String object.</p>\n<p>Because <code>fromCharCode()</code> is a static method of String, you always use it as <code>String.fromCharCode()</code>, rather than as a method of a String object you created.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">65</span>, <span class="hljs-number">66</span>, <span class="hljs-number">67</span>);  <span class="hljs-comment">// "ABC"</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> test = <span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">112</span>, <span class="hljs-number">108</span>, <span class="hljs-number">97</span>, <span class="hljs-number">105</span>, <span class="hljs-number">110</span>);\n<span class="hljs-built_in">document</span>.write(test);\n\n<span class="hljs-comment">// Output: plain</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"String.length",order:5,body:'<h1>String.length</h1>\n<p>The <code>length</code> property represents the length of a string.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.length\n</code></pre>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/3d616214%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nThis property returns the number of code units in the string. UTF-16, the string format used by JavaScript, uses a single 16-bit code unit to represent the most common characters, but needs to use two code units for less commonly-used characters, so it’s possible for the value returned by length to not match the actual number of characters in the string.</p>\n<p>For an empty string, length is 0.</p>\n<p>The static property <code>String.length</code> returns the value 1.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> x = <span class="hljs-string">\'Mozilla\'</span>;\n<span class="hljs-keyword">var</span> empty = <span class="hljs-string">\'\'</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Mozilla is \'</span> + x.length + <span class="hljs-string">\' code units long\'</span>);\n<span class="hljs-comment">/* "Mozilla is 7 code units long" */</span>\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'The empty string has a length of \'</span> + empty.length);\n<span class="hljs-comment">/* "The empty string has a length of 0" */</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"every good boy does fine"</span>;\n        <span class="hljs-keyword">var</span> start = <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">var</span> end = str.length - <span class="hljs-number">1</span>;\n        <span class="hljs-keyword">var</span> tmp = <span class="hljs-string">""</span>;\n        <span class="hljs-keyword">var</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(end);\n\n        <span class="hljs-keyword">while</span> (end &gt;= <span class="hljs-number">0</span>) {\n            arr[start++] = str.charAt(end--);\n        }\n\n<span class="hljs-comment">// Join the elements of the array with a </span>\n        <span class="hljs-keyword">var</span> str2 = arr.join(<span class="hljs-string">\'\'</span>);\n        <span class="hljs-built_in">document</span>.write(str2);\n\n<span class="hljs-comment">// Output: enif seod yob doog yreve</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Test Me",order:5,body:"<p>This is a test 1.</p>\n"}},function(e,n){e.exports={title:"Test issue with Bonfire truncate a string",order:5,body:'<p>Hi everyone,</p>\n<p>There is an issue with “Bonfire:Truncate a String”.\nFirst heres the code:</p>\n<pre><code>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">truncate</span><span class="hljs-params">(str, num)</span> </span>{\n  <span class="hljs-keyword">var</span> truncd = <span class="hljs-string">\'\'</span>;\n  <span class="hljs-keyword">if</span> (str.length &gt; num) {\n    truncd = str.slice(<span class="hljs-number">0</span>, num - <span class="hljs-number">3</span>) + <span class="hljs-string">\'...\'</span>;\n    <span class="hljs-keyword">return</span> truncd;\n  }\n\n  <span class="hljs-keyword">return</span> str;\n}\ntruncate(<span class="hljs-string">"A-tisket a-tasket A green and yellow basket"</span>, <span class="hljs-number">1</span>, <span class="hljs-string">""</span>);\n</code></pre>\n<p>It should not pass the first test that is\n“A-tisket a-tasket A green and yellow basket”, 1 should return “A-tisket…”</p>\n<p>According to this test the console should shoe &quot;A-tisket…“but the console says&quot;A-tisket a-tasket A green and yellow bask…”</p>\n<p>but to my surprise it still passed… I hope I will get an explaination to this</p>\n'}},function(e,n){e.exports={title:"The main advantages of Free Code Camp",order:5,body:"<p>Free Code Camp’s main advantages are that we’re accessible to busy adults who want to change careers.</p>\n<p>Specifically, we’re:</p>\n<ul>\n<li>Free</li>\n<li>Self-paced</li>\n<li>Browser-based</li>\n</ul>\n"}},function(e,n){e.exports={title:"Tips on How To Become A Good Pair Programmer",order:5,body:'<p>Pair programming is a great way to learn programming! <a href="https://freecodecamp.github.io/wiki/docs/Why-You-Should-Try-Pair-Programming">Read why.</a></p>\n<ol>\n<li>\n<p><strong>Communicate well with your partner.</strong> Voice chat will make communication easy, let you focus on learning, and will allow you to use your time effectively.</p>\n</li>\n<li>\n<p><strong>Before you start coding:</strong> decide together with your partner how your workflow should look so that both you and your partner can benefit from the time spent coding. An example of a good workflow:</p>\n<ul>\n<li>Read through and discuss the problem to make sure you understand it.</li>\n<li>Solve the problem with pseudo-code by identifying the steps you need to take in order to get from the given inputs to the expected result.</li>\n<li>Create your actual solution</li>\n</ul>\n</li>\n<li>\n<p><strong>When explaining things:</strong> Ask questions to guide your partner’s thoughts instead of just showing the answer right away. This will let him or her think about the problem and make it easier for them to learn.</p>\n</li>\n<li>\n<p><strong>Finally</strong>, be <em>open to your partner’s ideas</em>, <em>respect each other</em> and <strong>have fun! :)</strong></p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"Translating Free Code Camp into Your Native Language",order:5,body:'<p>Our translation effort is driven by bilingual campers like you.</p>\n<p>First we plan to create wiki articles in your language for all of Free Code Camp’s challenges. We plan to eventually incorporate these translations into Free Code Camp itself.</p>\n<p>If you’re are bilingual, and have time to help us, please join our <a href="https://gitter.im/FreeCodeCamp/Translators">translation chat room</a>.</p>\n'}},function(e,n){e.exports={title:"Twitch",order:5,body:'<p>Free Code Camp uses <a href="http://Twitch.tv">Twitch.tv</a> to broadcast live streams. These can be anything from live pair programming to their monthly Summit, where big news events and new developments are announced.</p>\n<p>All levels of coders are encouraged to stream on the Free Code Camp twitch channel. If this is something that would interest you, please contact Briana on <a href="https://gitter.im/brianamarie">gitter</a> or on <a href="https://twitter.com/brianamarie132">twitter</a>.</p>\n<p>More information on how to stream can be found <a href="https://freecodecamp.github.io/wiki/docs/Stream-Your-Coding-Sessions-on-Twitch.tv">here</a>.</p>\n<p>You can find the channel here: <a href="http://www.twitch.tv/freecodecamp">http://www.twitch.tv/freecodecamp</a></p>\n'}},function(e,n){e.exports={title:"Using Github Pages for your front end development projects",order:5,body:'<p>@freecodecamp <a href="https://twitter.com/FreeCodeCamp/status/648707819965837312">asked me nicely</a> to explain how I use github (and github pages) instead of codepen for my front-end projects. Here’s the how and why of it, starting with why.</p>\n<h2>Benefits</h2>\n<p>I love <a href="http://Codepen.io">Codepen.io</a>, it’s a wonderful, easy-to-use tool for simple front-end experimentation. But as the fcc projects got more complex, I realized coding locally was going to save me a bunch of headaches. My text-editor and <a href="https://incident57.com/codekit/">codekit</a> combo are just waaay faster.</p>\n<ul>\n<li>Autocomplete</li>\n<li>Compile everything (codepen was really dragging trying to compile Jade)</li>\n<li>Better auto-refresh</li>\n<li>Built in bower</li>\n<li>Git versioning</li>\n<li>Improved screen real-estate experience</li>\n</ul>\n<h2>Git to Github</h2>\n<p>Since I’m already saving locally, and using git for version control, I figured might as well upload to Github. Plus, Github has a fantastic, free service for front-end projects called <a href="https://pages.github.com/">Github Pages</a>. Just update your repo and your changes are live.</p>\n<p>How it works is simple. Github checks if your repository has a branch called <code>gh-pages</code> and serves any code that’s sitting in that branch. No back-end stuff here, but HTML, CSS and JS work like a charm.</p>\n<h2>Make it Work</h2>\n<h3>First things first</h3>\n<p>Let’s make a new folder for your project. I’ll use the <a href="http://freecodecamp.com/challenges/zipline-stylize-stories-on-camper-news">Camper News</a> project as my example.</p>\n<p>Got to your work directory and make a new one. You can do this in the terminal (or not).</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_06_PM.png" alt="Project Directory"></p>\n<p>Now, go into the project directory, and (for sure in the terminal this time) use the command <code>git init</code>. Note, this tutorial assumes <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">you have git installed</a>.</p>\n<p>Alright, awesome. Now we’re ready to work.</p>\n<h3>Next steps</h3>\n<p>Create some files in your campNews directory. I don’t know, maybe an index.html and probably app.css and app.js, or whatever naming convention you prefer. Put your code in these files. Alright, now we’re ready for our first commit. It takes <strong>two steps</strong>.</p>\n<ol>\n<li><code>git add -A</code> will prep all these new files and the new code inside them</li>\n<li><code>git commit -m \'relevant message\'</code> will commit all the work you’ve done to the branch you’re currently on (‘master’ by default)</li>\n</ol>\n<h3>The key to this whole thing</h3>\n<p>OK, so far we’re still local. There’s some stuff we gotta do to take our work and move it to github. It’s at this point I like to switch branches. Remember - github only serves from gh-pages, and if you’ve followed along so far, your branch is called ‘master’. Let’s make a new (local) gh-pages branch.</p>\n<p><code>git checkout -b gh-pages</code> will create it, copy all the work from master into gh-pages and switch me over to the branch. Phew.</p>\n<p><code>git branch -d master</code> will get rid of the master branch. Sounds crazy I know, but what do we need it for? Just think of gh-pages as your NEW master branch.</p>\n<p>Now, <code>git add -A</code> and <code>git commit -m \'relevant message\'</code> again, just in case. And be prepared to leave your editor and terminal and go online for the first time.</p>\n<p>Go to your github profile and create a new repo. Name it something relevant, like campNews.</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_49_PM.png" alt="New Repo"></p>\n<p>Once it’s created, go in and grab the HTTPS clone URL. (Ignore the files in my screenshot, your repo will be empty at this point).</p>\n<p><img src="https://raw.githubusercontent.com/gkobilansky/campNews/gh-pages/images/Fullscreen_10_29_15__12_51_PM.png" alt="clone url"></p>\n<h3>Putting it all together</h3>\n<p>And you can leave the online world. Back to the terminal! Let’s connect our local project to this github repo. All it takes is one command.</p>\n<p><code>git remote add origin &lt;server&gt;</code> Just replace server with the HTTPS url you just copied. So my command looks like this:</p>\n<p><code>git remote add origin https://github.com/gkobilansky/campNews.git</code>.</p>\n<p>OK, so far we’ve:</p>\n<ol>\n<li>Created our project</li>\n<li>Versioned it in git</li>\n<li>Commited some changes</li>\n<li>Switched it to the ‘gh-pages’ branch</li>\n<li>Connected it to github</li>\n</ol>\n<h3>Last step!</h3>\n<p>Push you project to github. Again, simple:</p>\n<p><code>git push origin gh-pages</code></p>\n<p>That command will make sure your latest commits get uploaded to github. Once you’ve done this at least once, your project should be available http://<em>username</em>.github.io/<em>repository</em>, so for me it’s <a href="http://gkobilansky.github.io/campNews">http://gkobilansky.github.io/campNews</a>.</p>\n<p>Once this is all done, the process just repeats itself:</p>\n<ol>\n<li><code>git add -A</code></li>\n<li><code>git commit -m \'relevant message\'</code></li>\n<li><code>git push origin gh-pages</code></li>\n</ol>\n<p>Granted, steeper learning curve than <a href="http://codepen.io">codepen.io</a>, but faster and more flexible once you get the hang of it.</p>\n<p>Happy coding!</p>\n<p>PS. Thanks to <a href="http://rogerdudler.github.io/git-guide/">this guide</a> by Roger Dudler for keeping things simple.</p>\n'}},function(e,n){e.exports={title:"Vadodara",order:5,body:"<p>Learn to Code Vadodara!</p>\n"}},function(e,n){e.exports={title:"Waypoint Access Array Data with Indexes",order:5,body:'<h1>Access Array Data with Indexes</h1>\n<p>We can access the data inside arrays using indexes.</p>\n<p>Array indexes are written in the same bracket notation that strings use, except that instead of specifying a character, they are specifying an entry in the array.</p>\n<p>For example:</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3];\narray<span class="hljs-keyword">[</span>0]; //equals 1\nvar data = array<span class="hljs-keyword">[</span>1];\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Add Alt Text to an Image for Accessibility",order:5,body:"<p><code>alt</code> attributes, also known as alt text, are what browsers will display if they fail to load the image. alt attributes are also important for blind or visually impaired users to understand what an image portrays. And search engines also look at alt attributes.</p>\n<p>In short, every image should have an alt attribute!</p>\n<p>You can add an alt attribute right in the img element like this: <code>&lt;img src=&quot;www.your-image-source.com/your-image.jpg&quot; alt=&quot;your alt text&quot;/&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Borders Around your Elements",order:5,body:"<p>CSS borders have attributes like <code>style</code>, <code>color</code> and <code>width</code>.</p>\n<p>For example, if we wanted to create a red, 5 pixel border around an HTML element, we could use this class: <code>&lt;style&gt; .thin-red-border { border-color: red; border-width: 5px; border-style: solid; } &lt;/style&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Different Margins to Each Side of an Element",order:5,body:"<p>CSS allows you to control the margin of an element on all four sides with <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Different Padding to Each Side of an Element",order:5,body:'<p>CSS allows you to control the padding of an element on all four sides with <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-left</code> attributes.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-top</span>:<span class="hljs-value"> <span class="hljs-number">40px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-right</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding-left</span>:<span class="hljs-value"> <span class="hljs-number">40px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Add Elements within your Bootstrap Wells",order:5,body:"<h1>Add Elements within your Bootstrap Wells</h1>\n<p>Once you have gone deep enough in <code>divs</code> you can start adding your Bootstrap buttons.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Font Awesome Icons to all of our Buttons",order:5,body:"<h1>Add Font Awesome Icons to all of our Buttons</h1>\n<p><code>&lt;i class=&quot;fa fa-trash&quot;&gt;&lt;/i&gt;</code> Will add a trash can icon.</p>\n<p><code>&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt;</code> Will add an info icon.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Font Awesome Icons to our Buttons",order:5,body:"<h1>Add Font Awesome Icons to our Buttons</h1>\n<p>Font Awesome is a convenient library of icons. These icons are vector graphics, stored in the .svg file format. These icons are treated just like fonts. You can specify their size using pixels, and they will assume the font size of their parent HTML elements.</p>\n<p><code>&lt;i class=&quot;fa fa-thumbs-up&quot;&gt;&lt;button class=&quot;btn btn-block btn-primary&quot;&gt;Like&lt;/i&gt;&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Add ID Attributes to Bootstrap Elements",order:5,body:"<h1>Add ID Attributes to Bootstrap Elements</h1>\n<p>Recall that in addition to class attributes, you can give each of your elements an id attribute.</p>\n<p>Each id should be unique to a specific element. Remember that you can give an element an id like this: <code>&lt;div class=&quot;well&quot; id=&quot;center-well&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Add Images to your Website",order:5,body:"<p>You can add images to your website by using the <code>img</code> element, and point to an specific image’s URL using the <code>src</code> attribute.</p>\n<p>An example of this would be <code>&lt;img src=&quot;www.your-image-source.com/your-image.jpg&quot;&gt;</code>. Note that in most cases, img elements are self-closing.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add New Properties to a JavaScript Object",order:5,body:"<h1>Add New Properties to a JavaScript Object</h1>\n<p>You can add new properties to existing JavaScript objects the same way you would modify them. Here is how: <code>myDog.bark = &quot;woof-woof&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Add Placeholder Text to a Text Field",order:5,body:"<p>Your placeholder text is what appears in your text input before your user has inputed anything.</p>\n<p>You can create placeholder text like so: <code>&lt;input type=&quot;text&quot; placeholder=&quot;this is placeholder text&quot;&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add Rounded Corners with a Border Radius",order:5,body:'<p>To make round corners it is all about <code>border-radius</code> and pixels.</p>\n<p>You can specify a border-radius with pixels. This will affect how rounded the corners are.</p>\n<pre><code><span class="hljs-class">.thick-green-border</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">border-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-width</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-style</span>:<span class="hljs-value"> solid</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Add Two Numbers with JavaScript",order:5,body:"<h1>Add Two Numbers with JavaScript</h1>\n<p>JavaScript uses the <code>+</code> symbol for addition. It can also be used instead of <code>parseInt()</code> but that is beyond this.</p>\n<p><code>var sum = 10 + 10;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Add a Negative Margin to an Element",order:5,body:"<p>An element’s <code>margin</code> controls the amount of space between an element’s border and surrounding elements. If you set an element’s margin to a <strong>negative value</strong>, the element will grow <strong>larger</strong>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Add a Submit Button to a Form",order:5,body:'<p>You will need to create a <code>button</code> element. Here’s an example submit button: <code>&lt;button type=&quot;submit&quot;&gt;this button submits the form&lt;/button&gt;</code>.</p>\n<pre><code>&lt;<span class="hljs-tag">form</span> action=<span class="hljs-string">"/submit-cat-photo"</span>&gt;\n  &lt;<span class="hljs-tag">input</span> type=<span class="hljs-string">"text"</span> placeholder=<span class="hljs-string">"cat photo URL"</span>&gt;\n  &lt;<span class="hljs-tag">button</span> type=<span class="hljs-string">"submit"</span>&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Add your JavaScript Slot Machine Slots",order:5,body:'<h1>Add your JavaScript Slot Machine Slots</h1>\n<p>For this part we should notify if they same number is returned three times or return <code>null</code> otherwise.</p>\n<pre><code><span class="hljs-keyword">if</span>(slotOne !== slotTwo || slotTwo !== slotThree){\n      <span class="hljs-keyword">return</span> (<span class="hljs-literal">null</span>);\n    }\n</code></pre>\n<p>If slot one and two are different, or slot two and three are not the same, then return <code>null</code>.</p>\n'
}},function(e,n){e.exports={title:"Waypoint Adjust the Margin of an Element",order:5,body:'<p>An element’s <code>margin</code> controls the amount of space between an element’s <code>border</code> and surrounding elements.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Adjusting the Padding of an Element",order:5,body:'<p>HTML elements are essentially little rectangles. Three important attributes control the space that surrounds each HTML element: <code>padding</code>, <code>margin</code>, and <code>border</code>. An element’s padding controls the amount of space between the element and its border.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">20px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Apply the Default Bootstrap Button Style",order:5,body:'<h1>Apply the Default Bootstrap Button Style</h1>\n<p>Bootstrap has a button class called <code>btn-default</code></p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container-fluid"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">h3</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"text-primary text-center"</span>&gt;</span>jQuery Playground<span class="hljs-tag">&lt;/<span class="hljs-title">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"well"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"well"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-default"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Bring your JavaScript Slot Machine to Life",order:5,body:'<h1>Bring your JavaScript Slot Machine to Life</h1>\n<p>Let’s use the jQuery selector <code>$(&quot;.slot&quot;)</code> to select all of the slots.</p>\n<p>Once they are all selected, we can use bracket notation to access each individual slot:</p>\n<pre><code><span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">0</span>]).html(slotOne);\n<span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">1</span>]).html(slotTwo);\n<span class="hljs-variable">$(</span><span class="hljs-variable">$(</span><span class="hljs-string">".slot"</span>)[<span class="hljs-number">2</span>]).html(slotThree);\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Build JavaScript Objects",order:5,body:'<h1>Build JavaScript Objects</h1>\n<p>Objects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through what are called properties.</p>\n<p>Here’s a sample object:</p>\n<pre><code>var cat = {\n <span class="hljs-string">"name"</span>: <span class="hljs-string">"Whiskers"</span>,\n <span class="hljs-string">"legs"</span>: <span class="hljs-number">4</span>,\n <span class="hljs-string">"tails"</span>: <span class="hljs-number">1</span>,\n <span class="hljs-string">"enemies"</span>: [<span class="hljs-string">"Water"</span>, <span class="hljs-string">"Dogs"</span>]\n};\n</code></pre>\n<p>Objects are useful for storing data in a structured way, and can represents real world objects, like a cats.</p>\n'}},function(e,n){e.exports={title:"Waypoint Call out Optional Actions with Button Info",order:5,body:"<h1>Call out Optional Actions with Button Info</h1>\n<p>Bootstrap comes with several pre-defined colors for buttons. The <code>btn-info</code> class is used to call attention to optional actions that the user can take. Note that these buttons still need the <code>btn</code> and<code>btn-block</code> classes.</p>\n<p><code>&lt;button class= &quot;btn btn-block btn-info&quot;&gt;Info&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Center Text with Bootstrap",order:5,body:"<h1>Center Text with Bootstrap</h1>\n<p>Now that we’re using Bootstrap, we can center our heading elements to make them look better. All we need to do is add the class text-center to our h1 and h2 elements.</p>\n<p>Remember that you can add several classes to the same element by separating each of them with a space, like this: <code>&lt;h2 class=&quot;text-red text-center&quot;&gt;your text&lt;/h2&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Change Text Inside an Element Using jQuery",order:5,body:"<h1>Change Text Inside an Element Using jQuery</h1>\n<p>Using jQuery, you can change the text between the start and end tags of an element. You can even change HTML markup.</p>\n<p>jQuery has a function called <code>.html()</code> that lets you add HTML tags and text within an element. Any content previously within the element will be completely replaced with the content you provide using this function.</p>\n<p>Here’s how you would rewrite and italicize the text of our heading:</p>\n<p><code>$(&quot;h3&quot;).html(&quot;&lt;i&gt;jQuery Funhouse&lt;/i&gt;&quot;);</code></p>\n<p>jQuery also has a similar function called <code>.text()</code> that only alters text without adding tags. So when using <code>.html()</code> please remember that you will be editing the whole markup and not just the text.</p>\n"}},function(e,n){e.exports={title:"Waypoint Change Text with Click Events",order:5,body:"<h1>Change Text with Click Events</h1>\n<p>When a click event happens, we can use Ajax to update an HTML element with the following code <code>$(&quot;.message&quot;).html(&quot;Here is the message&quot;);</code></p>\n<p>This tells jQuery to use the class <code>message</code> as the selector and to that, change the HTML to have the string provide, we can also ass custom html elements wrapped in quotation marks.</p>\n"}},function(e,n){e.exports={title:"Waypoint Change the CSS of an Element Using jQuery",order:5,body:'<h1>Change the CSS of an Element Using jQuery</h1>\n<p>We can also change the CSS of an HTML element directly with jQuery.</p>\n<p>Query has a function called <code>.css()</code> that allows you to change the CSS of an element.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"#target1"</span>).css(<span class="hljs-string">"color"</span>, <span class="hljs-string">"red"</span>);\n\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Change the Color of Text",order:5,body:"<p>CSS allows us to change  many styles. To change the color of an element we use <code>color</code>.</p>\n<p>Here’s how you would set your h2 element’s text color to blue: <code>&lt;h2 style=&quot;color: blue&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Change the Font Size of an Element",order:5,body:"<p>Font size is controlled by the <code>font-size</code> CSS attribute, like this: <code>h1 { font-size: 30px; }</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Check Radio Buttons and Checkboxes by Default",order:5,body:"<p>You can set a checkbox or radio button to be checked by default using the checked attribute.</p>\n<p>To do this, just add the word “checked” to the inside of an input element. For example, <code>&lt;input type=&quot;radio&quot; name=&quot;test-name&quot; checked&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Check the Length Property of a String Variable",order:5,body:"<h1>Check the Length Property of a String Variable</h1>\n<p>Data structures have properties. For example, strings have a property called <code>.length</code> that will tell you how many characters are in the string.</p>\n<p><code>lastNameLength = lastName.length;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Clone an Element Using jQuery",order:5,body:"<h1>Clone an Element Using jQuery</h1>\n<p>jQuery has a function called<code>clone()</code> that makes a copy of an element.</p>\n<p>For example, if we wanted to copy target2 from our left-well to our right-well, we would use <code>$(&quot;#target2&quot;).clone().appendTo(&quot;#right-well&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Comment out HTML",order:5,body:'<p>Commenting is a way that you can leave comments within your code without affecting the code itself.</p>\n<p>It is also a convenient way to make code inactive without having to delete it entirely.</p>\n<p>You can start a comment with <code>&lt;!-- and end a comment with --&gt;</code>.</p>\n<pre><code><span class="hljs-comment">&lt;!--\n&lt;h1&gt;Hello World&lt;/h1&gt;\n\n&lt;h2&gt;CatPhotoApp&lt;/h2&gt;\n\n&lt;p&gt;Hello Paragraph&lt;/p&gt;\n--&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Comment your JavaScript Code",order:5,body:"<h1>Comment your JavaScript Code</h1>\n<p>Comments are a great way to leave notes to yourself and to other people who will later need to figure out what it does. Any code in it will be ignored.</p>\n<p>Let’s take a look at the two ways you can write comments in JavaScript.</p>\n<ul>\n<li>The double-slash comment will comment out the remainder of the text on the current line:</li>\n</ul>\n<p><code>// This is a comment.</code></p>\n<ul>\n<li>The slash-star-star-slash comment will comment out everything between the <code>/*</code> and the <code>*/</code> characters:</li>\n</ul>\n<p><code>/* This is also a comment */</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Concatenate Strings with .concat",order:5,body:"<p><code>.concat()</code> can be used to merge the contents of two arrays into one.</p>\n<p><code>array = array.concat(otherArray);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Condense arrays with reduce",order:5,body:'<p>Reduce can be useful for condensing an array of numbers into one value.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>4,5,6,7,8];\nvar singleVal = 0;\n// Only change code below this line.\n\nvar singleVal =<span class="hljs-function"> array.reduce(</span>function(previousVal, currentVal<span class="hljs-function">)</span>{\n\n <span class="hljs-instruction"> return </span>previousVal+currentVal;\n\n}<span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Construct JavaScript Objects with Functions",order:5,body:'<h2>Construct JavaScript Objects with Functions</h2>\n<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\n<pre><code><span class="hljs-comment">// Let\'s add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.</span>\n<span class="hljs-keyword">var</span> Car = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  <span class="hljs-keyword">this</span>.wheels = <span class="hljs-number">4</span>;\n  <span class="hljs-keyword">this</span>.engines = <span class="hljs-number">1</span>;\n  <span class="hljs-keyword">this</span>.seats = <span class="hljs-number">1</span>;\n};\n\n<span class="hljs-keyword">var</span> myCar = <span class="hljs-keyword">new</span> Car();\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Convert JSON Data to HTML",order:5,body:'<h1>Convert JSON Data to HTML</h1>\n<p>Once you know how to get data from the JSON call then is time to learn how to iterate through it. We can use the .map() method to loop through our data and modify our HTML elements.</p>\n<p>Here is a code that does that:</p>\n<pre><code class="language-js"><span class="hljs-comment">// calling map on the json variable and using a custom callback function.</span>\njson.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n\n  <span class="hljs-comment">// Adding each object keys</span>\n  <span class="hljs-keyword">var</span> keys = <span class="hljs-built_in">Object</span>.keys(val);\n  <span class="hljs-comment">// Generating new html</span>\n  html += <span class="hljs-string">"&lt;div class = \'cat\'&gt;"</span>;\n  <span class="hljs-comment">// Adding the custom html to each key</span>\n  keys.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>) </span>{\n\n    html += <span class="hljs-string">"&lt;b&gt;"</span> + key + <span class="hljs-string">"&lt;/b&gt;: "</span> + val[key] + <span class="hljs-string">"&lt;br&gt;"</span>;\n\n  });\n\n  html += <span class="hljs-string">"&lt;/div&gt;&lt;br&gt;"</span>;\n\n});\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Count Backwards With a For Loop",order:5,body:'<h1>Count Backwards With a For Loop</h1>\n<p>A for loop can also count backwards, so long as we can define the right conditions.</p>\n<p>In order to count backwards by twos, we’ll need to change our <code>initialization</code>, <code>condition</code>, and <code>final-expression</code>.</p>\n<p>We’ll start at <code>i = 10</code> and loop while <code>i &gt; 0</code>. We’ll decrement <code>i</code> by <code>2</code> each loop with <code>i -= 2</code>.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourArray = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">10</span>; i &gt; <span class="hljs-number">0</span>; i -= <span class="hljs-number">2</span>) {\n\n  ourArray.push(i);\n\n}\n</code></pre>\n<p>ourArray will now contain <code>[10,8,6,4,2]</code></p>\n'}},function(e,n){e.exports={title:"Waypoint Create Bootstrap Wells",order:5,body:'<h1>Create Bootstrap Wells</h1>\n<p>Bootstrap has a class called <code>well</code> that can create a visual sense of depth for your columns.</p>\n<p>Nest one div element with the class well within each of your <code>col-xs-6 div</code> elements.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n  &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n      &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span>&gt;\n\n\n\n      &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n      &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span>&gt;\n\n\n\n      &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Create Decimal Numbers with JavaScript",order:5,body:"<h1>Create Decimal Numbers with JavaScript</h1>\n<p>JavaScript number variables can have decimals. <code>var myDecimal = 2.8;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Block Element Bootstrap Button",order:5,body:"<h1>Create a Block Element Bootstrap Button</h1>\n<p>Normally, your button elements are only as wide as the text that they contain. By making them block elements, your button will stretch to fill your page’s entire horizontal space. Note that these buttons still need the <code>btn</code> class.</p>\n<p><code>&lt;button class=&quot;btn btn-block&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Bootstrap Button",order:5,body:"<h1>Create a Bootstrap Button</h1>\n<p>Bootstrap has its own styles for button elements, which look much better than the plain HTML ones.</p>\n<p><code>&lt;button type=&quot;submit&quot; class=&quot;btn&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Bootstrap Headline",order:5,body:"<h1>Create a Bootstrap Headline</h1>\n<p><code>&lt;h3 class=&quot;text-primary text-center&quot;&gt; jQuery Playground &lt;/h3&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Bootstrap Row",order:5,body:"<h1>Create a Bootstrap Row</h1>\n<p>Create a div element with the class row. <code>&lt;div class=&quot;row&quot;&gt;&lt;/div&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Bulleted Unordered List",order:5,body:'<p>HTML has a special element for creating unordered lists, or bullet point-style lists.</p>\n<p>Unordered lists start with a <code>&lt;ul&gt;</code> element. Then they contain some number of <code>&lt;li&gt;</code> elements.</p>\n<p>For example:</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>milk<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>cheese<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>\n</code></pre>\n<p>would create a bullet point-style list of “milk” and “cheese”.</p>\n'}},function(e,n){e.exports={title:"Waypoint Create a Class to Target with jQuery Selectors",order:5,body:"<h1>Create a Class to Target with jQuery Selectors</h1>\n<p>Not every class needs to have corresponding CSS. Sometimes we create classes just for the purpose of selecting these elements more easily using jQuery.</p>\n<p>For this we use the <code>target</code> class on the <code>button</code> elements.</p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Custom Heading",order:5,body:'<h1>Create a Custom Heading</h1>\n<p>Using <code>div</code> and the custom grid layout we can create our own heading.</p>\n<pre><code>&lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"row"</span>&gt;\n   &lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"col-xs-8"</span>&gt;\n     &lt;<span class="hljs-tag">h2</span> class=<span class="hljs-string">"text-primary text-center"</span>&gt;CatPhotoApp&lt;/h2&gt;\n   &lt;/div&gt;\n   &lt;<span class="hljs-tag">div</span> class=<span class="hljs-string">"col-xs-4"</span>&gt;\n     &lt;<span class="hljs-tag">a</span> href=<span class="hljs-string">"#"</span>&gt;&lt;<span class="hljs-tag">img</span> class=<span class="hljs-string">"img-responsive thick-green-border"</span> src=<span class="hljs-string">"https://bit.ly/fcc-relaxing-cat"</span>&gt;&lt;/a&gt;\n   &lt;/div&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Create a Form Element",order:5,body:"<p>You can build web forms that actually submit data to a server using nothing more than pure HTML. You can do this by specifying an action on your <code>form</code> element.</p>\n<p>For example: <code>&lt;form action=&quot;/url-where-you-want-to-submit-form-data&quot;&gt;&lt;/form&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Create a JavaScript Slot Machine",order:5,body:'<h1>Create a JavaScript Slot Machine</h1>\n<p>For this we have to generate three random numbers using the formula they give us and not the general one. <code>Math.floor(Math.random() * (3 - 1 + 1)) + 1;</code></p>\n<pre><code>slotOne = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\nslotTwo = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\nslotThree = Math.<span class="hljs-built_in">floor</span>(Math.random() * (<span class="hljs-number">3</span> - <span class="hljs-number">1</span> + <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Create a Set of Checkboxes",order:5,body:"<p>Checkboxes are a type of input.</p>\n<ul>\n<li>Each of your checkboxes should be nested within its own label element.</li>\n<li>All related checkbox inputs should have the same name attribute.</li>\n</ul>\n<p>Here’s an example of a checkbox: <code>&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;personality&quot;&gt; Loving&lt;/label&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Set of Radio Buttons",order:5,body:"<p>You can use radio buttons for questions where you want the user to only give you one answer.</p>\n<p>Radio buttons are a type of input. They should all be nested in their own label element. Furthermore, all related radio buttons should have the same name attribute.</p>\n<p>Here’s an example of a radio button: <code>&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;indoor-outdoor&quot;&gt; Indoor&lt;/label&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Create a Text Field",order:5,body:"<p>Text inputs are a convenient way to get input from your user.</p>\n<p>You can create one like this: <code>&lt;input type=&quot;text&quot;&gt;</code>. Note that input elements are self-closing.</p>\n"}},function(e,n){e.exports={title:"Waypoint Create an Ordered List",order:5,body:'<p>HTML has a special element for creating ordered lists, or numbered-style lists.</p>\n<p>Ordered lists start with a <code>&lt;ol&gt;</code> element. Then they contain some number of <code>&lt;li&gt;</code> elements.</p>\n<p>For example:</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>hydrogen<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>helium<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>\n</code></pre>\n<p>would create a numbered list of “hydrogen” and “helium”.</p>\n'}},function(e,n){e.exports={title:"Waypoint Declare JavaScript Objects as Variables",order:5,body:'<h2>Declare JavaScript Objects as Variables</h2>\n<p>This has a simple format. You declare your variable and have it equal to an object in the form <code>{ key: value}</code></p>\n<pre><code>var car = {\n  <span class="hljs-string">"wheels"</span>:<span class="hljs-number">4</span>,\n  <span class="hljs-string">"engines"</span>:<span class="hljs-number">1</span>,\n  <span class="hljs-string">"seats"</span>:<span class="hljs-number">5</span>\n};\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Declare JavaScript Variables",order:5,body:"<h1>Declare JavaScript Variables</h1>\n<p>When we store data in a data structure, we call it a variable. JavaScript variables are written in <code>camel case</code>. An example of camel case is: <code>camelCase</code>.</p>\n<p>You can declare a variable this way <code>var myName = &quot;Rafael&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Declare String Variables",order:5,body:"<h1>Declare String Variables</h1>\n<p>A String variable. It is nothing more than a “string” of characters. JavaScript strings are always wrapped in quotes.</p>\n<p><code>var myFirstName = 'Rafael';</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Delete HTML Elements",order:5,body:"<p>Deleting elements is very simple. All you have to do is remove everything from the opening to the closing of the element and it will be removed. No extra code is needed.</p>\n"}},function(e,n){e.exports={title:"Waypoint Delete Properties from a JavaScript Object",order:5,body:'<h1>Delete Properties from a JavaScript Object</h1>\n<p>We can also delete properties from objects like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">delete</span> ourDog.bark;\n</code></pre>\n<p>The <strong>delete operator</strong> removes a property from an object.</p>\n<h3>Syntax</h3>\n<p><code>delete expression</code> where expression should evaluate to a property reference, e.g.:</p>\n<pre><code class="language-js"><span class="hljs-keyword">delete</span> object.property\n<span class="hljs-keyword">delete</span> object[<span class="hljs-string">\'property\'</span>]\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>object</strong>  The name of an object, or an expression evaluating to an object.</p>\n<p><strong>property</strong>   The property to delete.</p>\n<h3>Return value</h3>\n<p>Throws in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode">strict</a> mode if the property is an own non-configurable property (returns false in non-strict). Returns true in all other cases.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete">Read more</a></p>\n'}},function(e,n){e.exports={title:"Waypoint Delete your jQuery Functions",order:5,body:"<h1>Delete your jQuery Functions</h1>\n<p>To delete the functions it is just as any other piece of code that you want to remove, select it and delete with the keyboard.</p>\n"}},function(e,n){e.exports={title:"Waypoint Disable an Element Using jQuery",order:5,body:"<h1>Disable an Element Using jQuery</h1>\n<p>You can also change the non-CSS properties of HTML elements with jQuery. For example, you can disable buttons.</p>\n<p>When you disable a button, it will become grayed-out and can no longer be clicked.</p>\n<p>jQuery has a function called <code>.prop()</code> that allows you to adjust the properties of elements.</p>\n<p>Here’s how you would disable all buttons: <code>$('#button').prop('disabled', true);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Ditch Custom CSS for Bootstrap",order:5,body:'<h1>Ditch Custom CSS for Bootstrap</h1>\n<p>We can clean up our code and make our Cat Photo App look more conventional by using Bootstrap’s built-in styles instead of the custom styles we created earlier.</p>\n<p>All you need to know is the built in <a href="http://getbootstrap.com/css/">classes</a>.</p>\n'}},function(e,n){e.exports={title:"Waypoint Divide One Number by Another with JavaScript",order:5,body:"<h1>Divide One Number by Another with JavaScript</h1>\n<p>JavaScript uses use the <code>/</code> symbol for division. <code>var quotient = 66 / 33;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Fill in the Blank with Placeholder Text",order:5,body:'<p>Web developers traditionally use <strong>lorem ipsum</strong> text as placeholder text. It’s called lorem ipsum text because those are the first two words of a famous passage by Cicero of Ancient Rome.</p>\n<p><strong>lorem ipsum</strong> text has been used as placeholder text by typesetters since the 16th century, and this tradition continues on the web.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Filter Arrays with filter",order:5,body:'<p>Filter is a useful method that can filter out values that don’t match a certain criteria.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5,6,7,8,9,10];\n  // Only change code below this line.<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.filter(</span>function(val<span class="hljs-function">)</span> {\n <span class="hljs-instruction"> return </span>val &lt;= 5;\n}<span class="hljs-function">)</span>;\n</code></pre>\n'
}},function(e,n){e.exports={title:"Waypoint Find Numbers with Regular Expressions",order:5,body:"<h1>Find Numbers with Regular Expressions</h1>\n<p>We can use special selectors in Regular Expressions to select a particular type of value.</p>\n<p>One such selector is the digit selector <code>\\d</code> which is used to grab the numbers in a string.</p>\n<p>It is used like this: <code>/\\d+/g</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Find White Space with Regular Expressions",order:5,body:"<h1>Find White Space with Regular Expressions</h1>\n<p>We can also use selectors like<code>\\s</code> to find spaces in a string.</p>\n<p>It is used like this:</p>\n<p><code>/\\s+/g</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Generate Random Fractions with JavaScript",order:5,body:"<h1>Generate Random Fractions with JavaScript</h1>\n<p>JavaScript has a <code>Math.random()</code> function that generates a random decimal number.</p>\n"}},function(e,n){e.exports={title:"Waypoint Generate Random Whole Numbers with JavaScript",order:5,body:"<p>It’s great that we can create random decimal numbers, but it’s even more useful if we lot more useful to generate a random whole number.</p>\n<p>To achieve this we can multiply the random number by ten and use the <code>Math.floor()</code> to convert the decimal number to a whole number</p>\n<p><code>Math.floor(Math.random()*10)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Generate Random Whole Numbers within a Range",order:5,body:'<h1>Generate Random Whole Numbers within a Range</h1>\n<blockquote>\n<p>We can use a certain mathematical expression to get a random number between two numbers.</p>\n</blockquote>\n<p><code>Math.floor(Math.random() * (max - min + 1)) + min</code></p>\n<p><strong>See Also:</strong> :scroll: <a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Generate-Random-Whole-Numbers-within-a-Range#explanation"><strong>Explanation</strong></a> | <a href="https://stackoverflow.com/questions/1527803/generating-random-numbers-in-javascript-in-a-specific-range/1527820#1527820">Explanation in SO</a></p>\n<h2>Explanation</h2>\n<blockquote>\n<p><code>Math.random()</code> creates a floating point number between <code>0</code> (inclusive) and <code>1</code> (exclusive)</p>\n</blockquote>\n<p><strong>Q:</strong> Create a random <strong>whole</strong> number between <code>2</code> (inclusive, min) and <code>6</code> (inclusive, max) i.e. create a random <em>whole</em> number between <code>min</code> (<em>inclusive</em>) and max (<em>inclusive</em>)</p>\n<p><strong>A:</strong> <code>Math.floor(Math.random() * (6 - 2 + 1)) + 2</code></p>\n<p>Let’s write <code>Math.random() * max</code> which creates a floating point number between <code>0</code> (inclusive) and <code>max</code> (<em>exclusive</em>).</p>\n<p>E.g. <code>Math.random() * 6</code> generates a random floating point number between <code>0</code> (inclusive) and <code>6</code> (<em>exclusive</em>).</p>\n<hr>\n<p>But we need to generate a whole number between <code>0</code> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>) first. So we do a trick :wink:.</p>\n<p>What if we create a number between <code>0</code> and <code>max + 1</code>. That way, we also include the <code>max</code> number. And then apply the <code>Math.floor</code> method on the result to get a whole number between <strong><code>0</code></strong> (<em>inclusive</em>, min) and <code>max</code> (<em>inclusive</em>).</p>\n<p>We can write it as <code>Math.floor(Math.random() * (max + 1))</code>.</p>\n<p>E.g. <code>Math.floor(Math.random() * (6 + 1))</code> generates a random floating point number between <strong><code>0</code></strong> (<em>inclusive</em>, min) and <strong><code>6</code></strong> (<em>inclusive</em>, max).</p>\n<p><strong><code>0 1 2 3 4 5 6</code></strong></p>\n<blockquote>\n<p>The <code>Math.random() * (6 + 1)</code> part generates a floating point number between <code>0</code> (<em>inclusive</em>) and <code>7</code> (<em>exclusive</em>).</p>\n</blockquote>\n<p><strong><code>0..1..2..3..4..5..6..</code></strong></p>\n<hr>\n<p>But that doesn’t solve our given question yet :disappointed:. We need to generate a random whole number between <strong><code>min</code></strong> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>). So we need another trick :wink:.</p>\n<p>What if we write <code>Math.floor(Math.random() * ((max + 1) - min))</code> that will generate a whole number between <code>0</code> and <code>(max + 1) - min</code>.</p>\n<p>E.g. <code>Math.floor(Math.random() * ((6 + 1) - 2))</code> <strong>=</strong> <code>Math.floor(Math.random() * 5)</code> that will generate a whole number between <code>0</code> (inclusive) and <code>4</code> (inclusive).</p>\n<p><strong><code>0 1 2 3 4</code></strong></p>\n<hr>\n<p>But still the question is unsolved :disappointed:. We need the random number between <code>min</code> (<strong>inclusive</strong>) and <code>max</code> (<strong>inclusive</strong>).</p>\n<p>So we simply write <code>Math.floor(Math.random() * ((max + 1) - min)) + min</code> :stuck_out_tongue_winking_eye:.</p>\n<p>E.g. <code>Math.floor(Math.random() * ((6 + 1) - 2)) + 2</code> <strong>=</strong> <code>Math.floor(Math.random() * 5) + 2</code></p>\n<p><strong><code>2 3 4 5 6</code></strong></p>\n<p><strong>Now this answers our given question. <code>Math.floor(Math.random() * (max - min + 1) + min</code> correctly generates a random number between <code>min</code> (<em>inclusive</em>) and <code>max</code> (<em>inclusive</em>) i.e. it generates a random whole number between <code>2</code> (inclusive) and <code>6</code> (inclusive).</strong> :smiley:</p>\n'}},function(e,n){e.exports={title:"Waypoint Get JSON with the jQuery getJSON Method",order:5,body:'<h1>Get JSON with the jQuery getJSON Method</h1>\n<p>Application Programming Interfaces - are tools that computers use to communicate with one another.</p>\n<p>Most web APIs transfer data in a format called JSON. JSON stands for JavaScript Object Notation. JSON is nothing more than object properties and their current values, sandwiched between a <code>{</code> and a <code>}</code>.</p>\n<p>These properties and their values are often referred to as “key-value pairs”.</p>\n<p>Here is a sample of what it looks like.</p>\n<pre><code class="language-js">$.getJSON(<span class="hljs-string">"/json/cats.json"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">json</span>) </span>{\n\n   $(<span class="hljs-string">".message"</span>).html(<span class="hljs-built_in">JSON</span>.stringify(json));\n\n });\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Give Each Element a Unique ID",order:5,body:"<h1>Give Each Element a Unique ID</h1>\n<p>We will also want to be able to use jQuery to target each button by its unique id. So we add an unique id to each button.</p>\n"}},function(e,n){e.exports={title:"Waypoint Give a Background Color to a Div Element",order:5,body:"<p>You can set an element’s background color with the <code>background-color</code> attribute.</p>\n<p>For example, if you wanted an element’s background color to be green, you’d use <code>.green-background { background-color: green; }</code> within your <code>style</code> element.</p>\n"}},function(e,n){e.exports={title:"Waypoint Give your JavaScript Slot Machine some stylish images",order:5,body:"<h1>Give your JavaScript Slot Machine some stylish images</h1>\n<p>We’ve already set up the images for you in an array called images. We can use different indexes to grab each of these.</p>\n<p>Here’s how we would set the first slot to show a different image depending on which number its random number generates:</p>\n<p><code>$($('.slot')[0]).html('&lt;img src = &quot;' + images[slotOne-1] + '&quot;&gt;');</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Headline with the h2 Element",order:5,body:'<p>You can create different levels of Heading elements by using <strong>h1, h2, h3, h4, h5, h6</strong> which will result on different sizes.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint House our page within a Bootstrap Container Fluid Div",order:5,body:'<h1>House our page within a Bootstrap Container Fluid Div</h1>\n<p>To make the content responsive, we use the <code>container-fluid</code> class.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n&lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Import a Google Font",order:5,body:"<p>To import a font from Google or any other site, this is the format that you should follow: <code>&lt;link href=&quot;http://fonts.googleapis.com/css?family=Lobster&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Inform with the Paragraph Element",order:5,body:'<p><code>p</code> elements are the preferred element for normal-sized paragraph text on websites. P is short for “paragraph”.</p>\n<p>You can create a p element like so: <code>&lt;p&gt;I\'m a p tag!&lt;/p&gt;</code>.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Hello Paragraph<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Inherit Styles from the Body Element",order:5,body:'<p>The <code>body</code> element can be style just like any other.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace\n  </span></span></span>}\n\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Invert Regular Expression Matches with JavaScript",order:5,body:"<h1>Invert Regular Expression Matches with JavaScript</h1>\n<p>Use<code>/\\S/gi</code>; to match everything that isn’t a space in the string.</p>\n<p>You can invert any match by using the uppercase version of the selector <code>\\s</code> versus <code>\\S</code> for example.</p>\n"}},function(e,n){e.exports={title:"Waypoint Iterate Odd Numbers With a For Loop",order:5,body:'<h1>Iterate Odd Numbers With a For Loop</h1>\n<p>For loops don’t have to iterate one at a time. By changing our <code>final-expression</code>, we can count by even numbers.</p>\n<p>We’ll start at <code>i = 0</code> and loop while <code>i &lt; 10</code>. We’ll increment <code>i</code> by 2 each loop with <code>i += 2</code>.</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> ourArray = [];\n\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i += <span class="hljs-number">2</span>) {\n\n  ourArray.push(i);\n\n}\n</code></pre>\n<p>ourArray will now contain <code>[0,2,4,6,8]</code></p>\n'}},function(e,n){e.exports={title:"Waypoint Iterate over Arrays with map",order:5,body:'<p>Using <em>map</em> is the best way to iterate through an array or object. Map uses a function to pretty much do whatever you want it to do. It will pass each value to the callback function.</p>\n<pre><code>//Use map to<span class="hljs-instruction"> add </span>three to each value in the<span class="hljs-instruction"> array\n</span>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.map(</span>function(val<span class="hljs-function">)</span>{\n <span class="hljs-instruction"> return </span>val + 3;\n}<span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Iterate with JavaScript For Loops",order:5,body:'<h1>Iterate with JavaScript For Loops</h1>\n<p>The most common type of JavaScript loop is called a <code>for loop</code> because it runs <code>for</code> a specific number of times.</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> ourArray</span> = [];\n<span class="hljs-keyword">for</span>(<span class="hljs-variable"><span class="hljs-keyword">var</span> i</span> = <span class="hljs-number">0</span>; i <span class="hljs-type">&lt; 5; i++) {\n  ourArray.push(i);\n}\n</span></code></pre>\n<p>ourArray will now contain [0,1,2,3,4]</p>\n<h2>More about for loops</h2>\n<pre><code><span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) {  <span class="hljs-comment">// There are 3 parts here</span>\n</code></pre>\n<p>There are three parts to for loop.  They are separated by semicolons.</p>\n<ol>\n<li>\n<p>The initialization: <code>var i = 0;</code> - This code runs only once at the start of the loop. It’s usually used to declare the counter variable (with <code>var</code>) and initialize the counter (in this case it is set to 0).</p>\n</li>\n<li>\n<p>The condition: <code>i &lt; 5;</code> - The loop will run as long as this is <code>true</code>. That means that as soon as <code>i</code> is equal to 5, the loop will stop looping.  Note that the inside of the loop will never see <code>i</code> as 5 because it will stop before then.  If this condition is initially <code>false</code>, the loop will never execute.</p>\n</li>\n<li>\n<p>The increment: <code>i++</code> - This code is run at the end of each loop. It’s usually a simple increment (<code>++</code> operator), but can really be any mathematical transformation. It is used to move the counter (<code>i</code>) forward (or backwards, or whatever.</p>\n</li>\n</ol>\n'}},function(e,n){e.exports={title:"Waypoint Iterate with JavaScript While Loops",order:5,body:'<h1>Iterate with JavaScript While Loops</h1>\n<p>Another type of JavaScript loop is called a <code>while loop</code> because it runs <code>while</code> something is true, and stops once that something is no longer true.</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> ourArray</span> = [];\n<span class="hljs-variable"><span class="hljs-keyword">var</span> i</span> = <span class="hljs-number">0</span>;\n<span class="hljs-keyword">while</span>(i <span class="hljs-type">&lt; 5) {\n  ourArray.push(i);\n  i++;\n}\n</span></code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Join Strings with .join",order:5,body:"<p>We can use the <code>.join()</code> method to join each element in an array into a string separated by whatever delimiter you provide as an argument to the join operation.</p>\n<p><code>var joinMe = joinMe.join(&quot; &quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Label Bootstrap Buttons",order:5,body:'<h1>Label Bootstrap Buttons</h1>\n<p>Just like we labeled our <a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Label-Bootstrap-Wells">wells</a>, we want to label our buttons.</p>\n'}},function(e,n){e.exports={title:"Waypoint Label Bootstrap Wells",order:5,body:"<h1>Label Bootstrap Wells</h1>\n<p>You can add labels to the wells by using the headers <code>&lt;h4&gt;</code> above the well divs.</p>\n"}},function(e,n){e.exports={title:"Waypoint Learn how Script Tags and Document Ready Work",order:5,body:'<h1>Learn how Script Tags and Document Ready Work</h1>\n<p>For some reason FCC likes to introduce <code>jQuery</code> before JavaScript itself.</p>\n<p>To add JS to your HTML, you need a <code>script</code> tag.  Your browser will run any JavaScript inside a script element, including jQuery.</p>\n<p>Inside your script element, add this code: <code>$(document).ready(function() {</code> to your script. Then close it on the following line (still inside your script element) with: <code>});</code></p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript"> $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n\n});</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Line up Form Elements Responsively with Bootstrap",order:5,body:'<h1>Line up Form Elements Responsively with Bootstrap</h1>\n<p>We line up the form elements the same way we do with others, using divs.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-7"</span>&gt;&lt;input type=<span class="hljs-string">"text"</span> <span class="hljs-type">class</span>=<span class="hljs-string">"form-control"</span> placeholder=<span class="hljs-string">"cat photo URL"</span> required&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=col-xs-<span class="hljs-number">5</span>&gt;&lt;button type=<span class="hljs-string">"submit"</span> <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-primary"</span>&gt;&lt;i <span class="hljs-type">class</span>=<span class="hljs-string">"fa fa-paper-plane"</span>&gt;&lt;/i&gt; Submit&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Link to External Pages with Anchor Elements",order:5,body:"<p><code>a</code> elements, also known as anchor elements, are used to link to content outside of the current page.</p>\n<p>Here’s an example: <code>&lt;p&gt;Here's a &lt;a href=&quot;http://freecodecamp.com&quot;&gt; link to Free Code Camp&lt;/a&gt; for you to follow.&lt;/p&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Make Circular Images with a Border Radius",order:5,body:'<p>You can also use percentage to <code>border-radius</code> to make things round.</p>\n<pre><code><span class="hljs-class">.thick-green-border</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">border-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-width</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-style</span>:<span class="hljs-value"> solid</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">50%</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Make Dead Links using the Hash Symbol",order:5,body:"<p>Replace your a element’s <code>href</code> attribute with a <code>#</code>, also known as a hash symbol, to turn it into a dead link. Sometimes you want to add a elements to your website before you know where they will link.</p>\n<p>This is also handy when you’re changing the behavior of a link using jQuery, which we’ll learn about later.</p>\n"}},function(e,n){e.exports={title:"Waypoint Make Images Mobile Responsive",order:5,body:"<h1>Make Images Mobile Responsive</h1>\n<p>When using Bootstrap, if you want an image to be responsive, all you have to do is add the class <code>img-responsive</code> to it. <code>&lt;img class=&quot;img-responsive&quot; src=&quot;http://bit.ly/fcc-running-cats&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Make Instances of Objects with a Constructor Function",order:5,body:'<p>A function that creates objects is called a <em>constructor</em>, my favorite way of creating objects when you have to create more than one of the same object. You can also edit the second object to add more properties if needed. This is called creating <em>instances</em> of an object.</p>\n<p>Each new instance of this object inherits all the properties and methods of your original object.</p>\n<pre><code>var Car =<span class="hljs-function"> function(</span><span class="hljs-function">)</span> {\n   this.wheels = 4;\n};\n\n// New<span class="hljs-instruction"> instance </span>of Car object.\nvar myCar =<span class="hljs-instruction"> new </span>Car(<span class="hljs-function">)</span>;\n\n//Add the property <span class="hljs-string">"engines"</span> to myCar,<span class="hljs-instruction"> and </span>make it a number.\nmyCar.engines = 1;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Make Object Properties Private",order:5,body:'<p>Objects have their own attributes, called <em>properties</em>, and their own functions, called <em>methods</em>.</p>\n<p>You can use the <code>this</code> keyword to reference <em>public properties and methods</em> of the current objects. However, when You need to create private ones, so they are not accessible from the outside of the object.</p>\n<p>For that, you just remove the keyword <code>this</code> from the object property or method declaration.</p>\n<pre><code><span class="hljs-keyword">var</span> Bike = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  speed = <span class="hljs-number">100</span>; <span class="hljs-comment">// private</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUnit</span><span class="hljs-params">(value)</span> </span>{ <span class="hljs-comment">// private</span>\n    <span class="hljs-keyword">return</span> value + <span class="hljs-string">"KM/H"</span>;\n  }\n\n  <span class="hljs-keyword">this</span>.getSpeed = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{  <span class="hljs-comment">// public</span>\n    <span class="hljs-keyword">return</span> addUnit(speed);\n  };\n\n};\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Make Unique Objects by Passing Parameters to our Constructor",order:5,body:'<h1>Make Unique Objects by Passing Parameters to our Constructor</h1>\n<p>When you have a constructor but don’t want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> Car = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">wheels, seats, engines</span>) </span>{\n\n  <span class="hljs-keyword">this</span>.wheels = wheels;\n\n  <span class="hljs-keyword">this</span>.seats = seats;\n\n  <span class="hljs-keyword">this</span>.engines = engines;\n\n};\n</code></pre>\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\n<p>This will result in:</p>\n<pre><code class="language-js">{\n\n  wheels: <span class="hljs-number">6</span>,\n\n  seats: <span class="hljs-number">3</span>,\n\n  engines: <span class="hljs-number">1</span>\n\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Manipulate Arrays With pop()",order:5,body:"<h1>Manipulate Arrays With pop()</h1>\n<p>Another way to change the data in an array is with the <code>.pop()</code> function.</p>\n<p><code>.pop()</code> is used to “pop” a value off of the end of an array. We can retrieve this value by performing <code>pop()</code> in a variable declaration.</p>\n<p>Any type of variable can be “popped” off of an array.</p>\n"}},function(e,n){e.exports={title:"Waypoint Manipulate Arrays With push()",order:5,body:"<h1>Manipulate Arrays With push()</h1>\n<p>Not only can you <code>pop()</code> data off of the end of an array, you can also <code>push()</code> data onto the end of an array.</p>\n<p><code>myArray.push([&quot;dog&quot;, 3]);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Manipulate Arrays With shift()",order:5,body:"<h1>Manipulate Arrays With shift()</h1>\n<p><code>shift()</code> removes the first element unlike <code>pop()</code> which removes the last.</p>\n"}},function(e,n){e.exports={title:"Waypoint Manipulate Arrays With unshift()",order:5,body:"<h1>Manipulate Arrays With unshift()</h1>\n<p><code>myArray.unshift('Paul');</code> Basically you call <code>unshift</code> and pass what was deleted.</p>\n"}},function(e,n){e.exports={title:"Waypoint Manipulate JavaScript Objects",order:5,body:"<h1>Manipulate JavaScript Objects</h1>\n<p>We can add properties to objects like this:</p>\n<p><code>myObject.myProperty = &quot;myValue&quot;;</code></p>\n<p>We can also delete them like this:</p>\n<p><code>delete(myObject.myProperty);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Modify Array Data With Indexes",order:5,body:'<h1>Modify Array Data With Indexes</h1>\n<p>We can also modify the data stored in arrays by using indexes.</p>\n<p>For example:</p>\n<pre><code>var ourArray = [<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>];\nourArray[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>; <span class="hljs-comment">// equals [1,2,1]</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Multiply Two Numbers with JavaScript",order:5,body:"<h1>Multiply Two Numbers with JavaScript</h1>\n<p>JavaScript uses use the <code>*</code> symbol for multiplication.</p>\n<p><code>var product = 8 * 10;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Nest Many Elements within a Single Div Element",order:5,body:'<p>The <code>div</code> element, also known as a division element, is a general purpose container for other elements.</p>\n<p>The div element is probably the most commonly used HTML element of all. It’s useful for passing the CSS of its own class declarations down to all the elements that it contains.</p>\n<p>Just like any other non-self-closing element, you can open a <code>div</code> element with <code>&lt;div&gt;</code> and close it on another line with <code>&lt;/div&gt;</code>.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">div</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Things cats love:<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">ul</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>cat nip<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>laser pointers<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>lasagna<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n <span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">p</span>&gt;</span>Top 3 things cats hate:<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>flea treatment<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>thunder<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>other cats<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>\n <span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Nest an Anchor Element within a Paragraph",order:5,body:"<p>Nesting is simple, just add one element inside another: <code>&lt;p&gt; click here for &lt;a href=&quot;http://www.catphotoapp.com&quot;&gt;cat photos&lt;/a&gt;&lt;/p&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Nest one Array within Another Array",order:5,body:"<h1>Nest one Array within Another Array</h1>\n<p>You can nest arrays within other arrays, like this:<code>[[&quot;Bulls&quot;, 43]]</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Override All Other Styles by using Important",order:5,body:"<p>In many situations, you will use CSS libraries. These may accidentally override your own CSS. So when you absolutely need to be sure that an element has specific CSS, you can use !important.</p>\n<p>An example of how to do this is: <code>color: red !important;</code> This will make sure that we use the wanted property regardless of other overrides.</p>\n"}},function(e,n){e.exports={title:"Waypoint Override Class Declarations by Styling ID Attributes",order:5,body:'<p>We can use <code>id</code> to override  styling too.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n  }</span>\n  <span class="hljs-class">.pink-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> pink</span></span>;\n  }</span>\n  <span class="hljs-class">.blue-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> blue</span></span>;\n  }</span>\n  <span class="hljs-id">#orange-text</span><span class="hljs-rules">{<span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value">orange</span></span>;}</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"pink-text blue-text"</span> <span class="hljs-attribute">id</span>=<span class="hljs-value">"orange-text"</span>&gt;</span>Hello World!<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n'}},function(e,n){
e.exports={title:"Waypoint Override Class Declarations with Inline Styles",order:5,body:"<p>Remember, in line styles look like this: <code>&lt;h1 style=&quot;color: green&quot;&gt;</code> They will override everything else that was changing the text color of h1.</p>\n"}},function(e,n){e.exports={title:"Waypoint Override Styles in Subsequent CSS",order:5,body:"<p>Your classes will override the body’s CSS, if we add a new class that changes the same property, the last one will be the one applied.</p>\n"}},function(e,n){e.exports={title:"Waypoint Perform Arithmetic Operations on Decimals with JavaScript",order:5,body:"<h1>Perform Arithmetic Operations on Decimals with JavaScript</h1>\n<p>In JavaScript, you can perform calculations with decimal numbers, just like whole numbers.</p>\n<p><code>var quotient = 4.4 / 2.0; // equals 2.2</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Prioritize One Style Over Another",order:5,body:'<p>Classes to individual elements take priority over general styles.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> black</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">font-family</span>:<span class="hljs-value"> Monospace</span></span>;\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> green</span></span>;\n  }</span>\n  <span class="hljs-class">.pink-text</span><span class="hljs-rules">{<span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> pink</span></span>;}</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">h1</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"pink-text"</span>&gt;</span>Hello World!<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>\n</code></pre>\n<p>This makes for a pink h1 instead of a green one.</p>\n'}},function(e,n){e.exports={title:"Waypoint Remove Classes from an element with jQuery",order:5,body:"<h1>Remove Classes from an element with jQuery</h1>\n<p>The same way we can add classes using jQuery, we an also remove them with <code>removeClass()</code>.</p>\n<p><code>$(&quot;button&quot;).removeClass(&quot;btn-default&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Remove an Element Using jQuery",order:5,body:"<h1>Remove an Element Using jQuery</h1>\n<p>jQuery has a function called <code>.remove()</code> that will remove an HTML element entirely. <code>$(&quot;#target4&quot;).remove();</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Render Images from Data Sources",order:5,body:"<h1>Render Images from Data Sources</h1>\n<p>Obtaining image links from JSON objects has been explained already. However, how do you present that image as an actual image requires a bit of ingenuity, yet it is simple even if you don’t figure it out yourself. You have to generate html using the variable to complete the link like this: <code>html += &quot;&lt;img src = '&quot; + val.imageLink + &quot;'&gt;&quot;;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Responsively Style Checkboxes",order:5,body:"<h1>Responsively Style Checkboxes</h1>\n<p>You can use Bootstrap’s <code>col-xs-*</code> classes on form elements, too! This way, our checkboxes will be evenly spread out across the page, regardless of how wide the screen resolution is.</p>\n<p>Nest all your checkboxes in a <code>&lt;div class=&quot;row&quot;&gt;</code> element. Then nest each of them in a <code>&lt;div class=&quot;col-xs-4&quot;&gt;</code> element.</p>\n"}},function(e,n){e.exports={title:"Waypoint Responsively Style Radio Buttons",order:5,body:'<h1>Responsively Style Radio Buttons</h1>\n<p>You can use Bootstrap’s <code>col-xs-*</code> classes on <code>form</code> elements. That will make radio buttons evenly spread out across the page regardless of how wide the screen might be.</p>\n<p>Nest all of your radio buttons within a <code>&lt;div class=&quot;row&quot;&gt;</code> element. Then nest each of them within a <code>&lt;div class=&quot;col-xs-6&quot;&gt;</code> element.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">form</span> <span class="hljs-attribute">action</span>=<span class="hljs-value">"/submit-cat-photo"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"radio"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"indoor-outdoor"</span>&gt;</span> Indoor<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"radio"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"indoor-outdoor"</span>&gt;</span> Outdoor<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Loving<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Lazy<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-xs-6"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span> <span class="hljs-attribute">name</span>=<span class="hljs-value">"personality"</span>&gt;</span> Crazy<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"text"</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-value">"cat photo URL"</span> <span class="hljs-attribute">required</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"submit"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">form</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Reverse Arrays with reverse",order:5,body:'<p>You can use the .reverse() function to reverse the contents of an array.</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,2,3,4,5,6,7];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.reverse(</span><span class="hljs-function">)</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Save your Code Revisions Forever with Git",order:5,body:'<p>For the Git waypoints you just have to follow the instructions closely. From how to create your <a href="http://c9.io/">c9</a> account to completing the tutorial.</p>\n<p>For that you will need <code>git-it</code> to go to the challenges, and <code>git-it verify</code> to check that you completed it correctly. For detailed instructions read them here: <a href="http://jlord.us/git-it/index.html">http://jlord.us/git-it/index.html</a></p>\n<p>After you learn how to use git, here are other resources to help you learn more about git:</p>\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Creating-a-New-Github-Issue">Creating a New Github Issue</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Git-Blame">Git Blame</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/git-merge">Git Merge</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/git-rebase">Git Rebase</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Git-Resources">Other Git Resources</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Writing-great-git-commit-message">Writing Great Git Commit Messages</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Using-Github-Pages-for-your-front-end-development-projects">Using GitHub Pages for your front end dev projects</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Searching-for-Your-Issue-on-Github">Search your issue on GitHub</a></li>\n<li><a href="https://freecodecamp.github.io/wiki/docs/How-GitHub-Issue-Moderators-AKA-Issue-Mods-Work">How Issue Mods Work</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"Waypoint Say Hello to HTML Elements",order:5,body:"<p>HTML elements are written with a start tag, with an end tag, with the content in between:</p>\n<p><code>&lt;tagname&gt;content&lt;/tagname&gt;</code> The HTML element is everything from the start tag to the end tag:</p>\n<p><code>&lt;p&gt;My first HTML paragraph.&lt;/p&gt;</code></p>\n<p>Opening tags look like this: <code>&lt;h1&gt;</code>. Closing tags look like this: <code>&lt;/h1&gt;</code>  Note that the only difference between opening tags and closing tags is that closing tags have a slash after their opening angle bracket.</p>\n"}},function(e,n){e.exports={title:"Waypoint Set the Font Family of an Element",order:5,body:"<p>To import a font from Google or any other site, this is the format that you should follow: <code>&lt;link href=&quot;http://fonts.googleapis.com/css?family=Lobster&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Set the ID of an Element",order:5,body:'<p>In addition to classes, each HTML element can also have an <code>id</code> attribute.</p>\n<p>There are several benefits to using id attributes, and you’ll learn more about them once you start using jQuery.</p>\n<p><code>id</code> attributes should be unique. Browsers won’t enforce this, but it is a widely agreed upon best practice. So please don’t give more than one element the same id attribute.</p>\n<p>Here’s an example of how you give your h2 element the id of cat-photo-app: <h2 id="cat-photo-app"></p>\n'}},function(e,n){e.exports={title:"Waypoint Sift through Text with Regular Expressions",order:5,body:"<h1>Sift through Text with Regular Expressions</h1>\n<p><code>Regular expressions</code> are used to find certain words or patterns inside of strings.</p>\n<p>Regular expressions are usually surrounded by <code>/</code> symbols.</p>\n<p>For example, if we wanted to find the number of times the word the occurred in the string The dog chased the cat, we could use the following regular expression: <code>/the+/gi</code></p>\n<p>Let’s break this down a bit:</p>\n<p>the is the pattern we want to match.</p>\n<ul>\n<li><code>+</code> means we want to find one or more occurrences of this pattern.</li>\n<li><code>g</code> means that we want to search the entire string for this pattern.</li>\n<li><code>i</code> means that we want to ignore the case (uppercase or lowercase) when searching for the pattern.</li>\n</ul>\n"}},function(e,n){e.exports={title:"Waypoint Size your Images",order:5,body:"<p>CSS has an attribute called <code>width</code> that controls an element’s width. Just like with fonts, we’ll use <code>px</code> (pixels) to specify the image’s width.</p>\n<p>For example, if we wanted to create a CSS class called larger-image that gave HTML elements a width of 500 pixels, we’d use: <code>&lt;style&gt; .larger-image { width: 500px; } &lt;/style&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Sort Arrays with sort",order:5,body:'<p>You can use the method sort to easily sort the values in the array alphabetically or numerically</p>\n<pre><code>var<span class="hljs-instruction"> array </span>= <span class="hljs-keyword">[</span>1,3,2];\n<span class="hljs-instruction">\narray </span>=<span class="hljs-function"> array.sort(</span><span class="hljs-function">)</span>;\n</code></pre>\n<p>This will return <code>[1, 2, 3]</code></p>\n'}},function(e,n){e.exports={title:"Waypoint Specify How Fonts Should Degrade",order:5,body:"<p>There are several default fonts that are available in all browsers. These include <code>Monospace</code>, <code>Serif</code> and <code>Sans-Serif</code>.</p>\n<p>For example, if you wanted an element to use the <code>Helvetica</code> font, but also degrade to the <code>Sans-Serif</code> font when <code>Helvetica</code> wasn’t available, you could use this CSS style: <code>p { font-family: Helvetica, Sans-Serif; }</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Split Strings with split",order:5,body:"<p>You can use the <code>.split()</code> method to split a string into an array.</p>\n<p>split uses the argument you give to to split the string.</p>\n<p><code>array = string.split(' ');</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Split your Bootstrap Row",order:5,body:'<h1>Split your Bootstrap Row</h1>\n<p>Create two <code>div</code> elements within your row, both with the class <code>col-xs-6</code>.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n  &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt; &lt;/<span class="hljs-keyword">div</span>&gt;\n    &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Store Multiple Values in one Variable using JavaScript Arrays",order:5,body:"<h1>Store Multiple Values in one Variable using JavaScript Arrays</h1>\n<p>With JavaScript array variables, we can store several pieces of data in one place.</p>\n<p>You start an array declaration with an opening bracket, end it with a closing bracket, and put a comma between each entry, like this: <code>var sandwich = [&quot;peanut butter&quot;, &quot;jelly&quot;, &quot;bread&quot;]</code>.</p>\n<p><code>myArray = [2,'j'];</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Style Multiple Elements with a CSS Class",order:5,body:'<p>You can attach classes to HTML elements by using <code>class=&quot;your-class-here&quot;</code> within the relevant element’s opening tag.</p>\n<p>CSS selectors require a period at the beginning like this: <code>.blue-text { color: blue; }</code>, but that class declarations don’t use a period, like this: <code>&lt;h2 class=&quot;blue-text&quot;&gt;CatPhotoApp&lt;h2&gt;</code>.</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-class">.red-text</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> red</span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">h2</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"red-text"</span>&gt;</span>CatPhotoApp<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">p</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"red-text"</span>&gt;</span>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.<span class="hljs-tag">&lt;/<span class="hljs-title">p</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Style Text Inputs as Form Controls",order:5,body:"<h1>Style Text Inputs as Form Controls</h1>\n<p>You can add the <code>fa-paper-plane</code> Font Awesome icon by adding <code>&lt;i class=&quot;fa fa-paper-plane&quot;&gt;&lt;/i&gt;</code> within your submit button element.</p>\n<p><code>&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&lt;i class=&quot;fa fa-paper-plane&quot;&gt;Submit&lt;/i&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Style the HTML Body Element",order:5,body:"<p>Every HTML page has the <code>body</code> element. and it is like the main page.</p>\n"}},function(e,n){e.exports={title:"Waypoint Subtract One Number from Another with JavaScript",order:5,body:"<h1>Subtract One Number from Another with JavaScript</h1>\n<p>We can also subtract one number from another.</p>\n<p>JavaScript uses use the - symbol for subtraction. <code>var difference = 45 - 33;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target Elements by Class Using jQuery",order:5,body:"<h1>Target Elements by Class Using jQuery</h1>\n<p>Just as we did before, we can also target elements by classes.</p>\n<p><code>$(&quot;.well&quot;).addClass(&quot;animated shake&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target Elements by ID Using jQuery",order:5,body:"<h1>Target Elements by ID Using jQuery</h1>\n<p>You can also target elements by their id attributes. Note that, just like with CSS declarations, you type a # before the id’s name.</p>\n<p><code>$(&quot;#target3&quot;).addClass(&quot;animated fadeOut&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target Even Numbered Elements Using jQuery",order:5,body:"<h1>Target Even Numbered Elements Using jQuery</h1>\n<p>You can also target all the even-numbered elements.</p>\n<p>Here’s how you would target all the <code>odd-numbered</code> elements with class target and give them classes: <code>$('.target:odd').addClass('animated shake');</code></p>\n<p>This will shake all the even ones: <code>$('.target:even').addClass(&quot;shake&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target HTML Elements with Selectors Using jQuery",order:5,body:'<h1>Target HTML Elements with Selectors Using jQuery</h1>\n<p>After we have created our <code>document ready function</code> we can now have code that will run after the page loads. This will assure that your code does not run before the HTML is rendered to avoid bugs.</p>\n<p>jQuery often selects an HTML element with a selector, then does something to that element.</p>\n<p>The following code will make the buttons have a bouncy animation on page load.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"button"</span>).addClass(<span class="hljs-string">"animated bounce"</span>);\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Target a Specific Child of an Element Using jQuery",order:5,body:"<h1>Target a Specific Child of an Element Using jQuery</h1>\n<p>jQuery uses CSS Selectors to target elements. <code>target:nth-child(n)</code> css selector allows you to select all the nth element with the target class or element type.</p>\n<p>Here’s how you would give the third element in each well bounce: <code>$(&quot;.target:nth-child(3)&quot;).addClass(&quot;animated bounce&quot;);</code></p>\n<p><code>$(&quot;.btn:nth-child(2)&quot;).addClass(&quot;animated bounce&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target the Children of an Element Using jQuery",order:5,body:"<h1>Target the Children of an Element Using jQuery</h1>\n<p>Many HTML elements have children elements from which they inherit properties.</p>\n<p>jQuery has a function called <code>children()</code> that allows you to access the children of whichever element you’ve selected.</p>\n<p>Here’s an example of how you would use the <code>children()</code> function: <code>$(&quot;#left-well&quot;).children().css(&quot;color&quot;, &quot;blue&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target the Parent of an Element Using jQuery",order:5,body:"<h1>Target the Parent of an Element Using jQuery</h1>\n<p>Every HTML elements has a parent element from which it inherits properties.</p>\n<p>For example, your jQuery Playground <code>h3</code> element has the parent element of<code>&lt;div class=&quot;container-fluid&quot;&gt;</code>, which itself has the parent body.</p>\n<p>jQuery has a function called <code>parent()</code> that allows you to access the parent of whichever element you’ve selected.</p>\n<p>Here’s an example of how you would use the <code>parent()</code> function: <code>$(&quot;#left-well&quot;).parent().css(&quot;background-color&quot;, &quot;blue&quot;)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Target the same element with multiple jQuery Selectors",order:5,body:'<h1>Target the same element with multiple jQuery Selectors</h1>\n<p>The multiple jQuery selectors are:</p>\n<ol>\n<li>By type: <code>$(&quot;button&quot;)</code></li>\n<li>By class: <code>$(&quot;.btn&quot;)</code></li>\n<li>By id: <code>$(&quot;#target1&quot;)</code></li>\n</ol>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    $(<span class="hljs-string">"button"</span>).addClass(<span class="hljs-string">"animated"</span>);\n    $(<span class="hljs-string">".btn"</span>).addClass(<span class="hljs-string">"shake"</span>);\n    $(<span class="hljs-string">"#target1"</span>).addClass(<span class="hljs-string">"btn-primary"</span>);\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Taste the Bootstrap Button Color Rainbow",order:5,body:"<h1>Taste the Bootstrap Button Color Rainbow</h1>\n<p>The <code>btn-primary</code> class is the main color you’ll use in your app. It is useful for highlighting actions you want your user to take. Note that this button will still need the <code>btn</code> and <code>btn-block</code> classes.</p>\n<p><code>&lt;button class=&quot;btn btn-block btn-primary&quot;&gt;Like&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Trigger Click Events with jQuery",order:5,body:'<h1>Trigger Click Events with jQuery</h1>\n<p>APIs - or Application Programming Interfaces - are tools that computers use to communicate with one another.</p>\n<p><code>$(document).ready()</code> This function makes it so all code inside of it only runs once our page loads.</p>\n<p>Inside that you can add any function or code, for this particular waypoint you need to add a click handler:</p>\n<pre><code class="language-js">$(<span class="hljs-string">"#getMessage"</span>).on(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-comment">//Custom code here</span>\n});\n</code></pre>\n<p>This will create a function so when the element with id <code>getMessage</code> is clicked, the custom function will be run.</p>\n'}},function(e,n){e.exports={title:"Waypoint Turn an Image into a Link",order:5,body:"<p>Creating images that link to things is essential and one of the most used things in Web Dev. Nest your image within an <code>a</code> element. Here’s an example: <code>&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://bit.ly/fcc-running-cats&quot;/&gt;&lt;/a&gt;</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Uncomment HTML",order:5,body:"<p>Given that there are two ways to write comments in JavaScript:</p>\n<ol>\n<li>Using <code>//</code></li>\n<li>Using <code>&lt;!-- text --&gt;</code></li>\n</ol>\n<p>You can easily uncomment by just removing the comment elements.</p>\n"}},function(e,n){e.exports={title:"Waypoint Understand Boolean Values",order:5,body:"<h1>Understand Boolean Values</h1>\n<p>Booleans can only hold the value of either true or false. They are basically little on-off switches.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Abbreviated Hex Code",order:5,body:'<p>red, which is <code>#FF0000</code> in hex code, can be shortened to <code>#F00</code>. That is, one digit for red, one digit for green, one digit for blue.</p>\n<p>This reduces the total number of possible colors to around 4,000. But browsers will interpret <code>#FF0000</code> and <code>#F00</code> as exactly the same color.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#F00</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Bracket Notation to Find the First Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the First Character in a String</h1>\n<p>Bracket notation is a way to get a character at a specific index within a string.</p>\n<p>Computers don’t start counting at <code>1</code> like humans do. They start at <code>0</code>. <code>firstLetterOfLastName = lastName[0];</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Bracket Notation to Find the Last Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Last Character in a String</h1>\n<p>In order to get the last letter of a string, you can subtract one from the string’s length.</p>\n<p>For example, if <code>var firstName = &quot;Charles&quot;</code>, you can get the value of the last letter of the string by using <code>firstName[firstName.length - 1]</code>.</p>\n<p><code>var lastLetterOfLastName = lastName[lastName.length -1];</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Bracket Notation to Find the Nth Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Nth Character in a String</h1>\n<p>You can also use bracket notation to get the character at other positions within a string.</p>\n<p>Remember that computers start counting at <code>0</code>, so the first character is actually the zeroth character.</p>\n<p><code>var thirdLetterOfLastName = lastName[2];</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Bracket Notation to Find the Nth to Last Character in a String",order:5,body:"<h1>Use Bracket Notation to Find the Nth-to-Last Character in a String</h1>\n<p>You can get the value of the third-to-last letter of the <code>var firstName = &quot;Charles&quot;</code> string by using <code>firstName[firstName.length - 3]</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use CSS Selectors to Style Elements",order:5,body:"<p>Instead of giving style attributes one by one, we can do this to multiple elements at the same time.</p>\n<p>You can create a style element like this: <code>&lt;style&gt;&lt;/style&gt;</code>.</p>\n<p>Inside that style element, you can create a CSS selector for any HTML Elements. For example, if you wanted all h2 elements to be red, your style element would look like this: <code>&lt;style&gt;h2 {color: red;}&lt;/style&gt;</code>.</p>\n<p>Note that it’s important to have both opening and closing curly braces <code>({</code> and <code>})</code> around each element’s style. You also need to make sure your element’s style is between the opening and closing style tags. Finally, be sure to add the semicolon to the end of each of your element’s styles.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Clockwise Notation to Specify the Margin of an Element",order:5,body:'<p>Instead of specifying an element’s<code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes, you can specify them all in one line, like this: <code>margin: 10px 20px 10px 20px;</code>.</p>\n<p>These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific margin instructions.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">40px</span> <span class="hljs-number">20px</span> <span class="hljs-number">20px</span> <span class="hljs-number">40px</span></span></span>;\n}</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Clockwise Notation to Specify the Padding of an Element",order:5,body:'<p>Instead of specifying an element’s <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-lef</code>t attributes, you can specify them all in one line, like this: <code>padding: 10px 20px 10px 20px;</code>.</p>\n<p>These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific padding instructions.</p>\n<pre><code><span class="hljs-class">.green-box</span> <span class="hljs-rules">{\n  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> green</span></span>;\n  <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">40px</span> <span class="hljs-number">20px</span> <span class="hljs-number">20px</span> <span class="hljs-number">40px</span>\n</span></span></span>}\n</code></pre>\n'
}},function(e,n){e.exports={title:"Waypoint Use Comments to Clarify Code",order:5,body:'<h1>Use Comments to Clarify Code</h1>\n<p>When we start using jQuery, we will modify HTML elements without needing to actually change them in HTML.</p>\n<p>This is a great way to make websites with a particular structure. Remember that you can start a comment with <code>&lt;!-- and end a comment with --&gt;</code></p>\n<pre><code>&lt;!<span class="hljs-comment">--You shouldn\'t need to modify code below this line --&gt;</span>\n&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"container-fluid"</span>&gt;\n &lt;h3 <span class="hljs-type">class</span>=<span class="hljs-string">"text-primary text-center"</span>&gt;jQuery Playground&lt;/h3&gt;\n &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n   &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n     &lt;h4&gt;<span class="hljs-comment">#left-well&lt;/h4&gt;</span>\n     &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"left-well"</span>&gt;\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target1"</span>&gt;<span class="hljs-comment">#target1&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target2"</span>&gt;<span class="hljs-comment">#target2&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target3"</span>&gt;<span class="hljs-comment">#target3&lt;/button&gt;</span>\n     &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-6"</span>&gt;\n     &lt;h4&gt;<span class="hljs-comment">#right-well&lt;/h4&gt;</span>\n     &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"well"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"right-well"</span>&gt;\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target4"</span>&gt;<span class="hljs-comment">#target4&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target5"</span>&gt;<span class="hljs-comment">#target5&lt;/button&gt;</span>\n       &lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-default target"</span> <span class="hljs-property">id</span>=<span class="hljs-string">"target6"</span>&gt;<span class="hljs-comment">#target6&lt;/button&gt;</span>\n     &lt;/<span class="hljs-keyword">div</span>&gt;\n   &lt;/<span class="hljs-keyword">div</span>&gt;\n &lt;/<span class="hljs-keyword">div</span>&gt;\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Conditional Logic with If Else Statements",order:5,body:'<h1>Use Conditional Logic with If-Else Statements</h1>\n<p>We can use if statements in JavaScript to only execute code if a certain condition is met.</p>\n<p>if statements require some sort of <code>boolean</code> condition evaluate.</p>\n<pre><code>Example:\n\n <span class="hljs-keyword">if</span> (<span class="hljs-number">1</span> == <span class="hljs-number">2</span>) {\n  <span class="hljs-keyword">return</span>(<span class="hljs-literal">true</span>);\n}\n<span class="hljs-keyword">else</span> {\n  <span class="hljs-keyword">return</span>(<span class="hljs-literal">false</span>);\n}\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use HTML5 to Require a Field",order:5,body:'<p>You can require specific form fields so that your user will not be able to submit your form until he or she has filled them out.</p>\n<p>For example, if you wanted to make a text input field required, you can just add the word required within your input element, you would use: <code>&lt;input type=&quot;text&quot; required&gt;</code>.</p>\n<pre><code>&lt;<span class="hljs-tag">form</span> action=<span class="hljs-string">"/submit-cat-photo"</span>&gt;\n  &lt;<span class="hljs-tag">input</span> type=<span class="hljs-string">"text"</span> placeholder=<span class="hljs-string">"cat photo URL"</span> required&gt;\n  &lt;<span class="hljs-tag">button</span> type=<span class="hljs-string">"submit"</span>&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Hex Code for Specific Colors",order:5,body:"<p>With CSS, we use 6 hexadecimal number to represent colors. For example, <code>#000000</code> is the lowest possible value, and it represents the color black.</p>\n<p>This is the same as <code>#RRGGBB</code> which can also be simplified to <code>#RGB</code>.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Hex Code for Specific Shades of Gray",order:5,body:"<p>We can also create other shades of gray by evenly mixing all three colors. We can go very close to true black. <code>background-color: #111111;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Color Elements Blue",order:5,body:'<p>Just as with <a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red">red</a> and the others.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#0000FF</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Color Elements Gray",order:5,body:"<p>We can also create different shades of gray by evenly mixing all three colors. <code>background-color: #808080;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Color Elements Green",order:5,body:'<p>Just as with <a href="https://freecodecamp.github.io/wiki/docs/Waypoint-Use-Hex-Code-to-Color-Elements-Red">red</a> and the others.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#00FF00</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Color Elements Red",order:5,body:"<p>Hex code follows the red-green-blue, or rgb format. The first two digits of hex code represent the amount of red in the color. The third and fourth digit represent the amount of green. The fifth and sixth represent the amount of blue.</p>\n<p>So to get the absolute brightest red, you would just use <code>F</code> for the first and second digits (the highest possible value) and <code>0</code> for the third, fourth, fifth and sixth digits (the lowest possible value).</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Color Elements White",order:5,body:"<p><code>0</code> is the lowest number in hex code, and represents a complete absence of color. <code>F</code> is the highest number in hex code, and it represents the maximum possible brightness.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Hex Code to Mix Colors",order:5,body:'<p>Orange is pure red, mixed with some green, and no blue.</p>\n<pre><code><span class="hljs-tag">&lt;<span class="hljs-title">style</span>&gt;</span><span class="css">\n  <span class="hljs-tag">body</span> <span class="hljs-rules">{\n    <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#FFA500</span></span></span>;\n  }</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">style</span>&gt;</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use RGB to Color Elements Blue",order:5,body:"<p>The RGB value blue: <code>rgb(0, 0, 255)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB to Color Elements Gray",order:5,body:"<p>RGB value for gray: <code>rgb(128, 128, 128)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB to Color Elements Green",order:5,body:"<p>The rgb value green: <code>rgb(0, 255, 0)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB to Color Elements Red",order:5,body:"<p><code>background-color: rgb(255, 0, 0)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB to Color Elements White",order:5,body:"<p><code>background-color: rgb(255,255,255)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB to Mix Colors",order:5,body:"<p>RGB value orange: <code>rgb(255, 165, 0)</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use RGB values to Color Elements",order:5,body:"<p>Another way you can represent colors in CSS is by using <code>rgb</code> values.</p>\n<p>RGB values look like this: <code>rgb(0, 0, 0)</code> for black and <code>rgb(255, 255, 255)</code> for white.</p>\n<p>Instead of using six hexadecimal digits like you do with hex code, with rbg you specify the brightness of each color with a number between 0 and 255. <code>background-color: rgb(0,0,0);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use Responsive Design with Bootstrap Fluid Containers",order:5,body:"<h1>Use Responsive Design with Bootstrap Fluid Containers</h1>\n<p>Bootstrap will figure out how wide your screen is and respond by resizing your HTML elements - hence the name Responsive Design.</p>\n<p>With responsive design, there is no need to design a mobile version of your website. It will look good on devices with screens of any width.</p>\n<p>You can add Bootstrap to any app just by including it with <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css&quot;/&gt;</code> at the top of your HTML.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use Spans for Inline Elements",order:5,body:"<h1>Use Spans for Inline Elements</h1>\n<p>You can use use spans to create inline elements. By using the span element, you can put several elements together, and even style different parts of the same element differently.</p>\n<p><code>&lt;p&gt;&lt;span class = &quot;text-danger&quot;&gt;Things cats love:&lt;/span&gt;&lt;/p&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use a CSS Class to Style an Element",order:5,body:"<p>Classes are reusable styles that can be added to HTML elements. You can apply a class to an HTML element like this: <code>&lt;h2 class=&quot;blue-text&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>.</p>\n<p>Note that in your CSS style element, classes should start with a period. In your HTML elements’ class declarations, classes shouldn’t start with a period.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use an ID Attribute to Style an Element",order:5,body:"<p>One cool thing about <code>id</code> attributes is that, like classes, you can style them using CSS.</p>\n<p>Here’s an example of how you can take your element with the <code>id</code> attribute of cat-photo-element and give it the background color of green.</p>\n<p>In your style element: <code>#cat-photo-element { background-color: green; }</code></p>\n<p>Note that inside your style element, you always reference classes by putting a <code>.</code> in front of their names. You always reference ids by putting a <code>#</code> in front of their names.</p>\n"}},function(e,n){e.exports={title:"Waypoint Use appendTo to Move Elements with jQuery",order:5,body:"<h1>Use appendTo to Move Elements with jQuery</h1>\n<p>jQuery has a function called <code>appendTo()</code> that allows you to select HTML elements and append them to another element.</p>\n<p>For example, if we wanted to move target4 from our right well to our left well, we would use <code>$(&quot;#target4&quot;).appendTo(&quot;#left-well&quot;);</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use jQuery to Modify the Entire Page",order:5,body:"<h1>Use jQuery to Modify the Entire Page</h1>\n<p>jQuery can target the body element as well.</p>\n<p>Here’s how we would make the entire body fade out: <code>$('body').addClass('animated fadeOut');</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Use the Bootstrap Grid to Put Elements Side By Side",order:5,body:'<h1>Use the Bootstrap Grid to Put Elements Side By Side</h1>\n<p>Bootstrap uses a responsive grid system that makes it easier to put elements into rows and tell each element’s relative width.</p>\n<p><img src="https://www.evernote.com/shard/s116/sh/f0944d97-08b8-4615-8273-a327bf41fb05/de1a3acbceef89ae/deep/0/" alt="Bootstrap 12 column grid layout"></p>\n<p>Note that in this illustration, the <code>col-md-_</code> class is being used. Here, md means medium, and _ is a number specifying how many columns wide the element should be. In this case, the column width of an element on a medium-sized screen, such as a laptop, is being specified.</p>\n<pre><code>&lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"row"</span>&gt;\n\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-primary"</span>&gt;Like&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-info"</span>&gt;Info&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n  &lt;<span class="hljs-keyword">div</span> <span class="hljs-type">class</span>=<span class="hljs-string">"col-xs-4"</span>&gt;&lt;button <span class="hljs-type">class</span>=<span class="hljs-string">"btn btn-block btn-danger"</span>&gt;Delete&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;\n\n&lt;/<span class="hljs-keyword">div</span>&gt;\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Use the Javascript Console",order:5,body:"<p>Both Chrome and Firefox have excellent JavaScript consoles, also known as DevTools, for debugging your JavaScript.</p>\n<p>You can find Developer tools in your Chrome’s menu or Web Console in FireFox’s menu. If you’re using a different browser, or a mobile phone, we strongly recommend switching to desktop Firefox or Chrome.</p>\n<p>You can also use <a href=\"https://repl.it/\">https://repl.it/</a> to run code online.</p>\n<p>This is how you print to the console: <code>console.log('Hello world!')</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Using typeof",order:5,body:'<p>You can use <code>typeof</code> to check the <code>data structure</code>, or type, of a variable.</p>\n<p>Note that in JavaScript, arrays are technically a type of object.</p>\n<pre><code class="language-js"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>(<span class="hljs-string">""</span>));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>(<span class="hljs-number">0</span>));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>([]));\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span>({}));\n</code></pre>\n'}},function(e,n){e.exports={title:"Waypoint Warn your Users of a Dangerous Action",order:5,body:"<h1>Warn your Users of a Dangerous Action</h1>\n<p>The <code>btn-danger</code> class is the button color you’ll use to notify users that the button performs a destructive action, such as deleting a cat photo. Note that these buttons still need the <code>btn</code> and <code>btn-block</code> classes.</p>\n<p><code>&lt;button class=&quot;btn btn-block btn-danger&quot;&gt;Delete&lt;/button&gt;</code></p>\n"}},function(e,n){e.exports={title:"Waypoint Write Reusable JavaScript with Functions",order:5,body:'<h1>Write Reusable JavaScript with Functions</h1>\n<p>In JavaScript, we can divide up our code into reusable parts called functions.</p>\n<p>Here’s an example of a function:</p>\n<pre><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">functionName</span> <span class="hljs-params">(a, b)</span> </span>{\n  <span class="hljs-keyword">return</span>(a + b);\n}\n</code></pre>\n<p>We can “call” our function like this: <code>functionName();</code>, and it will run and return it’s return value to us.</p>\n'}},function(e,n){e.exports={title:"Web Resources",order:5,body:'<h1>Links</h1>\n<ul>\n<li><a href="http://webfieldmanual.com">Web Field Manual</a></li>\n</ul>\n<h1>Debugging</h1>\n<ul>\n<li><a href="https://www.npmjs.com/package/node-inspector">node-inspector</a></li>\n<li><a href="http://brackets.io">Brackets Live Preview</a></li>\n<li><a href="http://www.browsersync.io">browser-sync</a></li>\n</ul>\n<h2>Tools and Resources</h2>\n<ul>\n<li><a href="http://wave.webaim.org/report#/google.com">Color Contrast Analyser</a></li>\n<li><a href="http://colorlovers.com">Color Patterns</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"What exactly Free Code Camp does",order:5,body:"<p>We help our campers (students):</p>\n<ul>\n<li>Learn full stack JavaScript</li>\n<li>Build a portfolio of real apps that real people are using</li>\n<li>Get a coding job</li>\n</ul>\n"}},function(e,n){e.exports={title:"What pair programming is and why it is special",order:5,body:'<p>Pair programming is where two people code together on one computer.</p>\n<p><img src="http://cs10.org/sp15/resources/images/pairprogramming.jpg" alt=""></p>\n<p>Pair programming encourages you to discuss different approaches to solving problems, and to keep one another other motivated. The result is better code than either of you could have written by yourselves.</p>\n<p>Because of its benefits, many engineers pair program full time. And it’s the best way to learn coding. Thanks to tools that allow two people to share mouse and keyboard inputs, you can pair program with a friend without needing to be in the same room.</p>\n<p>You can experience these benefits by pair programming with other Free Code Camp students on our coding challenges. Eventually, you’ll work with people at nonprofits to build real-life software solutions.</p>\n<p>Here’s <a href="https://freecodecamp.github.io/wiki/docs/Why-You-Should-Try-Pair-Programming">why you should try pair programming</a> and here are some tips on <a href="https://freecodecamp.github.io/wiki/docs/Tips-on-How-To-Become-A-Good-Pair-Programmer">how to be a good pair programmer</a>.</p>\n'}},function(e,n){e.exports={title:"What the main advantages of Free Code Camp are",order:5,body:"<p>Free Code Camp’s main advantages are that we’re accessible to busy adults who want to change careers.</p>\n<p>Specifically, we’re:</p>\n<ul>\n<li>Free</li>\n<li>Self-paced</li>\n<li>Browser-based</li>\n</ul>\n<p>One of the most noticeable differences in this curriculum than other Code-Camp/School environments is the level of support: Using the chat-rooms for help, guidance, and assisting fellow coders gives you a better understanding of the code, easier access to explanations, and it’s in real-time so you can question the confusion.</p>\n"}},function(e,n){e.exports={title:"What the style guide for Bonfires is",order:5,body:"<p>Writing Bonfire challenges is a great way to exercise your own problem solving and testing abilities. Follow this process closely to maximize the chances of us accepting your bonfire.</p>\n<ul>\n<li>Fork the Free Code Camp repository and open <code>seed_data/bonfires.json</code> to become familiar with the format of our bonfires.</li>\n<li>Regardless of your bonfire’s difficulty, put it as the last bonfire in the JSON file. Change one of the numbers in the ID to ensure that your bonfire has a unique ID.</li>\n<li>In the terminal, run <code>node seed_data/seed.js</code>. Run <code>gulp</code>. You should be able to navigate to your new bonfire in the challenge map. Whenever you make a change to bonfire.json, you’ll need to reseed in order to see these changes in the browser.</li>\n<li>Solve your own Bonfire. Confirm that your tests work as expected and that your instructions are sufficiently clear.</li>\n<li>Submit a pull request to Free Code Camp’s Staging branch and in the pull request body, link to a gist that has your algorithmic solution.</li>\n</ul>\n<p>Here is a description of each of the Bonfires’ fields.</p>\n<ul>\n<li>Name - The name of your challenge. It’s OK for this to be humorous but it must be brief and relevant to the task.</li>\n<li>Difficulty - Attempt to rate difficulty compared against existing bonfire challenges. A good proxy for the difficulty of a bonfire is how long it takes you to solve it. For every 15 minutes it takes, increase the difficulty. For example, a one-hour bonfire should probably be a 4.</li>\n<li>Description- Separate paragraphs with a line break. Only the first paragraph is visible prior to a user before they click the the ‘More information’ button. All necessary information must be included in the first paragraph. Write this first paragraph as succinctly as possible. Subsequent paragraphs should offer hints or details if needed. If your subject matter warrants deeper understanding, you may link to Wikipedia.</li>\n<li>Challenge Seed - This is where you set up what will be in the editor when the camper starts the bonfire.</li>\n<li>Tests - These tests are what bring your challenge to life. Without them, we cannot confirm the accuracy of a user’s submitted answer. Choose your tests wisely. Bonfire tests are written using the Chai.js assertion library. Please use the should and expect syntax for end user readability. As an example of what not do to, many of the original Bonfire challenges are written with assert syntax and many of the test cases are difficult to read. If your bonfire question has a lot of edge cases, you will need to write many tests for full coverage. If you find yourself writing more tests than you desire, you may consider simplifying the requirements of your bonfire challenge. For difficulty level 1 through 3, you will generally only need 2 to 4 tests.</li>\n<li>MDNlinks- Take a look at <code>seed_data/bonfireMDNlinks.js</code>. If any of these concepts are relevant to your bonfire, be sure to include them. If you know of an MDN article that isn’t linked here, you can add it to the bonfireMDNlinks.js file before adding it to your bonfire.</li>\n</ul>\n"}},function(e,n){e.exports={title:"What to do if you speak a language that Free Code Camp does not yet support",order:5,body:'<p>Translation is an all-or-nothing proposal.</p>\n<p>We won’t be able to add new languages to Free Code Camp until all of our challenges are translated into that language.</p>\n<p>In addition to translating these initially, we’ll also need to maintain the translation as the challenges are gradually updated.</p>\n<p>If you’re able to help us, you can join our <a href="https://trello.com/b/m7zhwXka/fcc-translation">translation Trello board</a> by sending @quincylarson your email address in Gitter.</p>\n'}},function(e,n){e.exports={title:"What you will learn, and in what sequence you will learn it",order:5,body:'<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML">HTML5</a> - the structure of web pages</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</a> - the visual style of web pages</li>\n<li><a href="http://getbootstrap.com/">Bootstrap</a> - a “responsive design” tool that helps your websites look great on tablets and phones</li>\n<li><a href="https://jquery.com/">jQuery</a> and [Ajax] (<a href="https://developer.mozilla.org/en-US/docs/AJAX">https://developer.mozilla.org/en-US/docs/AJAX</a>) - easy tools for controlling content in the browser</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript</a> - the one programming language that all web browsers use</li>\n<li><a href="https://en.wikipedia.org/wiki/Algorithm">Algorithms</a> - step-by-step recipes for getting things done</li>\n<li><a href="https://git-scm.com/">Git</a> - a version control system for saving and sharing your projects</li>\n<li><a href="https://www.mongodb.org/">MongoDB</a> - a popular non-relational database</li>\n<li><a href="https://angularjs.org/">Angular.js</a> - a tool for making exciting web interfaces</li>\n<li><a href="http://expressjs.com/">Express.js</a>- a powerful web development framework</li>\n<li><a href="https://nodejs.org/">Node.js</a> - a platform for creating scalable network applications.</li>\n<li><a href="https://en.wikipedia.org/wiki/Agile_software_development">Agile</a> - a set of software development principles that focus the design and production of a project on the needs of its users</li>\n</ul>\n<p>[[<a href="http://2.bp.blogspot.com/-CPfmVm56c7c/VTwEpZkHBtI/AAAAAAAAAks/0dEwiH-DjEE/s1600/curriculum-diagram-full.jpg%7Cwidth=600px">http://2.bp.blogspot.com/-CPfmVm56c7c/VTwEpZkHBtI/AAAAAAAAAks/0dEwiH-DjEE/s1600/curriculum-diagram-full.jpg|width=600px</a>]]</p>\n'}},function(e,n){e.exports={title:"Why You Should Try Pair Programming",order:5,body:'<h4>When I started working through my first bonfires, I was really scared of speaking to strangers. What would this person think about me?</h4>\n<p>Would I even be able to write good code with someone watching me?</p>\n<p>Now, some weeks later I’ve pair programmed and reviewed code with more than 40 campers and let me tell you: it’s not as scary as it seems.\nIt’s perfectly normal to feel that way. Most of the campers that I’ve talked to agree that they were nervous too.</p>\n<p><strong>Here are a few good reasons to try pair programming</strong> (I wish I knew this when I started…):</p>\n<h3>You can…</h3>\n<ul>\n<li>Build your professional network</li>\n<li>Meet new friends - develop a support group</li>\n<li>Improve social skills</li>\n<li>Get motivation and encouragement from fellow campers</li>\n<li>See other’s coding styles</li>\n<li>Learn from each other</li>\n<li>Strengthen your strengths and get help finding and improving your weaknesses</li>\n<li>Pair with <strong>more</strong> experienced dev to <strong>improve your skills</strong></li>\n<li>Pair with <strong>less</strong> experienced dev to <strong>test your knowledge</strong></li>\n<li>Gain a new skill that will be useful for interviews and employment down the road</li>\n</ul>\n<p>With the right person, pair programming is one of the best ways to learn at the same time as you make new friends!\n<a href="https://freecodecamp.github.io/wiki/docs/Tips-on-How-To-Become-A-Good-Pair-Programmer">You might also want to know how you could be a good pair programmer!</a></p>\n<p>// Samuel (gr33n) with help from Ryan (rsprice)</p>\n'}},function(e,n){e.exports={title:"Why does Free Code Camp use JavaScript instead of Ruby or Python",order:5,body:'<p>Like JavaScript, Ruby and Python are high-level scripting languages that can be used for full stack web development.</p>\n<p>But even if you learned these languages, you’d still need to learn JavaScript. That’s because JavaScript is the only language that runs in web browsers. JavaScript has been around for 20 years, and it is still growing in popularity.</p>\n<p>Because of this, JavaScript has more tools and online learning resources than any other language.</p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/github-repo-growth.png" alt="A chart showing the volume of new GitHub repositories by year, with JavaScript growing and most languages declining."></p>\n'}},function(e,n){e.exports={title:"Why you need Free Code Camp",order:5,body:"<p>You need Free Code Camp because learning to code is hard.</p>\n<p>Most people who successfully learn to code:</p>\n<ul>\n<li>Make friends with people who code</li>\n<li>Code a little every day</li>\n</ul>\n<p>Free Code Camp gives you the structure and the community you need so you can successfully learn to code.</p>\n"}},function(e,n){e.exports={title:"Wiki Style Guide",order:5,body:'<p>###“Wiki” is a Hawaiian word meaning “quick”. Keep this in mind when creating wiki articles.</p>\n<p>We are always happy to help new contributors write, edit, and localize our wiki articles. Help us make Free Code Camp the best it can be.</p>\n<p>You can create a new wiki page by clicking the “New Page” button at top right.</p>\n<p>Keep your wiki articles short and focused.</p>\n<p>You can include images if they help you better communicate your subject.</p>\n<h4>Use descriptive, punctuation-free titles that follow a name convention as <code>Name of Page</code>.</h4>\n<p>Our wiki articles are <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">written in GitHub-flavor Markdown</a>.</p>\n<ul>\n<li><a href="https://freecodecamp.github.io/wiki/docs/Bonfire-Style-Guide">Bonfire Style Guide</a></li>\n</ul>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/rafase282">@rafase282</a> in <a href="https://freecodecamp.github.io/wiki/docs/Gitter">Gitter</a></p>\n<p>We look forward to wiki-ing with you!</p>\n'}},function(e,n){e.exports={title:"World Language Chat Rooms",order:5,body:'<p>The following are our language-specific chat rooms.</p>\n<p><strong>Please note that all chat rooms listed here are publicly accessible and indexed by search engines, so only share email addresses or other sensitive information in private messages.</strong></p>\n<ul>\n<li><a href="https://gitter.im/freecodecamp/Albanian">Albanian</a></li>\n<li><a href="https://gitter.im/freecodecamp/Arabic">Arabic</a></li>\n<li><a href="https://gitter.im/freecodecamp/Chinese">Chinese</a></li>\n<li><a href="https://gitter.im/freecodecamp/Deutsch">German</a></li>\n<li><a href="https://gitter.im/freecodecamp/Dutch">Dutch</a></li>\n<li><a href="https://gitter.im/freecodecamp/Espanol">Spanish</a></li>\n<li><a href="https://gitter.im/freecodecamp/Francais">French</a></li>\n<li><a href="https://gitter.im/freecodecamp/Japanese">Japanese</a></li>\n<li><a href="https://gitter.im/freecodecamp/Korean">Korean</a></li>\n<li><a href="https://gitter.im/freecodecamp/Persian">Persian</a></li>\n<li><a href="https://gitter.im/freecodecamp/Portugues">Portugues</a></li>\n<li><a href="https://gitter.im/freecodecamp/Romanian">Romanian</a></li>\n<li><a href="https://gitter.im/freecodecamp/Russian">Russian</a></li>\n<li><a href="https://gitter.im/freecodecamp/Swedish">Swedish</a></li>\n<li><a href="https://gitter.im/freecodecamp/Thai">Thai</a></li>\n<li><a href="https://gitter.im/freecodecamp/Tagalog">Tagalog</a></li>\n<li><a href="https://gitter.im/freecodecamp/Vietnamese">Vietnamese</a></li>\n</ul>\n<h3>Additional Chat Room Lists</h3>\n<ul>\n<li>[[Official Free Code Camp Chat Rooms|Official-Free-Code-Camp-Chat-Rooms]]</li>\n<li>[[Casual Chat Rooms|Casual-Chat-Rooms]]</li>\n<li>[[Campsite Chat Rooms|List-of-Free-Code-Camp-city-based-Campsites]]</li>\n</ul>\n<p>By joining these chat rooms, you accept our <a href="https://freecodecamp.github.io/wiki/docs/Code-of-Conduct">Code of Conduct</a>.</p>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Official-Free-Code-Camp-Chat-Rooms">Official Free Code Camp chat rooms</a></p>\n'
}},function(e,n){e.exports={title:"Write and Run ES6 Code in Browser",order:5,body:'<blockquote>\n<p>Include the following code in the page.</p>\n</blockquote>\n<pre><code class="language-html"><span class="hljs-comment">&lt;!-- Write these first. Here `bootstrap.js` doesn\'t mean Twitter Bootstrap. --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"https://google.github.io/traceur-compiler/bin/traceur.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"https://google.github.io/traceur-compiler/src/bootstrap.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Edit the src. Write `type="module"` (important) for linked script --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"app.js"</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"module"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Remember to write `type="module"` for embedded script --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"module"</span>&gt;</span><span class="actionscript">\n    <span class="hljs-comment">//→ write your script here</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>\n</code></pre>\n<p><strong>See:</strong> <a href="https://github.com/google/traceur-compiler/wiki/Getting-Started">Traceur Compiler Getting Started</a></p>\n<p><strong>Demo:</strong> <a href="https://github.com/abhisekp/JS-Weird-Parts/tree/109ab3b0c94d1fbf9bbc402dd36e9bca60d5b456">ES6 Demo Repo Source</a></p>\n'}},function(e,n){e.exports={title:"Writing great git commit message",order:5,body:'<h3>The seven rules of a great git commit message</h3>\n<ol>\n<li>Separate subject from body with a blank line</li>\n<li>Limit the subject line to 50 characters</li>\n<li>Capitalize the subject line</li>\n<li>Do not end the subject line with a period</li>\n<li>Use the imperative mood in the subject line</li>\n<li>Wrap the body at 72 characters</li>\n<li>Use the body to explain what and why vs. how</li>\n</ol>\n<p><strong>A properly formed git commit subject line should always be able to complete the following sentence:</strong></p>\n<blockquote>\n<p>If applied, this commit will <em><code>&lt;&lt;your subject line here&gt;&gt;</code></em></p>\n</blockquote>\n<h2> </h2>\n<p><strong>For example:</strong></p>\n<ul>\n<li>If applied, this commit will <strong><em>Refactor subsystem X for readability</em></strong></li>\n<li>If applied, this commit will <strong><em>Update getting started documentation</em></strong></li>\n<li>If applied, this commit will <strong><em>Remove deprecated methods</em></strong></li>\n<li>If applied, this commit will <strong><em>Release version 1.0.0</em></strong></li>\n<li>If applied, this commit will <strong><em>Merge pull request #123 from user/branch</em></strong></li>\n</ul>\n<p><strong>Notice how this doesn’t work for the other non-imperative forms:</strong></p>\n<ul>\n<li>If applied, this commit will <em><s>fixed bug with Y</s></em></li>\n<li>If applied, this commit will <em><s>changing behavior of X</s></em></li>\n<li>If applied, this commit will <em><s>more fixes for broken stuff</s></em></li>\n<li>If applied, this commit will <em><s>sweet new API methods</s></em></li>\n</ul>\n<p><strong>Remember:</strong> <em>Use of the imperative is important only in the subject line. You can relax this restriction when you’re writing the body.</em></p>\n<p><strong>Reference:</strong> <a href="http://chris.beams.io/posts/git-commit">http://chris.beams.io/posts/git-commit</a></p>\n'}},function(e,n){e.exports={title:"Zipline Use the Twitchtv JSON API",order:5,body:'<p>If you’re trying to tackle this challenge with jQuery’s <code>$.getJSON()</code> method, chances are you’ll get an error message concerning Cross-Origin Resource Sharing (CORS).</p>\n<p>The easiest way to resolve this is to use jQuery’s JSONP capabilities. From the Twitch API’s <a href="https://github.com/justintv/Twitch-API#json-p">readme page</a>:</p>\n<blockquote>\n<p>All API methods support JSON-P by providing a callback parameter with the request.</p>\n</blockquote>\n<p>Also the <a href="http://api.jquery.com/jQuery.getJSON/">jQuery documentation</a> states:</p>\n<blockquote>\n<p>If the URL includes the string “callback=?” (or similar, as defined by the server-side API), the request is treated as JSONP instead.</p>\n</blockquote>\n<p>Here’s an example call to fetch Free Code Camp’s Twitch channel data:</p>\n<pre><code class="language-js">$.getJSON(<span class="hljs-string">\'https://api.twitch.tv/kraken/streams/freecodecamp?callback=?\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(data);\n});\n</code></pre>\n<p>JSONP is considered insecure <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing#CORS_vs_JSONP">according to Wikipedia</a>, but should be sufficient for our purposes. For a detailed discussion on Twitch’s CORS restriction, please read <a href="https://github.com/justintv/Twitch-API/issues/133">issue #133</a> on the Twitch-API repository.</p>\n'}},function(e,n,t){(function(n){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}var s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o=t(2),r=a(o),i=t(155),l=t(287),p=t(265),c=(a(p),t(250)),d=a(c),h=t(259),u=t(264),m=a(u),f=m["default"].rhythm;m["default"].fontSizeToPx;e.exports=r["default"].createClass({displayName:"exports",mixins:[i.State,i.Navigation],handleTopicChange:function(e){return this.transitionTo(e.target.value)},render:function(){var e,t,a;return e=(0,h.templateChildrenPages)(n,this.props.state).map(function(e){return{title:e.data.title,order:e.data.order,path:e.path}}),e=(0,d["default"])(e,function(e){return e.order}),t=e.map(function(e){return r["default"].createElement("option",{key:e.path,value:e.path},e.title)}),a=e.map(function(e){return function(n){var t;return t=e.isActive((0,h.link)(n.path)),r["default"].createElement("li",{key:n.path,style:{marginBottom:f(.5)}},r["default"].createElement(i.Link,{to:(0,h.link)(n.path),style:{textDecoration:"none"}},t?r["default"].createElement("strong",null,n.title):n.title))}}(this)),r["default"].createElement("div",null,r["default"].createElement(l.Breakpoint,{minWidth:700},r["default"].createElement("div",null,r["default"].createElement("div",{style:{overflowY:"auto",paddingRight:"calc("+f(.5)+" - 1px)",position:"absolute",width:"calc("+f(8)+" - 1px)",borderRight:"1px solid lightgrey"}},r["default"].createElement("ul",{style:{listStyle:"none",marginLeft:0,marginTop:f(.5)}},a)),r["default"].createElement("div",{style:{padding:"0 "+f(1),paddingLeft:"calc("+f(8)+" + "+f(1)+")"}},r["default"].createElement(i.RouteHandler,s({typography:m["default"]},this.props))))),r["default"].createElement(l.Breakpoint,{maxWidth:700},r["default"].createElement("strong",null,"Topics:")," ",r["default"].createElement("select",{defaultValue:this.props.state.path,onChange:this.handleTopicChange},t),r["default"].createElement("br",null),r["default"].createElement("br",null),r["default"].createElement(i.RouteHandler,s({typography:m["default"]},this.props))))}})}).call(n,"docs/_template.jsx")},function(e,n){e.exports={title:"beta",order:5,body:"<p>Beta has been merged! Happy Coding!</p>\n"}},function(e,n){e.exports={title:"bf bouncer",order:5,body:'<p>#:fire: Bonfire: Falsy Bouncer</p>\n<h1>The problem</h1>\n<p>Remove all falsy values from an array.</p>\n<p>Falsy values in javascript are false, null, 0, “”, undefined, and NaN.</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Don\'t show a false ID to this bouncer.</span>\n  <span class="hljs-keyword">return</span> arr;\n}\n\nbouncer([<span class="hljs-number">7</span>, <span class="hljs-string">"ate"</span>, <span class="hljs-string">""</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">9</span>]);\n</code></pre>\n<h2>Analysis</h2>\n<p>Using <img src="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" alt="Array.filter(callback)"> to remove elements from an array.</p>\n<p>The <em>callback</em> function is called for each array element to check if it will be filtered (removed).</p>\n<h2>Example</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isBigEnough</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-keyword">return</span> value &gt;= <span class="hljs-number">10</span>;\n}\n<span class="hljs-keyword">var</span> filtered = [<span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">130</span>, <span class="hljs-number">44</span>].filter(isBigEnough);\n<span class="hljs-comment">// filtered is [12, 130, 44]</span>\n</code></pre>\n<h2>:warning: My Solution is coming up!</h2>\n<p>Don’t scroll down if you don’t want to see it!</p>\n<pre><code>                           <span class="hljs-number">10.</span>..\n                        <span class="hljs-number">9.</span>..\n                     <span class="hljs-number">8.</span>..\n                  <span class="hljs-number">7.</span>..\n               <span class="hljs-number">6.</span>..\n            <span class="hljs-number">5.</span>..\n         <span class="hljs-number">4.</span>..\n      <span class="hljs-number">3.</span>..\n   <span class="hljs-number">2.</span>..\n<span class="hljs-number">1.</span>..\n\nGO!!!\n   \n</code></pre>\n<h2>Code Solution:</h2>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bouncer</span>(<span class="hljs-params">arr</span>) </span>{\n  <span class="hljs-comment">// Don\'t show a false ID to this bouncer.</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isNotFalsy</span>(<span class="hljs-params">value</span>) </span>{\n      <span class="hljs-keyword">return</span> value;\n  }\n\n  <span class="hljs-keyword">var</span> myArr = arr.filter(isNotFalsy);\n\n  <span class="hljs-keyword">return</span> myArr;\n}\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><strong>Array.filter()</strong>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter</a></li>\n<li><strong>Gorka Hernández Blog</strong>: <a href="https://www.gorkahernandez.com/blog/fcc-bonfire-series-115-falsey-bouncer/">https://www.gorkahernandez.com/blog/fcc-bonfire-series-115-falsey-bouncer/</a></li>\n</ul>\n<h1>Credits:</h1>\n<p>If you found this page useful, you can give thanks by copying and pasting this on the main chat:\n<code>Thanks @StrongeLeeroy @HelioGuilherme66</code></p>\n<blockquote>\n<p><strong>NOTE:</strong> Please add your username only if you have added any <strong>relevant main contents</strong> to the wiki page. (Please don’t remove any existing usernames.)</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"bot announce",order:5,body:'<h2>Announcing CamperBot!</h2>\n<p>CamperBot is our new AI friend who’s going to make the FCC chatrooms more fun.\nHe can get info from the wiki, share bonfire hints, and help you get brownie points for helping people!</p>\n<p><a href="https://twitter.com/FreeCodeCamp/status/627338604134559744">https://twitter.com/FreeCodeCamp/status/627338604134559744</a></p>\n<h3>beta testing</h3>\n<p>Currently in beta test in the #HelpBonfires channel. Try it out here:\n<a href="https://gitter.im/FreeCodeCamp/HelpBonfires">https://gitter.im/FreeCodeCamp/HelpBonfires</a></p>\n<h3>read about what CamperBot features</h3>\n<p><a href="https://freecodecamp.github.io/wiki/docs/camperbot">https://freecodecamp.github.io/wiki/docs/camperbot</a></p>\n<h3>talk to the Dev Team</h3>\n<p><a href="https://gitter.im/dcsan/gitterbot">https://gitter.im/dcsan/gitterbot</a></p>\n'}},function(e,n){e.exports={title:"botdemo",order:5,body:'<p>We’ve added a bot to some of the chatrooms. We’ll be adding more features over time, but these are the starting features. We’d love to hear what you think!\nThe main thing is pulling in content from our <a href="https://freecodecamp.github.io/wiki/docs">brand new wiki</a>, right into the chat.</p>\n<ul>\n<li>\n<p><code>find js</code> or <code>find css</code> or <code>find html</code><br>\nshow a list of matching items.</p>\n</li>\n<li>\n<p><code>help js ternary</code><br>\nquick definition/help. click through to see more on the wiki</p>\n</li>\n<li>\n<p><code>help video</code><br>\ninline video</p>\n</li>\n<li>\n<p><code>help bobbytables</code><br>\nshows inline images</p>\n</li>\n<li>\n<p><code>explain triphop</code>\nyou can embed soundcloud tracks</p>\n</li>\n<li>\n<p><code>topics</code><br>\nshow a list of topics</p>\n</li>\n</ul>\n<h1>Join the CamperBot DevTeam!</h1>\n<p>we’re looking for some people to join the core dev team to work on new features for the bot.\nping @dcsan on gitter or leave a message in <a href="https://gitter.im/camperbot/devteam">gitter.com/camperbot/devteam</a></p>\n'}},function(e,n){e.exports={title:"botideas",order:5,body:'<p>If you have ideas or feature requests for the bot, you can add them to this page.\nAlso come hang out in <a href="https://gitter.im/camperbot/devteam">https://gitter.im/camperbot/devteam</a></p>\n<ul>\n<li>XKCD comic feed<br>\nshow comics inside the feed!\nfrom @saintpeter</li>\n</ul>\n'}},function(e,n){e.exports={title:"botintro",order:5,body:'<p>Bot is live in beta on gitter</p>\n<h2><a href="https://gitter.im/FreeCodeCamp/HelpBonfires">https://gitter.im/FreeCodeCamp/HelpBonfires</a></h2>\n<p><a href="https://twitter.com/FreeCodeCamp/status/627338604134559744">https://twitter.com/FreeCodeCamp/status/627338604134559744</a></p>\n<p>Hay All! We’re working on a new CamperBot for FreeCodeCamp.\nThis will make the chat rooms more fun and useful.\nIt will pull in content from our <a href="https://freecodecamp.github.io/wiki/docs/">brand new wiki</a> right into the chat room.</p>\n<h1>Basic commands</h1>\n<p>We’re adding more features all the time. But here are some basics</p>\n<pre><code>help\nfind TOPIC\nwiki TOPIC\nabout @<span class="hljs-keyword">user</span>\n<span class="hljs-title">thanks</span> @<span class="hljs-keyword">user</span>\n<span class="hljs-title"></span></code></pre>\n<h2>adding to the wiki</h2>\n<p>you can add topics to the main wiki, and these will get updated and pulled into the chat.\nPlease add material!</p>\n<h2>Beta Testing</h2>\n<p><a href="https://gitter.im/dcsan/gitterbot">https://gitter.im/dcsan/gitterbot</a></p>\n<h2>Repo</h2>\n<p><a href="http://bot.freecodecamp.com/go?room=camperbot/testing&amp;topic=betatesting">http://bot.freecodecamp.com/go?room=camperbot/testing&amp;topic=betatesting</a>\ntype <code>help</code> to get started with basic commands</p>\n'}},function(e,n){e.exports={title:"botpreso",order:5,body:'<h1>FCC chatbot <strong>CamperBot</strong></h1>\n<p>Now in development. First release today.</p>\n<p>to get started:</p>\n<h1>bot help</h1>\n<p>To talk with the dev team about new features:</p>\n<h1><a href="https://gitter.im/camperbot/testing">https://gitter.im/camperbot/testing</a></h1>\n'}},function(e,n){e.exports={title:"camperbot",order:5,body:'<p>Hi, I’m <strong><a href="https://freecodecamp.github.io/wiki/docs/camperbot">CamperBot</a></strong>! I can help you in this chatroom :smile:</p>\n<h3>Basic Commands:</h3>\n<ul>\n<li><code>find TOPIC</code>  find all entries about topic. ex: <code>find js</code></li>\n<li><code>wiki TOPIC</code> show contents of topic page</li>\n<li><code>thanks @username</code>  send brownie points to another user</li>\n<li><code>about @username</code>   shows info on that user</li>\n<li><code>bonfire BONFIRENAME</code> info on a bonfire</li>\n</ul>\n<p>:speech_balloon: <a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">meet CamperBot in this room!</a></p>\n<h2>Example Commands</h2>\n<pre><code>find js   # <span class="hljs-built_in">all</span> JS entries\nwiki muta  # first <span class="hljs-built_in">entry</span> with muta <span class="hljs-type">in</span> <span class="hljs-keyword">name</span>\nwiki bobbytables  # showing images\nwiki video  # and video\nrollem    # secret sauce\nbonfire roman   # <span class="hljs-built_in">any</span> bonfire with roman <span class="hljs-type">in</span> <span class="hljs-keyword">name</span>\n</code></pre>\n<p>For playing with CamperBot please use the testing channel:\n<a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">https://gitter.im/FreeCodeCamp/camperbotPlayground</a></p>\n<h2>Help on Bonfires</h2>\n<p>Live currently on the HelpBonFires channel on Gitter\n<a href="https://gitter.im/FreeCodeCamp/HelpBonfires">https://gitter.im/FreeCodeCamp/HelpBonfires</a></p>\n<p>We’ve added some bonfire specific commands. If you type <code>bonfire $BONFIRENAME</code> (where $BONFIRENAME is part of a bonfire name) it will set the chat to be about that bonfire. Then you can use some other bonfire specific commands:</p>\n<ul>\n<li>bf details - more info</li>\n<li>bf spoiler - show some hints</li>\n</ul>\n<h2>More  commands</h2>\n<ul>\n<li><code>update</code>  pulls new wiki edits asap</li>\n<li><code>topics</code> selected pages from the wiki</li>\n<li><code>rooms</code>  all rooms the bot is in</li>\n<li><code>archives</code> show history</li>\n<li><code>music</code> deprecated, plug DJ no longer exists.</li>\n<li><code>twitch</code> show the twitch feed</li>\n</ul>\n<h2>Content for the wiki</h2>\n<p>Feel free to make new pages, an example entry is here:\n<a href="https://freecodecamp.github.io/wiki/docs/example">https://freecodecamp.github.io/wiki/docs/example</a></p>\n<h2>Source Repository</h2>\n<h3><a href="https://github.com/FreeCodeCamp/camperbot">https://github.com/FreeCodeCamp/camperbot</a></h3>\n<p>Fork it and have fun!</p>\n<h2>Roadmap</h2>\n<p>We’re looking for ideas for new features to add, and some people to help working on the bot.\nHave a look at Tickets with <a href="https://github.com/FreeCodeCamp/camperbot/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22">help wanted</a> on the repo and maybe you can contribute?</p>\n<p>In future, we’re planning:</p>\n<ul>\n<li>Bonfire step-by-step tutorials will be available via chat and from the CamperBot</li>\n<li>realtime tagging and searching of chats by topic</li>\n<li>a scripting language and natural language processing\nGet involved and let us know what you’d like to see next!</li>\n</ul>\n<h2>Developer Chatroom</h2>\n<ul>\n<li><a href="https://gitter.im/FreeCodeCamp/camperbot">Join us on our repository chat room</a> to discuss new features. Perhaps we can pair up to work on the bot 2.0!</li>\n<li><a href="https://gitter.im/FreeCodeCamp/camperbotPlayground">Join this chat room</a> to mess around with the CamperBot and try out commands, proofread your edits to wiki content etc.</li>\n</ul>\n<p><img src="https://avatars1.githubusercontent.com/camperbot?&amp;s=100" alt="enjoy"> Happy Coding!</p>\n'}},function(e,n){e.exports={title:"chai assert",order:5,body:'<h1>assert(expression, message)</h1>\n<ul>\n<li>@param{ Mixed }expressionto test for truthiness</li>\n<li>@param{ String }messageto display on error</li>\n</ul>\n<p>Write your own test expressions.</p>\n<pre><code class="language-js">assert(<span class="hljs-string">\'foo\'</span> !== <span class="hljs-string">\'bar\'</span>, <span class="hljs-string">\'foo is not bar\'</span>);\nassert(<span class="hljs-built_in">Array</span>.isArray([]), <span class="hljs-string">\'empty arrays are arrays\'</span>);\n</code></pre>\n<p>details: <a href="http://chaijs.com/api/assert/">http://chaijs.com/api/assert/</a></p>\n'}},function(e,n){e.exports={title:"chai cheat",order:5,body:"<h1>Chai.js</h1>\n<h3>Assert</h3>\n<pre><code>assert(val)\nassert.fail(actual, expected)\nassert.ok(val) // is truthy\nassert.equal(actual, expected) // 'compare with =='\nassert.strictEqual\nassert.deepEqual\n\nassert.isTrue\nassert.isFalse\n\nassert.isNull\nassert.isNotNull\nassert.isUndefined\nassert.isDefined\nassert.isFunction\nassert.isObject\nassert.isArray\nassert.isString\nassert.isNumber\nassert.isBoolean\n\nassert.typeOf(/tea/, 'regexp') // Object.prototype.toString()\nassert.instanceOf(chai, Tea)\nassert.include([ a,b,c ], a)\nassert.match(val, /regexp/)\nassert.property(obj, 'tea') // 'tea' in object\nassert.deepProperty(obj, 'tea.green')\nassert.propertyVal(person, 'name', 'John')\nassert.deepPropertyVal(post, 'author.name', 'John')\n\nassert.lengthOf(object, 3)\nassert.throws(function() { ... })\nassert.throws(function() { ... }, /reference error/)\nassert.doesNotThrow\n\nassert.operator(1, '&lt;', 2)\nassert.closeTo(actual, expected)\n</code></pre>\n<h3>Should: chains</h3>\n<pre><code>.to .be .been .is .that .and .have .with .at .of .same\n</code></pre>\n<h3>Should not</h3>\n<pre><code>expect(object).not.equal('x')\n</code></pre>\n<h3>Expectations</h3>\n<pre><code>expect(object)\n  .equal(expected)\n  .eql\n  .deep.equal(expected) // same as .eql\n  .be.a('string')\n  .include(val)\n\n  .be.ok(val)\n  .be.true\n  .be.false\n\n  .be.null\n  .be.undefined\n  .be.empty\n  .be.arguments\n  .be.function\n  .be.instanceOf\n\n  .gt(5)  # or .above .greaterThan\n  .gte    # or .at.least\n  .lt(5)  # or .below\n\n  .respondTo('bar')\n  .satisfy (n) -&gt; n &gt; 0\n\n  .have.members([2, 3, 4])\n  .have.keys(['foo'])\n  .have.key('foo')\n\n  .exist\n\nexpect(-&gt; ...)\n  .throw /not a function/\n</code></pre>\n<h3>Chai-jQuery</h3>\n<pre><code class=\"language-js\">    global.jQuery = ...;\n    chai.use(<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'chai-jquery'</span>));\n\n    expect($body)\n\n      .have.attr(<span class=\"hljs-string\">'foo'</span>)\n      .have.prop(<span class=\"hljs-string\">'disabled'</span>)\n      .have.css(<span class=\"hljs-string\">'background'</span>)\n      .have.css(<span class=\"hljs-string\">'background-color'</span>, <span class=\"hljs-string\">'#ffffff'</span>)\n      .have.data(<span class=\"hljs-string\">'foo'</span>)\n\n      .have.class(<span class=\"hljs-string\">'active'</span>)\n      .have.id(<span class=\"hljs-string\">'id'</span>)\n\n      .have.html(<span class=\"hljs-string\">'&lt;em&gt;hi&lt;/em&gt;'</span>)\n      .have.text(<span class=\"hljs-string\">'hello'</span>)\n      .have.value(<span class=\"hljs-string\">'2013'</span>)\n\n      .be.visible\n      .be.hidden\n\n      .be.checked\n      .be.selected\n\n      .be.enabled\n      .be.disabled\n\n      .be.empty\n      .to.exist\n      .to.contain(<span class=\"hljs-string\">'text'</span>)\n      .to.have(<span class=\"hljs-string\">'.selector'</span>)\n</code></pre>\n<blockquote>\n<p><a href=\"https://github.com/rstacruz/cheatsheets\">ricostacruz CheatSheets</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://gitter.im/bothelp/testing\">Discuss on gitter</a></p>\n</blockquote>\n"}},function(e,n){e.exports={title:"chai",order:5,body:'<h1>Chai.js</h1>\n<p>[Chai] (<a href="http://chaijs.com/">http://chaijs.com/</a>) is a testing framework. More info:</p>\n<ul>\n<li><code>help chai assert</code></li>\n<li><code>help chai expectations</code></li>\n</ul>\n'}},function(e,n){e.exports={title:"code case",order:5,body:'<h3>camelCase</h3>\n<p>In programming camelCase formatting for variable names looks like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> camelCase = <span class="hljs-string">"lower-case first word, capitalize each subsequent word"</span>;\n</code></pre>\n<h3>PascalCase</h3>\n<p>Another form of this case, often refered to as PascalCase or just CamelCase, and differs by having each word in the variable capitalized like so:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> PascalCase = <span class="hljs-string">"upper-case every word"</span>;\n</code></pre>\n<p>###snake_case\nAnother popular code case for variable naming called snake case involves sperating each word with underscores in this manner:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> snake_case = <span class="hljs-string">"lower-case everything, but separate words with underscores"</span>;\n</code></pre>\n'}},function(e,n){e.exports={title:"code formatting",order:5,body:'<h3>Inline code</h3>\n<p>This an inline <strong>`</strong><code>&lt;paste code here&gt;</code><strong>`</strong> code formatting with a single backtick(`) at <em>start</em> and <em>end</em> around the <code>code</code>.</p>\n<h3>Code Block</h3>\n<p><strong>```</strong> ⇦ Type 3 backticks and then press <code>[shift + enter ⏎]</code></p>\n<pre><code class="language-text">&lt;paste your code here&gt;,\n<span class="hljs-keyword">then</span> press [<span class="hljs-built_in">shift</span> + enter ⏎]\n</code></pre>\n<p><strong>```</strong> ⇦ Type 3 backticks, then press <code>[enter ⏎]</code></p>\n<p>See also: ☛ <a href="https://freecodecamp.github.io/wiki/docs/code-formatting#typing-backticks"><strong>How to type Backticks</strong></a> | ☯ <a href="https://gitter.zendesk.com/hc/en-us/articles/201302311-Compose-mode">Compose Mode</a> | ❄ <a href="https://gitter.zendesk.com/hc/en-us/articles/200176682-Markdown-basics">Gitter Formatting Basics</a></p>\n<h2>Typing Backticks<a href="http://superuser.com/a/254077/122424">⤴</a></h2>\n<h3>QWERTY and QWERTZ (Key that’s been marked with red border)</h3>\n<p><a href="http://i.stack.imgur.com/TOn1U.png"><img src="http://i.stack.imgur.com/TOn1U.png" alt="QWERTY"></a></p>\n<h3>AZERTY France (<kbd>Alt Gr</kbd> + Key that’s been marked with red border)</h3>\n<p><a href="http://i.stack.imgur.com/BTBIE.png"><img src="http://i.stack.imgur.com/BTBIE.png" alt="AZERTY"></a></p>\n<h3>AZERTY Belgium (<kbd>Alt Gr</kbd> + Key that’s been marked with red border)</h3>\n<p><a href="http://i.stack.imgur.com/9o9hM.png"><img src="http://i.stack.imgur.com/9o9hM.png" alt="enter image description here"></a></p>\n<h3>QWERTY Estonian (Key’s that have been marked with red border)</h3>\n<p><img src="http://i.imgur.com/Ugcflkk.png" alt="Estonian Keyboard layout"></p>\n'}},function(e,n){e.exports={title:"css selectors",order:5,body:'<p>In CSS, selectors are patterns used to select DOM elements.</p>\n<p>basic selectors like <code>a</code> or <code>h1</code></p>\n<pre><code class="language-css">a { color: black; }\nh1 { font-size 24px; }\n</code></pre>\n<h2>cheat list of selectors</h2>\n<pre><code class="language-css">.name            - all items of class \'name\'\n#name            - ID of \'name\'\ndiv#container    - all divs with \n</code></pre>\n<p>but you can combine them in other ways like:</p>\n<pre><code><span class="hljs-tag">li</span> <span class="hljs-tag">a</span>             -\n<span class="hljs-tag">li</span> &gt; <span class="hljs-tag">a</span>           -\n<span class="hljs-tag">li</span> + <span class="hljs-tag">a</span>           -\n</code></pre>\n<h2>this is a stub entry!</h2>\n<p>please read up on this stuff from cheat sheets around the web and edit/complete this document!</p>\n<p><a href="http://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048">Great Reference at CodeTuts</a></p>\n'}},function(e,n){e.exports={title:"css",order:5,body:'<p>Cascading Style Sheets [(CSS)] (<a href="https://developer.mozilla.org/en-US/docs/Web/CSS">https://developer.mozilla.org/en-US/docs/Web/CSS</a>) is a style sheet language used for describing the look and formatting of a document written in a markup language.</p>\n<blockquote>\n<p>tags: css, stylesheets</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"dau",order:5,body:'<p>Daily Active Users</p>\n<p>often used in web startups as a core <a href="kpi">KPI</a>\nsee also <a href="mau">MAU</a>.</p>\n'}},function(e,n){e.exports={title:"debugging",order:5,body:'<blockquote>\n<p>Debugging helps you identify and remove errors from (computer hardware or software).</p>\n</blockquote>\n<p>Use <a href="http://repl.it/languages/JavaScript">repl.it</a> to help you debug your code.  It shows the console output on the right as well as errors and lets you share your code snippets with other people.</p>\n'}},function(e,n){e.exports={title:"demo trim",order:5,body:'<p>The chatwiki only shows up to the first <code>h2</code> heading, marked with two # symbols.\nThis is a piece of demo content showing embedded scripts.\nThe first paragraph should display inside the chat.\nThe second paragraph won’t show in wiki chat, but will show if you click through.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">return</span> (a+b);\n}\n</code></pre>\n<h2>second paragraph</h2>\n<p>This is the 2nd paragraph of content which is “below the fold” and won’t be visible in the chat.</p>\n'}},function(e,n){e.exports={title:"emoji",order:5,body:"<p>Gitter IM and GitHub both support a range of cool emoji (emoticons).\nFrom <code>:sunny:</code> :sunny: to <code>:poop:</code> :poop: you can express a range of emotions!</p>\n"}},function(e,n){e.exports={title:"example",order:5,body:'<p>This is an example wiki entry. Break it up with a <code>## H2 heading</code> as content before that will show in the chat, but the <a href="https://freecodecamp.github.io/wiki/docs/example">rest is on the wiki</a>.</p>\n<pre><code>console.<span class="hljs-command">log</span>(<span class="hljs-string">"less is more!"</span>);\n</code></pre>\n<table>\n<thead>\n<tr>\n<th><img src="https://avatars2.githubusercontent.com/u/13561988?v=3&amp;s=128" alt="HappyCamping"></th>\n<th style="text-align:left">-{ Happy Coding! :+1: }</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td style="text-align:left"><a href="https://github.com/camperbot">https://github.com/camperbot</a></td>\n</tr>\n</tbody>\n</table>\n<h2>anything after this ## heading doesn’t show in the chat</h2>\n<p>Anything below the first <code>## Heading</code> will only be shown in the wiki.</p>\n<ul>\n<li>\n<p>update\nWhen you’re done editing, type <code>update</code></p>\n</li>\n<li>\n<p>For testing your update please use the bot testing channel here:\n<a href="https://gitter.im/camperbot/testing">https://gitter.im/camperbot/testing</a></p>\n</li>\n<li>\n<p>If you put links <a href="https://freecodecamp.github.io/wiki/docs/example">make them full URLs</a> like that.</p>\n</li>\n</ul>\n<p>:star2: :hamster: <a href="http://www.emoji-cheat-sheet.com/">emoji look cute! cheat sheet</a></p>\n<p><img src="https://s3.amazonaws.com/freecodecamp/landingIcons_connect.svg.gz" alt="images"></p>\n'}},function(e,n){e.exports={title:"git merge",order:5,body:'<p>Let us say that you are working on an application that is similar to reddit, but specifically for code snippets. In such an application, you would likely have a <code>master</code> branch which contains all the released features, a <code>dev</code> branch which might contain features that have been coded, but not implemented yet. Every developer in the team will create his own branches off the <code>dev</code> branch for individual features. The repository structure would look something like this:</p>\n<pre><code>                                  <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>If you decided to merge the 3rd commit (<code>Commit 3</code>) into the <code>master</code> branch from the <code>dev</code> branch, then it would be as simple as running a <code>git merge</code> command because the <code>dev</code> branch is <em>up-to-date</em> with the <code>master</code> branch: all of the commits in the <code>master</code> branch exist in the <code>dev</code> branch. You can merge the branches by running the follow commands:</p>\n<pre><code>git checkout dev\ngit merge <span class="hljs-keyword">master</span>\n<span class="hljs-title"></span></code></pre>\n<p>The result would be something like this:</p>\n<pre><code>                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>Now you decide to work on the authentication feature. To work on the authentication feature, you create another branch based on the <code>dev</code> branch and decide to call it <code>auth</code>. This is what the repo structure looks like:</p>\n<pre><code>                                                  <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n                                                <span class="hljs-comment">/</span>\n                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>If you were to commit any changes to the <code>auth</code> branch, merging them with the <code>dev</code> branch would be trivial because it is up-to-date with the <code>dev</code> branch. Now while you were working away on the authentication feature, one of the developers finished coding the syntax-highlighting feature, and decided to merge it with the <code>dev</code> branch. The repo looks like this now:</p>\n<pre><code>                                                  <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n                                                <span class="hljs-comment">/</span>\n                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>You’re branch, in git terminology, is now a commit behind the <code>dev</code> branch. This means that you cannot simply merge the two branches: you must bring your <code>auth</code> branch up-to-date with the <code>dev</code> branch. This can be done with <code>git merge</code>!</p>\n<p>Merging the <code>auth</code> branch with the <code>dev</code> branch, or the <code>dev</code> branch with the <code>master</code> branch is straightforward and does what you expect, but merging the other way around has its own idiosyncrasies that are not intuitive at first blush. I can babble about it, or I can show you another great diagram of what would happen if you merged the <code>dev</code> branch with the <code>auth</code> branch at this moment:</p>\n<pre><code>                                                  <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n                                                <span class="hljs-comment">/</span>               <span class="hljs-comment">/</span>\n                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>See what I did there? Look at the diagram for a second and try to understand what is happening here before you move on. You essentially made another commit to the <code>auth</code> branch with the commits in the <code>dev</code> branch included. But that’s all right, right? After all, at the end of the day I wanted to bring my <code>auth</code> branch up-to-date with the <code>dev</code> branch, and now it <em>is</em> up-to-date? Yep. But let me show you a diagram to explicitly illustrate what the other diagram implies: Your <code>auth</code> branch now looks like this:</p>\n<pre><code>    <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n  <span class="hljs-comment">/</span>                <span class="hljs-comment">/</span>\n<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>See it now? You <em>copied</em> the commit over. If you were to merge to the <code>dev</code> branch now, it would look something like this:</p>\n<pre><code>    <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n  <span class="hljs-comment">/</span>                <span class="hljs-comment">/</span>                  <span class="hljs-comment">\\</span>\n<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>You merged the same commit twice! This will of course have no repercussions for your code itself, but if you one fine day decide to look at your <code>git logs</code>, you will immediately realize how dirty your git history is, with some commits being made over and over. If you wanted to revert to a commit, it would be very difficult to decide which commit to revert to.</p>\n<p>It is preferred that to you use <a href="git-rebase">https://freecodecamp.github.io/wiki/docs/git-rebase</a>.</p>\n'
}},function(e,n){e.exports={title:"git rebase",order:5,body:'<p><strong>Were you referred to this page to get your PR accepted? Scroll right <a href="https://freecodecamp.github.io/wiki/docs/git-rebase#git-rebase-at-fcc">to the bottom</a> then!</strong></p>\n<p><code>git rebase</code> is an extremely useful tool that is all about rewriting git history, though most commonly used to <em>squash</em> multiple commits into one. While useful in this scenario, this is not the only function that the <code>git rebase</code> command can perform. It in fact proves to be far more useful when used for the intended function that its name suggests: to essentially <em>rebase</em> a branch. Let me explain what I mean by that.</p>\n<p>Let us say that you have a repository such as this:</p>\n<pre><code>                                                  <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n                                                <span class="hljs-comment">/</span>               \n                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>If you wanted to merge the <code>auth</code> branch with the <code>dev</code> branch, git will throw an error at you because your <code>auth</code> branch is out-of-date: it doesn’t account for Commit 4. You’ll have to bring your branch up-to-date.</p>\n<p>Git provides you with two methods to do this: the <code>merge</code> command and the <code>rebase</code> command. For an exploration of the <code>merge</code> command, visit the relevant wiki article: <a href="https://freecodecamp.github.io/wiki/docs/git-merge">https://freecodecamp.github.io/wiki/docs/git-merge</a></p>\n<p>Let’s run <code>rebase</code> now:</p>\n<pre><code><span class="hljs-title">git</span> checkout auth\ngit rebase dev\n</code></pre>\n<p>The repo will now look like this:</p>\n<pre><code>                                                                 <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">5</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">auth</span> <span class="hljs-comment">branch</span>\n                                                               <span class="hljs-comment">/</span>\n                                               <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">4</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">dev</span> <span class="hljs-comment">branch</span> \n                                             <span class="hljs-comment">/</span>\n <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">1</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">Commit</span> <span class="hljs-comment">3</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span> <span class="hljs-comment">master</span> <span class="hljs-comment">branch</span>\n</code></pre>\n<p>Do you see what happened? Git essentially saved the commits in the <code>auth</code> branch, ‘removed’ it, and then created it again with the same commits <em>after</em> the commits in the <code>dev</code> branch. This means that <code>Commit 4</code> only exists in the <code>dev</code> branch and not the <code>auth</code> branch! And that is really all there is to it! This might seem a bit confusing at first, but try to understand the diagram. This is an extremely useful tool.</p>\n<h2>git-rebase at FCC</h2>\n<h3>Preventing merge conflicts</h3>\n<p>If you contribute to the FCC codebase, or are planning to do it, always run this command before you make any changes in your local files and push them:</p>\n<p><code>git pull --rebase upstream staging</code> (thanks, @SaintPeter)</p>\n<p>If you don’t have <code>upstream</code> set up, then run this command before you run the above command (git will throw an error because it doesn’t know what upstream is):\n<code>git remote add upstream https://github.com/freecodecamp/freecodecamp.git</code></p>\n<p>This will pull the latest changes from the FCC staging branch and rebase them with your fork’s staging branch so that you will not have any conflicts when opening the PR :)</p>\n<h3>Squashing multiple commits into one</h3>\n<p>This is an awesome feature of <code>rebase</code> that can be used in the <code>interactive</code> mode. To squash the last <em>n</em> commits into one, run the following command:</p>\n<pre><code>git rebase -<span class="hljs-tag">i</span> HEAD~n\n</code></pre>\n<p>That will open up a text-editor with something similar to the following:</p>\n<pre><code>pick commit_1\npick commit_2\npick commit_3\n...\npick commit_n\n# <span class="hljs-variable">Bunch</span> <span class="hljs-keyword">of</span> comments\n</code></pre>\n<p>Leave the first commit alone, and change the rest of the <code>pick</code>s to <code>squash</code>. Save and exit the editor.</p>\n<p>If you’ve already pushed to a remote before squashing your commits, you’ll have to push to the remote again, with the <code>-f</code> flag, otherwise git will throw an error at you.\nHappy coding!</p>\n'}},function(e,n){e.exports={title:"global variables",order:5,body:'<p>you should ALWAYS use <strong>var</strong> to declare your variables (to make locally) else it will install GLOBALLY</p>\n<p><a href="http://www.w3.org/wiki/JavaScript_best_practices#Avoid_globals">http://www.w3.org/wiki/JavaScript_best_practices#Avoid_globals</a></p>\n<p><a href="http://c2.com/cgi/wiki?GlobalVariablesAreBad">http://c2.com/cgi/wiki?GlobalVariablesAreBad</a></p>\n'}},function(e,n){e.exports={title:"good code",order:5,body:"<p>`/* C’est la premiere fois que j’utilise l’argument object. quel drole de machin.Dans une prochaine etape j’essaierai de trouver comment reussir avec un filtre. */</p>\n<p>function strainer(arra, liste) {\nfor (i = arra.length; i &gt;= 0; i --){\nvar item = arra[i];\nfor (j = liste.length - 1; j &gt;= 0; j --) {\nvar  elemt = liste[j];\nif (item == elemt) {\narra.splice(i, 1);\n}\n}\n}\nreturn arra;\n}\nfunction destroyer(arr) {\nvar elenco = Array.prototype.slice.call(arguments);</p>\n<p>liste = elenco.slice(1, elenco.length);</p>\n<p>// Remove all the values\nreturn strainer(arr, liste);\n}\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3, “”);</p>\n<p>`</p>\n"}},function(e,n){e.exports={title:"Accessing the database from your frontend",order:5,body:'<p>You must have noticed in <strong>main.controller.js</strong> how <em>things</em> were retrieved from the database and displayed:</p>\n<pre><code class="language-javascript">\n$http.get(<span class="hljs-string">\'/api/things\'</span>).success(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">awesomeThings</span>)</span>{  \n	$scope.awesomeThings = awesomeThings;  \n});\n\n</code></pre>\n<p>What this does is call the api with a “get” request, which is then routed by <strong>/server/api/thing/index.js</strong> to the <em>exports.index</em> function in <strong>thing.controller.js</strong>. You’ll also notice in <strong>main.controller.js</strong> that there are included examples of <em>$http.post</em> and <em>$http.delete</em> functions too! How nice!</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Fixing-exports.update">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Seed-data">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Backend file structure",order:5,body:'<p>Your app’s backend api that interacts with your database is located in <strong>/server/api</strong><br>\nLet’s take a look at <strong>/server/api/thing</strong>:</p>\n<ol>\n<li><strong>index.js</strong>:  this file routes the $http API requests made from your app’s front-end to the appropriate function in **thing.controller.js **</li>\n<li><strong>thing.controller.js</strong>: Here is where we actually deal with the database! Take a minute to look through here and figure out what’s going on. These functions will: return all items in a collection, return a single item from a collection when passed its id, post an item to a collection, update an item in the collection (this doesn’t really work as intended out of the box, we’re going to fix that in a minute), and of course, delete an item from the collection.</li>\n<li><strong>thing.model.js</strong>: Here, the actual structure of a <em>thing</em> object is defined. You can add or remove any fields you want from the <em>thing</em> model, and as long as they’re syntactically correct they won’t break anything, even if there are <em>things</em> with different schemas in your database already. But! You don’t just have to edit the <em>thing</em> model to make a new type of collection, because generator-angular-fullstack can do it for you!</li>\n</ol>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Grunt">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-API-endpoint">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Bonus SocketIO",order:5,body:'<p>If you’ve gotten to the Stock Charting basejump you may have noticed that the bonus criteria is to have your stock list live update across clients. This can be accomplished with SocketIO, but that’s not all SocketIO can do. Remember earlier, I mentioned that when using <em>$http.post</em> you had to update your local array with the database’s version of the item you were posting? SocketIO keeps a user’s browser environment synced with your database in realtime. This has two practical upshots:</p>\n<ol>\n<li>You no longer have to manually update your local data with database data; it is all managed automatically</li>\n<li>You can push database changes live to users on different machines all at the same time</li>\n</ol>\n<p>Even better, if you just include SocketIO when prompted during the yeoman angular-fullstack setup, there is absolutely no work involved to include it. It works out of the box, has a working demo on the <strong>main/</strong> route, and you can learn how to use it yourself by simply looking at how they include it in <strong>main.controller.js</strong> (so I won’t go any further into detail).</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/isLoggedInAsync()">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Epilogue">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Creating a new API endpoint",order:5,body:'<p>Your app’s backend api that interacts with your database is located in <strong>/server/api</strong><br>\nLet’s take a look at <strong>/server/api/thing</strong>:</p>\n<ol>\n<li><strong>index.js</strong>:  this file routes the $http API requests made from your app’s front-end to the appropriate function in **thing.controller.js **</li>\n<li><strong>thing.controller.js</strong>: Here is where we actually deal with the database! Take a minute to look through here and figure out what’s going on. These functions will: return all items in a collection, return a single item from a collection when passed its id, post an item to a collection, update an item in the collection (this doesn’t really work as intended out of the box, we’re going to fix that in a minute), and of course, delete an item from the collection.</li>\n<li><strong>thing.model.js</strong>: Here, the actual structure of a <em>thing</em> object is defined. You can add or remove any fields you want from the <em>thing</em> model, and as long as they’re syntactically correct they won’t break anything, even if there are <em>things</em> with different schemas in your database already. But! You don’t just have to edit the <em>thing</em> model to make a new type of collection, because generator-angular-fullstack can do it for you!</li>\n</ol>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Grunt">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-API-endpoint">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Creating a new directive",order:5,body:'<p>Do you remember custom directives from the shaping up with angular course? You can also make a custom directive!</p>\n<pre><code>&gt;&gt; yo angular-fullstack:directive newdirective\n</code></pre>\n<p>And if you need an html template for your custom directive (maybe you’re just making a directive to clean up your HTML code), tell it to make an html file when it prompts you to and you’ll be able to include the contents of that template anywhere in your app with:</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-title">newdirective</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">newdirective</span>&gt;</span>\n</code></pre>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-route">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Grunt">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Creating a new route",order:5,body:'<pre><code>&gt;&gt; yo angular-fullstack:route newpage \n</code></pre>\n<p>Typing the above into your command-line will generate a <strong>newpage/</strong> route for your app! It automatically generates all the necessary files within your <strong>/client/app/newpage</strong> folder, like your <strong>/client/app/main</strong> folder, with a <strong>newpage.controller.js</strong>, <strong>newpage.controller.spec.js</strong>, <strong>newpage.js</strong>, and <strong>newpage.html</strong>. These all pretty much behave like the ones in the <strong>main/</strong> route. If you’re accessing the database in your newpage controller, you’ll want to add <em>$http</em> to the list of dependencies in <strong>newpage.controller.js</strong> the same way it’s included in <strong>main.controller.js</strong>:</p>\n<pre><code class="language-javascript">angular.module(<span class="hljs-string">\'myApp\'</span>)\n  .controller(<span class="hljs-string">\'MainCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $http</span>) </span>{ ...\n</code></pre>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Frontend-file-structure">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-directive">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Dynamic URLs using $routeParams",order:5,body:'<p>What if you have a lot of users posting <em>things</em> to your website? Maybe your users want to have a profile, or a wall, of the <em>things</em> they’ve posted, and they want to be able to share it with their friends with a url? You can do that, no biggie!</p>\n<p>Let’s say you used</p>\n<pre><code>&gt;&gt; yo angular-fullstack:route wall\n</code></pre>\n<p>to generate a <a href="#">http://myapp.wherever.com/wall/</a> route for your users. You want a link to <a href="#">http://myapp.wherever.com/wall/someUsername</a> to show a specific user’s <em>things</em>.<br>\nBrowse to <strong>/client/app/wall/wall.js</strong> and notice that it detects what URL the user is requesting before acting on it:</p>\n<pre><code class="language-javascript">$routeProvider.when(<span class="hljs-string">\'/wall\'</span>, …\n</code></pre>\n<p>You can customize that path to catch when a user is trying to see a profile associated with a specific username like so:</p>\n<pre><code class="language-javascript">$routeProvider.when(<span class="hljs-string">\'/wall/:username\'</span>, …\n</code></pre>\n<p>The colon before “username” indicates that this is a variable, which is then passed to the <em>$routeParams</em> module. In <strong>wall.controller.js</strong>, include <em>$routeParams</em>:</p>\n<pre><code class="language-javascript">.controller(<span class="hljs-string">\'WallCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $routeParams</span>) </span>{ …\n</code></pre>\n<p>Then later on in <strong>wall.controller.js</strong>, you can see what username was requested in the URL by referring to the variable generated by <em>$routeProvider</em> using something like</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> wallOwner = $routeParams.username;\n</code></pre>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Quick-tip-keep-data-in-sync">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/More-useful-APIs">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Epilogue",order:5,body:'<p>If you have any issues not covered in this guide:</p>\n<ol>\n<li>google google google google duckduckgo</li>\n<li>bug @freecodecamp and me (@clnhll) on twitter</li>\n<li>did you miss a semicolon? a comma?</li>\n<li>make a big loud stink in the freecodecamp help gitter.</li>\n</ol>\n<p>If you notice any inaccuracies or bad coding practices in this guide, please let me know ASAP!</p>\n<p>I believe in you!\n-<a href="https://github.com/clnhll">clnhll</a></p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Bonus-SocketIO">PREVIOUS</a></p>\n'}},function(e,n){e.exports={title:"Fixing exports.update",order:5,body:'<p>As it turns out, in <strong>thing.controller.js</strong> as well as in any other endpoints you may generate, the <em>exports.update</em> function that is called when you make an <em>$http.put</em> call from your frontend to modify an existing database object is broken. This is a <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues/310">known issue</a>, and can be fixed by changing the following line:</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// Updates an existing thing in the DB.</span>\nexports.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>{ \n...    \n    <span class="hljs-keyword">var</span> updated = _.extend(thing, req.body); \n    <span class="hljs-comment">// change _.merge to _.extend</span>\n... \n };\n</code></pre>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-API-endpoint">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Accessing-the-database-from-your-frontend">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Frontend file structure",order:5,body:'<p>First things first: All your user-facing files and angular files are in <strong>/client/app/</strong></p>\n<ol>\n<li><strong>app.js</strong>: defines your app and includes some basic app-wide functions, you probably don’t really need to mess with it unless you’re trying to add more dependencies to your app. We’re not gonna worry about that right now.</li>\n<li><strong>app.css</strong>: an app-wide stylesheet, you can put styles here if you want but I’d recommend you put them in <strong>main/main.css</strong>, as these styles are also app-wide.</li>\n<li><strong>main/</strong>: this folder contains what the user sees first when they load up your site. <strong>main.html</strong> is the page template, <strong>main.js</strong> routes the user to <strong>main.html</strong> when the user goes to the top level directory of your website—that is, <a href="#">http://yourapp.wherever.itis/</a> with no <a href="#">/other/url/hierarchy</a>. You’ll also learn soon that you can define your app’s <a href="#">/url/heirarchy/fairly/arbitrarily</a>. You won’t really need to edit <strong>main.js</strong> or <strong>main.controller.spec.js</strong>, so let’s not worry about those right now. If you look through the <strong>main.html</strong> file you’ll see it uses <em>ng-repeat</em> to show <em>things</em> in <em>awesomeThings</em>. Where does it get <em>awesomeThings</em>?</li>\n<li><strong>main/main.controller.js</strong>: all of the javascript functions you want to use to interact directly with the user go here! You’ll put functions here to interact with your API, refresh views for your user, etc. Here, <em>awesomeThings</em> are pulled from your database and added to the local scope so your HTML view can display them! How cool! We’ll get to adding custom objects to your database in a minute.</li>\n</ol>\n<p>Great! Now you know how to interact with the user! But what if you want your app to have another page that does something else? Maybe <strong>main.html</strong> shows the home page, but you want a page that shows a form to add a poll? maybe <a href="#">http://yourapp.wherever.itis/newpage</a>? This is where the yeoman generator comes in handy.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Guide-to-Basejumps-Table-of-Contents/">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-route">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Get info about the current user",order:5,body:'<p>You may have noticed if you opened up <strong>/client/app/admin/admin.controller.js</strong> that it calls the <em>Auth</em> module like so:</p>\n<pre><code class="language-javascript">.controller(<span class="hljs-string">\'AdminCtrl\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$scope, $http, Auth …\n</span></span></code></pre>\n<p>You can include Auth in your other controllers the same way. It’s pretty useful to have <em>Auth</em> available in your controller to detect if a user is logged in, or to get information about the current user. In the body of your controller you can add</p>\n<pre><code class="language-javascript">$scope.getCurrentUser = Auth.getCurrentUser;\n$scope.isLoggedIn = Auth.isLoggedIn;\n</code></pre>\n<p>And then you can use <em>isLoggedIn()</em> or <em>getCurrentUser()</em> in the HTML view for your controller!</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/More-useful-APIs">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Restrict-a-page-to-authenticated-users">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Grunt",order:5,body:'<p>Whenever you create a new route or directive, you have to use <code>control+c</code> in your <em>grunt</em> terminal window to quit the grunt process and re-run <code>grunt serve</code> for your new route/directive to be included in your project’s <strong>index.html</strong>. Sometimes <em>grunt</em> can be a little finnicky and refuses to run if it thinks something is wrong with your project. Obviously you should try to fix the problem, but grunt’s errors aren’t very helpful so don’t worry too much—grunt usually will still run totally fine with the command <code>grunt serve --force</code>.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-directive">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Backend-file-structure">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Intro to Yeoman Angular Fullstack Basejumps",order:5,body:'<blockquote>\n<p>Hey FreeCodeCampers! This guide is here to help you navigate creating your first basejump. When I encountered the first basejump, I had no idea what was going on and spent weeks learning all of these things myself. Everything here is stuff I wish I had known coming into the basejumps. Oh and by the way, if you have a question that isn’t answered by this guide, that’s an issue, and you should report it as an issue to this repository! —<a href="http://twitter.com/clnhll">@clnhll</a></p>\n</blockquote>\n<p>Yeoman is a tool that allows you to generate barebones apps based on different software stacks using “generator” packages made by developers who want to make your life easier. These packages streamline your time developing and deploying websites using your platform of choice. We’re using a full-stack MEAN (MongoDB, ExpressJS, AngularJS, NodeJS) generator called generator-angular-fullstack by DaftMonk (<a href="https://github.com/DaftMonk/generator-angular-fullstack">https://github.com/DaftMonk/generator-angular-fullstack</a>).</p>\n<p>Once you’ve completed the Waypoint: Get Set for Basejumps, use this guide to navigate the base structure of your new app and learn how to interact with the database as well as the user.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Guide-to-Basejumps-Table-of-Contents">NEXT</a></p>\n<p>Sourced from (<a href="https://github.com/clnhll/guidetobasejumps">https://github.com/clnhll/guidetobasejumps</a>) with permission.</p>\n'}},function(e,n){e.exports={title:"isLoggedInAsync()",order:5,body:'<p>Let’s say you have a public page, but if the user is logged in you want to show special information to them. You’ll need to detect if a user is logged in before you make an <em>$http</em> call, right? It’s not guaranteed that this will work, because <em>isLoggedIn()</em> is actually an async call. If you want to force something to wait until after <em>isLoggedIn()</em> is successful before it gets called, you should include <em>Auth.isLoggedInAsync</em>:</p>\n<pre><code class="language-javascript">$scope.isLoggedInAsync = Auth.isLoggedInAsync;\n</code></pre>\n<p><em>isLoggedInAsync</em> takes a callback function as an input, and passes the callback function a <em>true</em> boolean if the user is logged in, and a <em>false</em> if the user is not. You can call it like so:</p>\n<pre><code class="language-javascript">$scope.isLoggedInAsync(callback(bool) {\n	<span class="hljs-keyword">if</span> (bool) { <span class="hljs-comment">/** do thing if they’re logged in **/</span> } \n	<span class="hljs-keyword">else</span> { <span class="hljs-comment">/** do different thing if they’re not logged in **/</span> }\n});\n</code></pre>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Restrict-a-page-to-authenticated-users">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Bonus-SocketIO">NEXT</a></p>\n'}},function(e,n){e.exports={title:"More useful APIs",order:5,body:'<p>There are two more things you have to do before this to be useful to you, however. Say you want to show all the <em>things</em> associated with the username requested with that page: you must first</p>\n<ol>\n<li>Have a “username” or “owner” field in your <em>thing</em> schema at <strong>/server/api/thing/thing.model.js</strong></li>\n<li>Write a custom route in <strong>/server/api/thing/index.js</strong> to catch a request for a specific username. The request from your frontend might look something like:</li>\n</ol>\n<pre><code class="language-javascript">\n$http.get(<span class="hljs-string">\'/api/things/\'</span> + username).success( … \n\n</code></pre>\n<p>so you’ll add a line into your <strong>index.js</strong> like:</p>\n<pre><code class="language-javascript">\nrouter.get(<span class="hljs-string">\'/:user\'</span>, controller.indexUser);\n</code></pre>\n<p>and then in <strong>thing.controller.js</strong> you’ll write an <em>exports.indexUser</em> function like so:</p>\n<pre><code class="language-javascript">exports.indexUser = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>{\n	Thing.find({owner:req.params.user}, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, things</span>) </span>{\n		<span class="hljs-keyword">if</span>(err) <span class="hljs-keyword">return</span> res.send(<span class="hljs-number">500</span>, err);\n		res.json(<span class="hljs-number">200</span>, things);\n	});\n};\n</code></pre>\n<p>Warning!!! this method only works right if usernames are absolutely unique between users. The default authentication system that comes with the angular-fullstack generator does not have unique usernames, so you’re probably better off using the <em>user._id</em> field to determine unique users in your database for now, unless you want to implement unique user names yourself by altering your <strong>/api/user/user.model.js</strong>, <strong>/api/user/user.controller.js</strong>, and your <strong>/app/client/account/signup/signup.controller.js</strong>. Thankfully, you should know how to go about doing all that after reading this guide!</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Dynamic-URLs-using-%24routeParams">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Get-info-about-the-current-user">NEXT</a></p>\n'
}},function(e,n){e.exports={title:"Quick tip keep data in sync",order:5,body:'<p>Say you want something to show up on the user view when you add it to the database. A new <em>thing</em> object will instantly show up in an <em>ng-repeat</em> loop in your HTML view if you simply add it to your local array with</p>\n<pre><code class="language-javascript">\n$scope.awesomeThings.push(newThing);\n</code></pre>\n<p>But you’ll still need to add it to your database collection. Add it to your collection with</p>\n<pre><code class="language-javascript">\n$http.post(<span class="hljs-string">\'/api/things\'</span>, newThing);	\n\n</code></pre>\n<p>But wait! You’ll soon realize that while all the other things in your <em>$scope.awesomeThings</em> array have unique ids assigned by MongoDB (under the <em>thing._id</em> property), your <em>newThing</em> object will not, which will make it hard for you at some point to make database actions on it (deleting it from your database requires you to use its <em>._id</em> property). So what you’ll want to do after you add it to your <em>$scope.awesomeThings</em> array (because we want it to show up on the user’s page immediately). Altogether, your code to add a newThing to your local array and database will look like:</p>\n<pre><code class="language-javascript">$scope.awesomeThings.push(newThing);\n$http.post(<span class="hljs-string">\'/api/things\'</span>, newThing).success(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">thatThingWeJustAdded</span>) </span>{\n	$scope.awesomeThings.pop(); <span class="hljs-comment">// let\'s lose that id-lacking newThing </span>\n	$scope.awesomeThings.push(thatThingWeJustAdded); <span class="hljs-comment">// and add the id-having newThing!</span>\n};\n</code></pre>\n<p>This updates the local array for seemingly instant results for your user and then syncs it to your database and updates the local array in the background with the database’s version of your <em>newThing</em> object, unique <em>._id</em> and all. Notice the callback we pass to the <em>success</em> function receives the new <em>thing</em> back from the database as an argument! This way you can easily add it back to your local scope without too much overhead.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Seed-data">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Dynamic-URLs-using-$routeParams">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Restrict a page to authenticated users",order:5,body:'<p>Let’s say you have a route that you want to restrict to logged-in users; maybe you have a <a href="#">/profile</a> page that lets your users fill in some information about themselves, but it wouldn’t work if they weren’t logged in. Open <strong>/client/app/profile/profile.js</strong>, and add <code>authenticate: true</code> to the options passed to <em>$routeProvider.when</em> like so:</p>\n<pre><code class="language-javascript">    $routeProvider\n      .when(<span class="hljs-string">\'/profile\'</span>, {\n        templateUrl: <span class="hljs-string">\'app/profile/profile.html\'</span>,\n        controller: <span class="hljs-string">\'ProfileCtrl\'</span>,\n        authenticate: <span class="hljs-literal">true</span> <span class="hljs-comment">// restrict to authenticated users</span>\n      });\n</code></pre>\n<p>This way, if the user isn’t authenticated when they try to access the <A href="#">/profile</a> page, they’ll be redirected to your login screen to authenticate before continuing to their profile page.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Get-info-about-the-current-user">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/isLoggedInAsync()">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Seed data",order:5,body:'<p>The <em>things</em> that show up on your app’s main view are part of some seed data that is added to your database (including your test and admin users) every time you restart your app (by running <code>grunt serve</code> in the command line). This data is defined in <strong>/server/config/seed.js</strong>.</p>\n<p>You can add, remove, or change data in this file, and it will be written to your database, overwriting any duplicates the next time you run <code>grunt serve</code>. If an object defined in <strong>seed.js</strong> is overwritten, the database will assign a new <em>._id</em> property to it (we’ll cover <em>._id</em> properties in the next section), which may give you some issues later on in testing. To avoid this, you can turn off seeding by setting <code>seedDB: false</code> in <strong>/server/config/environment/development.js</strong>.</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Accessing-the-database-from-your-frontend">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Quick-tip:-keep-data-in-sync">NEXT</a></p>\n'}},function(e,n){e.exports={title:"Guide to Basejumps Table of Contents",order:5,body:'<h3>Table of contents</h3>\n<ul>\n<li>Part 1: Frontend\n<ul>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Frontend-file-structure">Frontend file structure</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-route">Creating a new route</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-directive">Creating a new directive</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Grunt">Grunt</a></li>\n</ul>\n</li>\n<li>Part 2: Backend\n<ul>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Backend-file-structure">Backend file structure</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Creating-a-new-API-endpoint">Creating a new API endpoint</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Fixing-exports.update">Fixing exports.update</a></li>\n</ul>\n</li>\n<li>Part 3: Interfacing Between Frontend &amp; Backend\n<ul>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Accessing-the-database-from-your-frontend">Accessing the database from your frontend</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Seed-data">Seed Data</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Quick-tip-keep-data-in-sync">Quick tip: keep data in sync</a></li>\n</ul>\n</li>\n<li>Part 4: Dynamic URLs using $routeParams, more useful APIs\n<ul>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Dynamic-URLs-using-$routeParams">Dynamic URLS using $routeParams</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/More-useful-APIs">More Useful APIs</a></li>\n</ul>\n</li>\n<li>Part 5: Auth, isLoggedInAsync()\n<ul>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Get-info-about-the-current-user">Get info about the current user</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Restrict-a-page-to-authenticated-users">Restrict a page to authenticated users</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/isLoggedInAsync()">isLoggedInAsync()</a></li>\n</ul>\n</li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Bonus-SocketIO">Bonus: SocketIO</a></li>\n<li><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Epilogue">Epilogue</a></li>\n</ul>\n<h3>Legend</h3>\n<p><strong>/bolded/names/with.extensions</strong> are directories and files in the project file structure<br>\n<a href="#">highlighted.items/are/hypothetical</a> URLs that allow access to different pages in your app<br>\n<em>italicizedItems</em> are function and object names within your code</p>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Intro-to-Yeoman-Angular-Fullstack-Basejumps">PREVIOUS</a>\n<a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Frontend-file-structure">NEXT</a></p>\n'}},function(e,n){e.exports={title:"how to post code",order:5,body:'<p>use backticks `</p>\n<p><img src="https://dl.dropboxusercontent.com/u/48751994/code.png" alt="posting"></p>\n'}},function(e,n){e.exports={title:"html elements",order:5,body:'<p>Most HTML elements have an opening tag and a closing tag. Opening tags look like this: <code>&lt;h1&gt;</code>.</p>\n<p>Closing tags look like this: <code>&lt;/h1&gt;</code>.</p>\n<p>Note that the only difference between opening and closing tags is that closing tags have a slash after their opening angle bracket.</p>\n<p>Try it here! <a href="http://www.freecodecamp.com/challenges/waypoint-say-hello-to-html-elements">http://www.freecodecamp.com/challenges/waypoint-say-hello-to-html-elements</a></p>\n'}},function(e,n){e.exports={title:"Start Here",order:0,body:'<h2>If you’re new to Free Code Camp, or just new to the wiki, start here:</h2>\n<h3>Curriculum</h3>\n<ul>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/What-you-will-learn,-and-in-what-sequence-you-will-learn-it">What you will learn, and in what sequence you will learn it</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/How-Long-Free-Code-Camp-Takes">How long does Free Code Camp take?</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Brownie-Points">What are these brownie points?</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Free-Code-Camp-Front-End-Development-Certificate">The Front End Development Certificate</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Free-Code-Camp-Full-Stack-Development-Certificate">The Full Stack Development Certificate</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Guide-to-Basejumps-Table-of-Contents">Guide to Basejumps</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Basejump-Resources">Basejump Resources</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Why-does-Free-Code-Camp-use-JavaScript-instead-of-Ruby-or-Python">Why JavaScript?</a></p>\n</li>\n</ul>\n<h3>Community</h3>\n<ul>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Code-of-Conduct">Code of Conduct</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Camper-News">Camper News</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Campsites">Campsites</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Official-Free-Code-Camp-Chat-Rooms">Official Chat Rooms</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/camperbot">How to use CamperBot</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/How-to-add-Free-Code-Camp-to-my-LinkedIn-profile">Join the LinkedIn Community and Find Alumni</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/How-you-can-stream-your-live-coding-sessions-on-the-Free-Code-Camp-Twitch.tv-channel">Stream your Coding Session on our Twitch.tv page</a></p>\n</li>\n</ul>\n<h3>Nonprofit</h3>\n<ul>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/How-FreeCodeCamp-Nonprofit-Projects-work">How Nonprofit Projects Work</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Free-Code-Camp-completion-language-requirements">Natural Language Requirements</a></p>\n</li>\n<li>\n<p><a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Other-resources-that-Free-Code-Camp-recommends-to-nonprofits">Resources that Free Code Camp recommends to Nonprofits Who Don’t Qualify</a></p>\n</li>\n</ul>\n'}},function(e,n){e.exports={title:"isLoggedInAsync",order:5,body:'<p>Let’s say you have a public page, but if the user is logged in you want to show special information to them. You’ll need to detect if a user is logged in before you make an <em>$http</em> call, right? It’s not guaranteed that this will work, because <em>isLoggedIn()</em> is actually an async call. If you want to force something to wait until after <em>isLoggedIn()</em> is successful before it gets called, you should include <em>Auth.isLoggedInAsync</em>:</p>\n<pre><code class="language-javascript">$scope.isLoggedInAsync = Auth.isLoggedInAsync;\n</code></pre>\n<p><em>isLoggedInAsync</em> takes a callback function as an input, and passes the callback function a <em>true</em> boolean if the user is logged in, and a <em>false</em> if the user is not. You can call it like so:</p>\n<pre><code class="language-javascript">$scope.isLoggedInAsync(callback(bool) {\n    <span class="hljs-keyword">if</span> (bool) { <span class="hljs-comment">/** do thing if they’re logged in **/</span> }\n    <span class="hljs-keyword">else</span> { <span class="hljs-comment">/** do different thing if they’re not logged in **/</span> }\n});\n</code></pre>\n<p><a href="https://freecodecamp.github.io/wiki/docs/Restrict-a-page-to-authenticated-users">PREVIOUS</a> <a href="https://freecodecamp.github.io/wiki/docs/Bonus-SocketIO">NEXT</a></p>\n'}},function(e,n){e.exports={title:"jQuery",order:5,body:"<p>It’s the most used library in JavaScript. Is used to handle events, create animations, etc. to create dynamic web applications and pages.</p>\n<ul>\n<li><code>$()</code> -&gt; tells js we’ll be using jQuery.</li>\n<li><code>document</code> tells jQuery to work with our HTML</li>\n<li><code>.ready</code> -&gt; makes the jQuery wait untill the page is completely loaded.</li>\n</ul>\n<h2>Keep adding</h2>\n<p>placeholder! work in progress!\nplease add key notes here, these won’t show up in chat.</p>\n"}},function(e,n){e.exports={title:"js Array prototype concat",order:5,body:'<h1>js Array prototype concat</h1>\n<p>The <code>concat()</code> method returns a new array comprised of the array on which it is called joined with the array(s) and/or value(s) provided as arguments.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> new_array = old_array.concat(value1[, value2[, ...[, valueN]]])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>valueN</strong></p>\n<p>Arrays and/or values to concatenate into a new array. See the description below for details.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/2e06zxh0%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\n<code>concat</code> creates a new array consisting of the elements in the object on which it is called, followed in order by, for each argument, the elements of that argument (if the argument is an array) or the argument itself (if the argument is not an array).</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> alpha = [<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>, <span class="hljs-string">\'c\'</span>];\n<span class="hljs-keyword">var</span> alphaNumeric = alpha.concat(<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>]);\n\n<span class="hljs-built_in">console</span>.log(alphaNumeric); \n<span class="hljs-comment">// Result: [\'a\', \'b\', \'c\', 1, 2, 3]</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> a, b, c, d;\na = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);\nb = <span class="hljs-string">"dog"</span>;\nc = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">42</span>, <span class="hljs-string">"cat"</span>);\nd = a.concat(b, c);\n<span class="hljs-built_in">document</span>.write(d);\n\n<span class="hljs-comment">//Output: </span>\n<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"dog"</span>, <span class="hljs-number">42</span>, <span class="hljs-string">"cat"</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype every",order:5,body:'<h1>js Array prototype every</h1>\n<p>The <code>every()</code> method tests whether all elements in the array pass the test implemented by the provided function.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">arr.every(callback[, thisArg])\n</code></pre>\n<h3>Parameters</h3>\n<ul>\n<li>\n<p><strong>callback</strong>\nFunction to test for each element, taking three arguments:</p>\n</li>\n<li>\n<p><strong>currentValue</strong> (required)\nThe current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>index</strong> (optional)\nThe index of the current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>array</strong> (optional)\nThe array every was called upon.</p>\n</li>\n<li>\n<p><strong>thisArg</strong>\nOptional. Value to use as this when executing callback.</p>\n</li>\n</ul>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff679981%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nThe <code>every</code> method calls the <code>callback</code> function one time for each array element, in ascending index order, until the <code>callback</code> function returns false. If an element that causes <code>callback</code> to return false is found, the every method immediately returns <code>false</code>. Otherwise, the every method returns <code>true</code>.</p>\n<p>The callback function is not called for missing elements of the array.</p>\n<p>In addition to array objects, the every method can be used by any object that has a length property and that has numerically indexed property names.\n<code>every</code> does not mutate the array on which it is called.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isBigEnough</span>(<span class="hljs-params">element, index, array</span>) </span>{\n  <span class="hljs-keyword">return</span> element &gt;= <span class="hljs-number">10</span>;\n}\n[<span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">130</span>, <span class="hljs-number">44</span>].every(isBigEnough);   <span class="hljs-comment">// false</span>\n[<span class="hljs-number">12</span>, <span class="hljs-number">54</span>, <span class="hljs-number">18</span>, <span class="hljs-number">130</span>, <span class="hljs-number">44</span>].every(isBigEnough); <span class="hljs-comment">// true</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Define the callback function.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckIfEven</span>(<span class="hljs-params">value, index, ar</span>) </span>{\n    <span class="hljs-built_in">document</span>.write(value + <span class="hljs-string">" "</span>);\n\n    <span class="hljs-keyword">if</span> (value % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    <span class="hljs-keyword">else</span>\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n}\n\n<span class="hljs-comment">// Create an array.</span>\n<span class="hljs-keyword">var</span> numbers = [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>];\n\n<span class="hljs-comment">// Check whether the callback function returns true for all of the</span>\n<span class="hljs-comment">// array values.</span>\n<span class="hljs-keyword">if</span> (numbers.every(CheckIfEven))\n    <span class="hljs-built_in">document</span>.write(<span class="hljs-string">"All are even."</span>);\n<span class="hljs-keyword">else</span>\n    <span class="hljs-built_in">document</span>.write(<span class="hljs-string">"Some are not even."</span>);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 2 4 5 Some are not even.</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype filter",order:5,body:'<h1>Array.prototype.filter()</h1>\n<p>The <code>filter()</code> method creates a new array with all elements that pass the test implemented by the provided function</p>\n<pre><code class="language-js">arr.filter(callback[, thisArg])\n</code></pre>\n<h2>parameters</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Parameter</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Required</td>\n<td>Arr</td>\n</tr>\n<tr>\n<td>Required</td>\n<td>callback (function with max 3 args)</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>thisArg</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Return:</strong> A new array that contains all the values for which the callback function returns true. If the callback function returns false for all elements of array1, the length of the new array is 0.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">MDN link</a> | <a href="https://msdn.microsoft.com/library/ff679973%28v=vs.94%29.aspx?f=255&amp;MSPPError=-2147217396">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-comment">// Define a callback function.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckIfPrime</span>(<span class="hljs-params">value, index, ar</span>) </span>{\n    high = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(value)) + <span class="hljs-number">1</span>;\n    \n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> div = <span class="hljs-number">2</span>; div &lt;= high; div++) {\n        <span class="hljs-keyword">if</span> (value % div == <span class="hljs-number">0</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n        }\n    } \n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n}\n\n<span class="hljs-comment">// Create the original array.</span>\n<span class="hljs-keyword">var</span> numbers = [<span class="hljs-number">31</span>, <span class="hljs-number">33</span>, <span class="hljs-number">35</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">41</span>, <span class="hljs-number">43</span>, <span class="hljs-number">45</span>, <span class="hljs-number">47</span>, <span class="hljs-number">49</span>, <span class="hljs-number">51</span>, <span class="hljs-number">53</span>];\n\n<span class="hljs-comment">// Get the prime numbers that are in the original array. </span>\n<span class="hljs-keyword">var</span> primes = numbers.filter(CheckIfPrime);\n\n<span class="hljs-built_in">document</span>.write(primes);\n<span class="hljs-comment">// Output: 31,37,41,43,47,53</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Create the original array.</span>\n<span class="hljs-keyword">var</span> arr = [<span class="hljs-number">5</span>, <span class="hljs-string">"element"</span>, <span class="hljs-number">10</span>, <span class="hljs-string">"the"</span>, <span class="hljs-literal">true</span>];\n\n<span class="hljs-comment">// Create an array that contains the string</span>\n<span class="hljs-comment">// values that are in the original array.</span>\n<span class="hljs-keyword">var</span> result = arr.filter(\n    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{\n        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">typeof</span> value === <span class="hljs-string">\'string\'</span>);\n    }\n);\n\n<span class="hljs-built_in">document</span>.write(result);\n<span class="hljs-comment">// Output: element, the</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype forEach",order:5,body:'<h1>js Array prototype forEach</h1>\n<p>The <code>forEach()</code> method executes a provided function once per array element.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">arr.forEach(callback[, thisArg])\n</code></pre>\n<h3>Parameters</h3>\n<ul>\n<li>\n<p><strong>callback</strong>\nFunction to execute for each element, taking three arguments:</p>\n</li>\n<li>\n<p><strong>currentValue</strong>\nThe current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>index</strong>\nThe index of the current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>array</strong>\nThe array that forEach is being applied to.</p>\n</li>\n<li>\n<p><strong>thisArg</strong>\nOptional. Value to use as this when executing callback.</p>\n</li>\n</ul>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff679980%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\n<code>forEach()</code> executes the provided callback once for each element present in the array in ascending order. It is not invoked for index properties that have been deleted or are uninitialised (i.e. on sparse arrays). Unlike <code>map()</code> or <code>reduce()</code> it always returns the value <code>undefined</code> and is not <em>chainable</em>. The typical use case is to execute side effects at the end of a chain.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logArrayElements</span>(<span class="hljs-params">element, index, array</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'a[\'</span> + index + <span class="hljs-string">\'] = \'</span> + element);\n}\n\n<span class="hljs-comment">// Note elision, there is no member at 2 so it isn\'t visited</span>\n[<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, , <span class="hljs-number">9</span>].forEach(logArrayElements);\n<span class="hljs-comment">// logs:</span>\n<span class="hljs-comment">// a[0] = 2</span>\n<span class="hljs-comment">// a[1] = 5</span>\n<span class="hljs-comment">// a[3] = 9</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Create an array.</span>\n<span class="hljs-keyword">var</span> numbers = [<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>];\n\n<span class="hljs-comment">// Call the addNumber callback function for each array element.</span>\n<span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;\nnumbers.forEach(\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addNumber</span>(<span class="hljs-params">value</span>) </span>{ sum += value; }\n);\n\n<span class="hljs-built_in">document</span>.write(sum);\n<span class="hljs-comment">// Output: 33</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype indexOf",order:5,body:'<h1>Array.prototype.indexOf()</h1>\n<p>The <code>indexOf()</code> method returns the first index at which a given element can be found in the array, or -1 if it is not present!!</p>\n<pre><code class="language-js">arr.indexOf(searchElement[, fromIndex = <span class="hljs-number">0</span>])\n</code></pre>\n<h2>Parameters</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Parameter</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Required</td>\n<td>Arr</td>\n</tr>\n<tr>\n<td>Required</td>\n<td>searchElement</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>fromIndex</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Return:</strong> -1 if the element is not found in the array or an integer &gt;=0, the position of the element in the array</p>\n<p><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">MDN link</a></p>\n<h2>Examples</h2>\n<p><strong>Use Case:</strong> Check to see if there are any apples in the fruit basket (defined as an array)?</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> basket = [<span class="hljs-string">\'apple\'</span>,<span class="hljs-string">\'orange\'</span>,<span class="hljs-string">\'banana\'</span>,<span class="hljs-string">\'strawberry\'</span>];\n</code></pre>\n<p><strong>Without</strong> indexOf()</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> found = <span class="hljs-literal">false</span>;\n<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i= <span class="hljs-number">0</span>, l = basket.length; i&lt; l; i++){\n	<span class="hljs-keyword">if</span>(basket[i] === <span class="hljs-string">\'apple\'</span>){\n		found = <span class="hljs-literal">true</span>;\n                <span class="hljs-keyword">break</span>;\n	}\n}\n<span class="hljs-built_in">console</span>.log(found);\n</code></pre>\n<p><strong>With</strong> indexOf()</p>\n<pre><code class="language-js"><span class="hljs-built_in">console</span>.log(basket.indexOf(<span class="hljs-string">"apple"</span>) != -<span class="hljs-number">1</span>);\n</code></pre>\n<p>tags: js, array</p>\n'}},function(e,n){e.exports={title:"js Array prototype join",order:5,body:'<h1>Array.prototype.join()</h1>\n<p>The JavaScript array method <code>.join()</code> will combine all elements of an array into a single string.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-string">"Lorem"</span>, <span class="hljs-string">"Ipsum"</span>, <span class="hljs-string">"Dolor"</span>, <span class="hljs-string">"Sit"</span>];\n<span class="hljs-keyword">var</span> str = array.join([separator]);\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>separator</strong></p>\n<p>Optional. Specifies the string to use to separate each element of the original array. If the separator is not a\nstring, it will be converted to a string. If separator parameter is not provided, array elements are separated\nwith a comma by default. If separator is an empty string <code>&quot;&quot;</code>, all array elements are joined without a separator\ncharacter between them.</p>\n<h2>Description</h2>\n<p><code>.join()</code> joins all elements of an array into a single string. If any of the array elements are <code>undefined</code> or <code>null</code>,\nthat element is converted to the empty string <code>&quot;&quot;</code>.</p>\n<h2>Examples</h2>\n<p><strong>Using <code>.join()</code> four different ways</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-string">"Lorem"</span>, <span class="hljs-string">"Ipsum"</span>, <span class="hljs-string">"Dolor"</span> ,<span class="hljs-string">"Sit"</span>];\n\n<span class="hljs-keyword">var</span> join1 = array.join();           <span class="hljs-comment">/* assigns "Lorem,Ipsum,Dolor,Sit" to join1 variable\n                                       (because no separator was provided .join()\n                                       defaulted to using a comma) */</span>\n<span class="hljs-keyword">var</span> join2 = array.join(<span class="hljs-string">", "</span>);       <span class="hljs-comment">// assigns "Lorem, Ipsum, Dolor, Sit" to join2 variable</span>\n<span class="hljs-keyword">var</span> join3 = array.join(<span class="hljs-string">" + "</span>);      <span class="hljs-comment">// assigns "Lorem + Ipsum + Dolor + Sit" to join3 variable</span>\n<span class="hljs-keyword">var</span> join4 = array.join(<span class="hljs-string">""</span>);         <span class="hljs-comment">// assigns "LoremIpsumDolorSit" to join4 variable</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join">MDN</a></p>\n'
}},function(e,n){e.exports={title:"js Array prototype lastIndexOf",order:5,body:'<h1>js Array prototype lastIndexOf</h1>\n<p>The <code>lastIndexOf()</code> method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at <code>fromIndex</code>.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">arr.lastIndexOf(searchElement[, fromIndex = arr.length - <span class="hljs-number">1</span>])\n</code></pre>\n<h3>Parameters</h3>\n<ul>\n<li><strong>searchElement</strong></li>\n<li>Element to locate in the array.</li>\n<li><strong>fromIndex</strong></li>\n<li><em>Optional</em>. The index at which to start searching backwards. Defaults to the array’s length minus one, i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, the whole array will be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the array will not be searched.</li>\n</ul>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff679972%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nThe index of the last occurrence of <code>searchElement</code> in the array, or -1 if <code>searchElement</code> is not found.</p>\n<p>##Description\n<code>lastIndexOf</code> compares <code>searchElement</code> to elements of the Array using strict equality (the same method used by the ===, or triple-equals, operator).</p>\n<p>##Remarks\nThe search occurs in descending index order (last member first). To search in ascending order, use the <code>indexOf</code> method.</p>\n<p>The optional <code>fromIndex</code> argument specifies the array index at which to begin the search. If <code>fromIndex</code> is greater than or equal to the array length, the whole array is searched. If <code>fromIndex</code> is negative, the search starts at the array length plus <code>fromIndex</code>. If the computed index is less than 0, -1 is returned.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>];\narray.lastIndexOf(<span class="hljs-number">2</span>);     <span class="hljs-comment">// 3</span>\narray.lastIndexOf(<span class="hljs-number">7</span>);     <span class="hljs-comment">// -1</span>\narray.lastIndexOf(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);  <span class="hljs-comment">// 3</span>\narray.lastIndexOf(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);  <span class="hljs-comment">// 0</span>\narray.lastIndexOf(<span class="hljs-number">2</span>, -<span class="hljs-number">2</span>); <span class="hljs-comment">// 0</span>\narray.lastIndexOf(<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>); <span class="hljs-comment">// 3</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Create an array.</span>\n<span class="hljs-keyword">var</span> ar = [<span class="hljs-string">"ab"</span>, <span class="hljs-string">"cd"</span>, <span class="hljs-string">"ef"</span>, <span class="hljs-string">"ab"</span>, <span class="hljs-string">"cd"</span>];\n\n<span class="hljs-comment">// Determine the first location, in descending order, of "cd".</span>\n<span class="hljs-built_in">document</span>.write(ar.lastIndexOf(<span class="hljs-string">"cd"</span>) + <span class="hljs-string">"&lt;br/&gt;"</span>);\n\n<span class="hljs-comment">// Output: 4</span>\n\n<span class="hljs-comment">// Find "cd" in descending order, starting at index 2.</span>\n<span class="hljs-built_in">document</span>.write(ar.lastIndexOf(<span class="hljs-string">"cd"</span>, <span class="hljs-number">2</span>) + <span class="hljs-string">"&lt;br/&gt;"</span>);\n\n<span class="hljs-comment">// Output: 1</span>\n\n<span class="hljs-comment">// Search for "gh" (which is not found).</span>\n<span class="hljs-built_in">document</span>.write(ar.lastIndexOf(<span class="hljs-string">"gh"</span>)+ <span class="hljs-string">"&lt;br/&gt;"</span>);\n\n<span class="hljs-comment">// Output: -1</span>\n\n<span class="hljs-comment">// Find "ab" with a fromIndex argument of -3.</span>\n<span class="hljs-comment">// The search in descending order starts at index 3,</span>\n<span class="hljs-comment">// which is the array length minus 2.</span>\n<span class="hljs-built_in">document</span>.write(ar.lastIndexOf(<span class="hljs-string">"ab"</span>, -<span class="hljs-number">3</span>) + <span class="hljs-string">"&lt;br/&gt;"</span>);\n<span class="hljs-comment">// Output: 0</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype map",order:5,body:'<h1>Array.prototype.map()</h1>\n<p>The method <code>map</code> of the Array prototype allows you to grab a hold of each element inside an array and apply a function to them. After <strong>map</strong> finishes iterating through the array, it will return a <strong>new array</strong> with the results of applying the function to the aforementioned elements.</p>\n<h4>The syntax is as follows:</h4>\n<p><code>myAwesomeArray.map(myAwesomeFunction)</code></p>\n<p>Since <strong>map</strong> doesn’t mutate the original array, it should be used as a value, stored inside a variable, passed in as a <strong>returned value</strong> inside a function (the most common case) and many other things.\nLet’s learn a little bit of what this powerful function can do! Say we have an array of  names and we want to create a new array with these names but UPPERCASED.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> names = [<span class="hljs-string">"Leia"</span>, <span class="hljs-string">"Anakin"</span>, <span class="hljs-string">"Luke"</span>, <span class="hljs-string">"Obi Wan Kenobi"</span>];\n<span class="hljs-keyword">var</span> uppercaseNames = names.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) </span>{\n  <span class="hljs-keyword">return</span> name.toUpperCase();\n};\n</code></pre>\n<p>Now if we <code>console.log(uppercaseNames)</code> we will get this:</p>\n<blockquote>\n<p><code>Array(4) -&gt; [&quot;LEIA&quot;, &quot;ANAKIN&quot;, &quot;LUKE&quot;, &quot;OBI WAN KENOBI&quot;]</code></p>\n</blockquote>\n<p>But how does it work? Let’s dive more into it.</p>\n<h2>Let’s talk about the callback parameters</h2>\n<p>The callback is the function that the Array.map() method accepts, it can be an anonymous function or an already declared function with the following parameters which, by the way, you can name as you please:</p>\n<p>1- <strong>currentValue</strong>: As the name suggest, it’s the current element of the array being evaluated and waiting for your function to replace it with a new value in the new array (same index of course).</p>\n<p>2- <strong>index</strong>: It equals to the numeric index of currentValue, say you are in “Anakin”, that means index, at the time, will equal to <strong>1</strong>.</p>\n<p>3- <strong>array</strong>: The array that’s calling the method, in this case, it’s referring to <strong>names</strong>.</p>\n<p>Examples work better than loose explanations, now we can make our callback function turn <code>[&quot;Leia&quot;, &quot;Anakin&quot;, &quot;Luke&quot;, &quot;Obi Wan Kenobi&quot;]</code> into <code>[&quot;My name is Leia, I\'m #1&quot;, &quot;My name is Anakin, I\'m #2&quot;, &quot;My name is Luke, I\'m #3&quot;, &quot;And last but not less important, I\'m #4 Obi Wan Kenobi&quot;]</code>. Sounds interesting and complex huh? It’s actually not if you put the first two parameters to use.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> jediMasters = [<span class="hljs-string">"Leia"</span>, <span class="hljs-string">"Anakin"</span>, <span class="hljs-string">"Luke"</span>, <span class="hljs-string">"Obi Wan Kenobi"</span>];\n<span class="hljs-keyword">var</span> jediMastersSayHi = jediMasters.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">jediName, jediIndex</span>) </span>{\n  <span class="hljs-keyword">if</span> (jediName === <span class="hljs-string">"Obi Wan Kenobi"</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"And last but not less important, I\'m #"</span> + (jediIndex + <span class="hljs-number">1</span>) + <span class="hljs-string">" "</span> + jediName;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"My name is "</span> + jediName + <span class="hljs-string">", I\'m #"</span> + (jediIndex + <span class="hljs-number">1</span>);\n  }\n}); <span class="hljs-comment">// We\'re done mapping, now console.log the whole thing.</span>\n</code></pre>\n<p>If we now console out the values of the two arrays, we get this:</p>\n<p><img src="https://www.evernote.com/shard/s539/sh/75d6da94-dd29-4dd6-98b7-9ee7260533ca/21e0ed3c9e391b9507128a42d2b12421/res/77e93999-b27c-46c5-b101-f9ed32d7aee0/skitch.png" alt="Map in action"></p>\n<p>If you are asking why one of the values in the string concatenation is <code>(jediIndex + 1)</code>, that’s because <strong>indices are 0-based</strong>, we would get 0, 1, 2 and 3 for our Jedi’s and that’s not cool. Check that IF statement just sitting there, what does it do? Simple, it checks if the current Jedi is Obi Wan, if it is, then the new value of that element of the array (the new one) should be different from the rest.</p>\n<p>It’s important to note that <strong>we can write the function outside the map method</strong> and call it with the name’s function. Let’s one more time re-write our code and see how we can achieve this (I think it’s cleaner):</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHi</span>(<span class="hljs-params">jedi, index</span>) </span>{\n  <span class="hljs-keyword">if</span> (jedi === <span class="hljs-string">"Obi Wan Kenobi"</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"And last but not less important, I\'m #"</span> + (index + <span class="hljs-number">1</span>) + <span class="hljs-string">" "</span> + jedi;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-string">"My name is "</span> + jedi + <span class="hljs-string">", I\'m #"</span> + (index + <span class="hljs-number">1</span>);\n  }\n}\n\n<span class="hljs-keyword">var</span> jediMasters = [<span class="hljs-string">"Leia"</span>, <span class="hljs-string">"Anakin"</span>, <span class="hljs-string">"Luke"</span>, <span class="hljs-string">"Obi Wan Kenobi"</span>];\n<span class="hljs-keyword">var</span> jediMastersSayHi = jediMasters.map(sayHi); <span class="hljs-comment">// We\'re done mapping, now console.log the whole thing.</span>\n</code></pre>\n<p>We can use map in strings and other types of objects if we use <code>Array.prototype.call(objectToBeMapped, callbackFunction)</code>, for more examples, go look other sites and practise it.</p>\n'}},function(e,n){e.exports={title:"js Array prototype pop",order:5,body:'<h1>Array.prototype.pop()</h1>\n<p>The JavaScript array method <code>.pop()</code> will remove the last element from an array and returns that element.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\narray.pop();\n</code></pre>\n<h2>Description</h2>\n<p><code>.pop()</code> ‘pops’ the last element in an array off and returns that element</p>\n<p><code>.pop()</code> will return <code>undefined</code> if the array it is called on is empty.</p>\n<h2>Examples</h2>\n<p><strong>Popping off the last value in an array</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">// Console will output 1, 2, 3, 4, 5</span>\n\narray.pop();\n<span class="hljs-comment">/* If we console.log(array.pop()); the console would output 5\nbecause 5 was popped off the array by .pop(). */</span>\n\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">/* Console will output 1, 2, 3, 4 and \nthe variable array now contains the set [1, 2, 3, 4] */</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Array prototype push",order:5,body:'<h1>Array.prototype.push()</h1>\n<p>The JavaScript array method <code>.push()</code> adds one or more new elements to the end of an array and returns the length of the newly expanded array.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\narray.push(<span class="hljs-number">6</span>);\n</code></pre>\n<h3>Parameters</h3>\n<p><code>.push</code> accepts one or multiple parameters.</p>\n<h3>Returns</h3>\n<p>The length of the array is returned by <code>.push()</code></p>\n<h2>Description</h2>\n<p><code>.push()</code> ‘pushes’ new values onto the end (the right side) of an array.</p>\n<h2>Examples</h2>\n<p><strong>Pushing a new element into an array</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\n<span class="hljs-keyword">var</span> totalArrayElements = array.push(<span class="hljs-number">6</span>);\n\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">// Console will output 1, 2, 3, 4, 5, 6</span>\n\n<span class="hljs-built_in">console</span>.log(totalArrayElements);\n<span class="hljs-comment">// Console will output 6</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Array prototype reduce",order:5,body:'<h1>js Array prototype reduce</h1>\n<p>The <code>reduce()</code> method applies a function against an accumulator and each value of the array (from left-to-right) to reduce it to a single value.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">arr.reduce(callback[, initialValue])\n</code></pre>\n<h3>Parameters</h3>\n<ul>\n<li>\n<p><strong>callback</strong>\nFunction to execute on each value in the array, taking four arguments:</p>\n</li>\n<li>\n<p><strong>previousValue</strong>\nThe value previously returned in the last invocation of the callback, or initialValue, if supplied. (See below.)</p>\n</li>\n<li>\n<p><strong>currentValue</strong>\nThe current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>currentIndex</strong>\nThe index of the current element being processed in the array.</p>\n</li>\n<li>\n<p><strong>array</strong>\nThe array reduce was called upon.</p>\n</li>\n<li>\n<p><strong>initialValue</strong>\nOptional. Value to use as the first argument to the first call of the callback.</p>\n</li>\n</ul>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff679975%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nThe accumulated result from the last call to the callback function.</p>\n<p>##Description\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</p>\n<p>##Remarks\nIf an <code>initialValue</code> is provided, the reduce method calls the <code>callback</code> function one time for each element present in the array, in ascending index order. If an <code>initialValue</code> is not provided, the reduce method calls the <code>callback</code> function on each element, starting with the second element.</p>\n<p>The return value of the callback function is provided as the <code>previousValue</code> argument on the next call to the callback function. The return value of the last call to the callback function is the return value of the <code>reduce</code> method.</p>\n<p>The callback function is not called for missing elements of the array.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> total = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>].reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">return</span> a + b;\n});\n<span class="hljs-comment">// total == 6</span>\n\n<span class="hljs-keyword">var</span> flattened = [[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]].reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>{\n  <span class="hljs-keyword">return</span> a.concat(b);\n}, []);\n<span class="hljs-comment">// flattened is [0, 1, 2, 3, 4, 5]</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Define the callback function.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">appendCurrent</span> (<span class="hljs-params">previousValue, currentValue</span>) </span>{\n    <span class="hljs-keyword">return</span> previousValue + <span class="hljs-string">"::"</span> + currentValue;\n    }\n\n<span class="hljs-comment">// Create an array.</span>\n<span class="hljs-keyword">var</span> elements = [<span class="hljs-string">"abc"</span>, <span class="hljs-string">"def"</span>, <span class="hljs-number">123</span>, <span class="hljs-number">456</span>];\n\n<span class="hljs-comment">// Call the reduce method, which calls the callback function</span>\n<span class="hljs-comment">// for each array element.</span>\n<span class="hljs-keyword">var</span> result = elements.reduce(appendCurrent);\n\n<span class="hljs-built_in">document</span>.write(result);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">//  abc::def::123::456</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype reverse",order:5,body:'<h1>Array.prototype.reverse()</h1>\n<p>The JavaScript array method <code>.reverse()</code> will reverse the order of the elements within the array.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\narray.reverse();\n</code></pre>\n<h2>Description</h2>\n<p><code>.reverse()</code> reverses the index of the elements of an array.</p>\n<h2>Examples</h2>\n<p><strong>Use <code>.reverse()</code> to reverse the elements of an array</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">// Console will output 1, 2, 3, 4, 5</span>\n\narray.reverse();\n\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">/* Console will output 5, 4, 3, 2, 1 and\nthe variable array now contains the set [5, 4, 3, 2, 1] */</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Array prototype shift",order:5,body:'<h1>Array.prototype.shift()</h1>\n<p>The JavaScript array method <code>.shift()</code> will remove the first element from an array and return that value. This will also change the length of the array</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];\narray.shift();\n</code></pre>\n<h2>Description</h2>\n<p><code>.shift()</code> will remove the element at index 0 of the array upon which it is called. It then returns the removed value and shifts all remaining elements down by 1 index value.</p>\n<p><code>.shift()</code> will return <code>undefined</code> if the array it is called on contains no elements.</p>\n<h2>Examples</h2>\n<p><strong>Shifting the first value from an array</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">// Console will output 1, 2, 3, 4, 5</span>\n\narray.shift();\n<span class="hljs-comment">// If we console.log(array.shift()); the console would output 1.</span>\n\n<span class="hljs-built_in">console</span>.log(array);\n<span class="hljs-comment">/* Console will output 2, 3, 4, 5 and \nthe variable array now contains the set [2, 3, 4, 5] where \neach element has been moved down 1 index value. */</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Array prototype slice",order:5,body:'<h1>Array.prototype.slice()</h1>\n<blockquote>\n<p>The <code>slice()</code> method returns a shallow copy of a portion of an array into a new array object.</p>\n</blockquote>\n<pre><code class="language-js">arr.slice([begin[, end]])\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Necessity</th>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Required</td>\n<td>arr</td>\n<td>An Array object.</td>\n</tr>\n<tr>\n<td>Required</td>\n<td>begin</td>\n<td>The beginning of the specified portion of array.</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>end</td>\n<td>The end of the specified portion of array.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Return:</strong> The slice method returns an <em>Array object</em> containing the specified portion of arrayObj.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">MDN link</a> | <a href="https://msdn.microsoft.com/library/tkcsy6fe%28v=vs.94%29.aspx?f=255&amp;MSPPError=-2147217396">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> origArray = [<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>];\n<span class="hljs-keyword">var</span> newArray = origArray. slice(<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>);\n<span class="hljs-built_in">document</span>.write(origArray);\n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;br/&gt;"</span>);\nnewArray = origArray. slice(-<span class="hljs-number">2</span>);\n<span class="hljs-built_in">document</span>.write(newArray);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 3,5,7,9</span>\n<span class="hljs-comment">// 7,9</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Our good friend the citrus from fruits example</span>\n<span class="hljs-keyword">var</span> fruits = [<span class="hljs-string">\'Banana\'</span>, <span class="hljs-string">\'Orange\'</span>, <span class="hljs-string">\'Lemon\'</span>, <span class="hljs-string">\'Apple\'</span>, <span class="hljs-string">\'Mango\'</span>];\n<span class="hljs-keyword">var</span> citrus = fruits.slice(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>);\n\n<span class="hljs-comment">// citrus contains [\'Orange\',\'Lemon\']</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype some",order:5,body:'<h1>Array.prototype.some()</h1>\n<p>The JavaScript array method <code>.some()</code> will take a callback function to test each element in the array; once the callback returns <code>true</code> then <code>.some()</code> will return true immediately.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];\narr.some(callback[, thisArg]);\n</code></pre>\n<h3>Callback Function</h3>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> isEven = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEven</span>(<span class="hljs-params">currentElement, index, array</span>) </span>{\n    <span class="hljs-keyword">if</span>(currentElement % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    } <span class="hljs-keyword">else</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    }\n}\n</code></pre>\n<p><em>see wiki</em> on <a href="https://freecodecamp.github.io/wiki/docs/Arithmetic-Operators">Arithmetic Operators</a> to see the remainder operator <code>%</code></p>\n<p><strong>Has 3 arguments</strong></p>\n<ul>\n<li>currentElement\n<ul>\n<li>this is a variable that represents the element that is being passed to the callback.</li>\n</ul>\n</li>\n<li>index\n<ul>\n<li>this is the index value of the current element starting at 0</li>\n</ul>\n</li>\n<li>array\n<ul>\n<li>the array that <code>.some()</code> was call on.</li>\n</ul>\n</li>\n</ul>\n<p>The callback function should implement a test case.</p>\n<h3>thisArg</h3>\n<p>Is an optional parameter and more info can be found at the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some">MDN</a></p>\n<h2>Description</h2>\n<p><code>.some()</code> will run the callback function for each element in the array. Once the callback returns true, <code>.some()</code> will return <code>true</code>. If the callback returns a <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy">falsy value</a> for <em>every</em> element in the array then <code>.some()</code> returns false.</p>\n<p><code>.some()</code> will not change/mutate the array that called it.</p>\n<h2>Examples</h2>\n<p><strong>Passing a function to <code>.some()</code></strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> isEven = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEven</span>(<span class="hljs-params">currentElement, index, array</span>) </span>{\n    <span class="hljs-keyword">if</span>(currentElement % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    } <span class="hljs-keyword">else</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    }\n}\n\n<span class="hljs-keyword">var</span> arr1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>];\narr1.some(isEven);  <span class="hljs-comment">// returns true</span>\n<span class="hljs-keyword">var</span> arr2 = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>];\narr2.some(isEven);  <span class="hljs-comment">// returns false</span>\n</code></pre>\n<p><strong>Anonymous function</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr3 = [<span class="hljs-string">\'Free\'</span>, <span class="hljs-string">\'Code\'</span>, <span class="hljs-string">\'Camp\'</span>, <span class="hljs-string">\'The Amazing\'</span>];\narr3.some(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">curr, index, arr</span>) </span>{\n    <span class="hljs-keyword">if</span> (curr === <span class="hljs-string">\'The Amazing\'</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    } \n    }); <span class="hljs-comment">// returns true</span>\n\n<span class="hljs-keyword">var</span> arr4 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">17</span>, <span class="hljs-number">9</span>];\narr4.some(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">curr, index, arr</span>) </span>{\n    <span class="hljs-keyword">return</span> curr &gt; <span class="hljs-number">20</span>;\n    });  <span class="hljs-comment">// returns false</span>\n\n<span class="hljs-comment">// ES6 arrows functions</span>\narr4.some((curr) =&gt; curr &gt;= <span class="hljs-number">14</span>)  <span class="hljs-comment">// returns true</span>\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Array prototype sort",order:5,body:'<h1>js Array prototype sort</h1>\n<p>The <code>sort()</code> method sorts the elements of an array <em>in place</em> and returns the sorted array.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">arr.sort([compareFunction])\n</code></pre>\n<h3>Parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Necessity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compareFunction</td>\n<td>Optional. The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, Unicode character order.</td>\n<td>Optional</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/4b4fbfhk%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nThe sorted array.</p>\n<p>##Remarks</p>\n<p>The <code>sort</code> method sorts the <code>Array</code> object in place; no new <code>Array</code> object is created during execution.</p>\n<p>If you supply a function in the <code>compareFunction</code> argument, it must return one of the following values:</p>\n<ul>\n<li>\n<p>A negative value if the first argument passed is less than the second argument.</p>\n</li>\n<li>\n<p>Zero if the two arguments are equivalent.</p>\n</li>\n<li>\n<p>A positive value if the first argument is greater than the second argument.</p>\n</li>\n</ul>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> fruit = [<span class="hljs-string">\'cherries\'</span>, <span class="hljs-string">\'apples\'</span>, <span class="hljs-string">\'bananas\'</span>];\nfruit.sort(); <span class="hljs-comment">// [\'apples\', \'bananas\', \'cherries\']</span>\n\n<span class="hljs-keyword">var</span> scores = [<span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">21</span>]; \nscores.sort(); <span class="hljs-comment">// [1, 10, 2, 21]</span>\n<span class="hljs-comment">// Watch out that 10 comes before 2,</span>\n<span class="hljs-comment">// because \'10\' comes before \'2\' in Unicode code point order.</span>\n\n<span class="hljs-keyword">var</span> things = [<span class="hljs-string">\'word\'</span>, <span class="hljs-string">\'Word\'</span>, <span class="hljs-string">\'1 Word\'</span>, <span class="hljs-string">\'2 Words\'</span>];\nthings.sort(); <span class="hljs-comment">// [\'1 Word\', \'2 Words\', \'Word\', \'word\']</span>\n<span class="hljs-comment">// In Unicode, numbers come before upper case letters,</span>\n<span class="hljs-comment">// which come before lower case letters.</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>);\n\n<span class="hljs-keyword">var</span> b = a.sort();\n<span class="hljs-built_in">document</span>.write(b);\n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;br/&gt;"</span>);\n\n<span class="hljs-comment">// This is ASCII character order.</span>\n<span class="hljs-comment">// Output: 1,10,11,2,3,4)</span>\n\n<span class="hljs-comment">// Sort the array elements with a function that compares array elements.</span>\nb = a.sort(CompareForSort);\n<span class="hljs-built_in">document</span>.write(b);\n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;br/&gt;"</span>);\n<span class="hljs-comment">// Output: 1,2,3,4,10,11.</span>\n\n<span class="hljs-comment">// Sorts array elements in ascending order numerically.</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CompareForSort</span>(<span class="hljs-params">first, second</span>)\n</span>{\n    <span class="hljs-keyword">if</span> (first == second)\n        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">if</span> (first &lt; second)\n        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;\n    <span class="hljs-keyword">else</span>\n        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; \n}\n</code></pre>\n'
}},function(e,n){e.exports={title:"js Array prototype splice",order:5,body:'<h1>js Array prototype splice</h1>\n<p>This method changes array’s content by removing existing elements and/or adding new elements.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">array.splice(start, deleteCount[, item1[, item2[, ...]]])\n</code></pre>\n<h3>Parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Necessity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>Index at which to start changing the array.</td>\n<td>Required</td>\n</tr>\n<tr>\n<td>deleteCount</td>\n<td>An integer indicating the number of old array elements to remove. If deleteCount is 0, no elements are removed. In this case, you should specify at least one new element.</td>\n<td>Required</td>\n</tr>\n<tr>\n<td>itemN</td>\n<td>The element to add to the array. If you don’t specify any elements, splice() will only remove elements from the array.</td>\n<td>Optional</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/wctc5k7s%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nAn array containing the deleted elements. If only one element is removed, an array of one element is returned. If no elements are removed, an empty array is returned.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"4"</span>, <span class="hljs-string">"11"</span>, <span class="hljs-string">"2"</span>, <span class="hljs-string">"10"</span>, <span class="hljs-string">"3"</span>, <span class="hljs-string">"1"</span>);\narr.splice(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"21"</span>, <span class="hljs-string">"31"</span>);\n<span class="hljs-built_in">document</span>.write(arr);\n\n<span class="hljs-comment">// Output: 4,11,21,31,3,1</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> myFish = [<span class="hljs-string">\'angel\'</span>, <span class="hljs-string">\'clown\'</span>, <span class="hljs-string">\'mandarin\'</span>, <span class="hljs-string">\'surgeon\'</span>];\n\n<span class="hljs-comment">// removes 0 elements from index 2, and inserts \'drum\'</span>\n<span class="hljs-keyword">var</span> removed = myFish.splice(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-string">\'drum\'</span>);\n<span class="hljs-comment">// myFish is [\'angel\', \'clown\', \'drum\', \'mandarin\', \'surgeon\']</span>\n<span class="hljs-comment">// removed is [], no elements removed</span>\n\n<span class="hljs-comment">// removes 1 element from index 3</span>\nremoved = myFish.splice(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>);\n<span class="hljs-comment">// myFish is [\'angel\', \'clown\', \'drum\', \'surgeon\']</span>\n<span class="hljs-comment">// removed is [\'mandarin\']</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js Array prototype toString",order:5,body:'<h1>Array.prototype.toString()</h1>\n<p>The JavaScript array method <code>.toString()</code> is used to convert an array into a single string, with each element joined by a comma. There are no parameters for the method.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];\narr.toString();\n</code></pre>\n<p><strong>Usage</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>].toString();  <span class="hljs-comment">// str1 = \'1,2,3,4,5\';</span>\n<span class="hljs-keyword">var</span> str2 = [<span class="hljs-string">\'1\'</span>, <span class="hljs-string">\'2\'</span>, <span class="hljs-string">\'3\'</span>, <span class="hljs-string">\'4\'</span>].toString();  <span class="hljs-comment">// str2 = \'1,2,3,4\';</span>\n<span class="hljs-keyword">var</span> str3 = [<span class="hljs-string">\'Free\'</span>, <span class="hljs-string">\'Code\'</span>, <span class="hljs-string">\'Camp\'</span>].toString();  <span class="hljs-comment">// str3 = \'Free,Code,Camp\';</span>\n<span class="hljs-keyword">var</span> str4 = [<span class="hljs-string">\'phone\'</span>, <span class="hljs-string">\'555-6726\'</span>].toString();   <span class="hljs-comment">// str4 = \'phone,555-6726\';</span>\n<span class="hljs-keyword">var</span> str5 = [<span class="hljs-string">\'August\'</span>, <span class="hljs-string">\'September\'</span>, <span class="hljs-string">\'October\'</span>].toString();  <span class="hljs-comment">// str5 = \'August,September,October\';</span>\n<span class="hljs-keyword">var</span> str6 = [<span class="hljs-string">\'Words\'</span>, <span class="hljs-string">\'and\'</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>].toString();  <span class="hljs-comment">// str6 = \'Words,and,3,4\';</span>\n</code></pre>\n<p>Source: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString">MDN</a></p>\n'}},function(e,n){e.exports={title:"js Boolean",order:5,body:'<p>The value passed as the first parameter is converted to a boolean value, if necessary. If value is omitted or is 0, -0, null, false, NaN, undefined, or the empty string (&quot;&quot;), the object has an initial value of false. All other values, including any object or the string “false”, create an object with an initial value of true.</p>\n<p>Do not confuse the primitive Boolean values true and false with the true and false values of the Boolean object.</p>\n<h2>More Details</h2>\n<p>Any object whose value is not undefined or null, including a Boolean object whose value is false, evaluates to true when passed to a conditional statement. For example, the condition in the following if statement evaluates to true:</p>\n<pre><code><span class="hljs-keyword">var</span> x = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(<span class="hljs-literal">false</span>);\n<span class="hljs-keyword">if</span> (x) {\n  <span class="hljs-comment">// this code is executed</span>\n}\n</code></pre>\n<p>This behavior does not apply to Boolean primitives. For example, the condition in the following if statement evaluates to false:</p>\n<pre><code>var x = <span class="hljs-literal">false</span>;\n<span class="hljs-keyword">if</span> (x) {\n  <span class="hljs-regexp">//</span> <span class="hljs-keyword">this</span> code <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> executed\n}\n</code></pre>\n<p>Do not use a Boolean object to convert a non-boolean value to a boolean value. Instead, use Boolean as a function to perform this task:</p>\n<pre><code><span class="hljs-variable"><span class="hljs-keyword">var</span> x</span> = <span class="hljs-typename">Boolean</span>(expression);     <span class="hljs-comment">// preferred</span>\n<span class="hljs-variable"><span class="hljs-keyword">var</span> x</span> = new <span class="hljs-typename">Boolean</span>(expression); <span class="hljs-comment">// don\'t use</span>\n</code></pre>\n<p>If you specify any object, including a Boolean object whose value is false, as the initial value of a Boolean object, the new Boolean object has a value of true.</p>\n<pre><code><span class="hljs-keyword">var</span> myFalse = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(<span class="hljs-literal">false</span>);   <span class="hljs-comment">// initial value of false</span>\n<span class="hljs-keyword">var</span> g = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(myFalse);       <span class="hljs-comment">// initial value of true</span>\n<span class="hljs-keyword">var</span> myString = <span class="hljs-keyword">new</span> <span class="hljs-built_in">String</span>(<span class="hljs-string">\'Hello\'</span>); <span class="hljs-comment">// string object</span>\n<span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Boolean</span>(myString);      <span class="hljs-comment">// initial value of true</span>\n</code></pre>\n<p>Do not use a Boolean object in place of a Boolean primitive.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">Orininal</a></p>\n'}},function(e,n){e.exports={title:"js String prototype charAt",order:5,body:'<h1>js String prototype charAt</h1>\n<p>The <code>charAt()</code> method returns the specified character from a string.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.charAt(index)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>index</strong></p>\n<p>An integer between 0 and 1-less-than the length of the string.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/65zt5h10%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character in a string called <code>stringName</code> is <code>stringName.length - 1</code>. If the index you supply is out of range, JavaScript returns an empty string.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> anyString = <span class="hljs-string">\'Brave new world\'</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 0   is \'"</span> + anyString.charAt(<span class="hljs-number">0</span>)   + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'B\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 1   is \'"</span> + anyString.charAt(<span class="hljs-number">1</span>)   + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'r\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 2   is \'"</span> + anyString.charAt(<span class="hljs-number">2</span>)   + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'a\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 3   is \'"</span> + anyString.charAt(<span class="hljs-number">3</span>)   + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'v\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 4   is \'"</span> + anyString.charAt(<span class="hljs-number">4</span>)   + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'e\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"The character at index 999 is \'"</span> + anyString.charAt(<span class="hljs-number">999</span>) + <span class="hljs-string">"\'"</span>); <span class="hljs-comment">// \'\'</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;\n<span class="hljs-built_in">document</span>.write(str.charAt(str.length - <span class="hljs-number">1</span>));\n\n<span class="hljs-comment">// Output: Z</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype charCodeAt",order:5,body:'<h1>js String prototype charCodeAt</h1>\n<p>The <code>charCodeAt()</code> method returns the numeric Unicode value of the character at the given index (except for unicode codepoints &gt; 0x10000).</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.charCodeAt(index)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>index</strong></p>\n<p>An integer greater than or equal to 0 and less than the length of the string; if it is not a number, it defaults to 0.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/hza4d04f%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nNote that <code>charCodeAt()</code> will always return a value that is less than 65536. This is because the higher code points are represented by a pair of (lower valued) “surrogate” pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65536 and above, for such characters, it is necessary to retrieve not only <code>charCodeAt(i)</code>, but also <code>charCodeAt(i+1)</code> (as if examining/reproducing a string with two letters). See example 2 and 3 below.</p>\n<p><code>charCodeAt()</code> returns <code>NaN</code> if the given <code>index</code> is less than 0 or is equal to or greater than the length of the string.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-string">\'ABC\'</span>.charCodeAt(<span class="hljs-number">0</span>); <span class="hljs-comment">// returns 65</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>; \n<span class="hljs-built_in">document</span>.write(str.charCodeAt(str.length - <span class="hljs-number">1</span>));\n\n<span class="hljs-comment">// Output: 90 </span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype concat",order:5,body:'<h1>String.prototype.concat()</h1>\n<p>The concat() method combines the text of two or more strings and returns a new string.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js">str.concat(string2[,..., stringN]);\n</code></pre>\n<h3>Parameters</h3>\n<p><em><em>string2…string</em>N</em>**\nThe strings which are to be concatenated to this String.</p>\n<h2>Description</h2>\n<p>The concat() method combines the text of two or more strings and returns the concatenated string. It does not modify the original strings.</p>\n<h2>Examples</h2>\n<p><strong>Concatenating strings</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"Hello"</span>;\n<span class="hljs-keyword">var</span> str2 = <span class="hljs-string">"World"</span>;\n<span class="hljs-built_in">console</span>.log(str1.concat(str2));\n<span class="hljs-comment">// Console will output: HelloWorld</span>\n\n<span class="hljs-keyword">var</span> str2 = <span class="hljs-string">"Hello, "</span>;\n<span class="hljs-built_in">console</span>.log(str2.concat(<span class="hljs-string">" Welcome "</span>, <span class="hljs-string">"to FCC."</span>));\n<span class="hljs-comment">// Console will output: Hello, Welcome to FCC.</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat">MDN</a></p>\n'}},function(e,n){e.exports={title:"js String prototype indexOf",order:5,body:'<h1>String.prototype.indexOf()</h1>\n<p>The indexOf() method returns the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js">str.indexOf(searchValue[, *fromIndex*]);\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>searchValue</strong>\nA character/string whose index is to be found.</p>\n<p><strong>fromIndex</strong>\nOptional. The location within the calling string to start the search from. It can be any integer. The default value is 0. If <code>fromIndex &lt; 0</code> the entire string is searched (same as passing 0). If <code>fromIndex &gt;= str.length</code>, the method will return -1 unless <code>searchValue</code> is an empty string in which case <code>str.length</code> is returned.</p>\n<h2>Description</h2>\n<p>Characters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character of a string called <code>str</code> is <code>str.length - 1</code>.</p>\n<h2>Examples</h2>\n<p><strong>Finding a character in a string</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"Hello"</span>;\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'H\'</span>));\n<span class="hljs-comment">// Console will output: 0</span>\n\n<span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"Hello"</span>;\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'Y\'</span>));\n<span class="hljs-comment">// Console will output: -1.</span>\n\n</code></pre>\n<p><strong>indexOf() is case-sensitive</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"Hello"</span>;\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'ello\'</span>));\n<span class="hljs-comment">// Console will output 1</span>\n\n<span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"Hello"</span>;\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'Ello\'</span>));\n<span class="hljs-comment">// Console will output -1</span>\n\n</code></pre>\n<p><strong>indexOf() with fromIndex</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">"FreeCodeCamp is a place for people to learn"</span>;\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'Camp\'</span>));\n<span class="hljs-comment">// Console will output 8</span>\n\n<span class="hljs-built_in">console</span>.log(str1.indexOf(<span class="hljs-string">\'Camp\'</span>, <span class="hljs-number">9</span>));\n<span class="hljs-comment">// Console will output -1</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf">MDN</a></p>\n'}},function(e,n){e.exports={title:"js String prototype lastindexOf",order:5,body:'<h1>js String prototype lastIndexOf</h1>\n<p>The <code>lastIndexOf()</code> method returns the index within the calling String object of the last occurrence of the specified value, or -1 if not found. The calling string is searched backward, starting at <code>fromIndex</code>.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.lastIndexOf(searchValue[, fromIndex])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>searchValue</strong></p>\n<p>A string representing the value to search for.</p>\n<p><strong>fromIndex</strong></p>\n<p>Optional. The location within the calling string to start the search at, indexed from left to right. It can be any integer. The default value is <code>str.length</code>. If it is negative, it is treated as 0. If <code>fromIndex &gt; str.length</code>, <code>fromIndex</code> is treated as <code>str.length</code>.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/6d20k718%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nReturns the last occurrence of a substring in the string.</p>\n<p>##Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character is <code>stringName.length - 1</code>.</p>\n<p>The <code>lastIndexOf()</code> method is case sensitive. For example, the following expression returns <code>-1</code>:</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-string">\'canal\'</span>.lastIndexOf(<span class="hljs-string">\'a\'</span>);     <span class="hljs-comment">// returns 3</span>\n<span class="hljs-string">\'canal\'</span>.lastIndexOf(<span class="hljs-string">\'a\'</span>, <span class="hljs-number">2</span>);  <span class="hljs-comment">// returns 1</span>\n<span class="hljs-string">\'canal\'</span>.lastIndexOf(<span class="hljs-string">\'a\'</span>, <span class="hljs-number">0</span>);  <span class="hljs-comment">// returns -1</span>\n<span class="hljs-string">\'canal\'</span>.lastIndexOf(<span class="hljs-string">\'x\'</span>);     <span class="hljs-comment">// returns -1</span>\n<span class="hljs-string">\'Blue Whale, Killer Whale\'</span>.lastIndexOf(<span class="hljs-string">\'blue\'</span>); <span class="hljs-comment">// returns -1</span>\n\n<span class="hljs-keyword">var</span> anyString = <span class="hljs-string">\'Brave new world\'</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'The index of the first w from the beginning is \'</span> + anyString.indexOf(<span class="hljs-string">\'w\'</span>));\n<span class="hljs-comment">// logs 8</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'The index of the first w from the end is \'</span> + anyString.lastIndexOf(<span class="hljs-string">\'w\'</span>)); \n<span class="hljs-comment">// logs 10</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'The index of "new" from the beginning is \'</span> + anyString.indexOf(<span class="hljs-string">\'new\'</span>));\n<span class="hljs-comment">// logs 6</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'The index of "new" from the end is \'</span> + anyString.lastIndexOf(<span class="hljs-string">\'new\'</span>));\n<span class="hljs-comment">// logs 6</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"time, time"</span>;\n\n<span class="hljs-keyword">var</span> s = <span class="hljs-string">""</span>;\ns += <span class="hljs-string">"time is at position "</span> + str.lastIndexOf(<span class="hljs-string">"time"</span>);\ns += <span class="hljs-string">"&lt;br /&gt;"</span>;\ns += <span class="hljs-string">"abc is at position "</span> + str.lastIndexOf(<span class="hljs-string">"abc"</span>);\n\n<span class="hljs-built_in">document</span>.write(s);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// time is at position 6</span>\n<span class="hljs-comment">// abc is at position -1</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype match",order:5,body:'<h1>js String prototype match</h1>\n<p>The <code>match()</code> method retrieves the matches when matching a string against a regular expression.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.match(regexp)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>regexp</strong></p>\n<p>A regular expression object. If a non-RegExp object obj is passed, it is implicitly converted to a RegExp by using <code>new RegExp(obj)</code>.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/7df7sf4x%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nAn <code>Array</code> containing the matched results or <code>null</code> if there were no matches.</p>\n<p>##Description\nIf the regular expression does not include the <code>g</code> flag, returns the same result as <code>RegExp.exec()</code>. The returned <code>Array</code> has an extra input property, which contains the original string that was parsed. In addition, it has an index property, which represents the zero-based index of the match in the string.</p>\n<p>If the regular expression includes the <code>g</code> flag, the method returns an <code>Array</code> containing all matched substrings rather than match objects. Captured groups are not returned. If there were no matches, the method returns <code>null</code>.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">\'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'</span>;\n<span class="hljs-keyword">var</span> regexp = <span class="hljs-regexp">/[A-E]/gi</span>;\n<span class="hljs-keyword">var</span> matches_array = str.match(regexp);\n\n<span class="hljs-built_in">console</span>.log(matches_array);\n<span class="hljs-comment">// [\'A\', \'B\', \'C\', \'D\', \'E\', \'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">\'For more information, see Chapter 3.4.5.1\'</span>;\n<span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/(chapter \\d+(\\.\\d)*)/i</span>;\n<span class="hljs-keyword">var</span> found = str.match(re);\n\n<span class="hljs-built_in">console</span>.log(found);\n\n<span class="hljs-comment">// logs [\'Chapter 3.4.5.1\', \'Chapter 3.4.5.1\', \'.1\']</span>\n\n<span class="hljs-comment">// \'Chapter 3.4.5.1\' is the first match and the first value </span>\n<span class="hljs-comment">// remembered from `(Chapter \\d+(\\.\\d)*)`.</span>\n\n<span class="hljs-comment">// \'.1\' is the last value remembered from `(\\.\\d)`.</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype replace",order:5,body:'<h1>js String prototype replace</h1>\n<p>The <code>replace()</code> method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a <code>RegExp</code>, and the replacement can be a string or a function to be called for each match.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.replace(regexp|substr, newSubStr|function[, flags])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>regexp (pattern)</strong></p>\n<p>A RegExp object. The match is replaced by the return value of parameter #2.</p>\n<p><strong>substr (pattern)</strong></p>\n<p>A String that is to be replaced by newSubStr.</p>\n<p><strong>newSubStr (replacement)</strong></p>\n<p>The String that replaces the substring received from parameter #1. A number of special replacement patterns are supported; see the “Specifying a string as a parameter” section below.</p>\n<p><strong>function (replacement)</strong></p>\n<p>A function to be invoked to create the new substring (to put in place of the substring received from parameter #1). The arguments supplied to this function are described in the “Specifying a function as a parameter” section below.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/t0kbytzc%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nA new string with some or all matches of a pattern replaced by a replacement.</p>\n<p>##Description\nThis method does not change the String object it is called on. It simply returns a new string.</p>\n<p>To perform a global search and replace, either include the g switch in the regular expression or if the first parameter is a string, include g in the flags parameter.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">\'Twas the night before Xmas...\'</span>;\n<span class="hljs-keyword">var</span> newstr = str.replace(<span class="hljs-regexp">/xmas/i</span>, <span class="hljs-string">\'Christmas\'</span>);\n<span class="hljs-built_in">console</span>.log(newstr);  <span class="hljs-comment">// Twas the night before Christmas...</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f2c</span>(<span class="hljs-params">s1</span>) </span>{\n    <span class="hljs-comment">// Initialize pattern.</span>\n    <span class="hljs-keyword">var</span> test = <span class="hljs-regexp">/(\\d+(\\.\\d*)?)F\\b/g</span>;\n\n    <span class="hljs-comment">// Use a function for the replacement.</span>\n    <span class="hljs-keyword">var</span> s2 = s1.replace(test,\n      <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$0,$1,$2</span>)\n           </span>{ \n           <span class="hljs-keyword">return</span>((($<span class="hljs-number">1</span>-<span class="hljs-number">32</span>) * <span class="hljs-number">5</span>/<span class="hljs-number">9</span>) + <span class="hljs-string">"C"</span>);\n           }\n        )\n    <span class="hljs-keyword">return</span> s2;\n}\n<span class="hljs-built_in">document</span>.write(f2c(<span class="hljs-string">"Water freezes at 32F and boils at 212F."</span>));\n\n<span class="hljs-comment">// Output: Water freezes at 0C and boils at 100C.</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype slice",order:5,body:'<h1>String.prototype.slice()</h1>\n<p>The JavaScript string method <code>.slice()</code> extracts a portion of a string and returns a new string.</p>\n<p>##Syntax</p>\n<pre><code class="language-js">str.slice(beginSliceIndex[, endSliceIndex]);\n</code></pre>\n<p>##Parameters</p>\n<p><strong>beginSliceIndex</strong></p>\n<p>The zero-based index where the slice should begin. If beginSliceIndex is a negative number, <code>.slice()</code> counts\nbackwards from the end of the string to determine where to begin the slice.</p>\n<p><strong>endSliceIndex</strong></p>\n<p>Optional. The zero-based index where the slice should end. If omitted, <code>.slice()</code> extracts to the end of the string.</p>\n<h2>Description</h2>\n<p><code>.slice()</code> slices the text out of one string and returns a new string.</p>\n<h2>Examples</h2>\n<p><strong>Using <code>.slice()</code> to create a new string</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> string1 = <span class="hljs-string">"Hello World!"</span>;\n<span class="hljs-keyword">var</span> string2 = string1.slice(<span class="hljs-number">3</span>);\n<span class="hljs-built_in">console</span>.log(string2);                           <span class="hljs-comment">// Will log "lo World!"</span>\n\n<span class="hljs-keyword">var</span> string3 = string1.slice(<span class="hljs-number">3</span>, <span class="hljs-number">7</span>);\n<span class="hljs-built_in">console</span>.log(string3);                           <span class="hljs-comment">// Will log "lo W"</span>\n\n</code></pre>\n<p><strong>Using <code>.slice()</code> with negative indices</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> string = <span class="hljs-string">"Hello World!"</span>\nstr.slice(-<span class="hljs-number">3</span>);                                  <span class="hljs-comment">// Returns "ld!"</span>\nstr.slice(-<span class="hljs-number">3</span>, -<span class="hljs-number">1</span>);                              <span class="hljs-comment">// Returns "ld"</span>\nstr.slice(<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>);                               <span class="hljs-comment">// Returns "Hello World"</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice">MDN</a></p>\n'}},function(e,n){e.exports={title:"js String prototype split",order:5,body:'<h1>String.prototype.split()</h1>\n<p>The split() method splits a string into an array of strings.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js">str.split(separator[, limit]);\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>separator</strong>\nOptional. The separator specifies which characters to use for separating the string. If separator is omitted <code>str.split();</code> the array will contain just one element consisting of the entire string. If separator is an empty string <code>str.split(&quot;&quot;);</code> the string is converted into an array of characters.</p>\n<p><strong>limit</strong>\nOptional. Whole number integer that sets a limit to the number of splits that can be found. The <code>split()</code> method will still find all of the matches to the separator, but will truncate the returned array to a maximum length of <code>limit</code> elements.</p>\n<h2>Description</h2>\n<p>The split() method returns the new array.</p>\n<p>At each match of the separator <code>.split()</code> will split the string and add the split section as an element to an array.</p>\n<h2>Examples</h2>\n<p><strong>Splitting a string into an array of substrings</strong></p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"HelloWorld"</span>;\n<span class="hljs-built_in">console</span>.log(str.split(<span class="hljs-string">""</span>));\n<span class="hljs-comment">// Console will output: ["H", "e", "l", "l", "o", "W", "o", "r", "l", "d"]</span>\n\n<span class="hljs-keyword">var</span> str2 = <span class="hljs-string">"HelloWorld"</span>;\n<span class="hljs-built_in">console</span>.log(str2.split());\n<span class="hljs-comment">// Console will output: ["Hello World"]</span>\n\n<span class="hljs-keyword">var</span> str3 = <span class="hljs-string">"HelloWorld"</span>;\n<span class="hljs-built_in">console</span>.log(str3.split(<span class="hljs-string">"Wo"</span>));\n<span class="hljs-comment">// Console will output: ["Hello", "rld"]</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split">MDN</a></p>\n'
}},function(e,n){e.exports={title:"js String prototype substr",order:5,body:'<h1>js String prototype substr</h1>\n<p>Gets a substring beginning at the specified location and having the specified length.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.substr(start[, length])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>start</strong></p>\n<p>Location at which to begin extracting characters. If a negative number is given, it is treated as strLength + start where strLength is the length of the string (for example, if start is -3 it is treated as strLength - 3.)</p>\n<p><strong>length</strong></p>\n<p>Optional. The number of characters to extract.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/0esxc5wy%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Returns\nThe characters in a string beginning at the specified location through the specified number of characters.</p>\n<p>##Description\n<code>start</code> is a character index. The index of the first character is 0, and the index of the last character is 1 less than the length of the string. <code>substr()</code> begins extracting characters at start and collects length characters (unless it reaches the end of the string first, in which case it will return fewer).</p>\n<p>If <code>start</code> is positive and is greater than or equal to the length of the string, <code>substr()</code> returns an empty string.</p>\n<p>If <code>start</code> is negative, <code>substr()</code> uses it as a character index from the end of the string. If <code>start</code> is negative and <code>abs(start)</code> is larger than the length of the string, <code>substr()</code> uses 0 as the start index. Note: the described handling of negative values of the start argument is not supported by Microsoft JScript.</p>\n<p>If <code>length</code> is 0 or negative, <code>substr()</code> returns an empty string. If length is omitted, <code>substr()</code> extracts characters to the end of the string.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">\'abcdefghij\'</span>;\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(1, 2): \'</span>   + str.substr(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>));   <span class="hljs-comment">// \'(1, 2): bc\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(-3, 2): \'</span>  + str.substr(-<span class="hljs-number">3</span>, <span class="hljs-number">2</span>));  <span class="hljs-comment">// \'(-3, 2): hi\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(-3): \'</span>     + str.substr(-<span class="hljs-number">3</span>));     <span class="hljs-comment">// \'(-3): hij\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(1): \'</span>      + str.substr(<span class="hljs-number">1</span>));      <span class="hljs-comment">// \'(1): bcdefghij\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(-20, 2): \'</span> + str.substr(-<span class="hljs-number">20</span>, <span class="hljs-number">2</span>)); <span class="hljs-comment">// \'(-20, 2): ab\'</span>\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'(20, 2): \'</span>  + str.substr(<span class="hljs-number">20</span>, <span class="hljs-number">2</span>));  <span class="hljs-comment">// \'(20, 2): \'</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> s = <span class="hljs-string">"The quick brown fox jumps over the lazy dog."</span>;\n<span class="hljs-keyword">var</span> ss = s.substr(<span class="hljs-number">10</span>, <span class="hljs-number">5</span>);  \n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"["</span> + ss + <span class="hljs-string">"] &lt;br&gt;"</span>);\n\nss = s.substr(<span class="hljs-number">10</span>);\n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"["</span> + ss + <span class="hljs-string">"] &lt;br&gt;"</span>);\n\nss = s.substr(<span class="hljs-number">10</span>, -<span class="hljs-number">5</span>);\n<span class="hljs-built_in">document</span>.write(<span class="hljs-string">"["</span> + ss + <span class="hljs-string">"] &lt;br&gt;"</span>);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// [brown] </span>\n<span class="hljs-comment">// [brown fox jumps over the lazy dog.] </span>\n<span class="hljs-comment">// []</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype substring",order:5,body:'<h1>js String prototype substring</h1>\n<p>The <code>substring()</code> method returns a subset of a string between one index and another, or through the end of the string.</p>\n<h2>Syntax</h2>\n<pre><code class="language-js">str.substring(indexStart[, indexEnd])\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>indexStart</strong></p>\n<p>An integer between 0 and the length of the string, specifying the offset into the string of the first character to include in the returned substring.</p>\n<p><strong>indexEnd</strong></p>\n<p>Optional. An integer between 0 and the length of the string, which specifies the offset into the string of the first character not to include in the returned substring.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/3cz15ahb%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\n<code>substring()</code> extracts characters from <code>indexStart</code> up to but not including <code>indexEnd</code>. In particular:</p>\n<ul>\n<li>If <code>indexStart</code> equals <code>indexEnd</code>, <code>substring()</code> returns an empty string.</li>\n<li>If <code>indexEnd</code> is omitted, <code>substring()</code> extracts characters to the end of the string.</li>\n<li>If either argument is less than 0 or is <code>NaN</code>, it is treated as if it were 0.</li>\n<li>If either argument is greater than <code>stringName.length</code>, it is treated as if it were <code>stringName.length</code>.</li>\n</ul>\n<p>If <code>indexStart</code> is greater than <code>indexEnd</code>, then the effect of <code>substring()</code> is as if the two arguments were swapped; for example, <code>str.substring(1, 0) == str.substring(0, 1)</code>.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> anyString = <span class="hljs-string">\'Mozilla\'</span>;\n\n<span class="hljs-comment">// Displays \'Moz\'</span>\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>));\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">3</span>, <span class="hljs-number">0</span>));\n\n<span class="hljs-comment">// Displays \'lla\'</span>\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">4</span>, <span class="hljs-number">7</span>));\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">7</span>, <span class="hljs-number">4</span>));\n\n<span class="hljs-comment">// Displays \'Mozill\'</span>\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>));\n\n<span class="hljs-comment">// Displays \'Mozilla\'</span>\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>));\n<span class="hljs-built_in">console</span>.log(anyString.substring(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>));\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> s = <span class="hljs-string">"The quick brown fox jumps over the lazy dog."</span>;\n<span class="hljs-keyword">var</span> ss = s.substring(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>);\n<span class="hljs-built_in">document</span>.write(ss);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// brown</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js String prototype toLowerCase",order:5,body:'<h1>String.prototype.toLowerCase()</h1>\n<p>The JavaScript method <code>.toLowerCase()</code> returns the same string it was called on, but in all lower case.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js">str.toLowerCase()\n</code></pre>\n<h2>Examples</h2>\n<pre><code>\nconsole.<span class="hljs-built_in">log</span>(<span class="hljs-string">"HELLO WORLD"</span>.toLowerCase()); <span class="hljs-comment">// Console will output "hello world"</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase">MDN</a></p>\n'}},function(e,n){e.exports={title:"js String prototype toUpperCase",order:5,body:'<h1>String.prototype.toUpperCase()</h1>\n<p>The JavaScript method <code>.toUpperCase()</code> returns the same string it was called on, but in all upper case.</p>\n<p><strong>Syntax</strong></p>\n<pre><code class="language-js">str.toUpperCase()\n</code></pre>\n<h2>Examples</h2>\n<pre><code>\nconsole.<span class="hljs-built_in">log</span>(<span class="hljs-string">"hello world"</span>.toUpperCase()); <span class="hljs-comment">// Console will output "HELLO WORLD"</span>\n\n</code></pre>\n<p>Source <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase">MDN</a></p>\n'}},function(e,n){e.exports={title:"js arguments",order:5,body:'<p>The arguments object is an <strong>array-like object</strong> <em>(meaning that it looks like an array but it’s not)</em> that stores all of the arguments that you passed to a function and is proprietary to that function in particular. If you were to pass 3 arguments to a function, say <code>storeNames()</code>, those 3 arguments would be stored inside an object called <strong>arguments</strong> and it would look like this when we pass the arguments <code>storeNames(&quot;Mulder&quot;, &quot;Scully&quot;, &quot;Alex Krycek&quot;)</code> to our function:</p>\n<ul>\n<li>First, we declare a function and make it return the arguments object.</li>\n</ul>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">storeNames</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-built_in">arguments</span>; }\n</code></pre>\n<ul>\n<li>Then, when we execute that function with <strong>n arguments</strong>, 3 in this case, it will return the object to us and it will <strong>look like</strong> an array. We can convert it to an array, but more on that later…</li>\n</ul>\n<pre><code class="language-javascript"><span class="hljs-comment">// If we execute the following line in the console:</span>\nstoreNames(<span class="hljs-string">"Mulder"</span>, <span class="hljs-string">"Scully"</span>, <span class="hljs-string">"Alex Kryceck"</span>);\n<span class="hljs-comment">// The output will be: ["Mulder", "Scully", "Alex Kryceck"]</span>\n</code></pre>\n<p>If you want to know more about this, such as converting it to an array or the optimization problem that comes with using the <em>slice(</em>) method and how to solve it, click on <strong>read more</strong> (Gitter Chat Only).</p>\n<h2>Treat it as an array</h2>\n<p>You can invoke arguments by using <code>arguments[n]</code> (where <em>n</em> is the index of the argument in the array-like object) but if you want to use it as an array for iteration purposes or applying array methods to it, you need to <em>convert it to an array</em> by declaring a variable and using the Array.prototype.slice.call method (because <em>arguments</em> is not an array):</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>)\n</code></pre>\n<p>Since <strong>slice()</strong> has two (the parameter <strong>end</strong> is optional) parameters, you can grab a certain portion of the arguments by specifying (using the <em>slice.call()</em> method renders these two parameters optional, not just <em>end</em>) the beginning and the ending of your portion; check out the following code:</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getGrades</span>(<span class="hljs-params"></span>) </span>{\n	<span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>);\n	<span class="hljs-keyword">return</span> args;\n}\n\n<span class="hljs-comment">// Let\'s output this!</span>\n<span class="hljs-built_in">console</span>.log(getGrades(<span class="hljs-number">90</span>, <span class="hljs-number">100</span>, <span class="hljs-number">75</span>, <span class="hljs-number">40</span>, <span class="hljs-number">89</span>, <span class="hljs-number">95</span>));\n\n<span class="hljs-comment">// OUTPUT SHOULD BE: //</span>\n<span class="hljs-comment">// [100, 75] &lt;- Why? Because it started from index 1 and stopped at index 3</span>\n<span class="hljs-comment">// so, index 3 (40) wasn\'t taken in consideration.</span>\n<span class="hljs-comment">//</span>\n<span class="hljs-comment">// If we remove the \'3\' parameter, leaving just (arguments, 1) we\'d get</span>\n<span class="hljs-comment">// every argument from index 1: [100, 75, 40, 89, 95].</span>\n</code></pre>\n<h3>Optimization issues with Array.slice()</h3>\n<p>There is a little problem, it’s not recommended to use slice in the arguments object (optimization reasons)…</p>\n<blockquote>\n<p><strong>Important</strong>: You should not slice on arguments because it prevents optimizations in JavaScript engines (V8 for example). Instead, try constructing a new array by iterating through the arguments object.</p>\n</blockquote>\n<blockquote>\n<p><em>by</em> <strong><em>Mozilla Developer Network</em></strong></p>\n</blockquote>\n<p>So, what other method is available to convert <em>arguments</em> to an array?\nI recommend the for-loop (not the for-in loop), you can do it like this:</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> args = []; <span class="hljs-comment">// Empty array, at first.</span>\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">arguments</span>.length; i++) {\n	args.push(<span class="hljs-built_in">arguments</span>[i])\n} <span class="hljs-comment">// Now \'args\' is an array that holds your arguments.</span>\n</code></pre>\n<p>For more information on the optimization issues:<br>\n<a href="https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments">Optimization Killers: Managing Arguments</a></p>\n'}},function(e,n){e.exports={title:"js closures",order:5,body:'<p>Closures are functions that refer to independent (free) variables. In other words, the function defined in the closure ‘remembers’ the environment in which it was created.</p>\n<pre><code class="language-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">var</span> name = <span class="hljs-string">"Mozilla"</span>; <span class="hljs-comment">// name is a local variable created by init</span>\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayName</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-comment">// displayName() is the inner function, a closure</span>\n    alert(name); <span class="hljs-comment">// use variable declared in the parent function    </span>\n  }\n  displayName();    \n};\ninit();\n</code></pre>\n<p>See <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures">MDN</a></p>\n<blockquote>\n<p>tags: closure, javascript, js</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"js falsy",order:5,body:'<p>Something which evaluates to FALSE. There are only five falsey values in JavaScript:\n<code>undefined</code>, <code>null</code>, <code>NaN</code>, <code>0</code>, <code>&quot;&quot;</code> (empty string), and <code>false</code> of course.</p>\n<p>See also: <a href="https://freecodecamp.github.io/wiki/docs/js-truthy"><strong>truthy</strong></a> | <a href="http://james.padolsey.com/javascript/truthy-falsey/">Truthy &amp; Falsey blog post</a></p>\n'}},function(e,n){e.exports={title:"js for in loop",order:5,body:'<p>The <code>for..in</code> statement iterates over the enumerable properties of an object, in arbitrary order. For each distinct property, statements can be executed.</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (variable <span class="hljs-keyword">in</span> object) {\n...\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Required/Optional</th>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Required</td>\n<td>Variable</td>\n<td>A different property name is assigned to variable on each iteration.</td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>Object</td>\n<td>Object whose enumerable properties are iterated.</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in">MDN link</a> | <a href="https://msdn.microsoft.com/library/55wb2d34.aspx">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-comment">// Initialize object.</span>\na = {<span class="hljs-string">"a"</span> : <span class="hljs-string">"Athens"</span> , <span class="hljs-string">"b"</span> : <span class="hljs-string">"Belgrade"</span>, <span class="hljs-string">"c"</span> : <span class="hljs-string">"Cairo"</span>}\n\n<span class="hljs-comment">// Iterate over the properties.</span>\n<span class="hljs-keyword">var</span> s = <span class="hljs-string">""</span>\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> a) {\n    s += key + <span class="hljs-string">": "</span> + a[key];\n    s += <span class="hljs-string">"&lt;br /&gt;"</span>;\n    }\n<span class="hljs-built_in">document</span>.write (s);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// a: Athens</span>\n<span class="hljs-comment">// b: Belgrade</span>\n<span class="hljs-comment">// c: Cairo</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-comment">// Initialize the array.</span>\n<span class="hljs-keyword">var</span> arr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"zero"</span>,<span class="hljs-string">"one"</span>,<span class="hljs-string">"two"</span>);\n\n<span class="hljs-comment">// Add a few expando properties to the array.</span>\narr[<span class="hljs-string">"orange"</span>] = <span class="hljs-string">"fruit"</span>;\narr[<span class="hljs-string">"carrot"</span>] = <span class="hljs-string">"vegetable"</span>;\n\n<span class="hljs-comment">// Iterate over the properties and elements.</span>\n<span class="hljs-keyword">var</span> s = <span class="hljs-string">""</span>;\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> arr) {\n    s += key + <span class="hljs-string">": "</span> + arr[key];\n    s += <span class="hljs-string">"&lt;br /&gt;"</span>;\n}\n\n<span class="hljs-built_in">document</span>.write (s);\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">//   0: zero</span>\n<span class="hljs-comment">//   1: one</span>\n<span class="hljs-comment">//   2: two</span>\n<span class="hljs-comment">//   orange: fruit</span>\n<span class="hljs-comment">//   carrot: vegetable</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js for loop",order:5,body:'<p>The javascript <code>for</code> command iterates through a list of items.</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">9</span>; i++) {\n   <span class="hljs-built_in">console</span>.log(i);\n   <span class="hljs-comment">// more statements</span>\n}\n</code></pre>\n<p>links: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">MDN</a></p>\n<p>related: js-loops</p>\n'}},function(e,n){e.exports={title:"js for of loop",order:5,body:'<p>The <code>for..or</code> statement creates a loop Iterating over iterable objects (including Array, Map, Set, arguments object and so on), invoking a custom iteration hook with statements to be executed for the value of each distinct property.</p>\n<pre><code class="language-js"><span class="hljs-keyword">for</span> (variable <span class="hljs-keyword">of</span> object) {\n  statement\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>variable</td>\n<td>On each iteration a value of a different property is assigned to variable.</td>\n</tr>\n<tr>\n<td>object</td>\n<td>Object whose enumerable properties are iterated.</td>\n</tr>\n</tbody>\n</table>\n<p><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of">MDN link</a> | <a href="https://msdn.microsoft.com/library/dn858238%28v=vs.94%29.aspx?f=255&amp;MSPPError=-2147217396">MSDN link</a></p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-keyword">let</span> arr = [ <span class="hljs-string">"fred"</span>, <span class="hljs-string">"tom"</span>, <span class="hljs-string">"bob"</span> ];\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> arr) {\n    <span class="hljs-built_in">console</span>.log(i);\n}\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// fred</span>\n<span class="hljs-comment">// tom</span>\n<span class="hljs-comment">// bob</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> m = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();\nm.set(<span class="hljs-number">1</span>, <span class="hljs-string">"black"</span>);\nm.set(<span class="hljs-number">2</span>, <span class="hljs-string">"red"</span>);\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n <span class="hljs-keyword">of</span> m) {\n<span class="hljs-built_in">console</span>.log(n);\n}\n\n<span class="hljs-comment">// Output:</span>\n<span class="hljs-comment">// 1,black</span>\n<span class="hljs-comment">// 2,red</span>\n</code></pre>\n'}},function(e,n){e.exports={title:"js functions",order:5,body:"<p>Stub</p>\n"}},function(e,n){e.exports={title:"js immutable",order:5,body:'<blockquote>\n<p>Immutable means unchangeable i.e. you can’t change.</p>\n</blockquote>\n<p>Javascript has lots of immutable types e.g. <code>string</code> primitive type. Try this in your console.</p>\n<pre><code class="language-js">s = <span class="hljs-string">"red"</span>;\n<span class="hljs-built_in">console</span>.log(s[<span class="hljs-number">1</span>]); <span class="hljs-comment">//→ "e"</span>\ns[<span class="hljs-number">1</span>] = <span class="hljs-string">"x"</span>;\n<span class="hljs-built_in">console</span>.log(s) <span class="hljs-comment">//→ "red"</span>\n</code></pre>\n<p>the <code>s</code> didn’t change! WAT!</p>\n<h2>Details</h2>\n<p>Some string methods like <code>String.replace</code> returns a new string.</p>\n<p>JavaScript has one complex data type, the Object data type, and it has five simple data types: Number, String, Boolean, Undefined, and Null. These simple (primitive) data types are immutable (cannot be changed), while objects are mutable (can be changed).</p>\n<p>tags: js, immutability</p>\n'}},function(e,n){e.exports={title:"js loops",order:5,body:'<p>Javascript has a few different ways to control flow, otherwise known as loops</p>\n<ul>\n<li><a href="js-for">for</a></li>\n<li><a href="js-while">while</a></li>\n<li><a href="js-until">until</a></li>\n</ul>\n<p>you can type <code>js for</code> or <code>js while</code> to get more info on any of these.</p>\n<p>this is a stub entry, please help add to it!</p>\n<hr>\n<blockquote>\n<p>Links: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">MDN <strong>for loop</strong></a></p>\n</blockquote>\n<blockquote>\n<p>related: for, while, for-each, for-of, for-in</p>\n</blockquote>\n<blockquote>\n<p>advanced: comprehensions, iterators</p>\n</blockquote>\n'}},function(e,n){e.exports={title:"js scope",order:5,body:'<p>The current context of execution. The context in which values and expressions are “visible,” or can be referenced. If a variable or other expression is not “in the current scope,” then it is unavailable for use. Scopes can also be layered in a hierarchy, so that child scopes have access to parent scopes, but not vice versa.</p>\n<p><strong>See also:</strong> :arrow_heading_up: <a href="https://freecodecamp.github.io/wiki/docs/js-scope#links">Links</a></p>\n<h2>Links</h2>\n<ul>\n<li><a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/">Understanding Scope and Context</a> - Detailed explanation with examples by Ryan Morr</li>\n<li><a href="https://en.wikipedia.org/wiki/Scope_(computer_science)">Wikipedia - Scope</a></li>\n</ul>\n'}},function(e,n){e.exports={title:"js ternary",order:5,body:'<p>The Ternary operator replaces an if/then block in a very small compact way.\nIt’s mostly used in one liners for simple tests and replacements, like this:</p>\n<pre><code class="language-js"><span class="hljs-keyword">var</span> x = <span class="hljs-literal">false</span>;\n<span class="hljs-keyword">var</span> s = x ? <span class="hljs-string">"yes"</span> : <span class="hljs-string">"no"</span>;\n<span class="hljs-built_in">console</span>.log(s);  <span class="hljs-comment">//→ "no"</span>\n\n</code></pre>\n<h2>Description</h2>\n<p>If condition is true, the operator returns the value of expr1; otherwise, it returns the value of expr2. For example, to display a different message based on the value of the isMember variable, you could use this statement:</p>\n<p><strong>Read more:</strong> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator">MDN</a></p>\n'}},function(e,n){e.exports={title:"js truthy",order:5,body:'<blockquote>\n<p>A <strong>truthy</strong> value is a value that translates to <strong>true</strong> when evaluated in a <em>Boolean</em> context.</p>\n</blockquote>\n<p>All values are <strong>truthy</strong> unless they are defined as <strong>falsy</strong> (i.e. except for <code>false</code>, <code>0</code>, <code>&quot;&quot;</code>, <code>null</code>, <code>undefined</code> and <code>NaN</code>).</p>\n<p>See also: <a href="https://freecodecamp.github.io/wiki/docs/js-falsy">falsy</a> | <a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">MDN</a></p>\n'}},function(e,n){e.exports={title:"js undefined",order:5,body:'<p>A primitive value automatically assigned to variables that have just been declared or to formal arguments for which there are no actual arguments.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">MDN</a></p>\n'}},function(e,n){e.exports={title:"jsonp",order:5,body:'<p><a href="https://en.wikipedia.org/wiki/JSONP">https://en.wikipedia.org/wiki/JSONP</a>\n<a href="https://learn.jquery.com/ajax/working-with-jsonp/">https://learn.jquery.com/ajax/working-with-jsonp/</a>\n<a href="http://api.jquery.com/jquery.getjson/#jsonp">http://api.jquery.com/jquery.getjson/#jsonp</a>\n<a href="http://stackoverflow.com/questions/5943630/basic-example-of-using-ajax-with-jsonp">http://stackoverflow.com/questions/5943630/basic-example-of-using-ajax-with-jsonp</a></p>\n'}},function(e,n){e.exports={title:"latex",order:5,body:'<p>LaTeX is designed for the production of technical and scientific documentation.\nYou can create matrix, arrays or several other mathmatical functions.</p>\n<p><code>$$ (latex language) $$</code></p>\n<p>You can embed Latex in GitterIM. Examples:</p>\n<p><strong>Array</strong>:\n$$\\begin{array} {c c}\narr11 &amp; arr12\\\narr21 &amp; arr22\\\n\\end{array}$$</p>\n<p><strong>Matrix</strong>:\n$$\\begin{pmatrix} 1 &amp; 0 \\ 0 &amp; 1 \\end{pmatrix}$$</p>\n<p><strong>formatting</strong>:\n$$\\huge\\textstyle\\color{#F00}{BigRed}\\small\\textstyle\\color{#0F0}{SmallGreen}$$</p>\n<p><a href="https://github.com/Khan/KaTeX/wiki/Function-Support-in-KaTeX">Function Support</a></p>\n<h2>details</h2>\n<p><a href="https://github.com/Khan/KaTeX">KaTeX Github Repo</a>\nLaTeX is a high-quality typesetting system; it includes features designed for the production of technical and scientific documentation. LaTeX is the de facto standard for the communication and publication of scientific documents.\nHis advantages are noticable in long documents like books, papers or thesis.</p>\n<p>Gitter uses Katex (an custom implementation of LaTeX) and it can be used introducing the following code:</p>\n<pre><code class="language-latex"><span class="hljs-label">$$</span>\\<span class="hljs-keyword">begin{array} </span>{c c}\n<span class="hljs-keyword">item11 </span>&amp; <span class="hljs-keyword">item12\\\n</span><span class="hljs-keyword">item21 </span>&amp; <span class="hljs-keyword">item </span><span class="hljs-number">22</span>\\\n\\<span class="hljs-preprocessor">end</span>{array}\n<span class="hljs-label">$$</span>\n</code></pre>\n<p>Text:</p>\n<ul>\n<li><code>$$\\huge\\textstyle{some text}$$</code> -&gt; $$\\huge\\textstyle{some text}$$</li>\n<li><code>$$\\color{#F90}{some text}$$</code> -&gt; $$\\color{#F90}{some text}$$</li>\n</ul>\n'}},function(e,n){e.exports={title:"michaelqlarson@gmail.com",order:5,body:'<p>Our November 7, 2015 Summit began at noon EDT on <a href="http://twitch.tv/freecodecamp">our twitch.tv channel</a> and was available afterward on our <a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ?sub_confirmation=1">youtube channel</a>.</p>\n<p>This one-hour live-stream featured:</p>\n<ol>\n<li>Quincy showcasing <a href="https://medium.freecodecamp.com">our new Medium publication</a></li>\n<li>Berkeley explaining our recent curriculum improvements, and how you can contribute, too</li>\n<li>Ben introducing the Challenge-o-matic 1000 tool for creating challenges</li>\n<li>Mike demoing a way to get FCC running on your computer with just a few commands using Vagrant</li>\n<li>Kristian demoing a <a href="http://musare.com/">collaborative modern music app built by campers</a></li>\n<li>Questions from our community</li>\n</ol>\n'}},function(e,n){e.exports={title:"ooda",order:5,body:'<p>The OODA Loop is about how fast you can iterate. Often referenced in Lean Startup circles.</p>\n<p><img src="https://upload.wikimedia.org/wikipedia/commons/3/3a/OODA.Boyd.svg" alt="OODA"></p>\n<h2>see also</h2>\n<p><a href="https://en.wikipedia.org/wiki/OODA_loop">https://en.wikipedia.org/wiki/OODA_loop</a></p>\n'}},function(e,n){e.exports={title:"parseInt",order:5,body:'<h1>parseInt()</h1>\n<p>The <code>parseInt()</code> function parses a string argument and returns an integer of the specified <code>radix</code> (the base in mathematical numeral systems).</p>\n<h2>Syntax</h2>\n<pre><code class="language-js"><span class="hljs-built_in">parseInt</span>(string, radix);\n</code></pre>\n<h2>Parameters</h2>\n<p><strong>string</strong></p>\n<p>The value to parse. If string is not a string, then it is converted to a string (using the ToString abstract operation). Leading whitespace in the string is ignored.</p>\n<p><strong>radix</strong></p>\n<p>An integer between 2 and 36 that represents the radix (the base in mathematical numeral systems) of the above mentioned string. Specify 10 for the decimal numeral system commonly used by humans. Always specify this parameter to eliminate reader confusion and to guarantee predictable behavior. Different implementations produce different results when a radix is not specified, usually defaulting the value to 10.</p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt">MDN link</a> | <a href="https://msdn.microsoft.com/en-US/library/x53yedee%28v=vs.94%29.aspx">MSDN link</a></p>\n<p>##Description\nThe parseInt function converts its first argument to a string, parses it, and returns an integer or NaN. If not NaN, the returned value will be the decimal integer representation of the first argument taken as a number in the specified radix (base). For example, a radix of 10 indicates to convert from a decimal number, 8 octal, 16 hexadecimal, and so on. For radices above 10, the letters of the alphabet indicate numerals greater than 9. For example, for hexadecimal numbers (base 16), A through F are used.</p>\n<p>For arithmetic purposes, the <code>NaN</code> value is not a number in any radix. You can call the <code>isNaN</code> function to determine if the result of <code>parseInt</code> is NaN. If <code>NaN</code> is passed on to arithmetic operations, the operation results will also be <code>NaN</code>.</p>\n<p>To convert number to its string literal in a particular radix use <code>intValue.toString(radix)</code>.</p>\n<h2>Examples</h2>\n<pre><code class="language-js"><span class="hljs-comment">//The following examples all return 15:</span>\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">" 0xF"</span>, <span class="hljs-number">16</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">" F"</span>, <span class="hljs-number">16</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"17"</span>, <span class="hljs-number">8</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-number">021</span>, <span class="hljs-number">8</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"015"</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-number">15.99</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"15,123"</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"FXX123"</span>, <span class="hljs-number">16</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"1111"</span>, <span class="hljs-number">2</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"15*3"</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"15e2"</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"15px"</span>, <span class="hljs-number">10</span>);\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"12"</span>, <span class="hljs-number">13</span>);\n\n<span class="hljs-comment">//The following examples return NaN:</span>\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"Hello"</span>, <span class="hljs-number">8</span>); <span class="hljs-comment">// Not a number at all</span>\n<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">"546"</span>, <span class="hljs-number">2</span>);   <span class="hljs-comment">// Digits are not valid for binary representations</span>\n</code></pre>\n'
}},function(e,n){e.exports={title:"staging",order:5,body:"<p>see beta site.</p>\n"}},function(e,n){e.exports={title:"testingjson",order:5,body:"<p>too long</p>\n"}},function(e,n){e.exports={title:"topic",order:5,body:'<p>This is an example. You should replace <code>topic</code> with the thing you want to find info on.\nFor example:</p>\n<pre><code class="language-text">wiki css    # <span class="hljs-keyword">find</span> <span class="hljs-keyword">a</span> wiki page <span class="hljs-keyword">on</span> css\n<span class="hljs-keyword">find</span> js     # <span class="hljs-keyword">find</span> <span class="hljs-keyword">all</span> pages related <span class="hljs-keyword">to</span> css\n</code></pre>\n'}},function(e,n){e.exports={title:"triphop",order:5,body:'<p><a href="https://soundcloud.com/nasostsolakis/sets/triphop_electronic">https://soundcloud.com/nasostsolakis/sets/triphop_electronic</a></p>\n<p>embedding a soundcloud track in the wiki!</p>\n'}},function(e,n){e.exports={title:"update",order:5,body:"<p>the update command will pull down any new wiki edits, or new material.\nright now you have to do this manually, sorry! But we will in future automate this process.</p>\n"}},function(e,n){e.exports={title:"video demo",order:5,body:'<p>you can add inline video to the wiki with just a google link. Inside the chatwiki this will show up as an embedded video.</p>\n<p><a href="https://www.youtube.com/watch?v=BMUiFMZr7vk">https://www.youtube.com/watch?v=BMUiFMZr7vk</a></p>\n'}},function(e,n){e.exports={title:"video",order:5,body:'<p>demoing inline video clips</p>\n<p><a href="https://www.youtube.com/watch?v=BMUiFMZr7vk">https://www.youtube.com/watch?v=BMUiFMZr7vk</a></p>\n'}},function(e,n){e.exports={title:"wat",order:5,body:'<p>A brilliant talk about objects in ruby, javascript and other languages. Funny and insightful.</p>\n<p><a href="https://www.destroyallsoftware.com/talks/wat">https://www.destroyallsoftware.com/talks/wat</a></p>\n'}},function(e,n){e.exports={title:"wiki js template",order:5,body:'<blockquote>\n<p>This Template helps you build javascript topic wiki’s.</p>\n</blockquote>\n<h3>Introduction</h3>\n<pre><code class="language-js">Syntax <span class="hljs-keyword">of</span> the method that you are writing about\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Necessity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Variable</td>\n<td>I’m a Description</td>\n<td>Required</td>\n</tr>\n<tr>\n<td>Object</td>\n<td>The position of vertical bar is not important</td>\n<td>Optional</td>\n</tr>\n</tbody>\n</table>\n<p>[MDN link](URL here) | [MSDN link](URL here)</p>\n<h2>Examples</h2>\n<blockquote>\n<p>You should provide at least 2 different examples</p>\n</blockquote>\n<pre><code class="language-js">INSERT EXAMPLE HERE\n</code></pre>\n<pre><code class="language-js">INSERT EXAMPLE HERE\n</code></pre>\n'}},function(e,n){e.exports={title:"Welcome to the Free Code Camp Wiki!",body:'<p>Our open source community’s Wiki focuses on answering your questions about learning to code and getting a coding job. We also cover in detail our:</p>\n<ul>\n<li>Curriculum</li>\n<li>Local Campsite Communities</li>\n<li>Nonprofit Projects</li>\n</ul>\n<p><img src="http://i.imgur.com/gyJwzkx.png" alt="An illustration of CamperBot"></p>\n<p>The best way to access this wiki is via <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/camperbot">CamperBot</a>, located in our Gitter channels. CamperBot is a community designed tool useful for accessing our wiki content without ever leaving Gitter.</p>\n<p>To contribute a wiki article for any of the bonfires, please use this <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Bonfire-Wiki-Template">template</a>. This is essential for <a href="https://github.com/camperbot">@CamperBot</a> to retrieve the article. Bonfire articles that do not use this template will be removed.</p>\n<p>You will then need to clone the <a href="https://github.com/FreeCodeCamp/wiki">wiki</a> and create a branch where you will make your changes and submmit a pull request to be merged before the changes goes live on the wiki. This is to filter any spam content or damage to <strong>our</strong> wiki.</p>\n<p>If you have questions about contributing to the Free Code Camp Wiki message <a href="https://gitter.im/Rafase282">@Rafase282 in Gitter</a>.</p>\n<p>We look forward to collaborating with you on expanding and improving this wiki!</p>\n'}}]);
//# sourceMappingURL=bundle.js.map